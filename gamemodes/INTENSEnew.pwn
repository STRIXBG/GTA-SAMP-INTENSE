/*
· SA-MP Gamemode: Intense версия: 0.6
· Copyright © 2018-2021, Daniel Miroslavov Andreev
· Всички права са запазени.
*/
//main - location - open
#include <a_samp>
#include <streamer>
#pragma tabsize 0
//main - location - close
//define - location - open
#define strsame(%0,%1,%2) (!strcmp(%0, %1, %2))
#if !defined IsValidVehicle
native IsValidVehicle(vehicleid);
#endif
#define RELEASED(%0) \
(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define PROPERTY_OFFSET(%0) \
((((%0) * ((%0) << 1)) << 2) + 65536)
#define MAX_MISSIONS   50
#define MAX_MESSAGES   25
#define DEF_MAX_OBJECTS 50000
#define MAX_MBLOCATIONS     30
#define MAX_TURFS           318
#define MAX_BUYSHARES       10000
#define MAX_PRIVATE         1300 // moje change
#define MALL_OBJECT_DRAW_DIST   30.0
//GANGS - OPEN
#define TEAM_CIVILIAN 		0
#define TEAM_VIP			1
#define TEAM_GROVE			2
#define TEAM_BALLAS 		3
#define TEAM_VAGOS 			4
#define TEAM_AZTECAS 		5
#define TEAM_CRIPZ 			6
#define TEAM_SFTRIADS  		7
#define TEAM_EasternBoys	8
#define TEAM_SOA 		9
#define TEAM_NANG 		10
#define TEAM_IMAFIA		11
#define TEAM_BH 		12
#define TEAM_SAP 		13
#define TEAM_FBI 		14
#define TEAM_DF 		15
#define TEAM_SBOYS   	16
#define TEAM_YAKUZA		17
#define TEAM_STEXAS 	18
#define TEAM_BMAFIA 	19
#define TEAM_MS13		20
#define TEAM_BGM	 	21
#define TEAM_343BLACK	22
//GANGS - CLOSE
//STOCK EXCEPTIONS
#define OWNVEH_YES             0
#define OWNVEH_NO              1
//MINI-GAMES SYSTEM
#define MINIGAME_STREET_RACE   0
#define MINIGAME_COUNTER_STRIKE 1
#define MINIGAME_RPG_ROYALE    2
#define MAX_RACE_POSITIONS      4
//DRIFT SYSTEM
#define CASH_PERCENT    1
#define SCORE_PERCENT   0
#define DRIFT_MINKAT    10.0
#define DRIFT_MAXKAT    90.0
#define DRIFT_SPEED     30.0
#define COLOR_Label 	0xFFFFFFFF
#define COLOR_LabelOut 	0x00000040
#define COLOR_ValueOut 	0xFFFFFF40
#define COLOR_Value 	0x000000FF
//SPECIALPICKUPS
#define PICKUPBIZ 1
#define PICKUPHOUSE 0
#define PICKUPGARAGE 2
#define PICKUPAPARTMENTS 3
#define PICKUPCOMPANY 4
#define PICKUPROB     5
#define PICKUPROBSTART     9
#define PICKUPROB_BANK_START     10
//GANGS - OPEN
#define TEAM_CIVILIAN 0
//GANGS - CLOSE
//COLORS - OPEN
#define COLOR_FISH 0x2C80C4FF
#define COLOR_PRIVATEVEH 0xF8DE92FF
#define COLOR_JOB 0xe7905eFF
#define COLOR_WHITE 0xffffffff
#define COLOR_GREEN 0x33cc33ff
#define COLOR_LIGHTPURPLE 0xD5AED2FF
#define COLOR_ORANGE 0xF97804FF
#define COLOR_LIGHTYELLOW 0xffee81FF
#define COLOR_YELLOW 0xFFFF00FF
//COLORS - CLOSE
//SPECIALPICKUPS
#define COLOR_TCIVIL        0x00000096
#define COLOR_TGROVE        0x33AA3396
#define COLOR_TBALLAS       0xC2A2DA96
#define COLOR_TVAGOS        0xFFFF0096
#define COLOR_TAZTECAS      0x33CCFF96
#define COLOR_TVCRIPZ       0x00009998
#define COLOR_TTRIADS       0xF9780496
#define COLOR_TES         0xd9d9d996
#define COLOR_TSOA          0x7F7F7F96
#define COLOR_TNANG         0x4D2C2F96
#define COLOR_ITALIAN       0x33998f96
#define COLOR_BOUNTY        0x8ADB3F96
#define COLOR_RCIVIL 0xFFFFFFFF
#define COLOR_RVIP 0xFF3737FF
#define COLOR_RGROVE 0x33AA33FF
#define COLOR_RBALLAS 0xC2A2DAFF
#define COLOR_RVAGOS 0xFFFF00FF
#define COLOR_RAZTEC 0x33CCFFFF
#define COLOR_RCRIPZ 0x000099FF
#define COLOR_RTRIADS 0xF97804FF
#define COLOR_RES 0xd9d9d9FF
#define COLOR_RSOA 0x7F7F7FFF
#define COLOR_RNANG 0x4D2C2FFF
#define COLOR_RITALIAN 0x33998fFF
#define COLOR_RBOUNTY 0x8ADB3FFF
#define COLOR_RLSPD 0x0040FFFF
#define COLOR_RLVPD 0x0040FFFF
#define COLOR_RDF 0xA4A400FF
//new//
#define COLOR_TSOLDIER 0x9932CC96
#define COLOR_TYAKUZA 0x838b8b96
#define COLOR_TSYNDICATE 0x276BA996
#define COLOR_TBLOODMAFIA 0xE5202096
#define COLOR_TMS13 0xB7E1FF96
#define COLOR_TBGM 0xFF40FF96
#define COLOR_T343 0x80BFBF96
//----------------------------//
#define COLOR_RSOLDIER 0x9932CCFF
#define COLOR_RYAKUZA 0x838b8bFF
#define COLOR_RSYNDICATE 0x276BA9FF
#define COLOR_RBLOODMAFIA 0xE52020FF
#define COLOR_RMS13 0xb7ffffFF
#define COLOR_RBGM 0xFF40FFFF
#define COLOR_R343 0x80BFBFFF
//Dialogs - open
#define DIALOG_MYFISH 150
#define DIALOG_DROPFISH 151
#define DIALOG_SELL_FISHCRATE 152
#define DIALOG_SELL_FISH 153
//Dialogs - close
//new//
#define MAX_CLANS           35
#define MAX_TEAMS           23
#define MAX_BANKS           3
#define MAX_FUELSTATIONS    17
#define TOTAL_ITEMS         20
#define SELECTION_ITEMS 	20
#define ITEMS_PER_LINE  	7
#define HEADER_TEXT "Skins"
#define NEXT_TEXT   "Next"
#define PREV_TEXT   "Prev"
#define DIALOG_SELECT_ANIMATION 53
#define DIALOG_CREATEMINIGAME_NAME 54
#define DIALOG_CREATEMINIGAME_TYPE 55
#define DIALOG_BASE_X   	75.0
#define DIALOG_BASE_Y   	130.0
#define DIALOG_WIDTH    	550.0
#define DIALOG_HEIGHT   	180.0
#define SPRITE_DIM_X    	60.0
#define SPRITE_DIM_Y    	70.0
#define MAX_HOUSES          1500
#define MAX_APARTMENTS          1500
#define MAX_COMPANIES          25
#define MAX_GARAGES         5000
#define MAX_BIZZ            1500
#define COLOR_GRAD1           0xADAEADFF
#define COLOR_YELLOW          0xFFFF00FF
#define COLOR_BL1             0x0066FFFF
#define COLOR_RED             0xE60000FF
#define COLOR_DBLUE           0x2641FEFF
#define DIALOG_BUYGUNS        24
#define DIALOG_BUYFISH        40
#define DIALOG_HELP_CMDS_INFO      118
#define DIALOG_HELP_INFO      119
#define DIALOG_INFO_BACK      120
#define DIALOG_HELP_TUTORIAL      121
#define DIALOG_HELP_TUTORIAL_BACK      122
#define DIALOG_ORGANISATIONS      124
#define DIALOG_VEHMENU 125
#define CoalmineJob 852.8712,851.4919,13.3516
#define SweeperJob 1220.8756,-1540.6774,13.5469
#define DeliverJob -2581.4839,656.8370,27.8125
#define PilotJob 402.0841,2529.5537,16.5748
#define TaxiJob 1694.0189,1759.4185,10.8203
#define TaxiJob2 342.5459,-1365.7332,14.4615
#define BusJob 2617.5146,1172.7260,10.6846
#define BusJob2 266.1629,-1585.3889,33.2487
#define PizzaJob 2091.4409,-1806.7073,13.5469
#define Fishing 2134.6938,-89.1286,2.7685
#define Shop 2192.5496,1992.6940,12.2969
#define Bank 1480.7625,-1766.0076,18.7958
#define Casino 1498.1171,-1581.4646,13.5498
#define LotteryShow 1051.1202,1016.2034,11.0000
#define SdelkaIliNe 1423.9270,-1629.2036,13.1890
#define Knijki 1324.1559,-1431.7262,14.9738
#define CarShop 554.2933,-1293.0947,17.2482
#define SpecialCar 522.0720,-1292.8131,17.2422
//#define
//#define
#define BusCheckPoint1 2572.4246,1193.6593,10.3990
#define BusCheckPoint2 2075.7881,1150.1460,10.3990
#define BusCheckPoint3 1532.0359,825.2191,6.5887
#define BusCheckPoint4 1200.4514,1116.5106,6.6013
#define BusCheckPoint5 1332.3608,1847.0315,10.4708
#define BusCheckPoint6 1506.0765,2057.6040,10.4754
#define BusCheckPoint7 1011.3101,2325.4951,10.3989
#define BusCheckPoint8 1091.5535,2389.9060,10.5043
#define BusTakePoint 2608.4690,1199.0823,10.8398

#define BusCheckPoint2_1 174.7272,-1531.2083,12.1719
#define BusCheckPoint2_2 640.5828,-1701.9094,14.3670
#define BusCheckPoint2_3 921.0765,-1376.1908,12.9509
#define BusCheckPoint2_4 1111.6475,-1408.0862,13.1442
#define BusCheckPoint2_5 1192.7045,-1535.1582,13.1052
#define BusCheckPoint2_6 1425.6567,-1622.2460,13.1492
#define BusCheckPoint2_7 1919.8275,-1755.8873,13.1099
#define BusCheckPoint2_8 2063.6785,-1816.5896,13.1891
#define BusCheckPoint2_9 2024.9501,-1132.2466,24.3525
#define BusCheckPoint2_10 1782.8115,-1275.0182,13.2752
#define BusTakePoint2 295.6741,-1606.2822,17.9655

#define CoalmineCheckPoint1 809.2472,842.9479,9.8030
#define CoalmineCheckPoint2 764.9946,889.3522,-1.2541
#define CoalmineCheckPoint3 683.7329,971.1793,-12.7109
#define CoalmineCheckPoint4 724.9157,884.9314,-26.4536
#define CoalmineCheckPoint5 616.0866,906.8915,-44.5193
#define CoalmineCheckPoint6 497.2571,891.3735,-32.0035
#define CoalmineCheckPoint7 535.6892,790.3248,-20.1947
#define CoalmineCheckPoint8 688.4577,748.3844,-5.5390
#define CoalmineTakePoint 849.5752,856.4982,13.3516

#define SweepCheckPoint1 1186.1934,-1569.4961,13.1023
#define SweepCheckPoint2 855.2608,-1592.6459,13.1157
#define SweepCheckPoint3 657.0262,-1584.8389,14.5320
#define SweepCheckPoint4 635.8777,-1433.7804,13.7294
#define SweepCheckPoint5 488.7400,-1303.9266,15.3064
#define SweepCheckPoint6 132.8224,-1575.9656,10.2645
#define SweepCheckPoint7 461.6409,-1745.1079,6.6699
#define SweepTakePoint 1201.6260,-1526.9907,13.2194

#define PizzaCheckPoint1 1347.3176,261.5433,19.0054
#define PizzaCheckPoint2 1325.8622,235.8132,19.0011
#define PizzaCheckPoint3 1250.5085,269.2145,19.0022
#define PizzaCheckPoint4 1224.6180,229.2364,19.0038
#define PizzaCheckPoint5 1246.1251,189.0443,19.0040
#define PizzaCheckPoint6 1300.7002,-81.3719,36.1007
#define PizzaCheckPoint7 2153.9312,39.2667,25.9335
#define PizzaCheckPoint8 2238.1694,96.1132,25.9275
#define PizzaCheckPoint9 2262.7029,96.1770,25.9315
#define PizzaCheckPoint10 2338.9824,115.8092,25.9338
#define PizzaCheckPoint11 2338.6538,191.3587,26.0873
#define PizzaTakePoint 1358.2748,231.7729,19.2940

#define DeliverCheckPoint1 -2603.8477,728.7939,28.7902
#define DeliverCheckPoint2 -2631.8311,907.4982,70.0095
#define DeliverCheckPoint3 -2528.5818,1222.6691,37.4991
#define DeliverCheckPoint4 -2135.1699,1064.5222,79.9898
#define DeliverCheckPoint5 -2107.8306,911.0515,77.3823
#define DeliverCheckPoint6 -2249.5869,702.0288,49.3638
#define DeliverCheckPoint7 -2413.4614,496.8430,29.9870
#define DeliverCheckPoint8 -2680.1978,232.0297,4.4012
#define DeliverCheckPoint9 -2856.4731,719.4858,28.3055
#define DeliverCheckPoint10 -2617.2292,1374.0945,7.1760
#define DeliverTakePoint -2560.3574,657.3941,27.5386

#define PilotCheckPoint1 60.6346,2504.9580,16.4844
#define PilotCheckPoint2 1824.6741,-2493.9043,13.5547
#define PilotCheckPoint3 -1248.5364,244.1837,14.1484
#define PilotTakePoint 23.6830,2502.6558,16.4922
//define - location - close
//forward - location - open
//forward IsPlayerInArea(playerid, Float:MinX, Float:MinY, Float:MaxX, Float:MaxY);
forward IsPlayerInMainTurf(playerid);
forward IsPlayerInOtherMainTurf(playerid);
forward IsPlayerInTurf(playerid, Float:min_x, Float:min_y, Float:max_x, Float:max_y);
forward RemoveHousePick(playerid);
forward GeneralTimer();
forward GeneralTimer1s();
forward ReSpawnTimer(playerid);
forward CorDetector(Float:radi, playerid, targetid);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
//forward - location - close
//enum - location - open
//new - location - open
new antijoinspamtime;
new joinspamCount;
new fishToDrop[MAX_PLAYERS];
new privateObjectPrice[MAX_PLAYERS];
new driftvehC1[MAX_PLAYERS];
new driftvehC2[MAX_PLAYERS];
new driftvehID[MAX_PLAYERS];
new driftveh[MAX_PLAYERS]=-1;
new taxivehs[500];
new dmarena=1;
new robberypickup[MAX_PICKUPS];
new pickupmoney[MAX_PICKUPS];
new alienseffect[MAX_PLAYERS]=0;
new otvlichane[MAX_PLAYERS]=0;
new mysteries[8];
new tabela[3];
new display[2];
new allactions[MAX_PLAYERS];
new ufoVehicle[MAX_VEHICLES];
new lottoveh;
new lastIPJoin[35]="0.23.0.0";
new serverWeather;
new withgps[MAX_PLAYERS];
new lotterysuma=5000;
//new Text3D:officestext[21];
new spikes2[MAX_PLAYERS];
new spikes21[MAX_PLAYERS];
new numberlotto=-1;
new forplayer[3];
new StartATMRob=0;
new accountfiles[28][MAX_PLAYERS];
new Float: duelpoints[MAX_PLAYERS][3];
new novehspam=0;
new dutypolice[MAX_PLAYERS];
new specialpickup[MAX_PICKUPS][25];
new specialpickupenter[MAX_PLAYERS][7];//> maybe >for fix, maybe for fix
new spawnednew[MAX_PLAYERS];
new electro[MAX_PLAYERS];
new oldvw[MAX_PLAYERS];
new joinedterrorists=0;
new joinedcops=0;
new takenclothes[MAX_PLAYERS][35];
new gmxsaved=0;
new chooseteam[MAX_PLAYERS]=0;
new policecs[MAX_PLAYERS]=0;
new invehicletype[MAX_PLAYERS];
new csroundtimer=0;
new indrift[MAX_PLAYERS]=0;
new policescs=0;
new bombgurmi=0;
new aliveterrorist=0;
new openlottery=0; new opensdelka=0;
new bool: sdelkaBoxesOpen[9]; new SdelkaBoxesMoney[9];
new alivecounter[2]=0;
new terroristscs=0;
new vClan[MAX_VEHICLES]=0;
new lotariqselected=-1;
new sdelkaselected=-1;
new vLockedClan[MAX_VEHICLES];
new oldint[MAX_PLAYERS];
new startdmon[MAX_PLAYERS];
new spikes[MAX_PLAYERS];
new maxspikes=0;
new withbandana[MAX_PLAYERS];
new joinedinrace=0;
new bool: playerIDStatusOnline[MAX_PLAYERS];
new bool: raceGameEmptyPos[MAX_RACE_POSITIONS]=true;
new bomber;
new pointotvlichane[MAX_PLAYERS];
new bombata;
new Float:bombataX;
new Float:bombataY;
new Float:bombataZ;
new fightForFinishRaceGame=0;
new aliveincs[2];
new racetimer=0;
new ctwin=0;
new twin=0;
new joinedincounter[MAX_PLAYERS]=0;
new counterplayers=0;
new lottogate[3];
new lottoopen;
new csstarted=0;
new racewaittimer=0;
new joinedrace[MAX_PLAYERS];
new rpgGamewaittimer=0;
new joinedrpgGame[MAX_PLAYERS];
new joinedinrpgGame=0;
new rpgGamestarted=0;
new calls=0;
new callsmarker[31];
new restartedvehs=0;
new premahwanemarker[31];
new enteredInMissionCP[MAX_PLAYERS];
new rankformula[MAX_PLAYERS];
new rankformula2[MAX_PLAYERS][3];
new dueltype[MAX_PLAYERS];
new racestarted=0;
new dmtop2[64];
new isvalidbomb=0;
new csgamestarted=0;
new tEP[MAX_TEAMS];
new tCash2[MAX_TEAMS];
new casetoys[MAX_PLAYERS][35];
new cuffedwho[MAX_PLAYERS]=-1;
new Float: XSpike[31], Float: YSpike[31], Float: ZSpike[31];
new cuffedby[MAX_PLAYERS]=-1;
new selectedplace[MAX_PLAYERS];
new markersuspect[MAX_PLAYERS];
new houseminato[MAX_HOUSES];
new InRobbery[MAX_PLAYERS]=0;
new lockedvehicle[MAX_VEHICLES];
new Float: XBOM;
new Float: YBOM;
new Float: ZBOM;
new objectUfo; new objectUfo2; new objectUfo3;
//new objectBalloon; new bool: balloonGone=false;
new selectedvehobject[MAX_PLAYERS];
new Float: oldx[MAX_PLAYERS],Float: oldy[MAX_PLAYERS],Float: oldz[MAX_PLAYERS];
new selectedfloor[MAX_PLAYERS]=0;
new freezed[MAX_PLAYERS];
new takingselfie[MAX_PLAYERS]=0;
new selectedspike[MAX_PLAYERS];
new predalmarker[MAX_PLAYERS];
new predalmarker2[MAX_PLAYERS];
new objectut[MAX_PLAYERS];
new extraarmour[MAX_PLAYERS]=0;
new selectedHouse[MAX_PLAYERS][16];
new selectedBiz[MAX_PLAYERS][16];
new selectedBiz2[MAX_PLAYERS];
new selectedHouse2[MAX_PLAYERS];
new selectedHouse2Suma[MAX_PLAYERS];
new myfloor[MAX_PLAYERS]=1;
new selectedvehid[MAX_PLAYERS]=0;
new missionprivate[MAX_PLAYERS][2];
new availableStore=0;
new maxhouses=1;
new maxbizz=1;
new maxclans=1;
new maxgarages=1;
new maxcompanies=1;
new maxapartments=1;
new maxcreatedhouses=1;
new maxcreatedgarages=1;
new maxcreatedapartments=1;
new maxcreatedcompanies=1;
new maxcreatedbizz=1;
new formathouseid[32];
new formatalh[32];
new objecthouse[MAX_HOUSES][15];
new Float:Healthaa[MAX_PLAYERS];
new mypassword[MAX_PLAYERS][21];
new stringstatistic[MAX_PLAYERS][115];
new policepursuit[MAX_PLAYERS]=0;
new godmode[MAX_PLAYERS]=0;
new songon[MAX_PLAYERS]=0;
new TeamInvite[MAX_PLAYERS]=-1;
new ClanInvite[MAX_PLAYERS]=-1;
new enabledcar[MAX_PLAYERS]=0;
new enabledramp[MAX_PLAYERS];
new enteredap[MAX_PLAYERS]=-1;
new pname[MAX_PLAYER_NAME][MAX_PLAYERS];
new zaplatakinti[MAX_PLAYERS]=0;
new lastpaydaykinti[MAX_PLAYERS]=0;
new firstskin[MAX_PLAYERS]=0;
new BigEar[MAX_PLAYERS]=0;
new locker[MAX_PLAYERS]=-1;
new logged[MAX_PLAYERS]=0;
new lastkey[MAX_PLAYERS]=-1; new oldkey[MAX_PLAYERS]=-1;
new specing[MAX_PLAYERS]=0;
new typedpm[MAX_PLAYERS]=0;
new nohit[MAX_PLAYERS]=0;
new Act[MAX_PLAYERS]=0;
new acuffed[MAX_PLAYERS]=0;
new missionrepeat[MAX_PLAYERS]=0;
new enteredbiz[MAX_PLAYERS]=0;
new enteredgarage[MAX_PLAYERS]=-5;
new enteredhouse[MAX_PLAYERS]=0;
new firstspawn[MAX_PLAYERS]=1;
new count=0;
new rampobject[MAX_PLAYERS]=-1;
new spawnedcars=0;
new spawned[MAX_PLAYERS]=0;
new testmode[MAX_PLAYERS]=0;
//new firstdeath[MAX_PLAYERS]=0;
new indmon[MAX_PLAYERS]=0;
new onwork[MAX_PLAYERS]=0;
new onfootwork[MAX_PLAYERS]=0;
new refuelcisterna[MAX_PLAYERS]=0;
new dmtop;
new WhatCar[MAX_PLAYERS] = 0;
new turfmember[MAX_PLAYERS]=0;
//new newspawn[MAX_PLAYERS]=0;
new driver[MAX_PLAYERS]=0;
new esc[MAX_PLAYERS]=0;
new yesrefuel=0;
new dmstarted=0;
new radion[MAX_PLAYERS]=0;
new hidedf=0;
new Text3D:forsell3d[MAX_VEHICLES];
new passenger[MAX_PLAYERS]=0;
new nospam2[MAX_PLAYERS]=0;
new turfwargang[MAX_TURFS]=0;
new togchat[MAX_PLAYERS]=0;
new induel[MAX_PLAYERS]=0;
new duelprotivnik[MAX_PLAYERS]=-1;
new hideexitserver[MAX_PLAYERS]=0;
new rezachka[MAX_PLAYERS]=0;
new cbchat[MAX_PLAYERS]=0;
new eventveh[MAX_PLAYERS]=0;
new eventmembers=0;
new einvisible2=0;
new commandspam[MAX_PLAYERS]=0;
new nameon[MAX_PLAYERS]=1;
new duelzalog[MAX_PLAYERS]=0;
new dueltimer[MAX_PLAYERS]=0;
new prediduelinterior[MAX_PLAYERS]; new prediduelvw[MAX_PLAYERS];
new Float: prediduelhealth[MAX_PLAYERS]=0.0;
new radioff[MAX_PLAYERS]=0;
new radioveh[MAX_VEHICLES]=1;
new Float: prediduelarmour[MAX_PLAYERS]=0.0;
new Float:prediduelX[MAX_PLAYERS];
new Float:prediduelY[MAX_PLAYERS];
new Float:prediduelZ[MAX_PLAYERS];
new textspam[MAX_PLAYERS]=0;
//new inwar[MAX_TEAMS]=0;
new requestspawn2[MAX_PLAYERS]=0;
new turfattack[MAX_TEAMS]=0;
new checkpointarena;
new hhrefuel, mmrefuel, ssrefuel, playerrefuel[115];
new cmn1[MAX_PLAYERS]=0;
new statisticset[MAX_PLAYERS]=0;
new Speed[MAX_PLAYERS]=0;
new speedo[MAX_PLAYERS]=0;
new kmh[MAX_PLAYERS]=0;
new Jump[MAX_PLAYERS]=0;
new oldvehid[MAX_PLAYERS]=-1;
new pDrunkLevelLast[MAX_PLAYERS];
new pFPS[MAX_PLAYERS]=30;
new adutyskinchanged[MAX_PLAYERS]=0;
new robmoney=0;
new robmembers=0;
new robplace=0;
new stopspamrob=0;
new hitmanprice[MAX_PLAYERS]=0;
new marked[MAX_PLAYERS]=0;
new dmplace[MAX_PLAYERS]=0;
new hitmanby[MAX_PLAYERS]=-1;
new startedrob=0;
new refuelcan[MAX_PLAYERS]=0;
new weaponsdm2;
new weaponsdm[25];
new hitmaner[MAX_PLAYERS]=-1;
new Text3D: ballascars10text;
new timec[MAX_PLAYERS]=0; new sitec[MAX_PLAYERS]=0;
new nospawnselect[MAX_PLAYERS]=0;
new introon[MAX_PLAYERS]=0;
new fly[MAX_PLAYERS]=0;
new Text3D: aztecascars12text;
new Text3D: cripzcars9text;
new hidename[MAX_PLAYERS]=0;
new startedevent=0; new eventclosed=0; new eenter=0; new ename=0; new ejetpack=0; new dhealme=1; new einvisible=0; new eramp=0;
new eventlimit=0; new inevent[MAX_PLAYERS]=0; new efight=0; new eev=0; new etune=1; new efix=1; new enos=1; new ehyd=1; new eflip=1;
new Float:eventx, Float:eventy, Float:eventz;
new eventinterior;
new requestspawn[MAX_PLAYERS]=0;
new timermoveufo=20;
new robberytimemoney=0;
new robberystop=0;
new robberystarttime=0;
new robberyeverysec=0;
new hours;
new minutes;
new seconds;
new day;
new month;
new year;
new rescarsyes=0;
new rescarsno=0;
new voteyes=0;
new voteno=0;
new sfpdp1;
new lspdk1;
new lspdk2;
new lspdb1;
new lspdd1;
new lspdp1;
new lspdp2;
new cripzp1;
new vipp1;
new vipp2;
new groveb1;
new lspdd1open=1;
new lspdk1open=1;
new lspdk2open=1;
new afterjobcheckpoint[MAX_PLAYERS]=0;
new disabledcheckpoint[MAX_PLAYERS]=0;
new lvpd1timer;
new dfp1timer;
new dfp2timer;
new dfp3timer;
new dfp4timer;
new lvpd2timer;
new cripzp1timer;
new lspdb1timer;
new lspdp1timer;
new lspdp2timer;
new sfpdp1timer;
new vipp1timer;
new groveb1timer;
new vipp2timer;
new isinhousepickup[MAX_PLAYERS]=0;
//new string256n2[256];
new updatedseconds;
new votetext[256];
new lottowin = 5000;
new freevip=0;
new onlymasks=0;
new christmas=0;
//new active[MAX_PLAYERS]=0;
new lottonumber[MAX_PLAYERS]=0;
new lottonumber2[MAX_PLAYERS]=0;
new lottonumber3[MAX_PLAYERS]=0;
new lottonumber4[MAX_PLAYERS]=0;
new lottonumber5[MAX_PLAYERS]=0;
new lottonumber6[MAX_PLAYERS]=0;
new Float:X[MAX_PLAYERS],Float:Y[MAX_PLAYERS],Float:Z[MAX_PLAYERS];
new Float:AX[MAX_PLAYERS],Float:AY[MAX_PLAYERS],Float:AZ[MAX_PLAYERS],Float:AZA[MAX_PLAYERS];
new AINT[MAX_PLAYERS], AVW[MAX_PLAYERS];
new adminprefix[501][35];
new blockedgoto[MAX_PLAYERS]=0;
new para1[MAX_PLAYERS]=-1;
new spawnselectedskin[MAX_PLAYERS]=0;
new spawnselectedskin2[MAX_PLAYERS]=0;
new wrongpassword[MAX_PLAYERS]=0;
new serverrestarttimer=0;
new updatereason[80];
new ingmx=0;
new Text:statistic[MAX_PLAYERS];
new Text:cash[MAX_PLAYERS];
new Text3D:PlayerLabel[MAX_PLAYERS];
new sfpermission=0;
new PlayerNearATM[MAX_PLAYERS]=-1;
new ATMSTEAL;
new StartedRobbery=0;
new Text3D:CASHBAGTEXT[16];
new CASHBAG[16];
new CASHMONEY[16];
new ATMCASH[10000]; //>9997, 9998, 9999 ID - as BANK ID
new ATMPICKUP[27];
new BIZPICKUP[22];
new BIZPICKUP2[4];
new BURGERKINGPICKUP[2];
new SDELKAPICKUP;
new VILNAPICKUP;
//new BUYOFFICEPICKUP;
new FISHING;
new Text:vehstatus[MAX_PLAYERS];
new Text3D:sdelkaBoxText[9];
//new Text:PT[MAX_PLAYERS];
//new Text3D:VIPText[MAX_PLAYERS];
new VipText3D[MAX_PLAYERS][26];
new attachedviptext[MAX_PLAYERS]=0;
new viptextformat[501][30];
new vipstring[501][30];
new Text3D:benzinki[25];
new ignore[MAX_PLAYERS][MAX_PLAYERS];
new spec[MAX_PLAYERS] = 0;
new general256[256];
new benzinkifuel[25]=500;
new objectright[MAX_PLAYERS]=0;
new getmbid=-1;
new duelsender[MAX_PLAYERS]=-1;
new duelsend[MAX_PLAYERS]=-1;
new maximumvehicles[MAX_PLAYERS]=0;
new minimumvehicles=0;
new minimumvehiclesWithPrivates=0;
new privatecarforplayer[MAX_PLAYERS];
new bool:attachedPlayerObject[MAX_OBJECTS];
new bool: GeneralTimer1ms=false;
new bool: usedSecond=false;
new maximumPrivateVehsID=0;
new VehicleNames[][] =
{
"Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel",
"Dumper", "Firetruck", "Trashmaster", "Stretch", "Manana", "Infernus",
"Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
"Esperanto", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection",
"Hunter", "Premier", "Enforcer", "Securicar", "Banshee", "Predator", "Bus",
"Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach", "Cabbie",
"Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral",
"Squalo", "Seasparrow", "Pizzaboy", "Tram", "Trailer", "Turismo", "Speeder",
"Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair", "Berkley's RC Van",
"Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale",
"Oceanic","Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy",
"Hermes", "Sabre", "Rustler", "ZR-350", "Walton", "Regina", "Comet", "BMX",
"Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper",
"Rancher", "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring", "Sandking",
"Blista Compact", "Police Maverick", "Boxville", "Benson", "Mesa", "RC Goblin",
"Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher", "Super GT",
"Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stunt",
"Tanker", "Roadtrain", "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra",
"FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck", "Fortune",
"Cadrona", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer",
"Remington", "Slamvan", "Blade", "Freight", "Streak", "Vortex", "Vincent",
"Bullet", "Clover", "Sadler", "Firetruck", "Hustler", "Intruder", "Primo",
"Cargobob", "Tampa", "Sunrise", "Merit", "Utility", "Nevada", "Yosemite",
"Windsor", "Monster", "Monster", "Uranus", "Jester", "Sultan", "Stratium",
"Elegy", "Raindance", "RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito",
"Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper",
"Broadway", "Tornado", "AT-400", "DFT-30", "Huntley", "Stafford", "BF-400",
"News Van", "Tug", "Trailer", "Emperor", "Wayfarer", "Euros", "Hotdog", "Club",
"Freight Box", "Trailer", "Andromada", "Dodo", "RC Cam", "Launch", "Police Car",
"Police Car", "Police Car", "Police Ranger", "Picador", "S.W.A.T", "Alpha",
"Phoenix", "Glendale", "Sadler", "Luggage", "Luggage", "Stairs", "Boxville",
"Tiller", "Utility Trailer"
};
new Float:BombX[MAX_PLAYERS][5], Float:BombY[MAX_PLAYERS][5], Float:BombZ[MAX_PLAYERS][5], BombO[MAX_PLAYERS][5];
new dmkills[MAX_PLAYERS]=0;
new activecount = 0;
new eactivecount = 0;
new Text:ClockDate;
new Text:intensetext;
new Text:Intro[4];
new Text:Box[2];
new Text:RESTART;
new Text:DMON2;
new ordervehicle[MAX_VEHICLES]=0;
new ordervehicles[MAX_VEHICLES]=-1;
new ordervehicles2[MAX_GARAGES][10];
new orderprice[MAX_GARAGES][10];
new inselfie[MAX_PLAYERS]=0;
new orderlevel[MAX_GARAGES][10];
new Text:AchievementText;
new Text:SpeedoLine[3];
new Text:DMON[MAX_PLAYERS];
new Text:IntroEnter[3];
new Menu:TuningMenu;
new Menu:Paintjobs;
new Menu:Colors;
new Menu:Colors1;
new Menu:Exhausts;
new editobject[MAX_PLAYERS];
new infloor[MAX_PLAYERS]=0;
new IPRemove=0;
new Menu:Frontbumper;
new Menu:Rearbumper;
new Menu:Roof;
new Menu:Spoilers;
new Menu:Sideskirts;
new Menu:Wheels;
new Menu:Wheels1;
new Menu:Nitro;
new Menu:Others;
new privVehObjectBeforeAccept[MAX_PLAYERS];
new privVehObjectForEditing[MAX_PLAYERS];
new drive[MAX_VEHICLES]=0;
new sdelkaSelected[MAX_PLAYERS];
new aclothes[MAX_PLAYERS];
new brotheropen=0;
new vehfuel[MAX_VEHICLES]=100;
new vehEngineStatusON[MAX_VEHICLES];
new vehLONStatusON[MAX_VEHICLES]=1;
new vehBONTEStatusON[MAX_VEHICLES];
new vehAlarmStatusON[MAX_VEHICLES];
new vehBOOTStatusON[MAX_VEHICLES];
new stringvehicle[501][501];
new Float:vehhealth[MAX_PLAYERS];
new mission=0;
new anticamera[MAX_PLAYERS];
new cameras[MAX_PLAYERS];
new gTotalItems = TOTAL_ITEMS;
new PlayerText:gCurrentPageTextDrawId[MAX_PLAYERS];
new PlayerText:gHeaderTextDrawId[MAX_PLAYERS];
new PlayerText:gBackgroundTextDrawId[MAX_PLAYERS];
new PlayerText:gNextButtonTextDrawId[MAX_PLAYERS];
new PlayerText:gPrevButtonTextDrawId[MAX_PLAYERS];
new PlayerText:gSelectionItems[MAX_PLAYERS][SELECTION_ITEMS];
new gSelectionItemsTag[MAX_PLAYERS][SELECTION_ITEMS];
new PlayerText:PhoneGUI[MAX_PLAYERS][44];
new bool:PhoneShow[MAX_PLAYERS];
new stringloadbizz[180];
new stringloadhouse[180];
new stringloadteams[180];
new stringloadturfs[180];
new stringloadgarage[180];
new stringloadvehs[180];
new stringloadclan[180];
new stringloadapartment[180];
new stringloadcompany[180];
new spawnedvehicleinterior[MAX_PLAYERS]=-1;
new PhoneLocked[MAX_PLAYERS] = 0; //0- reseted, 1- locked, 2- unlocked, 3- Internet Item in list
new gItemAt[MAX_PLAYERS];
new
bool: g_bump[MAX_PLAYERS],
g_veh[MAX_PLAYERS]
;
new gItemList[TOTAL_ITEMS] = {
302,303,304,305,299,298,272,55,273,263,249,248,240,217,188,126,56,47,28,29
};
new cItemList[TOTAL_ITEMS] = {
302,303,304,305,299,298,272,55,273,263,249,248,240,217,188,126,56,47,28,29
};
new const PossibleRandomWeapons[][] =
{
{9, 999999999}, //DEagle
{16, 999999}, //Shotgun
{22, 999999999}, //Molotov
{23, 999999999}, //Grenade
{24, 999999999}, //DEagle
{26, 999999999}, //Shotgun
{25, 999999999}, //Molotov
{28, 999999999}, //Grenade
{30, 999999999}, //DEagle
{31, 999999999}, //Shotgun
{32, 999999999}, //Molotov
{34, 999999999} //Grenade
};
new TowerPickup[3];
new CarShopPickup;
new ElevatorPickup[3];
new BankPickup[9];
new BankCommandPickup[3];
new carshopcars[12];
new carshopcars2[12];
//new lodkacheck[2];
//gangs healts, armours - location - open
new viphealarmour[2];
new grovehealarmour[2];
new dfhealarmour[2];
new dfhealarmour2[2];
new dfhealarmour3[2];
new EShealarmour[2];
new soldierhealarmour[2];
new cripzhealarmour[2];
new bgmhealarmour[2];
new yakuzahealarmour[2];
new blackstreethealarmour[2];
new syndicatehealarmour[2];
new bloodhealarmour[2];
new ms13healarmour[2];
new vagoshealarmour[2];
new triadshealarmour[2];
new italianhealarmour[2];
new nanghealarmour[2];
new bountyhealarmour[2];
new sapdhealarmour[2];
//gangs healths, armours - location - close
//gangs порти - location - open
new lvpd1;
new lvpd2;
new dfp1;
new dfp2;
new dfp3;
new dfp4;
//gangs порти - location - close
//gangs pickups - location - open
new BloodPickup[2];
new YakuzaPickup[2];
new BGMPickup[4];
new BallasPickup[2];
new SoldierPickup[2];
new ESPickup[5];
new LSPDPickup[9];
new CripzPickup[7];
new SyndicatePickup[2];
new BountyPickup[2];
new VIPPickup;
new VIPPick1, VIPPick2,VIPPick3,VIPPick4,VIPPick5,VIPPick6,VIPPick7,VIPPick8,VIPPick9;
new GrovePickup;
new LotteryPickup[2];
new GSFPickup[4];
new DFDUTY, DFDUTY2;
new IFCDUTY;
new SDELKAEXIT;
//gangs pickups - location - close
//missions - location - open
//missions - location - close
//gang cars - location - open
new sfcars[29];
new gangcars[MAX_TEAMS][MAX_VEHICLES];
new gangcarsobject[MAX_TEAMS][MAX_VEHICLES][15];
new Text3D: gangcarstexts[MAX_TEAMS][MAX_VEHICLES];
new gangrankskin[MAX_TEAMS][7];
//new gangcolor[MAX_TEAMS][11];
//-------------------------//
new gangcarsmax[MAX_TEAMS]=1;
new sfcarsmax=1;
//------------------------//
//--------------------------//
//gang cars - location - close
//jobs cars - location - open
new fueltruck[3]; new fuelremarke[3];
new afterwork[49];
new carpizza[7];
new jobtaxivehs[6];
new carboat[7];
new carcoalmine[7];
new carsweeper[7];
new carpilot[7];
new cardeliver[7];
new carbus[10];

new bool: isJobVeh[MAX_VEHICLES];
new bool: isPizzaJobVeh[MAX_VEHICLES];
new bool: isTaxiJobVeh[MAX_VEHICLES];
new bool: isBoatJobVeh[MAX_VEHICLES];
new bool: isCoalmineJobVeh[MAX_VEHICLES];
new bool: isPilotJobVeh[MAX_VEHICLES];
new bool: isDeliverJobVeh[MAX_VEHICLES];
new bool: isBusJobVeh[MAX_VEHICLES];
new bool: isSweepJobVeh[MAX_VEHICLES];
new bool: isAfterJobVeh[MAX_VEHICLES];
//private cars - location - open
new privatecarsparked[MAX_PRIVATE]=0;
new privatecars[MAX_VEHICLES]=-1;
new gangvehicle[MAX_VEHICLES]=-1;
new privatecarown[MAX_PRIVATE]=-1;
new privatecarowner[MAX_PRIVATE][40];
new vObject[MAX_VEHICLES][15];
new Float: vObjectX[MAX_PRIVATE][15];
new Float: vObjectY[MAX_PRIVATE][15];
new Float: vObjectofz[MAX_PRIVATE][15];
new shield[MAX_PLAYERS]=0;
new Float: vObjectfRotX[MAX_PRIVATE][15];
new Float: vObjectfRotY[MAX_PRIVATE][15];
new Float: vObjectfRotofaz[MAX_PRIVATE][15];
new privatecarC1[MAX_PRIVATE]=0;
new privatecarC2[MAX_PRIVATE]=0;
new privatecarForSell[MAX_PRIVATE]=0;
new privatecarRES[MAX_PRIVATE]=-1;
new privatecarlocked[MAX_PRIVATE]=1;
new myprivateid[MAX_PRIVATE]=0;
new loadedprivate[MAX_PRIVATE]=0;
new Float: privatecarX[MAX_PRIVATE]=0.0;
new Float: privatecarY[MAX_PRIVATE]=0.0;
new Float: privatecarZ[MAX_PRIVATE]=0.0;
new Float: privatecarA[MAX_PRIVATE]=0.0;
new privatecarID[MAX_PRIVATE]=-1;
//new cabrioprivatecars1;
new privatecarobject[MAX_PRIVATE][31];
new vehobjects[MAX_PRIVATE];
new deliverpizza[MAX_PLAYERS];
new vehobjectsloaded[MAX_PRIVATE]=-1;
//private cars - location - close
//some timers - location - open
new respawncarsvote;
new respawncarsvote2;
new registered[MAX_PLAYERS];
new votetime;
new kandidaturadadena[MAX_PLAYERS]=0;
new ecounttime0;
new ecounttime1;
new ecounttime2;
new counttime0;
new counttime1;
new counttime2;
new missionchat[MAX_PLAYERS][MAX_MISSIONS][MAX_MESSAGES];
new missionnpcID[MAX_PLAYERS][500];
new christmasObjects[6000];
new currentObjChris=0;
//Tests - open
//Tests - close
new radioAudioStream[][]={
{"www.google.com"},
{"http://live.btvradio.bg/njoy.mp3.m3u"}, //rdy
{"http://149.13.0.80/city64.m3u"}, //rdy
{"http://193.108.24.21:8000/fresh.m3u"},
{"http://87.120.6.86:8000/hq.m3u"},
{"http://149.13.0.81/nrj64.m3u"},
{"http://149.13.0.81/veronika64.m3u"}}; //rdy
new radioAudioStreamNames[][]={
{"OFF"},
{"NJOY"}, //rdy
{"CITY"}, //rdy
{"FRESH"},
{"PAYNER"},
{"NRG"},
{"VERONIKA"}}; //rdy
enum TimerData
{
AngleTimer,
FixTimer,
StateTimer,
CancelTimer,
DriftTimer
};
new TimerInfo[MAX_PLAYERS][TimerData];
enum DriftData
{
CurrentPoints,
DriftBonus,
bool:DriftMode,
bool:FixMode,
Float:CarHealth,
Float:pPos[3]
};
new Drifting[MAX_PLAYERS][DriftData];
new Text:TDLabels[3];
new PlayerText:TDValueDrift[MAX_PLAYERS];
new PlayerText:TDValueBonus[MAX_PLAYERS];
new PlayerText:TDValueCash[MAX_PLAYERS];
forward Drift(playerid);
forward AngleUpdate(playerid);
forward DriftExit(playerid);
forward CheckPlayerState(playerid);
enum pSpec
{
Float:Coords[3],
Float:sPx,
Float:sPy,
Float:sPz,
sPint,
sLocal,
Float:sAngle,
sVw,
sCam,
};
//new OfficeOwner[20] = "Няма";
new Unspec[MAX_PLAYERS][pSpec];
enum clanInfo
{
cName[256],
cRanks,
Float: cBaseX,
Float: cBaseY,
Float: cBaseZ,
cLoaded
}
new ClanInfo[MAX_CLANS][clanInfo];
enum tInfo
{
tName[256],
tRank1[256],
tRank2[256],
tRank3[256],
tRank4[256],
tRank5[256],
tRank6[256],
tTurfs,
tWar,
tTime,
tID,
tMute,
tColor,
tRCOLOR,
tLevel,
tKills,
tCash
}
new TeamInfo[MAX_TEAMS][tInfo]= {
{"Civilian","Няма име","Няма име","Няма име","Няма име","Няма име","Няма име",299,0,0,0,0,COLOR_TCIVIL},
{"VIP","Новак","Напредващ новак","Подобряващ","Лява ръка на шефа","Дясна ръка на шефа","Шеф",0,0,0,0,0,COLOR_TCIVIL,COLOR_RVIP},
{"Grove Street Families","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TGROVE,COLOR_RGROVE},
{"Rolling Heights Ballas","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TBALLAS,COLOR_RBALLAS},
{"Los Santos Vagos","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TVAGOS,COLOR_RVAGOS},
{"Varrio Los Aztecas","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TAZTECAS,COLOR_RAZTEC},
{"Vinewood Cripz","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TVCRIPZ,COLOR_RCRIPZ},
{"San Fierro Triads","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TTRIADS,COLOR_RTRIADS},
{"Eastern Boys","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TES,COLOR_RES},
{"Sons Of Anarchy","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TSOA,COLOR_RSOA},
{"Da Nang Boys","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TNANG,COLOR_RNANG},
{"Italian Mafia","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_ITALIAN,COLOR_RITALIAN},
{"Bounty Hunters","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_BOUNTY,COLOR_RBOUNTY},
{"San Andreas Police Department","Cop","Officer","Detective","Commander","Assistant Chief","Chief of Police",0,0,0,0,0,COLOR_TCIVIL,COLOR_RLSPD},
{"FBI","Cadet","Officer","Officer Rank 2","Sergant","Lead Sergant","Sheriff",0,0,0,0,0,COLOR_TCIVIL,COLOR_RLVPD},
{"Delta Force","Ефрейтор","Сержант","Капитан","Майиор","Полковник","Генерал",0,0,0,0,0,COLOR_TCIVIL,COLOR_RDF},
{"Soldier Boys","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TSOLDIER,COLOR_RSOLDIER},
{"Yakuza","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TYAKUZA,COLOR_RYAKUZA},
{"Syndicate Texas","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TSYNDICATE,COLOR_RSYNDICATE},
{"Blood Mafia","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TBLOODMAFIA,COLOR_RBLOODMAFIA},
{"Mara Salvatrucha 13","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TMS13,COLOR_RMS13},
{"Bulgarian Mafia","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_TBGM,COLOR_RBGM},
{"343 Black Street Avenue","Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss",0,0,0,0,0,COLOR_T343,COLOR_R343}
};
enum hInfo
{
Float:hX,
Float:hY,
Float:hZ,
Float:hcX,
Float:hcY,
Float:hcZ,
Float:hcA,
hcC,
hcC2,
hcV,
hcVeh,
hOwner,
hLocked,
hOwnerName[256],
hVeh,
hLevel,
hPrice,
hInterior,
hVirtualWorld,
hInterior2,
Float: hObjectX[15],
Float: hObjectY[15],
Float: hObjectZ[15],
hObjectID[15],
Float: hObjectXR[15],
Float: hObjectYR[15],
Float: hObjectZR[15],
hObjects,
hLoaded
}
new HouseInfo[MAX_HOUSES][hInfo];
enum aInfo
{
Float:aX,
Float:aY,
Float:aZ,
aName[256],
aFloors,
aVirtualWorld,
aLoaded
}
new ApartmentInfo[MAX_APARTMENTS][aInfo];
enum comInfo
{
Float:coX,
Float:coY,
Float:coZ,
coName[256],
coOwner[256],
coLoaded,
coPrice
}
new CompanyInfo[MAX_COMPANIES][comInfo];
enum gInfo
{
Float:gX,
Float:gY,
Float:gZ,
gName[256],
gVirtualWorld,
gInterior,
gGarage,
gOwner,
gID,
gLoaded
}
new GarageInfo[MAX_GARAGES][gInfo];
new housepickup[MAX_HOUSES];
new apartmentpickup[MAX_APARTMENTS];
new garagepickup[MAX_GARAGES];
new companypickup[MAX_COMPANIES];
enum bInfo
{
Float:bX,
Float:bY,
Float:bZ,
bOwner,
bLocked,
bEP,
Text3D:bText,
bOwnerName[256],
bLevel,
bPayOut,
bEarnings,
bFee,
bName[256],
bPrice,
bType,
bLoaded
}
new BizInfo[MAX_BIZZ][bInfo];
new bizpickup[MAX_BIZZ];
enum vInfo
{
vASpawn,
vID,
vC1,
vC2,
vX,
vY,
vZ,
vAngle,
vOwner,
vLock,
vRadioChange,
vVeh
}
new VehicleInfo[MAX_VEHICLES][vInfo];
enum vOtherInfo
{
vRespawn,
vPrivateSetAngle
}
new VehOtherInfo[MAX_VEHICLES][vOtherInfo];
enum pInfo
{
pFirstWays, //> enter car dialog radio help
pFirstWays2,
pFirstWays3,
pFirstWays4,
pFirstWays5,
pFirstWays6,
pRegistred,
pObjectAdmin,
pGender,
pJailType,
pPassword[115],
pAdmin,
pSelectCarMission1,
pCrashedFromGTA,
ptTurfs[MAX_TEAMS],
Float:pHeal3[3],
Float:pArmour3[3],
pHealT2[3],
pLoadStats[9],
Float:pTestDamage,
pTestDMTimer,
pCashCS,
pClothes[35],
pTimerATM,
pTimerLeaveMiniGame,
pTimerBizPickups2,
pPizzaTimer,
pRobberyATM,
pRobberyATM2,
pAchievement[50],
pFreezed2,
pValcher,
pStyle2,
pPrivateVehs,
pChanta,
pPhone,
pWantedSeconds,
pHideIntro,
pHideIntro2,
pHidePickup,
pGiveBomb,
pSongOn,
pSaveVeh,
pTogFaction,
pPrezimqvaneSamolet,
pTogLeader,
pClearAnimation,
pTazed,
pFreezed,
pArmour2,
pUvedomiChengeta,
pLSTaxi,
pMPMission,
pClan,
pClanRank,
pCreditTime,
pCreditMoney,
pRegisteredTimer,
pMission,
pHealth2,
pShowMission,
pMoonshine2,
pHeroin2,
pEndIntro,
pIntro[3],
pCocaine2,
pWeed2,
pTogCB,
pDFDuty,
pOrganisator,
pChantichki,
pSpecialForce,
pFishSlot[11],
pFishWeight[11],
pEvent,
pIFC,
pIFCDuty,
pManage,
pMissionMessage,
pMissionActorFollow,
pMissionActorFollow2,
pReadTA,
pDice,
pCigarettes,
pDMONKills2,
pTestDMON,
pBriefcase,
pFuelcase,
pChervei,
pPlaceBomb,
pFollowPolice,
pActiveBomb[5],
pFish,
pRadio,
pNumberAccs,
pReasonMute[256],
pIP[35],
pADMINMute,
pBizEP,
pBizCash,
pSamolet,
pHideAchievement,
pVlak,
pInDM,
pDuelTimer,
pDuelTimer2,
pDuelTimer3,
pDuelTimer4,
pInvisible,
pHelikopter,
pGLeader,
pLodka,
pDMONKills,
pMoonshine,
pMoonshine1,
pWeed1,
pCocaine1,
pHeroin1,
pHook,
pStyle,
pWeed,
pHeroin,
pCocaine,
pRNMute,
pJob,
pAWarns,
pAdvertT,
pRobber,
pRobberLead,
pVIPLabel,
pCMN1,
pParrot,
pRefuelCan,
pRefuelCan2,
pBombs,
pDefuse,
pBombsS1T[5],
pBombsS2T[5],
pBombsS3T[5],
pBombsS4T[5],
pBombsS5T[5],
pBombsS1,
pBombsS2,
pBombsS3,
pBombsS4,
pBombsS5,
pBizO,
pSpawnO,
pSpawnP,
pNone,
pNo,
pPizzaTimer1,
pBoatTimer1,
pBurgerShotTimer1,
pCoalmineTimer1,
pSweeperTimer1,
pPilotTimer1,
pDeliverTimer1,
pBusTimer1,
pCNos,
pYes,
pOffice,
pADuty,
pASkin,
pNSkin,
pTest,
pVip,
pKills,
pDeaths,
pWarns,
pTimeMute,
pTimeJail,
pTSpec,
pTGoto,
pSelectSkin,
pTeam,
pRank,
pLevel,
pEP,
pMS,
pEPS,
pCash,
pRealCash,
pBSpec,
pJail,
pLastPayday,
pWhenPlayed[24],
pAHide,
pWeaponS,
pHouseO,
pCompany[MAX_COMPANIES],
pMuted,
pJailReason,
pMuteReason,
pLMuted,
pAMuted,
pFMuted,
pFWarns,
pYear,
pPrivateVeh[16],
pMonth,
pDay,
pHours,
pMinutes,
pSeconds,
pAFK,
pActiveCheck,
pActiveCheckInSec,
pAccount,
pLaser,
pWanted,
pPJail,
pSkype[36],
pTogPM,
pIgnorePM,
pLastPM,
//timers - location - open
pBan,
pComingBan,
pARefuel,
pCNos2,
pTimeFreeze,
pBlock,
pFixT,
pVehT,
pHealT,
pHideDMON2,
pVGuns,
pKick,
pFishTimer,
pAfterWork,
pFuel,
pNo20S,
pVRefuel,
pBIntro,
pTextSpam,
pCommandSpam,
pCMN1T1,
pCMN1T2,
pCMN1T3,
pReSpawn,
pRemoveHousePick,
pAFKBack
//timers - location - close
}
new PlayerInfo[MAX_PLAYERS][pInfo];
enum turfinfo
{
TurfID,
TurfName[256],
Float:zMinX,
Float:zMinY,
Float:zMaxX,
Float:zMaxY,
TurfColor,
TurfOwner,
TurfWarGang
}
new inturfmembers[MAX_TEAMS]=0;
new TurfInfo[MAX_TURFS][turfinfo] =
{
{ 0,"Eastern Boys", 919.0, 2056.5, 997.0, 2180.5, COLOR_TES,8,0 },
{ 1,"Soldier Boys", -1786.6000061035156, 936.4000244140625, -1723.6000061035156, 964.4000244140625, COLOR_RSOLDIER,16,0 },
{ 2,"Da Nang Boyz", 2520.2269897460938, 1716.6477661132812, 2676.2269897460938, 1942.6477661132812, COLOR_TNANG,10,0 },
{ 3,"SOA", 2564.0, 2303.0, 2664.0, 2366.0, COLOR_RSOA,9,0 },
{ 4,"Mara Salvatrucha 13", -58.93389892578125, 1022.3609924316406, 19.06610107421875, 1092.3609924316406, COLOR_RMS13,20,0 },
{ 5,"Los Santos Vagos", 2459.74609375, -1084.98046875, 2634.74609375, -1000.98046875, COLOR_RVAGOS,4,0 },
{ 6,"Grove Street Families", 2373.9481201171875, -1725.944580078125, 2541.9481201171875, -1627.944580078125, COLOR_RGROVE,2,0 },
{ 7,"Rolling Heigh Ballas", 2134.0, -1497.5, 2201.0, -1394.5, COLOR_RBALLAS, 3,0 },
{ 8,"343 Black Street Avenu", -855.333251953125, 1461.8333129882812, -734.333251953125, 1588.8333129882812, COLOR_R343,22,0 },
{ 9,"Varrios Los Aztecas", 731.48046875, -602.4765625, 855.48046875, -480.4765625, COLOR_RAZTEC,5,0 },
{ 10,"Italian Mafia", -720.0249633789062, 928.0124816894531, -656.0249633789062, 977.0124816894531, COLOR_RITALIAN,11,0 },
{ 11,"Vinewood Cripz", 264.593994140625, -1195.3716125488281, 335.593994140625, -1130.3716125488281, COLOR_RCRIPZ,6,0 },
{ 12,"Las Venturas Triads", 1898.9168701171875, 922.8713989257812, 1991.9168701171875, 958.8713989257812, COLOR_RTRIADS,7,0 },
{ 13,"Bounty Hunters", 676.375, -1309.5703125, 788.375, -1255.5703125, COLOR_RBOUNTY,12,0 },
{ 14,"Yakuza", 2562.73046875, 2705.30078125, 2614.73046875, 2795.30078125, COLOR_RYAKUZA,17,0 },
{ 15,"Syndicate Texas", 1712.734375, 2726.2890625, 1819.734375, 2882.2890625, COLOR_RSYNDICATE,18,0 },
{ 16,"Bulgarian Mafia", 1196.0, -844.166748046875, 1370.0, -750.166748046875, COLOR_RBGM,21,0},
{ 17,"Blood Mafia", 1072.500244140625, -1272.0001220703125, 1139.500244140625, -1215.0001220703125, COLOR_RBLOODMAFIA,19,0 },
{ 18,"No Fly Zone 1", -82.015625, 1626.0078125, 178.984375, 1870.0078125, COLOR_TCIVIL,0,0 },
{ 19,"No Fly Zone 2", 180.984375, 1626.015625, 440.984375, 1870.015625, COLOR_TCIVIL,0,0 },
{ 20,"No Fly Zone 3", -81.015625, 1872.015625, 178.984375, 2114.015625, COLOR_TCIVIL,0,0 },
{ 21,"No Fly Zone 4", 180.984375, 1872.015625, 440.984375, 2114.015625, COLOR_TCIVIL,0,0 },
{ 22,"Fort Carson 1", -338.0078125, 1015.015625, -182.0078125, 1199.015625, COLOR_TCIVIL,0,0 },
{ 23,"Fort Carson 2", -180.0078125, 1097.0234375, 37.9921875, 1199.0234375, COLOR_TCIVIL,0,0 },
{ 24,"The Sherman Dam", -864.020751953125, 1990.5208282470703, -536.020751953125, 2109.5208282470703, COLOR_TCIVIL,0,0 },
{ 25,"Valle Ocultado", -895.0103759765625, 2734.506935119629, -718.0103759765625, 2793.506935119629, COLOR_TCIVIL,0,0 },
{ 26,"Arco Del Oeste", -879.0, 2265.4999771118164, -616.0, 2466.4999771118164, COLOR_TCIVIL,0,0 },
{ 27,"Aldea Malvada", -1356.8637084960938, 2483.193199157715, -1256.8637084960938, 2583.193199157715, COLOR_TCIVIL,0,0 },
{ 28,"Las Payasdas", -321.6527099609375, 2645.5312423706055, -138.6527099609375, 2786.5312423706055, COLOR_TCIVIL,0,0 },
{ 29,"Aircraft Graveyard", -81.617919921875, 2400.50691986084, 448.382080078125, 2561.50691986084, COLOR_TCIVIL,0,0 },
{ 30,"Regular Tom", -338.6353759765625, 1671.9756469726562, -246.6353759765625, 1806.9756469726562, COLOR_TCIVIL,0,0 },
{ 31,"The Big Ear", -416.649169921875, 1468.7499694824219, -192.649169921875, 1644.7499694824219, COLOR_TCIVIL,0,0 },
{ 32,"Robada Intersection", -1125.0625, 1145.0390625, -790.0625, 1331.0390625, COLOR_TCIVIL,0,0 },
{ 33,"Green Palms", 111.984375, 1337.0078125, 282.984375, 1481.0078125, COLOR_TCIVIL,0,0 },
{ 34,"Bayside Tunnel", -2274.015625, 2528.0078125, -1884.015625, 2694.0078125, COLOR_TCIVIL,0,0 },
{ 35,"Bayside", -2642.0234375, 2201.015625, -2341.0234375, 2549.015625, COLOR_TCIVIL,0,0 },
{ 36,"Bayside Marina", -2339.0390625, 2224.015625, -2167.0390625, 2487.015625, COLOR_TCIVIL,0,0 },
{ 37,"Gant Bridge", -2716.0546875, 1848.0625, -2641.0546875, 2176.0625, COLOR_TCIVIL,0,0 },
{ 38,"Gant Bridge 2", -2715.0653533935547, 1509.0653991699219, -2640.0653533935547, 1846.0653991699219, COLOR_TCIVIL,0,0 },
{ 39,"Battery Point", -2715.071029663086, 1271.0653457641602, -2535.071029663086, 1507.0653457641602, COLOR_TCIVIL,0,0 },
{ 40,"San Fierro Bay", -2527.015625, 1522.0078125, -2298.015625, 1568.0078125, COLOR_TCIVIL,0,0 },
{ 41,"Esplanade North 1", -1979.015625, 1383.0078125, -1627.015625, 1558.0078125, COLOR_TCIVIL,0,0 },
{ 42,"Esplanade East 1", -1553.015625, 1020.0078125, -1413.015625, 1237.0078125, COLOR_TCIVIL,0,0 },
{ 43,"Paradiso 1", -2715.078125, 1015.078125, -2536.078125, 1269.078125, COLOR_TCIVIL,0,0 },
{ 44,"Paradiso 2", -2746.0625, 813.5, -2536.0625, 1013.5, COLOR_TCIVIL,0,0 },
{ 45,"Palisades 1", -2962.078125, 1017.078125, -2717.078125, 1311.078125, COLOR_TCIVIL,0,0 },
{ 46,"Palisades 2", -2962.078125, 768.078125, -2748.078125, 1016.078125, COLOR_TCIVIL,0,0 },
{ 47,"Palisades 3", -2964.0874938964844, 475.0875244140625, -2750.0874938964844, 767.0875244140625, COLOR_TCIVIL,0,0 },
{ 48,"Juniper Hollow 1", -2533.0859375, 1192.5390625, -2275.0859375, 1380.5390625, COLOR_TCIVIL,0,0 },
{ 49,"Juniper Hollow 2", -2535.09375, 1091.5390625, -2247.09375, 1191.5390625, COLOR_TCIVIL,0,0 },
{ 50,"Juniper Hollow 3", -2535.09375, 920.5390625, -2248.09375, 1089.5390625, COLOR_TCIVIL,0,0 },
{ 51,"Santa Flora 1", -2746.0625, 703.5000247955322, -2536.0625, 812.5000247955322, COLOR_TCIVIL,0,0 },
{ 52,"Santa Flora 2", -2749.0874938964844, 476.0875244140625, -2536.0874938964844, 702.0875244140625, COLOR_TCIVIL,0,0 },
{ 53,"Downtown 1", -1996.0312194824219, 403.4165496826172, -1806.0312194824219, 596.4165496826172, COLOR_TCIVIL,0,0 },
{ 54,"Ocean Flats 1", -2854.0, 156.08740234375, -2536.0, 280.08740234375, COLOR_TCIVIL,0,0 },
{ 55,"City Hall", -2854.0, 281.08740234375, -2536.0, 474.08740234375, COLOR_TCIVIL,0,0 },
{ 56,"Ocean Flats 2", -2848.0, -59.91259765625, -2699.0, 155.08740234375, COLOR_TCIVIL,0,0 },
{ 57,"Ocean Flats 3", -2698.0, -59.91259765625, -2536.0, 154.08740234375, COLOR_TCIVIL,0,0 },
{ 58,"Ocean Flats 4", -2848.0, -203.91259765625, -2696.0, -60.91259765625, COLOR_TCIVIL,0,0 },
{ 59,"Paradiso", -2695.0, -203.91259765625, -2427.0, -60.91259765625, COLOR_TCIVIL,0,0 },
{ 60,"Missionary Hill", -2654.0, -811.60009765625, -2279.0, -500.60009765625, COLOR_TCIVIL,0,0 },
{ 61,"Avispa Country Club 1", -2848.0, -423.91259765625, -2655.0, -205.91259765625, COLOR_TCIVIL,0,0 },
{ 62,"Avispa Country Club 2", -2653.0, -341.91259765625, -2270.0, -205.91259765625, COLOR_TCIVIL,0,0 },
{ 63,"Easter Bay Chemicals", -1125.2734375, -760.96875, -969.2734375, -590.96875, COLOR_TCIVIL,0,0 },
{ 64,"Fallen Tree", -621.25, -565.9921875, -467.25, -467.9921875, COLOR_TCIVIL,0,0 },
{ 65,"The Farm 1", -1201.25, -1329.9921875, -962.25, -909.9921875, COLOR_TCIVIL,0,0 },
{ 66,"Esplanade North 2", -1979.0234375, 1193.0078125, -1751.0234375, 1382.0078125, COLOR_TCIVIL,0,0 },
{ 67,"Esplanade North 3", -1749.0234375, 1193.01171875, -1553.0234375, 1382.01171875, COLOR_TCIVIL,0,0 },
{ 68,"Calton Heights 1", -2273.0859375, 1193.546875, -1979.0859375, 1380.546875, COLOR_TCIVIL,0,0 },
{ 69,"Doherty 1", -2266.0078125, -342.94921875, -2005.0078125, -62.94921875, COLOR_TCIVIL,0,0 },
{ 70,"Garcia", -2425.0, -203.8984375, -2268.0, -60.8984375, COLOR_TCIVIL,0,0 },
{ 71,"Calton Heights 2", -2246.015625, 1015.54296875, -1883.015625, 1191.54296875, COLOR_TCIVIL,0,0 },
{ 72,"Juniper Hill 1", -2535.09765625, 705.55078125, -2253.09765625, 918.55078125, COLOR_TCIVIL,0,0 },
{ 73,"Doherty 2", -2136.0267181396484, 110.04461669921875, -1997.0267181396484, 337.04461669921875, COLOR_TCIVIL,0,0 },
{ 74,"Juniper Hill 2", -2535.09765625, 475.5546875, -2396.09765625, 704.5546875, COLOR_TCIVIL,0,0 },
{ 75,"Queens", -2535.09765625, 164.5703125, -2396.09765625, 474.5703125, COLOR_TCIVIL,0,0 },
{ 76,"Garcia", -2535.0, -59.9921875, -2260.0, 163.0078125, COLOR_TCIVIL,0,0 },
{ 77,"Doherty 3", -2258.01171875, -61.9921875, -1998.01171875, 109.0078125, COLOR_TCIVIL,0,0 },
{ 78,"Doherty 4", -2257.0267181396484, 111.04463958740234, -2138.0267181396484, 337.04463958740234, COLOR_TCIVIL,0,0 },
{ 79,"Garcia 2", -2394.09765625, 164.015625, -2259.09765625, 485.015625, COLOR_TCIVIL,0,0 },
{ 80,"Kings 1", -2257.020751953125, 338.04156494140625, -1997.020751953125, 500.04156494140625, COLOR_TCIVIL,0,0 },
{ 81,"Juniper Hill 3", -2395.1041259765625, 486.5624084472656, -2257.1041259765625, 704.5624084472656, COLOR_TCIVIL,0,0 },
{ 82,"China Town", -2251.1041259765625, 707.5416564941406, -1997.1041259765625, 920.5416564941406, COLOR_TCIVIL,0,0 },
{ 83,"Kings 2", -2255.1041259765625, 501.5625, -1996.1041259765625, 705.5625, COLOR_TCIVIL,0,0 },
{ 84,"Financial 1", -1882.0208129882812, 1087.5625, -1554.0208129882812, 1191.5625, COLOR_TCIVIL,0,0 },
{ 85,"Financial 2", -1880.020751953125, 965.5625, -1742.020751953125, 1086.5625, COLOR_TCIVIL,0,0 },
{ 86,"Downtown 2", -1741.0255737304688, 965.5625610351562, -1554.0255737304688, 1086.5625610351562, COLOR_TCIVIL,0,0 },
{ 87,"Esplanade East 2", -1553.0255737304688, 820.0171356201172, -1411.0255737304688, 1018.0171356201172, COLOR_TCIVIL,0,0 },
{ 88,"Downtown 8", -2147.681884765625, 921.5483856201172, -1881.681884765625, 1014.5483856201172, COLOR_TCIVIL,0,0 },
{ 89,"Downtown 3", -1880.0284423828125, 733.4035034179688, -1788.0284423828125, 964.4035034179688, COLOR_TCIVIL,0,0 },
{ 90,"Downtown 1", -1996.1079711914062, 733.5540771484375, -1881.1079711914062, 920.5540771484375, COLOR_TCIVIL,0,0 },
{ 91,"Downtown 4", -1995.1136474609375, 597.5540771484375, -1714.1136474609375, 731.5540771484375, COLOR_TCIVIL,0,0 },
{ 92,"Downtown 5", -1723.6051635742188, 819.4034729003906, -1554.6051635742188, 964.4034729003906, COLOR_TCIVIL,0,0 },
{ 93,"Downtown 6", -1786.6051635742188, 732.4035339355469, -1725.6051635742188, 936.4035339355469, COLOR_TCIVIL,0,0 },
{ 94,"Downtown 7", -1723.6079711914062, 734.0256958007812, -1534.6079711914062, 819.0256958007812, COLOR_TCIVIL,0,0 },
{ 95,"Easter Basin 1", -1533.1353759765625, 462.5623779296875, -1217.1353759765625, 518.5623779296875, COLOR_TCIVIL,0,0 },
{ 96,"Easter Basin 2", -1469.1353759765625, 303.5623779296875, -1216.1353759765625, 461.5623779296875, COLOR_TCIVIL,0,0 },
{ 97,"Easter Basin 3", -1712.1353759765625, 302.56238555908203, -1470.1353759765625, 461.56238555908203, COLOR_TCIVIL,0,0 },
{ 98,"Easter Bay Airport 1", -1558.7017211914062, -537.332160949707, -1173.7017211914062, -402.33216094970703, COLOR_TCIVIL,0,0 },
{ 99,"Easter Bay Airport 2", -1675.7074584960938, -401.3293151855469, -1297.7074584960938, -267.3293151855469, COLOR_TCIVIL,0,0 },
{ 100,"Easter Bay Airport 3", -1296.7102661132812, -400.3293151855469, -1171.7102661132812, -110.32931518554688, COLOR_TCIVIL,0,0 },
{ 101,"Easter Bay Airport 4", -1437.681884765625, -266.98846435546875, -1297.681884765625, 56.01153564453125, COLOR_TCIVIL,0,0 },
{ 102,"Easter Bay Airport 5", -1680.681884765625, -266.17034912109375, -1438.681884765625, -109.17034912109375, COLOR_TCIVIL,0,0 },
{ 103,"Foster Valley 1", -1994.681884765625, -869.4430541992188, -1828.681884765625, -630.4430541992188, COLOR_TCIVIL,0,0 },
{ 104,"Foster Valley 6", -1994.6875, -1064.4402160644531, -1829.6875, -870.4402160644531, COLOR_TCIVIL,0,0 },
{ 105,"Foster Valley 7", -1994.6875, -1325.4402465820312, -1828.6875, -1065.4402465820312, COLOR_TCIVIL,0,0 },
{ 106,"Mount Chiliad 1", -2866.013900756836, -1281.9828186035156, -2205.013900756836, -1072.9828186035156, COLOR_TCIVIL,0,0 },
{ 107,"Mount Chiliad 2", -2866.0243072509766, -1783.9689178466797, -2639.0243072509766, -1283.9689178466797, COLOR_TCIVIL,0,0 },
{ 108,"Mount Chiliad 3", -2638.03515625, -1782.96875, -2414.03515625, -1282.96875, COLOR_TCIVIL,0,0 },
{ 109,"Mount Chiliad 4", -2412.046875, -1504.96875, -2066.046875, -1282.96875, COLOR_TCIVIL,0,0 },
{ 110,"Mount Chiliad 5", -2412.05078125, -1782.96875, -2018.05078125, -1505.96875, COLOR_TCIVIL,0,0 },
{ 111,"Mount Chiliad 6", -2638.03515625, -1973.96484375, -2103.03515625, -1783.96484375, COLOR_TCIVIL,0,0 },
{ 112,"Angel Pine 1", -2247.0, -2394.9921875, -2052.0, -2222.9921875, COLOR_TCIVIL,0,0 },
{ 113,"Angel Pine 2", -2247.01171875, -2589.98828125, -1956.01171875, -2395.98828125, COLOR_TCIVIL,0,0 },
{ 114,"Sandy Creeks 1", -1657.0, -2803.9921875, -1494.0, -2666.9921875, COLOR_TCIVIL,0,0 },
{ 115,"The Farm 3", -1488.015625, -1607.4921875, -1380.015625, -1399.4921875, COLOR_TCIVIL,0,0 },
{ 116,"Back O'Beyond 3", -1106.015625, -2726.4765625, -731.015625, -2365.4765625, COLOR_TCIVIL,0,0 },
{ 117,"Back O'Beyond 4", -728.015625, -2730.4765625, -365.015625, -2365.4765625, COLOR_TCIVIL,0,0 },
{ 118,"Back O'Beyond 2", -1102.015625, -2363.4765625, -733.015625, -2014.4765625, COLOR_TCIVIL,0,0 },
{ 119,"Back O'Beyond 1", -730.0234375, -2362.4921875, -362.0234375, -2013.4921875, COLOR_TCIVIL,0,0 },
{ 120,"Sandy Cabin", -1660.03125, -2285.4921875, -1604.03125, -2203.4921875, COLOR_TCIVIL,0,0 },
{ 121,"Sandy Creeks 3", -1660.03125, -2553.4765625, -1413.03125, -2286.4765625, COLOR_TCIVIL,0,0 },
{ 122,"Sandy Creeks 5", -1602.0546875, -2284.4765625, -1351.0546875, -2020.4765625, COLOR_TCIVIL,0,0 },
{ 123,"Sandy Creeks 4", -1892.015625, -2202.4921875, -1604.015625, -2010.4921875, COLOR_TCIVIL,0,0 },
{ 124,"Sandy Creeks 2", -1887.0, -2553.48828125, -1662.0, -2203.48828125, COLOR_TCIVIL,0,0 },
{ 125,"Mount Chiliad 7", -1949.015625, -1756.98828125, -1725.015625, -1508.98828125, COLOR_TCIVIL,0,0 },
{ 126,"The Panopticon", -601.6666259765625, -203.83349609375, -412.6666259765625, -22.83349609375, COLOR_TCIVIL,0,0 },
{ 127,"Blueberry Acres", -294.6666259765625, -202.83349609375, 102.3333740234375, 216.16650390625, COLOR_TCIVIL,0,0 },
{ 128,"Blueberry", 104.3333740234375, -202.83349609375, 368.3333740234375, 16.16650390625, COLOR_TCIVIL,0,0 },
{ 129,"Dillimore", 593.666748046875, -657.83349609375, 729.666748046875, -423.83349609375, COLOR_TCIVIL,0,0 },
{ 130,"Martin Bridge", -221.333251953125, 269.833251953125, -112.333251953125, 467.833251953125, COLOR_TCIVIL,0,0 },
{ 131,"Fallow Bridge", 423.666748046875, 380.833251953125, 595.666748046875, 609.833251953125, COLOR_TCIVIL,0,0 },
{ 132,"The Mako Span", 1678.0, 427.833251953125, 1783.0, 602.833251953125, COLOR_TCIVIL,0,0 },
{ 133,"Montgomery", 1146.0, 148.833251953125, 1421.0, 426.833251953125, COLOR_TCIVIL,0,0 },
{ 134,"Hunter Quarry", 393.33349609375, 710.1666259765625, 822.33349609375, 1009.1666259765625, COLOR_TCIVIL,0,0 },
{ 135,"Flint Range", -609.5310668945312, -1622.4690551757812, -158.53106689453125, -1193.4690551757812, COLOR_TCIVIL,0,0 },
{ 136,"Flint Intersection", -157.53106689453125, -1537.4690551757812, 18.46893310546875, -1258.4690551757812, COLOR_TCIVIL,0,0 },
{ 137,"Palomino Creek", 2122.0, -177.16668701171875, 2597.0, 212.83331298828125, COLOR_TCIVIL,0,0 },
{ 138,"Northstar Rock", 2386.0, -829.83349609375, 2805.0, -447.83349609375, COLOR_TCIVIL,0,0 },
{ 139,"Montgomery Intersection", 1546.000244140625, 198.16650390625, 1751.000244140625, 388.16650390625, COLOR_TCIVIL,0,0 },
{ 140,"Ocean Docks 1", 2653.0, -2586.1669921875, 2817.0, -2311.1669921875, COLOR_TCIVIL,0,0 },
{ 141,"Ocean Docks 3", 2359.0, -2715.1669921875, 2561.0, -2465.1669921875, COLOR_TCIVIL,0,0 },
{ 142,"LS International Airport 1", 1256.0, -2384.1669921875, 1845.0, -2190.1669921875, COLOR_TCIVIL,0,0 },
{ 143,"LS International Airport 2", 1341.0, -2689.1669921875, 1729.0, -2385.1669921875, COLOR_TCIVIL,0,0 },
{ 144,"LS International Airport 4", 1730.0, -2689.1669921875, 2124.0, -2385.1669921875, COLOR_TCIVIL,0,0 },
{ 145,"LS International Airport 3", 1847.0, -2383.1669921875, 2053.0, -2190.1669921875, COLOR_TCIVIL,0,0 },
{ 146,"Playa Del Seville", 2624.0003662109375, -2145.0001831054688, 2846.0003662109375, -1903.0001831054688, COLOR_TCIVIL,0,0 },
{ 147,"Ocean Docks 4", 2054.0003051757812, -2342.1626892089844, 2387.0003051757812, -2190.1626892089844, COLOR_TCIVIL,0,0 },
{ 148,"Ocean Docks 2", 2487.0003662109375, -2463.1627197265625, 2651.0003662109375, -2315.1627197265625, COLOR_TCIVIL,0,0 },
{ 149,"Ocean Docks 5", 2388.0003051757812, -2286.000213623047, 2805.0003051757812, -2147.000213623047, COLOR_TCIVIL,0,0 },
{ 150,"East  Beach 1", 2626.80029296875, -1902.2001953125, 2848.80029296875, -1650.2001953125, COLOR_TCIVIL,0,0 },
{ 151,"Ganton 2", 2541.9378051757812, -1851.9377136230469, 2625.9378051757812, -1626.9377136230469, COLOR_TCIVIL,0,0 },
{ 152,"Willow Field 1", 2424.80029296875, -2038.2001953125, 2622.80029296875, -1854.2001953125, COLOR_TCIVIL,0,0 },
{ 153,"East  Beach 2", 2734.80029296875, -1649.2001953125, 2884.80029296875, -1403.2001953125, COLOR_TCIVIL,0,0 },
{ 154,"East  Beach 3", 2626.80029296875, -1649.2001953125, 2732.80029296875, -1452.2001953125, COLOR_TCIVIL,0,0 },
{ 155,"East  Beach 4", 2734.80029296875, -1401.199951171875, 2883.80029296875, -1173.199951171875, COLOR_TCIVIL,0,0 },
{ 156,"Las Colinas 1", 2734.80029296875, -1172.199951171875, 2884.80029296875, -1049.199951171875, COLOR_TCIVIL,0,0 },
{ 157,"Las Colinas 2", 2459.75, -1169.9921875, 2733.75, -1084.9921875, COLOR_TCIVIL,0,0 },
{ 158,"Los Flores", 2463.75, -1450.9921875, 2733.75, -1170.9921875, COLOR_TCIVIL,0,0 },
{ 159,"East Los Santos 1", 2330.75, -1626.98828125, 2626.75, -1452.98828125, COLOR_TCIVIL,0,0 },
{ 160,"East Los Santos 2", 2329.749755859375, -1450.9855651855469, 2462.749755859375, -1169.9855651855469, COLOR_TCIVIL,0,0 },
{ 161,"Esplanade North 4", -1484.0, 1471.5, -1360.0, 1504.5, COLOR_TCIVIL,0,0 },
{ 162,"Ganton 1", 2257.9968872070312, -1852.9400634765625, 2541.9968872070312, -1725.9400634765625, COLOR_TCIVIL,0,0 },
{ 163,"Ocean Docks 6", 2257.7745361328125, -2145.17041015625, 2623.7745361328125, -2040.17041015625, COLOR_TCIVIL,0,0 },
{ 164,"Willow Field 3", 2005.75, -2189.15625, 2256.75, -1978.15625, COLOR_TCIVIL,0,0 },
{ 165,"Willow Field 2", 2258.0, -2038.90625, 2424.0, -1852.90625, COLOR_TCIVIL,0,0 },
{ 166,"Idlewood 1", 1964.979248046875, -1977.0001831054688, 2256.979248046875, -1726.0001831054688, COLOR_TCIVIL,0,0 },
{ 167,"Ganton 2", 2214.975311279297, -1724.9876098632812, 2372.975311279297, -1626.9876098632812, COLOR_TCIVIL,0,0 },
{ 168,"East Los Santos 3", 2202.9912109375, -1626.4884033203125, 2328.9912109375, -1395.4884033203125, COLOR_TCIVIL,0,0 },
{ 169,"Unity Station", 1684.73828125, -1960.9765625, 1821.73828125, -1841.9765625, COLOR_TCIVIL,0,0 },
{ 170,"El Corona 1", 1684.7265625, -2189.97265625, 1819.7265625, -1961.97265625, COLOR_TCIVIL,0,0 },
{ 171,"El Corona 2", 1820.7421875, -2189.14453125, 2004.7421875, -1978.14453125, COLOR_TCIVIL,0,0 },
{ 172,"Idlewood 2", 1822.7265625, -1977.14453125, 1963.7265625, -1723.14453125, COLOR_TCIVIL,0,0 },
{ 173,"Idlewood 3", 1963.984375, -1725.0, 2213.984375, -1627.0, COLOR_TCIVIL,0,0 },
{ 174,"Commerce 1", 1513.666748046875, -1840.5001831054688, 1821.666748046875, -1675.5001831054688, COLOR_TCIVIL,0,0 },
{ 175,"Glen Park 1", 1851.6628112792969, -1258.8251037597656, 2131.662811279297, -1135.8251037597656, COLOR_TCIVIL,0,0 },
{ 176,"Downtown Los Santos 1", 1460.666748046875, -1430.83349609375, 1712.666748046875, -1303.83349609375, COLOR_TCIVIL,0,0 },
{ 177,"Downtown Los Santos 2", 1460.666748046875, -1302.83349609375, 1712.666748046875, -1171.83349609375, COLOR_TCIVIL,0,0 },
{ 178,"Commerce 2", 1460.666748046875, -1673.83349609375, 1711.666748046875, -1431.83349609375, COLOR_TCIVIL,0,0 },
{ 179,"Glen Park 2", 1852.666748046875, -1496.83349609375, 2131.666748046875, -1259.83349609375, COLOR_TCIVIL,0,0 },
{ 180,"Idlewood 4", 1962.979248046875, -1626.5, 2202.979248046875, -1497.5, COLOR_TCIVIL,0,0 },
{ 181,"Idlewood 5", 1822.9753112792969, -1721.8251037597656, 1963.9753112792969, -1496.8251037597656, COLOR_TCIVIL,0,0 },
{ 182,"Downtown Los Santos 3", 1712.666748046875, -1496.83349609375, 1850.666748046875, -1171.83349609375, COLOR_TCIVIL,0,0 },
{ 183,"Little Mexico", 1712.6531372070312, -1673.8179321289062, 1821.6531372070312, -1496.8179321289062, COLOR_TCIVIL,0,0 },
{ 184,"Conference Center", 1032.666748046875, -1838.8334350585938, 1511.666748046875, -1674.8334350585938, COLOR_TCIVIL,0,0 },
{ 185,"Mulholland Intersection", 1460.666748046875, -1170.83349609375, 1850.666748046875, -874.83349609375, COLOR_TCIVIL,0,0 },
{ 186,"Downtown Los Santos 3", 1315.666748046875, -1433.83349609375, 1459.666748046875, -1016.83349609375, COLOR_TCIVIL,0,0 },
{ 187,"Verona Beach 1", 1104.666748046875, -1673.83349609375, 1459.666748046875, -1434.83349609375, COLOR_TCIVIL,0,0 },
{ 188,"Santa Maria Beach 1", 84.666748046875, -1932.83349609375, 423.666748046875, -1707.83349609375, COLOR_TCIVIL,0,0 },
{ 189,"Santa Maria Beach 2", 424.666748046875, -1931.8333740234375, 731.666748046875, -1707.8333740234375, COLOR_TCIVIL,0,0 },
{ 190,"Verona Beach 2", 733.666748046875, -1901.8334350585938, 1032.666748046875, -1674.8334350585938, COLOR_TCIVIL,0,0 },
{ 191,"Market 1", 1141.5001220703125, -1434.1666870117188, 1314.5001220703125, -1138.1666870117188, COLOR_TCIVIL,0,0 },
{ 192,"Market 2", 898.5001220703125, -1434.0, 1140.5001220703125, -1272.0, COLOR_TCIVIL,0,0 },
{ 193,"Verona Beach 4", 941.666748046875, -1673.8333740234375, 1103.666748046875, -1434.8333740234375, COLOR_TCIVIL,0,0 },
{ 194,"Verona Beach 3", 733.6646728515625, -1673.829345703125, 940.6646728515625, -1434.829345703125, COLOR_TCIVIL,0,0 },
{ 195,"Market Station", 676.3777465820312, -1433.573745727539, 897.3777465820312, -1309.573745727539, COLOR_TCIVIL,0,0 },
{ 196,"Rodeo 1", 565.0453491210938, -1707.4430541992188, 732.0453491210938, -1434.4430541992188, COLOR_TCIVIL,0,0 },
{ 197,"Rodeo 3", 438.9287109375, -1706.4373779296875, 563.9287109375, -1582.4373779296875, COLOR_TCIVIL,0,0 },
{ 198,"Rodeo 4", 107.9168701171875, -1706.4376831054688, 436.9168701171875, -1531.4376831054688, COLOR_TCIVIL,0,0 },
{ 199,"Rodeo 2", 438.9168701171875, -1580.4376831054688, 562.9168701171875, -1255.4376831054688, COLOR_TCIVIL,0,0 },
{ 200,"Rodeo 5", 103.9168701171875, -1530.3543395996094, 437.9168701171875, -1195.3543395996094, COLOR_TCIVIL,0,0 },
{ 201,"Vinewood 1", 563.9168701171875, -1433.4375, 674.9168701171875, -1255.4375, COLOR_TCIVIL,0,0 },
{ 202,"Vinewood 2", 788.375244140625, -1308.5625, 898.375244140625, -1022.5625, COLOR_TCIVIL,0,0 },
{ 203,"Richman 1", 438.9168701171875, -1255.4375, 786.9168701171875, -1072.4375, COLOR_TCIVIL,0,0 },
{ 204,"Market 4", 899.375244140625, -1271.5626220703125, 1072.375244140625, -1022.5626220703125, COLOR_TCIVIL,0,0 },
{ 205,"Market 3", 1073.5001220703125, -1215.5626525878906, 1140.5001220703125, -1022.5626525878906, COLOR_TCIVIL,0,0 },
{ 206,"Market 2", 1141.500244140625, -1137.166748046875, 1314.500244140625, -843.166748046875, COLOR_TCIVIL,0,0 },
{ 207,"Richman 2", 430.3751220703125, -1072.4376831054688, 787.3751220703125, -964.4376831054688, COLOR_TCIVIL,0,0 },
{ 208,"Vinewood 3", 788.3751220703125, -1021.5626831054688, 1140.3751220703125, -922.5626831054688, COLOR_TCIVIL,0,0 },
{ 209,"Mulholland 2", 788.3751220703125, -921.5627136230469, 1137.3751220703125, -804.5627136230469, COLOR_TCIVIL,0,0 },
{ 210,"Richman 3", 393.60009765625, -963.400146484375, 787.60009765625, -701.400146484375, COLOR_TCIVIL,0,0 },
{ 211,"Hilltop Farms", 1003.25, -384.9921875, 1138.25, -283.9921875, COLOR_TCIVIL,0,0 },
{ 212,"Mulholland 1", 1315.6608276367188, -1015.8305358886719, 1458.6608276367188, -847.8305358886719, COLOR_TCIVIL,0,0 },
{ 213,"East Los Santos 4", 2133.984375, -1394.4921875, 2328.984375, -1135.4921875, 0xFF0000FF },
{ 214,"Las Colinas 4", 1852.65625, -1133.81640625, 2326.65625, -980.81640625, COLOR_TCIVIL,0,0 },
{ 215,"Las Colinas 3", 2328.65625, -1168.80078125, 2458.65625, -980.80078125, COLOR_TCIVIL,0,0 },
{ 216,"Hanky Panky Point", 2608.9921875, 15.0078125, 2743.9921875, 275.0078125, COLOR_TCIVIL,0,0 },
{ 217,"Blackfield Chapel", 1342.33349609375, 646.1666259765625, 1756.33349609375, 797.1666259765625, COLOR_TCIVIL,0,0 },
{ 218,"Last Dime Motel", 1825.0, 623.1666259765625, 1990.0, 791.1666259765625, COLOR_TCIVIL,0,0 },
{ 219,"Rockshore West 1", 1993.0, 623.1666259765625, 2272.0, 791.1666259765625, COLOR_TCIVIL,0,0 },
{ 220,"Rockshore West 2", 2273.0, 623.1666259765625, 2705.0, 791.1666259765625, COLOR_TCIVIL,0,0 },
{ 221,"Linden Side", 2781.0, 835.1666259765625, 2897.0, 1020.1666259765625, COLOR_TCIVIL,0,0 },
{ 222,"Linden Station", 2755.0, 1218.5, 2883.0, 1390.5, COLOR_TCIVIL,0,0 },
{ 223,"The Camel's Toe", 2084.98828125, 1184.171875, 2411.98828125, 1365.171875, COLOR_TCIVIL,0,0 },
{ 224,"Come-A-Lot", 2084.98046875, 984.17578125, 2333.98046875, 1181.17578125, COLOR_TCIVIL,0,0 },
{ 225,"The Pink Swan", 1816.75, 1105.0208129882812, 2082.75, 1268.0208129882812, COLOR_TCIVIL,0,0 },
{ 226,"LVA Freight Depot 1", 1484.750244140625, 1051.0416259765625, 1815.750244140625, 1190.0416259765625, COLOR_TCIVIL,0,0 },
{ 227,"Blackfiled College 1", 956.0, 954.1666259765625, 1198.0, 1183.1666259765625, COLOR_TCIVIL,0,0 },
{ 228,"Blackfield", 1017.0, 1184.1666259765625, 1197.0, 1680.1666259765625, COLOR_TCIVIL,0,0 },
{ 229,"White Wood Esates 1", 906.0, 1681.8333129882812, 1017.0, 2046.8333129882812, COLOR_TCIVIL,0,0 },
{ 230,"White Wood Esates 2", 1019.0, 1679.8333129882812, 1199.0, 2046.8333129882812, COLOR_TCIVIL,0,0 },
{ 231,"White Wood Esates 3", 897.0, 2048.166664123535, 1016.0, 2423.166664123535, COLOR_TCIVIL,0,0 },
{ 232,"White Wood Esates 5", 672.0, 1850.8333129882812, 812.0, 2097.8333129882812, COLOR_TCIVIL,0,0 },
{ 233,"White Wood Esates 4", 1017.0, 2050.166664123535, 1200.0, 2423.166664123535, COLOR_TCIVIL,0,0 },
{ 234,"Yellow Bell Golf Club", 1120.33349609375, 2719.5, 1535.33349609375, 2861.5, COLOR_TCIVIL,0,0 },
{ 235,"Yellow Bell Station", 1204.33349609375, 2507.5, 1534.33349609375, 2717.5, COLOR_TCIVIL,0,0 },
{ 236,"Prickle Pine 1", 1536.3125, 2508.5078125, 1710.3125, 2861.5078125, COLOR_TCIVIL,0,0 },
{ 237,"Prickle Pine 2", 1912.7214965820312, 2646.318192958832, 2080.7214965820312, 2787.318192958832, COLOR_TCIVIL,0,0 },
{ 238,"K.A.C.C", 2614.7271728515625, 2648.40057516098, 2755.7271728515625, 2872.40057516098, COLOR_TCIVIL,0,0 },
{ 239,"Spiny Bed 2", 2240.3180541992188, 2724.3750166893005, 2456.3180541992188, 2827.3750166893005, COLOR_TCIVIL,0,0 },
{ 240,"LVA Freight Depot 4", 1259.750244140625, 874.0416259765625, 1482.750244140625, 1190.0416259765625, COLOR_TCIVIL,0,0 },
{ 241,"Las Venturas Airport 1", 1240.7293701171875, 1689.0416259765625, 1818.7293701171875, 1773.0416259765625, COLOR_TCIVIL,0,0 },
{ 242,"Redsands West 1", 1239.6668701171875, 2068.062469482422, 1514.6668701171875, 2269.062469482422, COLOR_TCIVIL,0,0 },
{ 243,"Redsands West 5", 1238.6668701171875, 1884.0416564941406, 1563.6668701171875, 2065.0416564941406, COLOR_TCIVIL,0,0 },
{ 244,"Redsands West 3", 1380.75, 2272.0078125, 1738.75, 2392.0078125, COLOR_TCIVIL,0,0 },
{ 245,"Redsands West 4", 1516.6796875, 2068.04296875, 1728.6796875, 2269.04296875, COLOR_TCIVIL,0,0 },
{ 246,"Las Venturas Airport 2", 1239.7293701171875, 1773.0416259765625, 1393.7293701171875, 1882.0416259765625, COLOR_TCIVIL,0,0 },
{ 247,"The High Roller", 1818.75, 1270.0208129882812, 2083.75, 1444.0208129882812, COLOR_TCIVIL,0,0 },
{ 248,"Pirates In Men's Pants 1", 1818.75, 1571.0078125, 2082.75, 1700.0078125, COLOR_TCIVIL,0,0 },
{ 249,"The Visage 1", 1821.65625, 1906.0625, 2108.65625, 2067.0625, COLOR_TCIVIL,0,0 },
{ 250,"The Visage 2", 1819.7265625, 1703.04296875, 2083.7265625, 1903.04296875, COLOR_TCIVIL,0,0 },
{ 251,"Redsands East 1", 1729.6796875, 2069.04296875, 1957.6796875, 2173.04296875, COLOR_TCIVIL,0,0 },
{ 252,"Redsands East 2", 1729.6796875, 2173.01171875, 1955.6796875, 2272.01171875, COLOR_TCIVIL,0,0 },
{ 253,"Redsands East 4", 1741.7421875, 2273.01171875, 1985.7421875, 2460.01171875, COLOR_TCIVIL,0,0 },
{ 254,"Redsands East 3", 1957.66796875, 2068.046875, 2109.66796875, 2273.046875, COLOR_TCIVIL,0,0 },
{ 255,"Pilgram 1", 2332.73828125, 1367.015625, 2635.73828125, 1496.015625, COLOR_TCIVIL,0,0 },
{ 256,"The Camel's Toe 2", 2413.98046875, 1185.17578125, 2634.98046875, 1365.17578125, COLOR_TCIVIL,0,0 },
{ 257,"Come-A-Lot 2", 2338.0, 981.17578125, 2637.0, 1182.17578125, COLOR_TCIVIL,0,0 },
{ 258,"Royal Casino 2", 2086.75, 1367.0078125, 2330.75, 1531.0078125, COLOR_TCIVIL,0,0 },
{ 259,"Pilgram 2", 2331.75, 1497.0078125, 2655.75, 1714.0078125, COLOR_TCIVIL,0,0 },
{ 260,"Royal Casino 1", 2085.75, 1532.0208129882812, 2328.75, 1762.0208129882812, COLOR_TCIVIL,0,0 },
{ 261,"Las Venturas Airport 8", 1240.7293701171875, 1192.0416259765625, 1539.7293701171875, 1458.0416259765625, COLOR_TCIVIL,0,0 },
{ 262,"Come-A-Lot 4", 2084.979248046875, 878.1874389648438, 2548.979248046875, 981.1874389648438, COLOR_TCIVIL,0,0 },
{ 263,"Caligula's Palace", 2086.7083740234375, 1764.0624389648438, 2327.7083740234375, 1903.0624389648438, COLOR_TCIVIL,0,0 },
{ 264,"Redsands West 2", 1238.0, 2271.5, 1379.0, 2397.5, COLOR_TCIVIL,0,0 },
{ 265,"The Emerald Isle 1", 1986.729248046875, 2275.0208129882812, 2249.729248046875, 2460.0208129882812, COLOR_TCIVIL,0,0 },
{ 266,"Old Venturas Strip 1", 2110.666748046875, 2034.0625, 2330.666748046875, 2273.0625, COLOR_TCIVIL,0,0 },
{ 267,"Starfish Casino1 1", 2109.6458740234375, 1904.0625, 2329.6458740234375, 2033.0625, COLOR_TCIVIL,0,0 },
{ 268,"Roca Escalante 1", 2250.729248046875, 2274.8333282470703, 2371.729248046875, 2527.8333282470703, COLOR_TCIVIL,0,0 },
{ 269,"Old Venturas Strip 2", 2333.666748046875, 2034.062484741211, 2561.666748046875, 2273.062484741211, COLOR_TCIVIL,0,0 },
{ 270,"Starfish Casino 2", 2330.666748046875, 1883.062484741211, 2517.666748046875, 2033.062484741211, COLOR_TCIVIL,0,0 },
{ 271,"Starfish Casino 4", 2329.7083740234375, 1716.0624694824219, 2517.7083740234375, 1882.0624694824219, COLOR_TCIVIL,0,0 },
{ 272,"Roca Escalante 2", 2373.729248046875, 2274.8333129882812, 2492.729248046875, 2527.8333129882812, COLOR_TCIVIL,0,0 },
{ 273,"Creek", 2743.0, 2308.166664123535, 2932.0, 2621.166664123535, COLOR_TCIVIL,0,0 },
{ 274,"Sobell Rail Yards", 2772.0, 1570.1666564941406, 2942.0, 1722.1666564941406, COLOR_TCIVIL,0,0 },
{ 275,"Roca Escalante 2", 2494.729248046875, 2367.0, 2689.729248046875, 2529.0, COLOR_TCIVIL,0,0 },
{ 276,"Roca Escalante 4", 2494.729248046875, 2275.0, 2562.729248046875, 2366.0, COLOR_TCIVIL,0,0 },
{ 277,"Old Venturas Strip 3", 2564.0, 2033.9999694824219, 2741.0, 2302.999969482422, COLOR_TCIVIL,0,0 },
{ 278,"Old Venturas Strip 4", 2743.0, 1959.1666641235352, 2853.0, 2306.166664123535, COLOR_TCIVIL,0,0 },
{ 279,"Starfish Casino 3", 2520.20849609375, 1945.0624771118164, 2742.20849609375, 2032.0624771118164, COLOR_TCIVIL,0,0 },
{ 280,"Rockshore West 3", 2220.0, 508.5, 2426.0, 611.5, COLOR_TCIVIL,0,0 },
{ 281,"LVA Freight Depot 2", 1484.74609375, 877.05859375, 1648.74609375, 1050.05859375, COLOR_TCIVIL,0,0 },
{ 282,"LVA Freight Depot 3", 1650.74609375, 877.05859375, 1815.74609375, 1050.05859375, COLOR_TCIVIL,0,0 },
{ 283,"Las Venturas Airport 9", 1540.72265625, 1348.046875, 1815.72265625, 1458.046875, COLOR_TCIVIL,0,0 },
{ 284,"Las Venturas Airport 10", 1540.72265625, 1191.046875, 1815.72265625, 1347.046875, COLOR_TCIVIL,0,0 },
{ 285,"Las Venturas Airport 3", 1395.7265625, 1773.05859375, 1623.7265625, 1882.05859375, COLOR_TCIVIL,0,0 },
{ 286,"Las Venturas Airport 4", 1624.72265625, 1775.05859375, 1817.72265625, 1882.05859375, COLOR_TCIVIL,0,0 },
{ 287,"Las Venturas Airport 5", 1240.72265625, 1459.046875, 1534.72265625, 1688.046875, COLOR_TCIVIL,0,0 },
{ 289,"Las Venturas Airport 6", 1536.72265625, 1460.046875, 1648.72265625, 1688.046875, COLOR_TCIVIL,0,0 },
{ 290,"Redsands West 6", 1566.65234375, 1883.05859375, 1818.65234375, 2065.05859375, COLOR_TCIVIL,0,0 },
{ 291,"El Castillo Del Diablo 2", -535.015625, 2362.01171875, -148.015625, 2499.01171875, COLOR_TCIVIL,0,0 },
{ 292,"El Castillo Del Diablo 1", -336.00390625, 2196.0234375, 132.99609375, 2361.0234375, COLOR_TCIVIL,0,0 },
{ 293,"LIL'Probe Inn", -67.03125, 1308.0234375, 80.96875, 1437.0234375, COLOR_TCIVIL,0,0 },
{ 294,"Octane Springs", 509.9765625, 1602.0078125, 725.9765625, 1789.0078125, COLOR_TCIVIL,0,0 },
{ 295,"Desert Station", -1543.015625, 1770.5078125, -1357.015625, 1927.5078125, COLOR_TCIVIL,0,0 },
{ 296,"Foster Valley 5", -2171.015625, -1005.4921875, -1996.015625, -693.4921875, COLOR_TCIVIL,0,0 },
{ 297,"Las Venturas Airport 7", 1649.703125, 1460.0625, 1817.703125, 1688.0625, COLOR_TCIVIL,0,0 },
{ 298,"Four Dragons Casino 2", 1816.736328125, 961.0207214355469, 1952.736328125, 1104.0207214355469, COLOR_TCIVIL,0,0 },
{ 299,"Four Dragons Casino 1", 1954.736328125, 960.0207214355469, 2082.736328125, 1104.0207214355469, COLOR_TCIVIL,0,0 },
{ 300,"Pirates In Men's Pants 2", 1818.7501220703125, 1446.0172729492188, 2084.7501220703125, 1570.0172729492188, COLOR_TCIVIL,0,0 },
{ 301,"Spiny Bed 1", 2082.7109375, 2659.0078125, 2238.7109375, 2838.0078125, COLOR_TCIVIL,0,0 },
{ 302,"Blackfiled College 2", 955.9921875, 773.171875, 1198.9921875, 952.171875, COLOR_TCIVIL,0,0 },
{ 303,"The Farm 2", -1169.5234375, -1719.4921875, -1030.5234375, -1599.4921875, COLOR_TCIVIL,0,0 },
{ 304,"Easter Basin 7", -1712.1214599609375, 462.56238555908203, -1533.1214599609375, 731.562385559082, COLOR_TCIVIL,0,0 },
{ 305,"Easter Basin 6", -1805.0103759765625, 403.4165496826172, -1713.0103759765625, 595.4165496826172, COLOR_TCIVIL,0,0 },
{ 306,"Downtown 8", -1996.0416259765625, 164.42355346679688, -1856.0416259765625, 402.4235534667969, COLOR_TCIVIL,0,0 },
{ 307,"Doherty 5", -1996.0416259765625, 43.43049621582031, -1707.0416259765625, 164.4304962158203, COLOR_TCIVIL,0,0 },
{ 308,"Foster Valley 2", -2224.8401489257812, -553.9342041015625, -1956.8401489257812, -343.9342041015625, COLOR_TCIVIL,0,0 },
{ 309,"Easter Basin 8", -1706.0416259765625, 1.444366455078125, -1470.0416259765625, 164.44436645507812, COLOR_TCIVIL,0,0 },
{ 310,"Easter Basin 9", -1855.0416259765625, 165.4304962158203, -1607.0416259765625, 264.4304962158203, COLOR_TCIVIL,0,0 },
{ 311,"Easter Basin 5", -1855.0416259765625, 265.4234924316406, -1713.0416259765625, 402.4234924316406, COLOR_TCIVIL,0,0 },
{ 312,"Easter Basin 4", -1712.1353759765625, 265.5623779296875, -1291.1353759765625, 301.5623779296875, COLOR_TCIVIL,0,0 },
{ 313,"Doherty 6", -1997.0124969482422, -69.56874999403954, -1707.0124969482422, 42.431250005960464, COLOR_TCIVIL,0,0 },
{ 314,"Doherty 7", -2004.0242614746094, -342.9828338623047, -1848.0242614746094, -70.98283386230469, COLOR_TCIVIL,0,0 },
{ 315,"Doherty 8", -1847.0277099609375, -370.9828338623047, -1706.0277099609375, -70.98283386230469, COLOR_TCIVIL,0,0 },
{ 316,"Foster Valley 3", -1955.8437194824219, -629.923828125, -1847.8437194824219, -343.923828125, COLOR_TCIVIL,0,0 },
{ 317,"Mulholland 3", 788.3751220703125, -803.5627136230469, 1138.3751220703125, -650.5627136230469, COLOR_TCIVIL,0,0 },
{ 318,"Foster Valley 4", -1847.03125, -629.9765625, -1703.03125, -370.9765625, COLOR_TCIVIL,0,0 }
};
//dini 2
#if defined dini2_included
#endinput
#endif
#define dini2_included
#if !defined DINI_MAX_FILES
#define DINI_MAX_FILES \
16
#endif
#if !defined DINI_MAX_FILE_NAME
#define DINI_MAX_FILE_NAME \
128
#endif
#if !defined DINI_MAX_FIELDS
#define DINI_MAX_FIELDS \
2300
#endif
#if !defined DINI_MAX_FIELD_NAME
#define DINI_MAX_FIELD_NAME \
232
#endif
#if !defined DINI_MAX_FIELD_VALUE
#define DINI_MAX_FIELD_VALUE \
356
#endif
#define INVALID_DINI_FILE \
Dini:-1
enum E_DINI {
E_DINI_FILENAME[DINI_MAX_FILE_NAME],
bool:E_DINI_FILE_MODIFIED,
E_DINI_NUM_FIELDS,
E_DINI_TIMER
};
static diniFile[Dini:DINI_MAX_FILES][E_DINI];
static diniFileFields[Dini:DINI_MAX_FILES][DINI_MAX_FIELDS][DINI_MAX_FIELD_NAME];
static diniFileValues[Dini:DINI_MAX_FILES][DINI_MAX_FIELDS][DINI_MAX_FIELD_VALUE];
static Dini:dini_ParseFile(const filename[], timeout = 150) {
new Dini:file = INVALID_DINI_FILE;
for (new Dini:i = Dini:0; i < Dini:DINI_MAX_FILES; i++) {
if (diniFile[i][E_DINI_FILENAME][0]) {
if (!strcmp(diniFile[i][E_DINI_FILENAME], filename)) {
return i;
}
}
else {
if (file == INVALID_DINI_FILE) {
file = i;
}
}
}
if (file == INVALID_DINI_FILE) {
KillTimer(diniFile[Dini:0][E_DINI_TIMER]);
OnDiniFileTimeout(Dini:0);
file = Dini:0;
}
diniFile[file][E_DINI_NUM_FIELDS] = 0;
if (fexist(filename)) {
new File:h = fopen(filename, io_read);
if (!h) {
return INVALID_DINI_FILE;
}
new line[DINI_MAX_FIELD_NAME + 3 + DINI_MAX_FIELD_VALUE];
new pos;
new len;
new fieldid;
while (fread(h, line)) {
pos = strfind(line, "=");
if (pos == -1) {
continue;
}
if (diniFile[file][E_DINI_NUM_FIELDS] == DINI_MAX_FIELDS) {
break;
}
len = strlen(line);
if (len >= 2 && line[len - 2] == '\r') {
line[len - 2] = EOS;
}
else if (len >= 1 && line[len - 1] == '\n') {
line[len - 1] = EOS;
}
fieldid = diniFile[file][E_DINI_NUM_FIELDS]++;
strmid(diniFileFields[file][fieldid], line, 0, pos, DINI_MAX_FIELD_NAME);
format(diniFileValues[file][fieldid], DINI_MAX_FIELD_VALUE, line[pos + 1]);
}
fclose(h);
}
format(diniFile[file][E_DINI_FILENAME], DINI_MAX_FILE_NAME, filename);
diniFile[file][E_DINI_FILE_MODIFIED] = false;
if (timeout > 0) {
diniFile[file][E_DINI_TIMER] = SetTimerEx("OnDiniFileTimeout", timeout, false, "i", _:file);
}
return file;
}
forward OnDiniFileTimeout(Dini:file);
public OnDiniFileTimeout(Dini:file) {
if (diniFile[file][E_DINI_FILE_MODIFIED]) {
new File:h = fopen(diniFile[file][E_DINI_FILENAME], io_write);
if (h) {
new line[DINI_MAX_FIELD_NAME + 3 + DINI_MAX_FIELD_VALUE];
for (new i = 0; i < diniFile[file][E_DINI_NUM_FIELDS]; i++) {
format(line, sizeof line, "%s=%s\r\n", diniFileFields[file][i], diniFileValues[file][i]);
fwrite(h, line);
}
fclose(h);
}
}
diniFile[file][E_DINI_FILENAME][0] = EOS;
}
#define dini_Exists \
fexist
#define dini_Remove \
fremove
stock dini_Create(const filename[]) {
if (fexist(filename)) {
return 0;
}
new File:h = fopen(filename, io_write);
if (!h) {
return 0;
}
fclose(h);
return 1;
}
stock dini_Set(const filename[], const key[], const value[]) {
new Dini:file = dini_ParseFile(filename);
if (file == INVALID_DINI_FILE) {
return 0;
}
for (new i = 0; i < diniFile[file][E_DINI_NUM_FIELDS]; i++) {
if (!strcmp(diniFileFields[file][i], key)) {
format(diniFileValues[file][i], DINI_MAX_FIELD_VALUE, value);
diniFile[file][E_DINI_FILE_MODIFIED] = true;
return 1;
}
}
if (diniFile[file][E_DINI_NUM_FIELDS] == DINI_MAX_FIELDS) {
return 0;
}
new fieldid = diniFile[file][E_DINI_NUM_FIELDS]++;
format(diniFileFields[file][fieldid], DINI_MAX_FIELD_NAME, key);
format(diniFileValues[file][fieldid], DINI_MAX_FIELD_VALUE, value);
diniFile[file][E_DINI_FILE_MODIFIED] = true;
return 1;
}
stock dini_IntSet(const filename[], const key[], value) {
new dest[16];
valstr(dest, value);
return dini_Set(filename, key, dest);
}
stock dini_FloatSet(const filename[], const key[], Float:value) {
new dest[16];
format(dest, sizeof dest, "%f", value);
return dini_Set(filename, key, dest);
}
stock dini_BoolSet(const filename[], const key[], bool:value) {
new dest[2];
valstr(dest, _:value);
return dini_Set(filename, key, dest);
}
stock dini_Get(const filename[], const key[]) {
static const NULL[DINI_MAX_FIELD_VALUE] = "\0";
new Dini:file = INVALID_DINI_FILE;
for (new Dini:i = Dini:0; i < Dini:DINI_MAX_FILES; i++) {
if (diniFile[i][E_DINI_FILENAME][0] && !strcmp(diniFile[i][E_DINI_FILENAME], filename)) {
file = i;
break;
}
}
if (file == INVALID_DINI_FILE) {
if (!fexist(filename)) {
return NULL;
}
file = dini_ParseFile(filename);
if (file == INVALID_DINI_FILE) {
return NULL;
}
}
for (new i = 0; i < diniFile[file][E_DINI_NUM_FIELDS]; i++) {
if (!strcmp(diniFileFields[file][i], key)) {
return diniFileValues[file][i];
}
}
return NULL;
}
stock dini_Int(const filename[], const key[]) {
return strval(dini_Get(filename, key));
}
stock Float:dini_Float(const filename[], const key[]) {
return floatstr(dini_Get(filename, key));
}
stock bool:dini_Bool(const filename[], const key[]) {
return bool:strval(dini_Get(filename, key));
}
stock dini_Unset(const filename[], const key[]) {
new Dini:file = INVALID_DINI_FILE;
for (new Dini:i = Dini:0; i < Dini:DINI_MAX_FILES; i++) {
if (diniFile[i][E_DINI_FILENAME][0] && !strcmp(diniFile[i][E_DINI_FILENAME], filename)) {
file = i;
break;
}
}
if (file == INVALID_DINI_FILE) {
if (!fexist(filename)) {
return 0;
}
file = dini_ParseFile(filename);
if (file == INVALID_DINI_FILE) {
return 0;
}
}
for (new i = 0; i < diniFile[file][E_DINI_NUM_FIELDS]; i++) {
if (!strcmp(diniFileFields[file][i], key)) {
for (; i < (diniFile[file][E_DINI_NUM_FIELDS] - 1); i++) {
diniFileFields[file][i] = diniFileFields[file][i + 1];
diniFileValues[file][i] = diniFileValues[file][i + 1];
}
diniFile[file][E_DINI_NUM_FIELDS]--;
diniFile[file][E_DINI_FILE_MODIFIED] = true;
return 1;
}
}
return 0;
}
stock dini_Isset(const filename[], const key[]) {
new Dini:file = INVALID_DINI_FILE;
for (new Dini:i = Dini:0; i < Dini:DINI_MAX_FILES; i++) {
if (diniFile[i][E_DINI_FILENAME][0] && !strcmp(diniFile[i][E_DINI_FILENAME], filename)) {
file = i;
break;
}
}
if (file == INVALID_DINI_FILE) {
if (!fexist(filename)) {
return 0;
}
file = dini_ParseFile(filename);
if (file == INVALID_DINI_FILE) {
return 0;
}
}
for (new i = 0; i < diniFile[file][E_DINI_NUM_FIELDS]; i++) {
if (!strcmp(diniFileFields[file][i], key)) {
return 1;
}
}
return 0;
}
stock dini_Timeout(const filename[]) {
for (new Dini:i = Dini:0; i < Dini:DINI_MAX_FILES; i++) {
if (diniFile[i][E_DINI_FILENAME][0] && !strcmp(diniFile[i][E_DINI_FILENAME], filename)) {
KillTimer(diniFile[i][E_DINI_TIMER]);
OnDiniFileTimeout(i);
return 1;
}
}
return 0;
}
stock dini_NumKeys(const filename[]) {
new Dini:file = INVALID_DINI_FILE;
for (new Dini:i = Dini:0; i < Dini:DINI_MAX_FILES; i++) {
if (diniFile[i][E_DINI_FILENAME][0] && !strcmp(diniFile[i][E_DINI_FILENAME], filename)) {
file = i;
break;
}
}
if (file == INVALID_DINI_FILE) {
if (!fexist(filename)) {
return 0;
}
file = dini_ParseFile(filename);
if (file == INVALID_DINI_FILE) {
return 0;
}
}
return diniFile[file][E_DINI_NUM_FIELDS];
}
stock dini_GetKeyName(const filename[], keyid) {
static const NULL[DINI_MAX_FIELD_NAME] = "\0";
new Dini:file = INVALID_DINI_FILE;
for (new Dini:i = Dini:0; i < Dini:DINI_MAX_FILES; i++) {
if (diniFile[i][E_DINI_FILENAME][0] && !strcmp(diniFile[i][E_DINI_FILENAME], filename)) {
file = i;
break;
}
}
if (file == INVALID_DINI_FILE) {
if (!fexist(filename)) {
return NULL;
}
file = dini_ParseFile(filename);
if (file == INVALID_DINI_FILE) {
return NULL;
}
}
if (keyid < 0 || keyid >= diniFile[file][E_DINI_NUM_FIELDS]) {
return NULL;
}
return diniFileFields[file][keyid];
}
stock DINI_StripNewLine(const string[]) {
new len = strlen(string);
if (len >= 2 && string[len - 2] == '\r') {
string[len - 2] = EOS;
return 1;
}
else if (len >= 1 && string[len - 1] == '\n') {
string[len - 1] = EOS;
return 1;
}
return 0;
}
stock DINI_fcopytextfile(const filename[], const newfilename[]) {
new File:newFile = fopen(newfilename, io_write);
if (!newFile) {
return 0;
}
new Dini:file = INVALID_DINI_FILE;
for (new Dini:i = Dini:0; i < Dini:DINI_MAX_FILES; i++) {
if (diniFile[i][E_DINI_FILENAME][0] && !strcmp(diniFile[i][E_DINI_FILENAME], filename)) {
file = i;
break;
}
}
if (file != INVALID_DINI_FILE) {
new line[DINI_MAX_FIELD_NAME + 3 + DINI_MAX_FIELD_VALUE];
for (new i = 0; i < diniFile[file][E_DINI_NUM_FIELDS]; i++) {
format(line, sizeof line, "%s=%s\r\n", diniFileFields[file][i], diniFileValues[file][i]);
fwrite(newFile, line);
}
}
else {
new File:copyFile = fopen(filename, io_read);
if (!copyFile) {
return 0;
}
new line[DINI_MAX_FIELD_NAME + 3 + DINI_MAX_FIELD_VALUE];
while (fread(copyFile, line)) {
fwrite(newFile, line);
}
fclose(copyFile);
}
fclose(newFile);
return 1;
}
stock DINI_frenametextfile(const filename[], const newfilename[]) {
new File:newFile = fopen(newfilename, io_write);
if (!newFile) {
return 0;
}
new Dini:file = INVALID_DINI_FILE;
for (new Dini:i = Dini:0; i < Dini:DINI_MAX_FILES; i++) {
if (diniFile[i][E_DINI_FILENAME][0] && !strcmp(diniFile[i][E_DINI_FILENAME], filename)) {
file = i;
break;
}
}
if (file != INVALID_DINI_FILE) {
format(diniFile[file][E_DINI_FILENAME], DINI_MAX_FILE_NAME, newfilename);
}
else {
new File:copyFile = fopen(filename, io_read);
if (!copyFile) {
return 0;
}
new line[DINI_MAX_FIELD_NAME + 3 + DINI_MAX_FIELD_VALUE];
while (fread(copyFile, line)) {
fwrite(newFile, line);
}
fclose(copyFile);
}
fclose(newFile);
fremove(filename);
return 1;
}
//dini 2
stock GetPlayerID(const name[])
{
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(!IsPlayerConnected(i)) continue;
if(!strcmp(pname[i], name))
return i;
}
return INVALID_PLAYER_ID;
}
stock SortTurfs(playerid,array[], size_of = sizeof(array))
{
for(new i = (size_of - 1), j, temp; i != 0; i --)
{
for(j = 0; j < i; j ++)
{
if(PlayerInfo[playerid][ptTurfs][i] > PlayerInfo[playerid][ptTurfs][j])
{
temp = array[i];
array[i] = array[j];
array[j] = temp;
}
}
}
return 1;
}
//
/* public IsPlayerInTurf(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
new Float:X3,Float:Y3,Float:Z3;
GetPlayerPos(playerid, X3, Y3, Z3);
if((X3 <= max_x && X3 >= min_x) && (Y3 <= max_y && Y3 >= min_y)) return 1;
return 0;
}
*/
public IsPlayerInOtherMainTurf(playerid)
{
for (new t = 0; t < MAX_TURFS; t++)
{
if (IsPlayerInTurf(playerid, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]))
{
if(TurfInfo[t][TurfID]<=18)
{
if(TurfInfo[t][TurfOwner]!=PlayerInfo[playerid][pTeam])
{
return t;
}
}
}
}
return false;
}
public IsPlayerInMainTurf(playerid)
{
for (new t = 0; t < MAX_TURFS; t++)
{
if (IsPlayerInTurf(playerid, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]))
{
if(TurfInfo[t][TurfID]<=18)
{
if(TurfInfo[t][TurfOwner]==PlayerInfo[playerid][pTeam])
{
return false;
}
}
}
}
return true;
}
stock SendClanMessage(CLAN,color,string[])
{
for(new i2=0; i2<MAX_PLAYERS; i2++ && IsPlayerConnected(i2))
{
if(PlayerInfo[i2][pClan]==CLAN)
{
SendClientMessage(i2, color, string);
}
}
}
stock SendAdminMessage(adminLevel, color,string[])
{
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
if(PlayerInfo[i][pAdmin]==adminLevel || adminLevel==-1)
{
SendClientMessage(i, color, string);
}
}
}
}
stock SendFactionMessage(TEAM,color,string[])
{
for(new i2=0; i2<MAX_PLAYERS; i2++ && IsPlayerConnected(i2))
{
if(PlayerInfo[i2][pTeam]==TEAM)
{
SendClientMessage(i2, color, string);
}
}
}
stock CheckFirstCar(playerid)
{
privatecars[missionprivate[playerid][0]]=0; DestroyVehicle(missionprivate[playerid][0]);
privatecars[missionprivate[playerid][1]]=0; DestroyVehicle(missionprivate[playerid][1]);
availableStore--;
if(GetPlayerVehicleID(playerid)==missionprivate[playerid][0])
{
VehicleInfo[maximumPrivateVehsID][vVeh]=AddStaticVehicleEx(560,1249.0751,-2052.1958,59.4497,87.8631,181,181, -1); // sultan
new vehicleID=VehicleInfo[maximumPrivateVehsID][vVeh];
privatecarID[vehicleID]=560;
privatecarC1[vehicleID]=181;
privatecarC1[vehicleID]=181;
privatecarlocked[vehicleID]=1;
SetVehicleVirtualWorld(vehicleID, 0);
format(privatecarowner[vehicleID],40,"%s",pname[playerid]);//maximumvehicles
}
else if(GetPlayerVehicleID(playerid)==missionprivate[playerid][1])
{
VehicleInfo[maximumPrivateVehsID][vVeh]=AddStaticVehicleEx(541,1248.7474,-2058.3977,59.3671,89.8374,1,1, -1); // bullet
new vehicleID=VehicleInfo[maximumPrivateVehsID][vVeh];
privatecarID[vehicleID]=541;
privatecarC1[vehicleID]=1;
privatecarC1[vehicleID]=1;
privatecarlocked[vehicleID]=1;
SetVehicleVirtualWorld(vehicleID, 0);
format(privatecarowner[vehicleID],40,"%s",pname[playerid]);//maximumvehicles
}
}
stock GiveFirstCar(playerid)
{
PlayerInfo[playerid][pPrivateVehs]=1;
CheckFirstCar(playerid);
PlayerInfo[playerid][pPrivateVeh][PlayerInfo[playerid][pPrivateVehs]]=maximumPrivateVehsID;
new vehicleID=VehicleInfo[maximumPrivateVehsID][vVeh];
PutPlayerInVehicle(playerid, vehicleID, 0);
privatecars[vehicleID]=1;
privatecarlocked[vehicleID]=1;
maximumPrivateVehsID++;
}
stock InTaxi(playerid)
{
if(vehfuel[GetPlayerVehicleID(playerid)] >= 3)
{
if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 481
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 509
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 510
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
{
if(isTaxiJobVeh[GetPlayerVehicleID(playerid)] == true)
{
for(new allplayers=0;allplayers<MAX_PLAYERS;allplayers++)
{
if (IsPlayerInVehicle(allplayers,GetPlayerVehicleID(playerid)))
{
if(allplayers!=playerid)
{
if(PlayerInfo[allplayers][pCash]<50)
{
RemovePlayerFromVehicle(allplayers);
GameTextForPlayer(allplayers, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~you are kicked", 2300, 3);
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~you kicked your passenger", 2300, 3);
return 1;
}
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~YOU GET ~g~PAID", 2300, 3);
GameTextForPlayer(allplayers, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~YOU PAID ~g~$50", 2300, 3);
GivePlayerCash(allplayers,-50); GivePlayerCash(playerid,50);
}
}
}
}
}
}
return 0;
}
stock UpdateLevelRep(playerid)
{
if(PlayerInfo[playerid][pStyle2]==0)
{
statistic[playerid]=TextDrawCreate(446.000000,0.500000, "");
TextDrawAlignment(statistic[playerid],1);
TextDrawBackgroundColor(statistic[playerid],0x000000ff);
TextDrawFont(statistic[playerid],1);
TextDrawSetOutline(statistic[playerid], 1);
TextDrawLetterSize(statistic[playerid], 0.2400,1.2500);
TextDrawSetProportional(statistic[playerid],1);
}
else if(PlayerInfo[playerid][pStyle2]==1)
{
statistic[playerid]=TextDrawCreate(446.000000,0.500000, "");
TextDrawAlignment(statistic[playerid],1);
TextDrawBackgroundColor(statistic[playerid],0x000000ff);
TextDrawFont(statistic[playerid],1);
TextDrawSetOutline(statistic[playerid], 1);
TextDrawLetterSize(statistic[playerid], 0.2400,1.2500);
TextDrawSetProportional(statistic[playerid],1);
}
else if(PlayerInfo[playerid][pStyle2]==2)
{
statistic[playerid]=TextDrawCreate(446.000000,0.500000, "");
TextDrawAlignment(statistic[playerid],1);
TextDrawBackgroundColor(statistic[playerid],0x000000ff);
TextDrawFont(statistic[playerid],1);
TextDrawSetOutline(statistic[playerid], 1);
TextDrawLetterSize(statistic[playerid], 0.2400,1.2500);
TextDrawSetProportional(statistic[playerid],1);
}
else if(PlayerInfo[playerid][pStyle2]==3)
{
statistic[playerid]=TextDrawCreate(446.000000,0.500000, "");
TextDrawAlignment(statistic[playerid],1);
TextDrawBackgroundColor(statistic[playerid],0x000000ff);
TextDrawFont(statistic[playerid],1);
TextDrawSetOutline(statistic[playerid], 1);
TextDrawLetterSize(statistic[playerid], 0.2400,1.2500);
TextDrawSetProportional(statistic[playerid],1);
}
}
stock UpdateLaser(playerid)
{
//
if(objectright[playerid]==0)
{
objectright[playerid]=1;
}
RemovePlayerAttachedObject(playerid, 0);
if ((IsPlayerInAnyVehicle(playerid))||(IsPlayerInWater(playerid))) return 1;
switch (GetPlayerWeapon(playerid))
{
case 31:
{
if (IsPlayerAiming(playerid))
{
if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 standing aiming
0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
}
else
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 crouched aiming
0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
}
}
else
{
if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 standing not aiming
0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
}
else
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 crouched not aiming
0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
}
}
}
case 29:
{
if (IsPlayerAiming(playerid))
{
if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 standing aiming
0.298249, -0.02776, 0.158052, -11.631746, 359.302673, 357.584259);
}
else
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 crouched aiming
0.298249, -0.02776, 0.158052, 8.368253, 358.302673, 352.584259);
}
}
else
{
if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 standing not aiming
0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
}
else
{
SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 crouched not aiming
0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
}
}
}
}
return 0;
}
stock UpdateVehicleStatus(playerid)
{
if(speedo[playerid]==0)
{
GetVehicleHealth(GetPlayerVehicleID(playerid), vehhealth[playerid]);
format(stringvehicle[playerid],501,"                  ~w~~h~Speed: %dKm/H~n~                  ~g~~h~Health: %.0f~b~~h~~h~~n~                  ~r~~h~Fuel: %dL",GetVehicleKmh(GetPlayerVehicleID(playerid)),vehhealth[playerid],vehfuel[GetPlayerVehicleID(playerid)]);
TextDrawSetString(vehstatus[playerid], stringvehicle[playerid]);
}
if(onwork[playerid]==1 && onfootwork[playerid]==0)
{
if(vehhealth[playerid]<330)
{
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF); vehEngineStatusON[GetPlayerVehicleID(playerid)]=0;
SendClientMessage(playerid, COLOR_JOB, "Job: Ти беше уволнен, понеже нанесе щети на превозното средство!");
onwork[playerid]=0;
onfootwork[playerid]=0;
PlayerInfo[playerid][pJob]=0;
PlayerInfo[playerid][pPizzaTimer]=0;
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
RestartPlayerColor(playerid);
RemovePlayerFromVehicle(playerid);
LoadMission(playerid);
}
}
}
stock UpdateVehicleStatus2(playerid)
{
if(speedo[playerid]==0)
{
GetVehicleHealth(GetPlayerVehicleID(playerid), vehhealth[playerid]);
format(stringvehicle[playerid],501,"~n~~n~~n~~n~~w~Speed: %dKm/H Health: %.0f",GetVehicleKmh(GetPlayerVehicleID(playerid)),vehhealth[playerid]);
TextDrawSetString(vehstatus[playerid], stringvehicle[playerid]);
}
}
stock Mission5WaitForRace(playerid)
{
if(MiniGameException(playerid, MINIGAME_STREET_RACE,false)==0) return 1;
if(HisOwnVehicle(playerid, OWNVEH_YES)==0) return 1;
AddPlayerToMiniGame(playerid, MINIGAME_STREET_RACE);
fightForFinishRaceGame=1;
SendClientMessage(playerid,0xFF3737FF,"[Мисия 5] Ти вече си готов за състезанието, изчакай другите да влязат и други играчи, ако няма достатъчно.");
DisablePlayerCheckpoint(playerid);
return 0;
}//pSelectCarMission1
stock BeforeDuel(playerid)
{
GetPlayerPos(playerid,prediduelX[playerid],prediduelY[playerid],prediduelZ[playerid]);
GetPlayerHealth(playerid,prediduelhealth[playerid]);
GetPlayerArmour(playerid,prediduelarmour[playerid]);
prediduelvw[playerid]=GetPlayerVirtualWorld(playerid);
prediduelinterior[playerid]=GetPlayerInterior(playerid);
}
stock AfterDuel(playerid)
{
SetPlayerPos(playerid,prediduelX[playerid],prediduelY[playerid],prediduelZ[playerid]);
SetPlayerHealth(playerid,prediduelhealth[playerid]);
SetPlayerArmour(playerid,prediduelarmour[playerid]);
SetPlayerInterior(playerid,prediduelinterior[playerid]);
SetPlayerVirtualWorld(playerid,prediduelvw[playerid]);
}
/*stock ActivateBalloon(balloonid,Float:posX, Float:posY, Float:posZ)
{
MoveDynamicObject(balloonid,  posX, posY, posZ, 2.0);
}*/
stock TeleportTo(playerid,TEAM,Float:pos1x,Float:pos1y,Float:pos1z,Float:pos2x,Float:pos2y,Float:pos2z,virtualworld,interior,bvw,bint)
{
if(IsPlayerInRangeOfPoint(playerid,2,pos1x,pos1y,pos1z))
{
if(PlayerInfo[playerid][pTeam]==TEAM)
{
if(GetPlayerVirtualWorld(playerid)==bvw && GetPlayerInterior(playerid)==bint)
{
SetPlayerPos(playerid,pos2x,pos2y,pos2z);
SetPlayerVirtualWorld(playerid,virtualworld);
SetPlayerInterior(playerid,interior);
}
}
else
{
if(IsPlayerInRangeOfPoint(playerid,3,pos1x,pos1y,pos1z))
{
if(GetPlayerVirtualWorld(playerid)==bvw && GetPlayerInterior(playerid)==bint)
{
new formatformat[256];
format(formatformat,256,"Не можеш да използваш телепорта на %s!",TeamInfo[TEAM][tName]);
SendClientMessage(playerid,COLOR_GRAD1,formatformat);
}
}
}
}
}
stock MyVehRespawnLink(playerid,vehicleid)
{
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
SetVehiclePos(vehicleid,X[playerid],Y[playerid],Z[playerid]);
LinkVehicleToInterior(vehicleid,GetPlayerInterior(playerid));
SetVehicleVirtualWorld(vehicleid,GetPlayerVirtualWorld(playerid));
PutPlayerInVehicle(playerid, vehicleid, 0);
}
stock AddRealObjectNoRemove(playerid)
{
new vehicleid=GetPlayerVehicleID(playerid);
new countObjects=vehobjectsloaded[vehicleid];
new objectid=vObject[vehicleid][countObjects];
privatecarobject[vehicleid][countObjects] = CreateDynamicObject(objectid,0.0,0.0,0.0, 0.0, 0.0, 0.0,GetPlayerVirtualWorld(playerid));
AttachDynamicObjectToVehicle(privatecarobject[vehicleid][countObjects], vehicleid, vObjectX[vehicleid][countObjects], vObjectY[vehicleid][countObjects],
vObjectofz[vehicleid][countObjects], vObjectfRotX[vehicleid][countObjects], vObjectfRotY[vehicleid][countObjects], vObjectfRotofaz[vehicleid][countObjects]);
vehobjects[vehicleid]++;
vehobjectsloaded[vehicleid]++;
DestroyDynamicObject(privVehObjectBeforeAccept[playerid]);
MyVehRespawnLink(playerid,vehicleid);
return 0;
}
stock AddFirstObject(playerid)
{
return 0;
}
stock AddPrivateObject(playerid, objectid)
{
if(privatecars[GetPlayerVehicleID(playerid)]==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в лично превозно средство!");
return 1;
}
if(strcmp(privatecarowner[GetPlayerVehicleID(playerid)], pname[playerid], true)==0)
{
new vehicleid=GetPlayerVehicleID(playerid);
new Float: px, Float: py, Float:pz;
GetVehiclePos(vehicleid,px,py,pz);
privVehObjectBeforeAccept[playerid] = CreateDynamicObject(objectid,px, py, pz, 0.0, 0.0, 0.0,GetPlayerVirtualWorld(playerid));
vObject[vehicleid][vehobjectsloaded[vehicleid]] = objectid;
SendClientMessage(playerid,0x00ff00ff,"Вие добавихте обект към вашето лично превозно средство.");
EditDynamicObject(playerid, privVehObjectBeforeAccept[playerid]);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в личното си превозно средство!");
}
return 0;
}
stock LoadMission(playerid)
{
if(firstspawn[playerid]==1 && PlayerInfo[playerid][pMission]==0 || missionrepeat[playerid]==1 && PlayerInfo[playerid][pMission]==0)
{
PlayerInfo[playerid][pShowMission]=7;
SetPlayerCheckpoint(playerid, 1265.9982,-2055.6228,59.2726, 3.0);
SendClientMessage(playerid,0xFF3737FF,"[Мисия 1] Отидете до вашата база и си поръчайте първата ви лична кола.");
}
if(PlayerInfo[playerid][pMission]==1)
{
PlayerInfo[playerid][pShowMission]=7;
SetPlayerCheckpoint(playerid, 1082.5488,-2038.1836,69.0078, 3.0);
SendClientMessage(playerid,0xFF3737FF,"[Мисия 2] Отидете до VIP Gang и се срещнете с вашия приятел.");
}
if(PlayerInfo[playerid][pMission]==2)
{
if(PlayerInfo[playerid][pMPMission]==0)
{
SendClientMessage(playerid, 0x80BFFFFF, "[Телефон] Имате обаждане от Алекс.");
PlayerInfo[playerid][pMissionMessage]=5;
missionchat[playerid][1][0]=1;
PlayerInfo[playerid][pShowMission]=7;
ShowPlayerPhone(playerid);
enteredInMissionCP[playerid]=0;
PhoneShow[playerid] = true;
PhoneLocked[playerid] = 1;
PlayerInfo[playerid][pMPMission]=1;
}
else if(PlayerInfo[playerid][pMPMission]==1)
{
PlayerInfo[playerid][pShowMission]=7;
enteredInMissionCP[playerid]=0;
SetPlayerCheckpoint(playerid, 2194.2742,1986.2155,12.2969, 3.0);
SendClientMessage(playerid,0xFF3737FF,"[Мисия 3] Отидете до Las Venturas за да направите кражба.");
}
}
if(PlayerInfo[playerid][pMission]==4)
{
if(PlayerInfo[playerid][pMPMission]==0)
{
SendClientMessage(playerid, 0x80BFFFFF, "[Телефон] Имате обаждане от Андрей.");
PlayerInfo[playerid][pMissionMessage]=5;
missionchat[playerid][3][0]=1;
PlayerInfo[playerid][pShowMission]=7;
ShowPlayerPhone(playerid);
enteredInMissionCP[playerid]=0;
PhoneShow[playerid] = true;
PhoneLocked[playerid] = 1;
PlayerInfo[playerid][pMPMission]=1;
}
else if(PlayerInfo[playerid][pMPMission]==1)
{
PlayerInfo[playerid][pShowMission]=7;
enteredInMissionCP[playerid]=0;
SetPlayerCheckpoint(playerid, 2404.8286,-1730.0004,13.1282, 3.0);
SendClientMessage(playerid,0xFF3737FF,"[Мисия 5] Отидете до Grove Street Families и започнете състезание.");
}
}
if(PlayerInfo[playerid][pMission]==5)
{
if(PlayerInfo[playerid][pMPMission]==0)
{
SendClientMessage(playerid, 0x80BFFFFF, "[Телефон] Имате обаждане от Андрей.");
PlayerInfo[playerid][pMissionMessage]=5;
missionchat[playerid][4][0]=1;
PlayerInfo[playerid][pShowMission]=7;
ShowPlayerPhone(playerid);
enteredInMissionCP[playerid]=0;
PhoneShow[playerid] = true;
PhoneLocked[playerid] = 1;
PlayerInfo[playerid][pMPMission]=1;
}
else if(PlayerInfo[playerid][pMPMission]==1)
{
PlayerInfo[playerid][pShowMission]=7;
enteredInMissionCP[playerid]=0;
SetPlayerCheckpoint(playerid, 595.8715,-1251.4767,18.3255, 3.0);
SendClientMessage(playerid,0xFF3737FF,"[Мисия 6] Отидете до магазина за дрехи.");
}
}
if(PlayerInfo[playerid][pMission]==6)
{
PlayerInfo[playerid][pShowMission]=7;
enteredInMissionCP[playerid]=0;
SetPlayerCheckpoint(playerid, 719.1277,-1168.7881,16.2191, 3.0);
SendClientMessage(playerid,0xFF3737FF,"[Мисия 7] Имате среща с Алекс в Los Santos.");
}
if(PlayerInfo[playerid][pMission]==7)
{
if(PlayerInfo[playerid][pMPMission]==0)
{
SendClientMessage(playerid, 0x80BFFFFF, "[Телефон] Имате обаждане от Андрей.");
PlayerInfo[playerid][pMissionMessage]=5;
missionchat[playerid][6][0]=1;
PlayerInfo[playerid][pShowMission]=7;
ShowPlayerPhone(playerid);
enteredInMissionCP[playerid]=0;
PhoneShow[playerid] = true;
PhoneLocked[playerid] = 1;
PlayerInfo[playerid][pMPMission]=1;
}
else if(PlayerInfo[playerid][pMPMission]==1)
{
PlayerInfo[playerid][pShowMission]=7;
enteredInMissionCP[playerid]=0;
SetPlayerCheckpoint(playerid, 2416.8391,-670.5904,127.1158, 3.0);
SendClientMessage(playerid,0xFF3737FF,"[Мисия 8] Отидете до планината.");
}
}
if(PlayerInfo[playerid][pMission]==3)
{
if(PlayerInfo[playerid][pMPMission]==0)
{
SendClientMessage(playerid, 0x80BFFFFF, "[Телефон] Имате обаждане от Алекс.");
PlayerInfo[playerid][pMissionMessage]=5;
missionchat[playerid][2][0]=1;
PlayerInfo[playerid][pShowMission]=7;
ShowPlayerPhone(playerid);
enteredInMissionCP[playerid]=0;
PhoneShow[playerid] = true;
PhoneLocked[playerid] = 1;
PlayerInfo[playerid][pMPMission]=1;
}
else if(PlayerInfo[playerid][pMPMission]==1)
{
PlayerInfo[playerid][pShowMission]=7;
enteredInMissionCP[playerid]=0;
SetPlayerCheckpoint(playerid, 2081.0134,-1804.7849,13.3828, 3.0);
SendClientMessage(playerid,0xFF3737FF,"[Мисия 4] Отидете до Pizza Job за да започнете работа като разносвач на пица.");
}
}
}
stock LoadGarage(garageid)
{
GarageInfo[garageid][gLoaded]=1;
maxcreatedgarages++;
GarageInfo[garageid][gX]=dini_Float(stringloadgarage, "gX");
GarageInfo[garageid][gY]=dini_Float(stringloadgarage, "gY");
GarageInfo[garageid][gZ]=dini_Float(stringloadgarage, "gZ");
GarageInfo[garageid][gInterior]=dini_Int(stringloadgarage, "gInterior");
GarageInfo[garageid][gVirtualWorld]=dini_Int(stringloadgarage, "gVirtualWorld");
GarageInfo[garageid][gGarage]=dini_Int(stringloadgarage, "gGarage");
format(GarageInfo[garageid][gOwner],256,"%s",dini_Get(stringloadgarage,"gOwner"));
format(GarageInfo[garageid][gName],256,"%s",dini_Get(stringloadgarage,"gName"));
garagepickup[garageid]=CreateDynamicMapIcon(GarageInfo[garageid][gX],GarageInfo[garageid][gY],GarageInfo[garageid][gZ], 55, -1, -1, -1, -1, 300);
garagepickup[garageid]=CreateDynamicPickup(1318, 1,GarageInfo[garageid][gX],GarageInfo[garageid][gY],GarageInfo[garageid][gZ],GarageInfo[garageid][gVirtualWorld],GarageInfo[garageid][gInterior]);
specialpickup[garagepickup[garageid]][PICKUPGARAGE]=garageid;
return 0;
}
stock SavePrivateVehicle(realvehicleid)
{
dini_IntSet(stringloadvehs, "VehicleID",privatecarID[realvehicleid]);
dini_IntSet(stringloadvehs, "VehicleOwn",privatecarown[realvehicleid]);
dini_Set(stringloadvehs, "VehicleOwner",privatecarowner[realvehicleid]);
dini_FloatSet(stringloadvehs, "VehicleX",privatecarX[realvehicleid]);
dini_FloatSet(stringloadvehs, "VehicleY",privatecarY[realvehicleid]);
dini_FloatSet(stringloadvehs, "VehicleZ",privatecarZ[realvehicleid]);
dini_FloatSet(stringloadvehs, "VehicleA",privatecarA[realvehicleid]);
dini_IntSet(stringloadvehs, "VehicleC1",privatecarC1[realvehicleid]);
dini_IntSet(stringloadvehs, "VehicleC2",privatecarC2[realvehicleid]);
dini_IntSet(stringloadvehs, "ForSell",privatecarForSell[realvehicleid]);
dini_IntSet(stringloadvehs, "vClan",vClan[realvehicleid]);
dini_IntSet(stringloadvehs, "vLockedClan",vLockedClan[realvehicleid]);
dini_IntSet(stringloadvehs, "vObjects",vehobjects[realvehicleid]);
dini_IntSet(stringloadvehs, "IsParked",privatecarsparked[realvehicleid]);
new vehiclestringset[256];
for(new i=0;i<=vehobjects[realvehicleid];i++)
{
format(vehiclestringset,256,"vObjectID[%d]",i);
dini_IntSet(stringloadvehs, vehiclestringset,vObject[realvehicleid][i]);
format(vehiclestringset,256,"VehicleXO[%d]",i);
dini_FloatSet(stringloadvehs, vehiclestringset,vObjectX[realvehicleid][i]);
format(vehiclestringset,256,"VehicleYO[%d]",i);
dini_FloatSet(stringloadvehs, vehiclestringset,vObjectY[realvehicleid][i]);
format(vehiclestringset,256,"VehicleOfZ[%d]",i);
dini_FloatSet(stringloadvehs, vehiclestringset,vObjectofz[realvehicleid][i]);
format(vehiclestringset,256,"VehicleRX[%d]",i);
dini_FloatSet(stringloadvehs, vehiclestringset,vObjectfRotX[realvehicleid][i]);
format(vehiclestringset,256,"VehicleRY[%d]",i);
dini_FloatSet(stringloadvehs, vehiclestringset,vObjectfRotY[realvehicleid][i]);
format(vehiclestringset,256,"VehicleOfAz[%d]",i);
dini_FloatSet(stringloadvehs, vehiclestringset,vObjectfRotofaz[realvehicleid][i]);
}
dini_IntSet(stringloadvehs, "VehicleRES",privatecarRES[realvehicleid]);
dini_IntSet(stringloadvehs, "VehicleLocked",privatecarlocked[realvehicleid]);
return 0;
}
stock LoadPrivateVehicle(vehicleid)
{
new vehicle = vehicleid;
new countobjets;
privatecars[vehicle]=1;
privatecarID[vehicle]=dini_Int(stringloadvehs,"VehicleID");
privatecarsparked[vehicle]=dini_Int(stringloadvehs,"IsParked");
privatecarown[vehicle]=dini_Int(stringloadvehs,"VehicleOwn");
privatecarX[vehicle]=dini_Float(stringloadvehs,"VehicleX");
privatecarY[vehicle]=dini_Float(stringloadvehs,"VehicleY");
privatecarZ[vehicle]=dini_Float(stringloadvehs,"VehicleZ");
privatecarA[vehicle]=dini_Float(stringloadvehs,"VehicleA");
if(privatecarX[vehicle]==0.0 && privatecarY[vehicle]==0.0 && privatecarZ[vehicle]==0.0)
{
SetVehicleVirtualWorld(vehicle,50);
}
privatecarC1[vehicle]=dini_Int(stringloadvehs,"VehicleC1");
privatecarC2[vehicle]=dini_Int(stringloadvehs,"VehicleC2");
privatecarForSell[vehicle]=dini_Int(stringloadvehs,"ForSell");
vClan[vehicle]=dini_Int(stringloadvehs,"vClan");
vLockedClan[vehicle]=dini_Int(stringloadvehs,"vLockedClan");
vehobjects[vehicle]=dini_Int(stringloadvehs,"vObjects");
countobjets=dini_Int(stringloadvehs,"vObjects");
format(privatecarowner[vehicle],40,"%s",dini_Get(stringloadvehs,"VehicleOwner"));
new vehiclestringset[256];
if(countobjets>-1) //add objects open
{
for(new i=0;i<=countobjets;i++)
{
format(vehiclestringset,256,"vObjectID[%d]",i);
vObject[vehicle][i]=dini_Int(stringloadvehs,vehiclestringset);
format(vehiclestringset,256,"VehicleXO[%d]",i);
vObjectX[vehicle][i]=dini_Float(stringloadvehs,vehiclestringset);
format(vehiclestringset,256,"VehicleYO[%d]",i);
vObjectY[vehicle][i]=dini_Float(stringloadvehs,vehiclestringset);
format(vehiclestringset,256,"VehicleOfZ[%d]",i);
vObjectofz[vehicle][i]=dini_Float(stringloadvehs,vehiclestringset);
format(vehiclestringset,256,"VehicleRX[%d]",i);
vObjectfRotX[vehicle][i]=dini_Float(stringloadvehs,vehiclestringset);
format(vehiclestringset,256,"VehicleRY[%d]",i);
vObjectfRotY[vehicle][i]=dini_Float(stringloadvehs,vehiclestringset);
format(vehiclestringset,256,"VehicleOfAz[%d]",i);
vObjectfRotofaz[vehicle][i]=dini_Float(stringloadvehs,vehiclestringset);
}
}
if(countobjets>-1)
{
vehobjectsloaded[vehicle]=countobjets;
} ///add objects close
new addedVehicle;
addedVehicle=AddStaticVehicleEx(privatecarID[vehicle],privatecarX[vehicle],privatecarY[vehicle],privatecarZ[vehicle],privatecarA[vehicle],privatecarC1[vehicle],privatecarC2[vehicle], -1);
VehicleInfo[vehicle][vVeh]=addedVehicle;
privatecarRES[vehicle]=dini_Int(stringloadvehs,"VehicleRES");
privatecarlocked[vehicle]=dini_Int(stringloadvehs,"VehicleLocked");
minimumvehicles++;
if(privatecarsparked[vehicle]==0)
{
}
return 0;
}
stock LoadTeam(teamid)
{
format(TeamInfo[teamid][tRank1],256, "%s", dini_Get(stringloadteams, "tRank1"));
format(TeamInfo[teamid][tRank2],256, "%s", dini_Get(stringloadteams, "tRank2"));
format(TeamInfo[teamid][tRank3],256, "%s", dini_Get(stringloadteams, "tRank3"));
format(TeamInfo[teamid][tRank4],256, "%s", dini_Get(stringloadteams, "tRank4"));
format(TeamInfo[teamid][tRank5],256, "%s", dini_Get(stringloadteams, "tRank5"));
format(TeamInfo[teamid][tRank6],256, "%s", dini_Get(stringloadteams, "tRank6"));
TeamInfo[teamid][tTurfs]=dini_Int(stringloadteams, "tTurfs");
TeamInfo[teamid][tTime]=dini_Int(stringloadteams, "tTime");
TeamInfo[teamid][tLevel]=dini_Int(stringloadteams, "tLevel");
TeamInfo[teamid][tKills]=dini_Int(stringloadteams, "tKills");
TeamInfo[teamid][tCash]=dini_Int(stringloadteams, "tCash");
}
stock FormatNumber(iNum, const szChar[] = ",")
{
new
szStr[16]
;
format(szStr, sizeof(szStr), "%d", iNum);
for(new iLen = strlen(szStr) - 3; iLen > 0; iLen -= 3)
{
strins(szStr, szChar, iLen);
}
return szStr;
}
stock SaveServer()
{
if(maximumPrivateVehsID>0)
{
new iForUse=0;
for(new iRealVehID=0; iRealVehID<MAX_VEHICLES; iRealVehID++)
{
format(stringloadvehs, 180, "/Vehicles/%d.ini", iForUse);
if(!dini_Exists(stringloadvehs))
{
if(privatecars[iRealVehID]==1)
{
dini_Create(stringloadvehs);
iForUse++;
SavePrivateVehicle(iRealVehID);
}
}
else if(dini_Exists(stringloadvehs))
{
if(privatecars[iRealVehID]==1)
{
iForUse++;
SavePrivateVehicle(iRealVehID);
}
}
}
}
for(new i=1; i<maxclans;i++)
{
format(stringloadclan, 180, "/Clans/%d.ini", i);
if(dini_Exists(stringloadclan))
{
SaveClan(i);
}
}
for(new i=1; i<MAX_TEAMS;i++)
{
format(stringloadteams, 180, "/Teams/%d.ini", i);
SaveTeam(i);
}
for(new i=0; i<MAX_PLAYERS;i++)
{
if(IsPlayerConnected(i))
{
if(PlayerInfo[i][pRegistred]==1)
{
SaveAccount(i);
}
}
}
for(new i=1; i<maxbizz;i++)
{
format(stringloadbizz, 180, "/Bizz/%d.ini", i);
if(dini_Exists(stringloadbizz))
{
SaveBizz(i);
}
}
for(new i=1; i<maxhouses;i++)
{
format(formathouseid, 180, "/Houses/%d.ini", i);
if(dini_Exists(formathouseid))
{
SaveHouse(i);
}
}
for(new i=1; i<maxcompanies;i++)
{
format(stringloadcompany, 180, "/Companies/%d.ini", i);
if(dini_Exists(stringloadcompany))
{
SaveCompany(i);
}
}
for(new i=1; i<maxapartments;i++)
{
format(stringloadapartment, 180, "/Apartments/%d.ini", i);
if(dini_Exists(stringloadapartment))
{
SaveApartmenets(i);
}
}
for(new i=0; i<MAX_TURFS;i++)
{
format(stringloadturfs, 180, "/Turfs/%d.ini", i);
if(dini_Exists(stringloadturfs))
{
SaveTurf(i);
}
}
}
stock SaveCompany(companyid)
{
dini_FloatSet(stringloadcompany, "coX",CompanyInfo[companyid][coX]);
dini_FloatSet(stringloadcompany, "coY",CompanyInfo[companyid][coY]);
dini_FloatSet(stringloadcompany, "coZ",CompanyInfo[companyid][coZ]);
dini_IntSet(stringloadcompany, "coPrice",CompanyInfo[companyid][coPrice]);
dini_Set(stringloadcompany, "coName",CompanyInfo[companyid][coName]);
dini_Set(stringloadcompany, "coOwner",CompanyInfo[companyid][coOwner]);
}
stock LoadCompany(companyid)
{
CompanyInfo[companyid][coLoaded]=1;
maxcreatedcompanies++;
CompanyInfo[companyid][coX]=dini_Float(stringloadcompany, "coX");
CompanyInfo[companyid][coY]=dini_Float(stringloadcompany, "coY");
CompanyInfo[companyid][coZ]=dini_Float(stringloadcompany, "coZ");
CompanyInfo[companyid][coPrice]=dini_Int(stringloadcompany, "coPrice");
format(CompanyInfo[companyid][coName],256,"%s",dini_Get(stringloadcompany,"coName"));
format(CompanyInfo[companyid][coOwner],256,"%s",dini_Get(stringloadcompany,"coOwner"));
CreateDynamicMapIcon(CompanyInfo[companyid][coX],CompanyInfo[companyid][coY],CompanyInfo[companyid][coZ], 43, -1, -1, -1, -1, 300);
companypickup[companyid]=CreateDynamicPickup(19522, 1,CompanyInfo[companyid][coX],CompanyInfo[companyid][coY],CompanyInfo[companyid][coZ] ,0);
specialpickup[companypickup[companyid]][PICKUPCOMPANY]=companyid;
CreateDynamic3DTextLabel("{ff0000}[{00ff00}Компания{ff0000}]{00ff00}\nНа екрана на втория ред пише колко акции притежавате\nНа третия ред пише цена за акция\n\n{33aa33}Ако искате да купите акции, използвайте /buyshares\nАко искате да продадете акции, използвайте /sellsahres", 0xFFFFFFFF,CompanyInfo[companyid][coX],CompanyInfo[companyid][coY],CompanyInfo[companyid][coZ],15);
}
stock SaveApartmenets(apartmentid)
{
dini_FloatSet(stringloadapartment, "aX",ApartmentInfo[apartmentid][aX]);
dini_FloatSet(stringloadapartment, "aY",ApartmentInfo[apartmentid][aY]);
dini_FloatSet(stringloadapartment, "aZ",ApartmentInfo[apartmentid][aZ]);
dini_IntSet(stringloadapartment, "aFloors",ApartmentInfo[apartmentid][aFloors]);
dini_IntSet(stringloadapartment, "aVirtualWorld",ApartmentInfo[apartmentid][aVirtualWorld]);
dini_Set(stringloadapartment, "aName",ApartmentInfo[apartmentid][aName]);
}
stock LoadApartments(apartmentid)
{
ApartmentInfo[apartmentid][aLoaded]=1;
maxcreatedapartments++;
ApartmentInfo[apartmentid][aX]=dini_Float(stringloadapartment, "aX");
ApartmentInfo[apartmentid][aY]=dini_Float(stringloadapartment, "aY");
ApartmentInfo[apartmentid][aZ]=dini_Float(stringloadapartment, "aZ");
ApartmentInfo[apartmentid][aFloors]=dini_Int(stringloadapartment, "aFloors");
ApartmentInfo[apartmentid][aVirtualWorld]=dini_Int(stringloadapartment, "aVirtualWorld");
format(ApartmentInfo[apartmentid][aName],256,"%s",dini_Get(stringloadapartment,"aName"));
CreateDynamicMapIcon(ApartmentInfo[apartmentid][aX],ApartmentInfo[apartmentid][aY],ApartmentInfo[apartmentid][aZ], 44, -1, -1, -1, -1, 300);
apartmentpickup[apartmentid]=CreateDynamicPickup(1318, 1,ApartmentInfo[apartmentid][aX],ApartmentInfo[apartmentid][aY],ApartmentInfo[apartmentid][aZ] ,0);
specialpickup[apartmentpickup[apartmentid]][PICKUPAPARTMENTS]=apartmentid;
}
stock LoadTurf(turfid)
{
TurfInfo[turfid][TurfOwner]=dini_Int(stringloadturfs, "TurfOwner");
}
stock SaveTurf(turfid)
{
dini_IntSet(stringloadturfs, "TurfOwner", TurfInfo[turfid][TurfOwner]);
}
stock SaveTeam(teamid)
{
dini_IntSet(stringloadteams,"tTime",TeamInfo[teamid][tTime]);
dini_IntSet(stringloadteams,"tLevel",TeamInfo[teamid][tLevel]);
dini_IntSet(stringloadteams,"tKills",TeamInfo[teamid][tKills]);
dini_IntSet(stringloadteams,"tCash",TeamInfo[teamid][tCash]);
dini_IntSet(stringloadteams,"tTurfs",TeamInfo[teamid][tTurfs]);
dini_IntSet(stringloadteams,"tKills",TeamInfo[teamid][tKills]);
dini_Set(stringloadteams,"tRank1",TeamInfo[teamid][tRank1]);
dini_Set(stringloadteams,"tRank2",TeamInfo[teamid][tRank2]);
dini_Set(stringloadteams,"tRank3",TeamInfo[teamid][tRank3]);
dini_Set(stringloadteams,"tRank4",TeamInfo[teamid][tRank4]);
dini_Set(stringloadteams,"tRank5",TeamInfo[teamid][tRank5]);
dini_Set(stringloadteams,"tRank6",TeamInfo[teamid][tRank6]);
}
stock SaveAccount(playerid)
{
dini_IntSet(accountfiles[playerid], "pRegistred", PlayerInfo[playerid][pRegistred]);
dini_IntSet(accountfiles[playerid], "pAdmin", PlayerInfo[playerid][pAdmin]);
dini_IntSet(accountfiles[playerid], "pCash",PlayerInfo[playerid][pCash]);
dini_IntSet(accountfiles[playerid], "pRealCash",PlayerInfo[playerid][pRealCash]);
new achievementsstr[256];
new company[256];
for(new i2=0; i2<MAX_COMPANIES; i2++)
{
format(company,256,"pCompany[%d]",i2);
dini_IntSet(accountfiles[playerid], company, PlayerInfo[playerid][pCompany][i2]);
}
for(new i2=0; i2<50; i2++)
{
format(achievementsstr,256,"pAchievement[%d]",i2);
dini_IntSet(accountfiles[playerid], achievementsstr, PlayerInfo[playerid][pAchievement][i2]);
}
for(new i2=0; i2<35; i2++)
{
format(achievementsstr,256,"pClothes[%d]",i2);
dini_IntSet(accountfiles[playerid], achievementsstr, PlayerInfo[playerid][pClothes][i2]);
}
for(new i2=1; i2<16; i2++)
{
format(achievementsstr,256,"pPrivateVeh[%d]",i2);
dini_IntSet(accountfiles[playerid], achievementsstr, PlayerInfo[playerid][pPrivateVeh][i2]);
}
for(new i2=1; i2<11; i2++)
{
format(achievementsstr,256,"pFishSlot[%d]",i2);
dini_IntSet(accountfiles[playerid], achievementsstr, PlayerInfo[playerid][pPrivateVeh][i2]);
format(achievementsstr,256,"pFishWeight[%d]",i2);
dini_IntSet(accountfiles[playerid], achievementsstr, PlayerInfo[playerid][pFishWeight][i2]);
}
dini_IntSet(accountfiles[playerid], "pADMINMute", PlayerInfo[playerid][pADMINMute]);
dini_IntSet(accountfiles[playerid], "pBizEP", PlayerInfo[playerid][pBizEP]);
dini_IntSet(accountfiles[playerid], "pReadTA", PlayerInfo[playerid][pReadTA]);
dini_IntSet(accountfiles[playerid], "pBriefcase", PlayerInfo[playerid][pBriefcase]);
dini_IntSet(accountfiles[playerid], "pChantichki", PlayerInfo[playerid][pChantichki]);
dini_IntSet(accountfiles[playerid], "pMPMission", PlayerInfo[playerid][pMPMission]);
dini_IntSet(accountfiles[playerid], "pMission", PlayerInfo[playerid][pMission]);
dini_IntSet(accountfiles[playerid], "pClan", PlayerInfo[playerid][pClan]);
dini_IntSet(accountfiles[playerid], "pClanRank", PlayerInfo[playerid][pClanRank]);
dini_IntSet(accountfiles[playerid], "pFuelcase", PlayerInfo[playerid][pFuelcase]);
dini_IntSet(accountfiles[playerid], "pChervei", PlayerInfo[playerid][pChervei]);
dini_IntSet(accountfiles[playerid], "pRadio", PlayerInfo[playerid][pRadio]);
dini_IntSet(accountfiles[playerid], "pDice", PlayerInfo[playerid][pDice]);
dini_IntSet(accountfiles[playerid], "pCigarettes", PlayerInfo[playerid][pCigarettes]);
dini_IntSet(accountfiles[playerid], "pBizCash", PlayerInfo[playerid][pBizCash]);
dini_IntSet(accountfiles[playerid], "pCreditMoney", PlayerInfo[playerid][pCreditMoney]);
dini_IntSet(accountfiles[playerid], "pCreditTime", PlayerInfo[playerid][pCreditTime]);
dini_IntSet(accountfiles[playerid], "pARefuel", PlayerInfo[playerid][pARefuel]);
dini_IntSet(accountfiles[playerid], "pWarns", PlayerInfo[playerid][pWarns]);
dini_IntSet(accountfiles[playerid], "pTimeJail", PlayerInfo[playerid][pTimeJail]);
dini_IntSet(accountfiles[playerid], "pTimeMute", PlayerInfo[playerid][pTimeMute]);
dini_IntSet(accountfiles[playerid], "pTGoto", PlayerInfo[playerid][pTGoto]);
dini_IntSet(accountfiles[playerid], "pTSpec", PlayerInfo[playerid][pTSpec]);
dini_Set(accountfiles[playerid], "pSkype", PlayerInfo[playerid][pSkype]);
dini_IntSet(accountfiles[playerid], "pPJail", PlayerInfo[playerid][pPJail]);
dini_IntSet(accountfiles[playerid], "pBlock", PlayerInfo[playerid][pBlock]);
dini_IntSet(accountfiles[playerid], "pFixT", PlayerInfo[playerid][pFixT]);
dini_IntSet(accountfiles[playerid], "pHealT", PlayerInfo[playerid][pHealT]);
dini_IntSet(accountfiles[playerid], "pVGuns", PlayerInfo[playerid][pVGuns]);
dini_IntSet(accountfiles[playerid], "pPizzaTimer1", PlayerInfo[playerid][pPizzaTimer1]);
dini_IntSet(accountfiles[playerid], "pBoatTimer1", PlayerInfo[playerid][pBoatTimer1]);
dini_IntSet(accountfiles[playerid], "pBurgerShotTimer1", PlayerInfo[playerid][pBurgerShotTimer1]);
dini_IntSet(accountfiles[playerid], "pCoalmineTimer1", PlayerInfo[playerid][pCoalmineTimer1]);
dini_IntSet(accountfiles[playerid], "pSweeperTimer1", PlayerInfo[playerid][pSweeperTimer1]);
dini_IntSet(accountfiles[playerid], "pPilotTimer1", PlayerInfo[playerid][pPilotTimer1]);
dini_IntSet(accountfiles[playerid], "pDeliverTimer1", PlayerInfo[playerid][pDeliverTimer1]);
dini_IntSet(accountfiles[playerid], "pBusTimer1", PlayerInfo[playerid][pBusTimer1]);
dini_IntSet(accountfiles[playerid], "pOffice", PlayerInfo[playerid][pOffice]);
dini_IntSet(accountfiles[playerid], "pValcher", PlayerInfo[playerid][pValcher]);
dini_IntSet(accountfiles[playerid], "pStyle2", PlayerInfo[playerid][pStyle2]);
dini_IntSet(accountfiles[playerid], "pChanta", PlayerInfo[playerid][pChanta]);
dini_IntSet(accountfiles[playerid], "pAWarns", PlayerInfo[playerid][pAWarns]);
dini_IntSet(accountfiles[playerid], "pRNMute", PlayerInfo[playerid][pRNMute]);
dini_IntSet(accountfiles[playerid], "pAdvertT", PlayerInfo[playerid][pAdvertT]);
dini_IntSet(accountfiles[playerid], "pGLeader", PlayerInfo[playerid][pGLeader]);
dini_IntSet(accountfiles[playerid], "pHelikopter", PlayerInfo[playerid][pHelikopter]);
dini_IntSet(accountfiles[playerid], "pSamolet", PlayerInfo[playerid][pSamolet]);
dini_IntSet(accountfiles[playerid], "pManage", PlayerInfo[playerid][pManage]);
dini_IntSet(accountfiles[playerid], "pEvent", PlayerInfo[playerid][pEvent]);
dini_IntSet(accountfiles[playerid], "pIFC", PlayerInfo[playerid][pIFC]);
dini_IntSet(accountfiles[playerid], "pSpecialForce", PlayerInfo[playerid][pSpecialForce]);
dini_IntSet(accountfiles[playerid], "pVlak", PlayerInfo[playerid][pVlak]);
dini_IntSet(accountfiles[playerid], "pLodka", PlayerInfo[playerid][pLodka]);
dini_IntSet(accountfiles[playerid], "pDMONKills", PlayerInfo[playerid][pDMONKills]);
dini_IntSet(accountfiles[playerid], "pHook", PlayerInfo[playerid][pHook]);
dini_IntSet(accountfiles[playerid], "pStyle", PlayerInfo[playerid][pStyle]);
dini_IntSet(accountfiles[playerid], "pArmour2", PlayerInfo[playerid][pArmour2]);
dini_IntSet(accountfiles[playerid], "pFirstWays", PlayerInfo[playerid][pFirstWays]);
dini_IntSet(accountfiles[playerid], "pFirstWays2", PlayerInfo[playerid][pFirstWays2]);
dini_IntSet(accountfiles[playerid], "pFirstWays3", PlayerInfo[playerid][pFirstWays3]);
dini_IntSet(accountfiles[playerid], "pFirstWays4", PlayerInfo[playerid][pFirstWays4]);
dini_IntSet(accountfiles[playerid], "pFirstWays5", PlayerInfo[playerid][pFirstWays5]);
dini_IntSet(accountfiles[playerid], "pFirstWays6", PlayerInfo[playerid][pFirstWays6]);
dini_IntSet(accountfiles[playerid], "pCrashedFromGTA", PlayerInfo[playerid][pCrashedFromGTA]);
dini_IntSet(accountfiles[playerid], "pObjectAdmin", PlayerInfo[playerid][pObjectAdmin]);
dini_IntSet(accountfiles[playerid], "pGender", PlayerInfo[playerid][pGender]);
dini_IntSet(accountfiles[playerid], "pJailType", PlayerInfo[playerid][pJailType]);
dini_IntSet(accountfiles[playerid], "pPhone", PlayerInfo[playerid][pPhone]);
dini_IntSet(accountfiles[playerid], "pValcher", PlayerInfo[playerid][pValcher]);
dini_IntSet(accountfiles[playerid], "pChanta", PlayerInfo[playerid][pChanta]);
dini_IntSet(accountfiles[playerid], "pHealth2", PlayerInfo[playerid][pHealth2]);
dini_IntSet(accountfiles[playerid], "pMoonshine1", PlayerInfo[playerid][pMoonshine1]);
dini_IntSet(accountfiles[playerid], "pWeed1", PlayerInfo[playerid][pWeed1]);
dini_IntSet(accountfiles[playerid], "pCocaine1", PlayerInfo[playerid][pCocaine1]);
dini_IntSet(accountfiles[playerid], "pHeroin1", PlayerInfo[playerid][pHeroin1]);
dini_IntSet(accountfiles[playerid], "pBombs", PlayerInfo[playerid][pBombs]);
dini_IntSet(accountfiles[playerid], "pBombsS1", PlayerInfo[playerid][pBombsS1]);
dini_IntSet(accountfiles[playerid], "pBombsS2", PlayerInfo[playerid][pBombsS2]);
dini_IntSet(accountfiles[playerid], "pBombsS3", PlayerInfo[playerid][pBombsS3]);
dini_IntSet(accountfiles[playerid], "pBombsS4", PlayerInfo[playerid][pBombsS4]);
dini_IntSet(accountfiles[playerid], "pBombsS5", PlayerInfo[playerid][pBombsS5]);
dini_IntSet(accountfiles[playerid], "pWeaponS", PlayerInfo[playerid][pWeaponS]);
dini_IntSet(accountfiles[playerid], "pHouseO", PlayerInfo[playerid][pHouseO]);
dini_IntSet(accountfiles[playerid], "pSpawnO", PlayerInfo[playerid][pSpawnO]);
dini_IntSet(accountfiles[playerid], "pSpawnP", PlayerInfo[playerid][pSpawnP]);
dini_IntSet(accountfiles[playerid], "pBizO", PlayerInfo[playerid][pBizO]);
dini_IntSet(accountfiles[playerid], "pVip", PlayerInfo[playerid][pVip]);
dini_IntSet(accountfiles[playerid], "pTeam", PlayerInfo[playerid][pTeam]);
dini_IntSet(accountfiles[playerid], "pRank", PlayerInfo[playerid][pRank]);
dini_IntSet(accountfiles[playerid], "pLevel", PlayerInfo[playerid][pLevel]);
dini_IntSet(accountfiles[playerid], "pBSpec", PlayerInfo[playerid][pBSpec]);
dini_IntSet(accountfiles[playerid], "pEP", PlayerInfo[playerid][pEP]);
dini_IntSet(accountfiles[playerid], "pEPS", PlayerInfo[playerid][pEPS]);
dini_IntSet(accountfiles[playerid], "pMS", PlayerInfo[playerid][pMS]);
dini_IntSet(accountfiles[playerid], "pAccount", PlayerInfo[playerid][pAccount]);
dini_IntSet(accountfiles[playerid], "pAFK", PlayerInfo[playerid][pAFK]);
dini_IntSet(accountfiles[playerid], "pLaser", PlayerInfo[playerid][pLaser]);
dini_IntSet(accountfiles[playerid], "pWanted", PlayerInfo[playerid][pWanted]);
dini_IntSet(accountfiles[playerid], "pTogPM", PlayerInfo[playerid][pTogPM]);
dini_IntSet(accountfiles[playerid], "pIgnorePM", PlayerInfo[playerid][pIgnorePM]);
dini_IntSet(accountfiles[playerid], "pJail", PlayerInfo[playerid][pJail]);
dini_IntSet(accountfiles[playerid], "pMuted", PlayerInfo[playerid][pMuted]);
dini_IntSet(accountfiles[playerid], "pKills", PlayerInfo[playerid][pKills]);
dini_IntSet(accountfiles[playerid], "pDeaths", PlayerInfo[playerid][pDeaths]);
dini_IntSet(accountfiles[playerid], "pJailReason", PlayerInfo[playerid][pJailReason]);
dini_IntSet(accountfiles[playerid], "pMuteReason", PlayerInfo[playerid][pMuteReason]);
dini_IntSet(accountfiles[playerid], "pLMuted", PlayerInfo[playerid][pLMuted]);
dini_IntSet(accountfiles[playerid], "pAMuted", PlayerInfo[playerid][pAMuted]);
dini_IntSet(accountfiles[playerid], "pFMuted", PlayerInfo[playerid][pFMuted]);
dini_IntSet(accountfiles[playerid], "pFWarns", PlayerInfo[playerid][pFWarns]);
dini_IntSet(accountfiles[playerid], "pAHide", PlayerInfo[playerid][pAHide]);
dini_IntSet(accountfiles[playerid], "pTest", PlayerInfo[playerid][pTest]);
dini_IntSet(accountfiles[playerid], "pADuty", PlayerInfo[playerid][pADuty]);
dini_IntSet(accountfiles[playerid], "pNSkin", PlayerInfo[playerid][pNSkin]);
dini_IntSet(accountfiles[playerid], "pASkin", PlayerInfo[playerid][pASkin]);
dini_IntSet(accountfiles[playerid], "pLastPayday", PlayerInfo[playerid][pLastPayday]);
new stringWhenPlayed[70];
for(new i=0; i<24; i++)
{
format(stringWhenPlayed,70,"pWhenPlayed[%d]",i);
dini_IntSet(accountfiles[playerid], stringWhenPlayed, PlayerInfo[playerid][pWhenPlayed][i]);
}
dini_IntSet(accountfiles[playerid], "pPrivateVehs", PlayerInfo[playerid][pPrivateVehs]);
dini_IntSet(accountfiles[playerid], "pComingBan", PlayerInfo[playerid][pComingBan]);//pPrivateVehs
dini_Set(accountfiles[playerid], "pReasonMute", PlayerInfo[playerid][pReasonMute]);
dini_Set(accountfiles[playerid], "pIP", PlayerInfo[playerid][pIP]);
}
stock SaveHouse(houseid)
{
//
format(formathouseid, 64, "/Houses/%d.ini", houseid);
dini_IntSet(formathouseid, "hOwner",HouseInfo[houseid][hOwner]);
dini_Set(formathouseid, "hOwnerName", HouseInfo[houseid][hOwnerName]);
dini_IntSet(formathouseid, "hcVeh",HouseInfo[houseid][hcVeh]);
dini_IntSet(formathouseid, "hcV",HouseInfo[houseid][hcV]);
dini_FloatSet(formathouseid, "hX",HouseInfo[houseid][hX]);
dini_FloatSet(formathouseid, "hY",HouseInfo[houseid][hY]);
dini_FloatSet(formathouseid, "hZ",HouseInfo[houseid][hZ]);
dini_IntSet(formathouseid, "hLocked",HouseInfo[houseid][hLocked]);
dini_IntSet(formathouseid, "hInterior",HouseInfo[houseid][hInterior]);
dini_IntSet(formathouseid,"hObjects",HouseInfo[houseid][hObjects]);
dini_IntSet(formathouseid, "hPrice",HouseInfo[houseid][hPrice]);
dini_IntSet(formathouseid, "hObjects",HouseInfo[houseid][hObjects]);
dini_IntSet(formathouseid, "hVirtualWorld",HouseInfo[houseid][hVirtualWorld]);
dini_IntSet(formathouseid, "hInterior2",HouseInfo[houseid][hInterior2]);
dini_IntSet(formathouseid, "hLevel",HouseInfo[houseid][hLevel]);
dini_FloatSet(formathouseid, "hcX",HouseInfo[houseid][hcX]);
dini_FloatSet(formathouseid, "hcY",HouseInfo[houseid][hcY]);
dini_FloatSet(formathouseid, "hcZ",HouseInfo[houseid][hcZ]);
dini_FloatSet(formathouseid, "hcA",HouseInfo[houseid][hcA]);
dini_FloatSet(formathouseid, "hcC",HouseInfo[houseid][hcC]);
dini_FloatSet(formathouseid, "hcC2",HouseInfo[houseid][hcC2]);
dini_FloatSet(formathouseid, "hcV",HouseInfo[houseid][hcV]);
for(new i=0;i<=HouseInfo[houseid][hObjects];i++)
{
format(formatalh,32,"hObjectID[%d]",i);
dini_IntSet(formathouseid, formatalh,HouseInfo[houseid][hObjectID][i]);
format(formatalh,32,"hObjectX[%d]",i);
dini_FloatSet(formathouseid, formatalh,HouseInfo[houseid][hObjectX][i]);
format(formatalh,32,"hObjectY[%d]",i);
dini_FloatSet(formathouseid, formatalh,HouseInfo[houseid][hObjectY][i]);
format(formatalh,32,"hObjectZ[%d]",i);
dini_FloatSet(formathouseid, formatalh,HouseInfo[houseid][hObjectZ][i]);
format(formatalh,32,"hObjectXR[%d]",i);
dini_FloatSet(formathouseid, formatalh,HouseInfo[houseid][hObjectXR][i]);
format(formatalh,32,"hObjectYR[%d]",i);
dini_FloatSet(formathouseid, formatalh,HouseInfo[houseid][hObjectYR][i]);
format(formatalh,32,"hObjectZR[%d]",i);
dini_FloatSet(formathouseid, formatalh,HouseInfo[houseid][hObjectZR][i]);
}
//
}
stock SaveBizz(bizid)
{
dini_FloatSet(stringloadbizz, "bX",BizInfo[bizid][bX]);
dini_FloatSet(stringloadbizz, "bY",BizInfo[bizid][bY]);
dini_FloatSet(stringloadbizz, "bZ",BizInfo[bizid][bZ]);
dini_IntSet(stringloadbizz, "bFee", BizInfo[bizid][bFee]);
dini_IntSet(stringloadbizz, "bPayOut", BizInfo[bizid][bPayOut]);
dini_IntSet(stringloadbizz, "bEarnings", BizInfo[bizid][bEarnings]);
dini_IntSet(stringloadbizz, "bEP",BizInfo[bizid][bEP]);
dini_IntSet(stringloadbizz, "bLevel",BizInfo[bizid][bLevel]);
dini_IntSet(stringloadbizz, "bOwner",BizInfo[bizid][bOwner]);
dini_Set(stringloadbizz, "bOwnerName", BizInfo[bizid][bOwnerName]);
dini_Set(stringloadbizz, "bName", BizInfo[bizid][bName]);
dini_FloatSet(stringloadbizz, "bX",BizInfo[bizid][bX]);
dini_FloatSet(stringloadbizz, "bY",BizInfo[bizid][bY]);
dini_FloatSet(stringloadbizz, "bZ",BizInfo[bizid][bZ]);
dini_IntSet(stringloadbizz, "bLocked",BizInfo[bizid][bLocked]);
dini_IntSet(stringloadbizz, "bType",BizInfo[bizid][bType]);
dini_IntSet(stringloadbizz, "bPrice",BizInfo[bizid][bPrice]);
}
stock LoadClan(clanid)
{
ClanInfo[clanid][cLoaded]=1;
maxclans++;
ClanInfo[clanid][cRanks]=dini_Int(stringloadclan, "cRanks");
format(ClanInfo[clanid][cName],256, "%s", dini_Get(stringloadclan, "cName"));
ClanInfo[clanid][cBaseX]=dini_Float(stringloadclan, "cBaseX");
ClanInfo[clanid][cBaseY]=dini_Float(stringloadclan, "cBaseY");
ClanInfo[clanid][cBaseZ]=dini_Float(stringloadclan, "cBaseZ");
}
/*stock RemoveAdminFile(plName[120])
{
new plLocation[256];
string(plLocation,256,"/scriptfiles/Admins/%s.ini",plName);
if(dini_Exists(plLocation))
{
dini_Remove(plLocation);
}
}
stock SaveAsAdmin(playeridS, plAdmin)
{
new plLocation[256];
format(plLocation,256,"/scriptfiles/%s.ini",pname[playeridS]);
if(!dini_Exists(plLocation))
{
dini_Create(plLocation);
}
dini_Set(plLocation, "plName",plName);
dini_IntSet(plLocation, "plAdmin", plAdmin);
if(plAdmin==0)
{
dini_IntSet(plLocation, "plTest", 1);
}
else
{
dini_IntSet(plLocation, "plTest", 0);
}
}
*/
stock SaveClan(clanid)
{
dini_IntSet(stringloadclan, "cRanks",ClanInfo[clanid][cRanks]);
dini_Set(stringloadclan, "cName", ClanInfo[clanid][cName]);
dini_FloatSet(stringloadclan,"cBaseX",ClanInfo[clanid][cBaseX]);
dini_FloatSet(stringloadclan,"cBaseY",ClanInfo[clanid][cBaseY]);
dini_FloatSet(stringloadclan,"cBaseZ",ClanInfo[clanid][cBaseZ]);
}
stock LoadHouse(houseid)
{
//
HouseInfo[houseid][hLoaded]=1;
maxcreatedhouses++;
HouseInfo[houseid][hObjects]=dini_Int(stringloadhouse, "hObjects");
HouseInfo[houseid][hInterior2]=dini_Int(stringloadhouse, "hInterior2");
HouseInfo[houseid][hVirtualWorld]=dini_Int(stringloadhouse, "hVirtualWorld");
HouseInfo[houseid][hX]=dini_Float(stringloadhouse, "hX");
HouseInfo[houseid][hY]=dini_Float(stringloadhouse, "hY");
HouseInfo[houseid][hZ]=dini_Float(stringloadhouse, "hZ");
HouseInfo[houseid][hcX]=dini_Float(stringloadhouse, "hcX");
HouseInfo[houseid][hcY]=dini_Float(stringloadhouse, "hcY");
HouseInfo[houseid][hcZ]=dini_Float(stringloadhouse, "hcZ");
HouseInfo[houseid][hcA]=dini_Float(stringloadhouse, "hcA");
HouseInfo[houseid][hcC]=dini_Int(stringloadhouse, "hcC");
HouseInfo[houseid][hcC2]=dini_Int(stringloadhouse, "hcC2");
HouseInfo[houseid][hcV]=dini_Int(stringloadhouse, "hcV");
HouseInfo[houseid][hcVeh]=dini_Int(stringloadhouse, "hcVeh");
HouseInfo[houseid][hLevel]=dini_Int(stringloadhouse, "hLevel");
HouseInfo[houseid][hOwner]=dini_Int(stringloadhouse, "hOwner");
HouseInfo[houseid][hLocked]=dini_Int(stringloadhouse, "hLocked");
HouseInfo[houseid][hPrice]=dini_Int(stringloadhouse, "hPrice");
HouseInfo[houseid][hInterior]=dini_Int(stringloadhouse, "hInterior");
if(HouseInfo[houseid][hcX]==0 && HouseInfo[houseid][hcY]==0 && HouseInfo[houseid][hcZ]==0)
{
SetVehicleVirtualWorld(HouseInfo[houseid][hcVeh],50);
}
CreateDynamicMapIcon(HouseInfo[houseid][hX],HouseInfo[houseid][hY],HouseInfo[houseid][hZ], 31, -1, -1, -1, -1, 300);
format(HouseInfo[houseid][hOwnerName],256,"%s",dini_Get(stringloadhouse,"hOwnerName"));
if(HouseInfo[houseid][hObjects]!=0)
{
for(new i=0;i<=HouseInfo[houseid][hObjects];i++)
{
format(formathouseid,32,"hObjectID[%d]",i);
HouseInfo[houseid][hObjectID][i]=dini_Int(stringloadhouse, formathouseid);
format(formathouseid,32,"hObjectX[%d]",i);
HouseInfo[houseid][hObjectX][i]=dini_Float(stringloadhouse, formathouseid);
format(formathouseid,32,"hObjectY[%d]",i);
HouseInfo[houseid][hObjectY][i]=dini_Float(stringloadhouse, formathouseid);
format(formathouseid,32,"hObjectZ[%d]",i);
HouseInfo[houseid][hObjectZ][i]=dini_Float(stringloadhouse, formathouseid);
format(formathouseid,32,"hObjectXR[%d]",i);
HouseInfo[houseid][hObjectXR][i]=dini_Float(stringloadhouse, formathouseid);
format(formathouseid,32,"hObjectYR[%d]",i);
HouseInfo[houseid][hObjectYR][i]=dini_Float(stringloadhouse, formathouseid);
format(formathouseid,32,"hObjectZR[%d]",i);
HouseInfo[houseid][hObjectZR][i]=dini_Float(stringloadhouse, formathouseid);
}
}
housepickup[houseid]=CreateDynamicPickup(1273, 1,HouseInfo[houseid][hX],HouseInfo[houseid][hY],HouseInfo[houseid][hZ] ,HouseInfo[houseid][hVirtualWorld],HouseInfo[houseid][hInterior2]);
specialpickup[housepickup[houseid]][PICKUPHOUSE]=houseid;
/*if(HouseInfo[houseid][hcV]!=0 && HouseInfo[houseid][hcX] !=0.0)
{
HouseInfo[houseid][hcVeh]=CreateVehicle(HouseInfo[houseid][hcV],HouseInfo[houseid][hcX],HouseInfo[houseid][hcY],HouseInfo[houseid][hcZ],HouseInfo[houseid][hcA],HouseInfo[houseid][hcC],HouseInfo[houseid][hcC2],1800000);
houseprivateveh[HouseInfo[houseid][hcVeh]]=1;
}*/
if(HouseInfo[houseid][hObjects]!=0)
{
for(new allobj=0;allobj<=HouseInfo[houseid][hObjects];allobj++)
{
objecthouse[houseid][allobj]=CreateDynamicObject(HouseInfo[houseid][hObjectID][allobj],HouseInfo[houseid][hObjectX][allobj],HouseInfo[houseid][hObjectY][allobj],HouseInfo[houseid][hObjectZ][allobj],HouseInfo[houseid][hObjectXR][allobj],HouseInfo[houseid][hObjectYR][allobj],HouseInfo[houseid][hObjectZR][allobj],houseid+50,HouseInfo[houseid][hInterior]);
}
}
//
}
stock LoadBizz(bizid)
{
//DONE
maxcreatedbizz++;
BizInfo[bizid][bLoaded]=1;
BizInfo[bizid][bX]=dini_Float(stringloadbizz, "bX");
BizInfo[bizid][bY]=dini_Float(stringloadbizz, "bY");
BizInfo[bizid][bZ]=dini_Float(stringloadbizz, "bZ");
BizInfo[bizid][bLevel]=dini_Int(stringloadbizz, "bLevel");
BizInfo[bizid][bOwner]=dini_Int(stringloadbizz, "bOwner");
BizInfo[bizid][bEP]=dini_Int(stringloadbizz, "bEP");
BizInfo[bizid][bLocked]=dini_Int(stringloadbizz, "bLocked");
BizInfo[bizid][bPrice]=dini_Int(stringloadbizz, "bPrice");
BizInfo[bizid][bFee]=dini_Int(stringloadbizz, "bFee");
BizInfo[bizid][bPayOut]=dini_Int(stringloadbizz, "bPayOut");
BizInfo[bizid][bEarnings]=dini_Int(stringloadbizz, "bEarnings");
BizInfo[bizid][bType]=dini_Int(stringloadbizz, "bType");
format(BizInfo[bizid][bOwnerName],256,"%s",dini_Get(stringloadbizz,"bOwnerName"));
format(BizInfo[bizid][bName],256,"%s",dini_Get(stringloadbizz,"bName"));
/*
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 1: 24/7, 2: Bar, 3: Ammu, 4: License, 5: 24/7, 6: ProLaps, 7: Office");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 8: BurShot, 9: HorseBet, 10: 24/7, 11: Urban, 12: Ammu, 13: 14: Disco");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 15: SexShop, 16: Gym, 17: Gym, 18: Casino, 19: StripClub, 20: DMBizz");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 21: FourDragons Casino, 22: Caligulas Casino, 23: Bar, 24: Rusty Brounns");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 25: CluckinBell, 26: Restaurant, 27: N.E., 28: Advert, 29: Drugs, 30: Drugs");
*/
bizpickup[bizid]=CreateDynamicPickup(1272, 1,BizInfo[bizid][bX],BizInfo[bizid][bY],BizInfo[bizid][bZ] ,0);
specialpickup[bizpickup[bizid]][PICKUPBIZ]=bizid;
if(BizInfo[bizid][bEP] >= 1)
{
format(stringloadbizz,180,"{00FF00}Ако притежаваш този бизнес\n ще получаваш {FFFFFF}%d EP{00FF00} на всеки {FF0000}Payday",BizInfo[bizid][bEP]);
BizInfo[bizid][bText] = Create3DTextLabel(stringloadbizz ,0x00FF00AA,BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ],25, 0, 1);
}
if(BizInfo[bizid][bType]!=27 && BizInfo[bizid][bType]!=7)
{
if(BizInfo[bizid][bType]==2
|| BizInfo[bizid][bType]==23)
{
CreateDynamicMapIcon(BizInfo[bizid][bX],BizInfo[bizid][bY],BizInfo[bizid][bZ], 49, -1, -1, -1, -1, 230);
}
else if(BizInfo[bizid][bType]==16
|| BizInfo[bizid][bType]==17)
{
CreateDynamicMapIcon(BizInfo[bizid][bX],BizInfo[bizid][bY],BizInfo[bizid][bZ], 54, -1, -1, -1, -1, 230);
}
else if(BizInfo[bizid][bType]==3
|| BizInfo[bizid][bType]==12)
{
CreateDynamicMapIcon(BizInfo[bizid][bX],BizInfo[bizid][bY],BizInfo[bizid][bZ], 6, -1, -1, -1, -1, 230);
}
else if(BizInfo[bizid][bType]==4)
{
CreateDynamicMapIcon(BizInfo[bizid][bX],BizInfo[bizid][bY],BizInfo[bizid][bZ], 36, -1, -1, -1, -1, 230);
}
else if(BizInfo[bizid][bType]==14
|| BizInfo[bizid][bType]==19)
{
CreateDynamicMapIcon(BizInfo[bizid][bX],BizInfo[bizid][bY],BizInfo[bizid][bZ], 48, -1, -1, -1, -1, 230);
}
else if(BizInfo[bizid][bType]==18
|| BizInfo[bizid][bType]==21
|| BizInfo[bizid][bType]==22)
{
CreateDynamicMapIcon(BizInfo[bizid][bX],BizInfo[bizid][bY],BizInfo[bizid][bZ], 12, -1, -1, -1, -1, 230);
}
else if(BizInfo[bizid][bType]==6
|| BizInfo[bizid][bType]==11)
{
CreateDynamicMapIcon(BizInfo[bizid][bX],BizInfo[bizid][bY],BizInfo[bizid][bZ], 45, -1, -1, -1, -1, 230);
}
else if(BizInfo[bizid][bType]==8
|| BizInfo[bizid][bType]==24
|| BizInfo[bizid][bType]==23
|| BizInfo[bizid][bType]==25
|| BizInfo[bizid][bType]==26)
{
CreateDynamicMapIcon(BizInfo[bizid][bX],BizInfo[bizid][bY],BizInfo[bizid][bZ], 50, -1, -1, -1, -1, 230);
}
else if(BizInfo[bizid][bType]==29
|| BizInfo[bizid][bType]==30)
{
CreateDynamicMapIcon(BizInfo[bizid][bX],BizInfo[bizid][bY],BizInfo[bizid][bZ], 39, -1, -1, -1, -1, 230);
}
else
{
CreateDynamicMapIcon(BizInfo[bizid][bX],BizInfo[bizid][bY],BizInfo[bizid][bZ], 32, -1, -1, -1, -1, 280);
}
}
}
stock LoadAccount(playerid)
{
new privateVehsString[256];
for(new i2=1; i2<16; i2++)
{
format(privateVehsString,256,"pPrivateVeh[%d]",i2);
PlayerInfo[playerid][pPrivateVeh][i2]= dini_Int(accountfiles[playerid],privateVehsString);
}
PlayerInfo[playerid][pAdmin]= dini_Int(accountfiles[playerid],"pAdmin");
PlayerInfo[playerid][pManage]= dini_Int(accountfiles[playerid],"pManage");
PlayerInfo[playerid][pEvent]= dini_Int(accountfiles[playerid],"pEvent");
PlayerInfo[playerid][pIFC]= dini_Int(accountfiles[playerid],"pIFC");
PlayerInfo[playerid][pSpecialForce]= dini_Int(accountfiles[playerid],"pSpecialForce");
PlayerInfo[playerid][pSamolet]= dini_Int(accountfiles[playerid],"pSamolet");
PlayerInfo[playerid][pHelikopter]= dini_Int(accountfiles[playerid],"pHelikopter");
PlayerInfo[playerid][pLodka]= dini_Int(accountfiles[playerid],"pLodka");
PlayerInfo[playerid][pDMONKills]= dini_Int(accountfiles[playerid],"pDMONKills");
PlayerInfo[playerid][pHook]= dini_Int(accountfiles[playerid],"pHook");
PlayerInfo[playerid][pStyle2]= dini_Int(accountfiles[playerid],"pStyle2");
PlayerInfo[playerid][pPrivateVehs]= dini_Int(accountfiles[playerid],"pPrivateVehs");
PlayerInfo[playerid][pArmour2]= dini_Int(accountfiles[playerid],"pArmour2");
PlayerInfo[playerid][pFirstWays]= dini_Int(accountfiles[playerid],"pFirstWays");
PlayerInfo[playerid][pFirstWays2]= dini_Int(accountfiles[playerid],"pFirstWays2");
PlayerInfo[playerid][pFirstWays3]= dini_Int(accountfiles[playerid],"pFirstWays3");
PlayerInfo[playerid][pFirstWays4]= dini_Int(accountfiles[playerid],"pFirstWays4");
PlayerInfo[playerid][pFirstWays5]= dini_Int(accountfiles[playerid],"pFirstWays5");
PlayerInfo[playerid][pFirstWays6]= dini_Int(accountfiles[playerid],"pFirstWays6");
PlayerInfo[playerid][pCrashedFromGTA]= dini_Int(accountfiles[playerid],"pCrashedFromGTA");
PlayerInfo[playerid][pObjectAdmin]= dini_Int(accountfiles[playerid],"pObjectAdmin");
PlayerInfo[playerid][pGender]= dini_Int(accountfiles[playerid],"pGender");
PlayerInfo[playerid][pJailType]= dini_Int(accountfiles[playerid],"pJailType");
PlayerInfo[playerid][pPhone]= dini_Int(accountfiles[playerid],"pPhone");
PlayerInfo[playerid][pChanta]= dini_Int(accountfiles[playerid],"pChanta");
PlayerInfo[playerid][pValcher]= dini_Int(accountfiles[playerid],"pValcher");
PlayerInfo[playerid][pStyle]= dini_Int(accountfiles[playerid],"pStyle");
PlayerInfo[playerid][pHealth2]= dini_Int(accountfiles[playerid],"pHealth2");
PlayerInfo[playerid][pMoonshine1]= dini_Int(accountfiles[playerid],"pMoonshine1");
PlayerInfo[playerid][pHeroin1]= dini_Int(accountfiles[playerid],"pHeroin1");
PlayerInfo[playerid][pCocaine1]= dini_Int(accountfiles[playerid],"pCocaine1");
PlayerInfo[playerid][pWeed1]= dini_Int(accountfiles[playerid],"pWeed1");
PlayerInfo[playerid][pVlak]= dini_Int(accountfiles[playerid],"pVlak");
PlayerInfo[playerid][pCreditMoney]= dini_Int(accountfiles[playerid],"pCreditMoney");
PlayerInfo[playerid][pCreditTime]= dini_Int(accountfiles[playerid],"pCreditTime");
PlayerInfo[playerid][pARefuel]= dini_Int(accountfiles[playerid],"pARefuel");
PlayerInfo[playerid][pWarns]= dini_Int(accountfiles[playerid],"pWarns");
PlayerInfo[playerid][pTSpec]= dini_Int(accountfiles[playerid],"pTSpec");
PlayerInfo[playerid][pTGoto]= dini_Int(accountfiles[playerid],"pTGoto");
PlayerInfo[playerid][pTimeJail]= dini_Int(accountfiles[playerid],"pTimeJail");
PlayerInfo[playerid][pTimeMute]= dini_Int(accountfiles[playerid],"pTimeMute");
new achievementsstr[256];
new companystr[256];
for(new i2=0; i2<MAX_COMPANIES; i2++)
{
format(companystr,256,"pCompany[%d]",i2);
PlayerInfo[playerid][pCompany][i2]= dini_Int(accountfiles[playerid],companystr);
}
for(new i2=0; i2<50; i2++)
{
format(achievementsstr,256,"pAchievement[%d]",i2);
PlayerInfo[playerid][pAchievement][i2]= dini_Int(accountfiles[playerid],achievementsstr);
}
for(new i2=0; i2<35; i2++)
{
format(achievementsstr,256,"pClothes[%d]",i2);
PlayerInfo[playerid][pClothes][i2]= dini_Int(accountfiles[playerid],achievementsstr);
}
for(new i2=1; i2<11; i2++)
{
format(achievementsstr,256,"pFishSlot[%d]",i2);
PlayerInfo[playerid][pFishSlot][i2]= dini_Int(accountfiles[playerid],achievementsstr);
format(achievementsstr,256,"pFishWeight[%d]",i2);
PlayerInfo[playerid][pFishWeight][i2]= dini_Int(accountfiles[playerid],achievementsstr);
}
/*	for(new i2=1; i2<16; i2++)
{
if(PlayerInfo[playerid][pPrivateVeh][i2]!=0)
{
if(changedvehID[PlayerInfo[playerid][pPrivateVeh][i2]]>-1)
{
new oldid=PlayerInfo[playerid][pPrivateVeh][i2];
PlayerInfo[playerid][pPrivateVeh][i2]=changedvehID[oldid];
}
}
}*/
PlayerInfo[playerid][pADMINMute]= dini_Int(accountfiles[playerid],"pADMINMute");
format(PlayerInfo[playerid][pSkype],36,dini_Get(accountfiles[playerid],"pSkype"));
PlayerInfo[playerid][pPJail]= dini_Int(accountfiles[playerid],"pPJail");
PlayerInfo[playerid][pBlock]= dini_Int(accountfiles[playerid],"pBlock");
PlayerInfo[playerid][pVGuns]= dini_Int(accountfiles[playerid],"pVGuns");
PlayerInfo[playerid][pFixT]= dini_Int(accountfiles[playerid],"pFixT");
PlayerInfo[playerid][pHealT]= dini_Int(accountfiles[playerid],"pHealT");
PlayerInfo[playerid][pVip]= dini_Int(accountfiles[playerid],"pVip");
PlayerInfo[playerid][pTeam]= dini_Int(accountfiles[playerid],"pTeam");
PlayerInfo[playerid][pRank]= dini_Int(accountfiles[playerid],"pRank");
PlayerInfo[playerid][pAccount]= dini_Int(accountfiles[playerid],"pAccount");
PlayerInfo[playerid][pLevel]= dini_Int(accountfiles[playerid],"pLevel");
PlayerInfo[playerid][pBSpec]= dini_Int(accountfiles[playerid],"pBSpec");
PlayerInfo[playerid][pEP]= dini_Int(accountfiles[playerid],"pEP");
PlayerInfo[playerid][pEPS]= dini_Int(accountfiles[playerid],"pEPS");
PlayerInfo[playerid][pMS]= dini_Int(accountfiles[playerid],"pMS");
PlayerInfo[playerid][pYear]= dini_Int(accountfiles[playerid],"pYear");
PlayerInfo[playerid][pMonth]= dini_Int(accountfiles[playerid],"pMonth");
PlayerInfo[playerid][pDay]= dini_Int(accountfiles[playerid],"pDay");
PlayerInfo[playerid][pHours]= dini_Int(accountfiles[playerid],"pHours");
PlayerInfo[playerid][pMinutes]= dini_Int(accountfiles[playerid],"pMinutes");
PlayerInfo[playerid][pSeconds]= dini_Int(accountfiles[playerid],"pSeconds");
PlayerInfo[playerid][pAFK]= dini_Int(accountfiles[playerid], "pAFK");
PlayerInfo[playerid][pLaser]= dini_Int(accountfiles[playerid], "pLaser");
PlayerInfo[playerid][pWanted]= dini_Int(accountfiles[playerid], "pWanted");
PlayerInfo[playerid][pIgnorePM]= dini_Int(accountfiles[playerid], "pIgnorePM");
PlayerInfo[playerid][pTogPM]= dini_Int(accountfiles[playerid], "pTogPM");
PlayerInfo[playerid][pJail]= dini_Int(accountfiles[playerid], "pJail");
PlayerInfo[playerid][pKills]= dini_Int(accountfiles[playerid], "pKills");
PlayerInfo[playerid][pDeaths]= dini_Int(accountfiles[playerid], "pDeaths");
PlayerInfo[playerid][pJailReason]= dini_Int(accountfiles[playerid], "pJailReason");
PlayerInfo[playerid][pMuted]= dini_Int(accountfiles[playerid], "pMuted");
PlayerInfo[playerid][pBizEP]= dini_Int(accountfiles[playerid], "pBizEP");
PlayerInfo[playerid][pReadTA]= dini_Int(accountfiles[playerid], "pReadTA");
PlayerInfo[playerid][pBriefcase]= dini_Int(accountfiles[playerid], "pBriefcase");
PlayerInfo[playerid][pChantichki]= dini_Int(accountfiles[playerid], "pChantichki");
PlayerInfo[playerid][pMission]= dini_Int(accountfiles[playerid], "pMission");
PlayerInfo[playerid][pMPMission]= dini_Int(accountfiles[playerid], "pMPMission");
PlayerInfo[playerid][pClan]= dini_Int(accountfiles[playerid], "pClan");
PlayerInfo[playerid][pClanRank]= dini_Int(accountfiles[playerid], "pClanRank");
PlayerInfo[playerid][pFuelcase]= dini_Int(accountfiles[playerid], "pFuelcase");
PlayerInfo[playerid][pChervei]= dini_Int(accountfiles[playerid], "pChervei");
PlayerInfo[playerid][pRadio]= dini_Int(accountfiles[playerid], "pRadio");
PlayerInfo[playerid][pDice]= dini_Int(accountfiles[playerid], "pDice");
PlayerInfo[playerid][pCigarettes]= dini_Int(accountfiles[playerid], "pCigarettes");
PlayerInfo[playerid][pBizCash]= dini_Int(accountfiles[playerid], "pBizCash");
PlayerInfo[playerid][pMuteReason]= dini_Int(accountfiles[playerid], "pMuteReason");
PlayerInfo[playerid][pLMuted]= dini_Int(accountfiles[playerid], "pLMuted");
PlayerInfo[playerid][pAMuted]= dini_Int(accountfiles[playerid], "pAMuted");
PlayerInfo[playerid][pFMuted]= dini_Int(accountfiles[playerid], "pFMuted");
PlayerInfo[playerid][pFWarns]= dini_Int(accountfiles[playerid], "pFWarns");
PlayerInfo[playerid][pAHide]= dini_Int(accountfiles[playerid], "pAHide");
PlayerInfo[playerid][pLastPayday]= dini_Int(accountfiles[playerid], "pLastPayday");
new stringWhenPlayed[70];
for(new i=0; i<24; i++)
{
format(stringWhenPlayed,70,"pWhenPlayed[%d]",i);
PlayerInfo[playerid][pWhenPlayed][i]=dini_Int(accountfiles[playerid], stringWhenPlayed);
}
PlayerInfo[playerid][pComingBan]= dini_Int(accountfiles[playerid], "pComingBan");
PlayerInfo[playerid][pTest]= dini_Int(accountfiles[playerid], "pTest");
PlayerInfo[playerid][pADuty]= dini_Int(accountfiles[playerid], "pADuty");
PlayerInfo[playerid][pASkin]= dini_Int(accountfiles[playerid], "pASkin");
PlayerInfo[playerid][pNSkin]= dini_Int(accountfiles[playerid], "pNSkin");
PlayerInfo[playerid][pHouseO]= dini_Int(accountfiles[playerid], "pHouseO");
PlayerInfo[playerid][pBombs]= dini_Int(accountfiles[playerid], "pBombs");
//PlayerInfo[playerid][pBombsS1]= dini_Int(accountfiles[playerid], "pBombsS1");
//PlayerInfo[playerid][pBombsS2]= dini_Int(accountfiles[playerid], "pBombsS2");
//PlayerInfo[playerid][pBombsS3]= dini_Int(accountfiles[playerid], "pBombsS3");
//PlayerInfo[playerid][pBombsS4]= dini_Int(accountfiles[playerid], "pBombsS4");
//PlayerInfo[playerid][pBombsS5]= dini_Int(accountfiles[playerid], "pBombsS5");
PlayerInfo[playerid][pWeaponS]= dini_Int(accountfiles[playerid], "pWeaponS");
PlayerInfo[playerid][pSpawnO]= dini_Int(accountfiles[playerid], "pSpawnO");
PlayerInfo[playerid][pSpawnP]= dini_Int(accountfiles[playerid], "pSpawnP");
PlayerInfo[playerid][pBizO]= dini_Int(accountfiles[playerid], "pBizO");
PlayerInfo[playerid][pCash]= dini_Int(accountfiles[playerid], "pCash");
PlayerInfo[playerid][pRealCash]= dini_Int(accountfiles[playerid], "pRealCash");
SetPlayerCash(playerid,PlayerInfo[playerid][pCash]);
SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
new ip[35]; GetPlayerIp(playerid,ip,35);
format(PlayerInfo[playerid][pIP],35,ip);
if(PlayerInfo[playerid][pLaser]>0)
{
if(PlayerInfo[playerid][pTeam]==1)
{
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==2)
{
SetPVarInt(playerid, "color", 19083);
}
if(PlayerInfo[playerid][pTeam]==13 || PlayerInfo[playerid][pTeam]==14 || PlayerInfo[playerid][pTeam]==6)
{
SetPVarInt(playerid, "color", 19080);
}
if(PlayerInfo[playerid][pTeam]==8)
{
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==15)
{
SetPVarInt(playerid, "color", 19084);
}
}
PlayerInfo[playerid][pRegistred]=1;
PlayerInfo[playerid][pActiveCheck]=120; PlayerInfo[playerid][pActiveCheckInSec]=2;
PlayerInfo[playerid][pRegisteredTimer]=11*2;
InterpolateCameraPos(playerid, 524.6355, 1180.4360, 70.4930, 2179.9398,1284.6965,43.4799,11000,CAMERA_MOVE);
InterpolateCameraLookAt(playerid,525.6357, 1180.5112, 70.5332, 2183.4976,1284.9148,43.0672,11000,CAMERA_MOVE);
//
if(PlayerInfo[playerid][pTest]==1) { adminprefix[playerid]="Тестов"; }
else if(PlayerInfo[playerid][pAdmin]==0) { adminprefix[playerid]="НЕ"; }
else if(PlayerInfo[playerid][pAdmin]==1) { adminprefix[playerid]="Помощник"; }
else if(PlayerInfo[playerid][pAdmin]==2) { adminprefix[playerid]="Администратор"; }
else if(PlayerInfo[playerid][pAdmin]==3) { adminprefix[playerid]="Висш Администратор"; }
else if(PlayerInfo[playerid][pAdmin]==4) { adminprefix[playerid]="Главен Администратор"; }
else if(PlayerInfo[playerid][pAdmin]==5) { adminprefix[playerid]="Притежател";}
else if(PlayerInfo[playerid][pAdmin]==6) { adminprefix[playerid]="Scripter";}
//
new string22301[512];
new string2230result3[1500];
format(string22301,512,"{FFFFFF}Admin Level: {FF0000}%s\n",adminprefix[playerid]);
strcat(string2230result3, string22301);
format(string22301,512,"{FFFFFF}Vip Level: {336BFF}%d\n",PlayerInfo[playerid][pVip]);
strcat(string2230result3, string22301);
format(string22301,512,"{FFFFFF}Reputation Level: {336BFF}%d\n",PlayerInfo[playerid][pLevel]);
strcat(string2230result3, string22301);
format(string22301,512,"{FFFFFF}Team: {336BFF}%s\n",TeamInfo[PlayerInfo[playerid][pTeam]][tName]);
strcat(string2230result3, string22301);
new ranktext[256];
switch(PlayerInfo[playerid][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank6]);
}
format(string22301,512,"{FFFFFF}Rank: {336BFF}%s(%d)\n",ranktext,PlayerInfo[playerid][pRank]);
strcat(string2230result3, string22301);
if(PlayerInfo[playerid][pHouseO]!=-1)
{
format(string22301,512,"{FFFFFF}House: {336BFF}ДА\n");
strcat(string2230result3, string22301);
}
else
{
format(string22301,512,"{FFFFFF}House: {ff0000}НЕ\n");
strcat(string2230result3, string22301);
}
if(PlayerInfo[playerid][pBizO]!=-1)
{
format(string22301,512,"{FFFFFF}Biz: {336BFF}ДА\n");
strcat(string2230result3, string22301);
}
else
{
format(string22301,512,"{FFFFFF}Biz: {ff0000}НЕ\n");
strcat(string2230result3, string22301);
}
new nameofmounth[15];
if(PlayerInfo[playerid][pMonth]==1) { nameofmounth="Jan"; }
else if(PlayerInfo[playerid][pMonth]==2) { nameofmounth="Feb"; }
else if(PlayerInfo[playerid][pMonth]==3) { nameofmounth="Mar"; }
else if(PlayerInfo[playerid][pMonth]==4) { nameofmounth="April"; }
else if(PlayerInfo[playerid][pMonth]==5) { nameofmounth="May"; }
else if(PlayerInfo[playerid][pMonth]==6) { nameofmounth="Juny"; }
else if(PlayerInfo[playerid][pMonth]==7) { nameofmounth="July"; }
else if(PlayerInfo[playerid][pMonth]==8) { nameofmounth="Aug"; }
else if(PlayerInfo[playerid][pMonth]==9) { nameofmounth="Sep"; }
else if(PlayerInfo[playerid][pMonth]==10) { nameofmounth="Oct"; }
else if(PlayerInfo[playerid][pMonth]==11) { nameofmounth="Nov"; }
else if(PlayerInfo[playerid][pMonth]==12) { nameofmounth="Dec"; }
format(string22301,512,"{FFFFFF}Последно влизане в сървъра: {00e600}%d %d %s %d:%d:%d\n",PlayerInfo[playerid][pYear] ,PlayerInfo[playerid][pDay],nameofmounth ,PlayerInfo[playerid][pHours] ,PlayerInfo[playerid][pMinutes] ,PlayerInfo[playerid][pSeconds]);
strcat(string2230result3, string22301);
if(day>PlayerInfo[playerid][pDay]+1)
{
new daysNoEnter;
if(day-PlayerInfo[playerid][pDay]>0)
{
daysNoEnter=day-PlayerInfo[playerid][pDay];
}
else
{
daysNoEnter=PlayerInfo[playerid][pDay]-day;
}
if(PlayerInfo[playerid][pTest]==1 || PlayerInfo[playerid][pAdmin]>=1 && PlayerInfo[playerid][pAdmin]<=2 || PlayerInfo[playerid][pRank]==6)
{
SendClientMessage(playerid, 0xFFBF00FF, ""); SendClientMessage(playerid, 0xFFBF00FF, "");
new stringAdminMessage[356];
if(PlayerInfo[playerid][pAdmin]<3)
{
if(PlayerInfo[playerid][pTest]==1 || PlayerInfo[playerid][pAdmin]>=1)
{
SendClientMessage(playerid, 0xFFBF00FF, "{ff0000}[ВАЖНО] {336BFF}Поради това, че не сте влизали в сървъра вчера има опасност да ви бъдат премахнати {ff0000}ADMIN Правата");
format(stringAdminMessage,356,"[ADMIN WARN] %s не е влизал %d дена, а е със статут на ADMIN",pname[playerid],daysNoEnter-1);
SendAdminMessage(-1, COLOR_RED, stringAdminMessage);
}
if(PlayerInfo[playerid][pRank]==6)
{
SendClientMessage(playerid, 0xFFBF00FF, "{ff0000}[ВАЖНО] {336BFF}Поради това, че не сте влизали в сървъра вчера има опасност да ви бъде премахнат статута на {ff0000}Лидер на Организация");
format(stringAdminMessage,356,"[LEADER WARN] %s не е влизал %d дена, а е със статут на Лидер",pname[playerid],daysNoEnter-1);
SendAdminMessage(-1, COLOR_RED, stringAdminMessage);
}
}
}
}
//
new playedTime;
for(new i=0; i<24; i++)
{
playedTime+=PlayerInfo[playerid][pWhenPlayed][i];
}
new playedTimeMinutes=playedTime/60;
if(playedTimeMinutes<1)
{
playedTimeMinutes=0;
}
//------------------------------------
//------------------------------------
new playedTimeImportant;
for(new i=11; i<=19; i++)
{
playedTimeImportant+=PlayerInfo[playerid][pWhenPlayed][i];
}
new playedTimeImportantMinutes=playedTimeImportant/60;
if(playedTimeImportantMinutes<1)
{
playedTimeImportantMinutes=0;
}
format(string22301,512,"{00ff00}Играно време във всички часове: {FF0000}%d мин.\n",playedTimeMinutes);
strcat(string2230result3, string22301);
format(string22301,512,"{00ff00}Играно време в награждаваните часове(11:00 до 19:00): {FF0000}%d мин.\n",playedTimeImportantMinutes);
strcat(string2230result3, string22301);
//
format(string22301,512,"\n\n{FFFFFF}При проблеми се свържете с главния администратор\nDiscord: {336BFF}sTrIx - Scripter, Discord: danielandreevofficial#1084");
strcat(string2230result3, string22301);
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"{FFFFFF}Статистика:",string2230result3,"Затвори","");
dini_IntSet(accountfiles[playerid], "pYear",year);
dini_IntSet(accountfiles[playerid], "pMonth",month);
dini_IntSet(accountfiles[playerid], "pDay",day);
dini_IntSet(accountfiles[playerid], "pHours",hours);
dini_IntSet(accountfiles[playerid], "pMinutes",minutes);
dini_IntSet(accountfiles[playerid], "pSeconds",seconds);
//load 8
}
GivePlayerHealth(playerid, Float:health) {
new Float:loc_health;
GetPlayerHealth(playerid, loc_health);
return SetPlayerHealth(playerid, loc_health + health);
}
GivePlayerArmour(playerid, Float:health) {
new Float:loc_health;
GetPlayerArmour(playerid, loc_health);
return SetPlayerArmour(playerid, loc_health + health);
}
forward CheckForGangLevel(team,player);
public CheckForGangLevel(team,player)
{
new Float:X3,Float:Y3,Float:Z3;
GetPlayerPos(player, X3, Y3, Z3);
for(new t=0; t<MAX_TURFS;t++)
{
if(TurfInfo[t][TurfOwner]==PlayerInfo[player][pTeam])
{
new Float:tempposx = (TurfInfo[t][zMinX] -X3);
new Float:tempposy = (TurfInfo[t][zMinY] -Y3);
if (((tempposx < 580.0) && (tempposx > -580.0)) && ((tempposy < 580.0) && (tempposy > -580.0))) return 1;
}
}
return 0;
}
stock CheckForSpeed(playerid,speed,Float:x,Float:y,Float:z)
{
new formatradar[256];
if(IsPlayerInRangeOfPoint(playerid,150.0,x,y,z))
{
if(GetVehicleKmh(GetPlayerVehicleID(playerid))>speed)
{
format(formatradar,256,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~WARNING~n~~w~MAXIMUM SPEED: %dkm/h",speed);
GameTextForPlayer(playerid, formatradar, 2300, 3);
}
if(IsPlayerInRangeOfPoint(playerid,40.0,x,y,z) && GetVehicleKmh(GetPlayerVehicleID(playerid))>speed)
{
if(driver[playerid]==1)
{
if(PlayerInfo[playerid][pWantedSeconds]==0)
{
if(PlayerInfo[playerid][pWanted]==5)
{
if(withbandana[playerid]==0)
{
TextDrawShowForPlayer(playerid, Intro[0]);
PlayerInfo[playerid][pHideIntro2]=1;
PlayerInfo[playerid][pWantedSeconds]=120*3;
PlayerInfo[playerid][pWanted]+=1;
SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
SendClientMessage(playerid,0xFF0000FF,"{ff0000}[DELTA FORCE]{A4A400} Ти ще бъдеш издирван от Delta Force, понеже имаш 6 звезди");
format(formatradar,256,"[WARNING]{A4A400} %s е заподозрян с 6 звезди, който го убие ще спечели $3000 и 5 EP",pname[playerid]);
SendFactionMessage(13,0xFF0000FF,formatradar); SendFactionMessage(15,0xFF0000FF,formatradar);
}
}
else if(PlayerInfo[playerid][pWanted]<=4)
{
TextDrawShowForPlayer(playerid, Intro[0]);
PlayerInfo[playerid][pHideIntro2]=1;
PlayerInfo[playerid][pWantedSeconds]=120*3;
PlayerInfo[playerid][pWanted]+=1;
SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
format(formatradar,256,"[SUSPECT]{0040FF} Ти си заподозрян в престъпление: Превишена скорост, ниво на издирване: %d",PlayerInfo[playerid][pWanted]);
SendClientMessage(playerid,0xFF0000FF,formatradar);
format(formatradar,256,"[SUSPECT]{0040FF} %s е заподозрян в престъпление: Превишена скорост, ниво на издирване: %d",pname[playerid],PlayerInfo[playerid][pWanted]);
SendFactionMessage(13,0xFF0000FF,formatradar); SendFactionMessage(15,0xFF0000FF,formatradar);
}
}
}
}
}
return 0;
}
stock GetVehicleColor(vehicleID, &color1, &color2)
{
vehicleID = PROPERTY_OFFSET(vehicleID);
if(existproperty(_, "", vehicleID))
{
new
colorStr[24],
strPos
;
getproperty(_, "", vehicleID, colorStr);
strunpack(colorStr, colorStr);
if((strPos = strfind(colorStr, "-")) != -1)
{
color1 = strval(colorStr);
color2 = strval(colorStr[strPos + 1]);
return 1;
}
}
return 0;
}
stock GetVehicleName(vehicleid)
{
new String[256];
format(String,sizeof(String),"%s",VehicleNames[GetVehicleModel(vehicleid) - 400]);
return String;
}
stock bool:GetPosInFrontOfPoint(&Float:OutputX, &Float:OutputY, Float:Angle, Float:Distance)
{
if(!Distance) return false;
OutputX += floatmul(Distance, floatsin(-Angle, degrees));
OutputY += floatmul(Distance, floatcos(-Angle, degrees));
return true;
}
stock RestartPlayerSkin(playerid)
{
if(PlayerInfo[playerid][pADuty]==1)
{
return true;
}
if(PlayerInfo[playerid][pTeam]==0)
{
if(firstskin[playerid]==0)  SetPlayerSkin(playerid,19);
if(firstskin[playerid]==1)  SetPlayerSkin(playerid,23);
if(firstskin[playerid]==2)  SetPlayerSkin(playerid,30);
if(firstskin[playerid]==3)  SetPlayerSkin(playerid,29);
if(firstskin[playerid]==4)  SetPlayerSkin(playerid,46);
if(firstskin[playerid]==5)  SetPlayerSkin(playerid,45);
if(firstskin[playerid]==6)  SetPlayerSkin(playerid,55);
if(firstskin[playerid]==7)  SetPlayerSkin(playerid,101);
if(firstskin[playerid]==8)  SetPlayerSkin(playerid,98);
if(firstskin[playerid]==9)  SetPlayerSkin(playerid,156);
if(firstskin[playerid]==10)  SetPlayerSkin(playerid,59);
if(firstskin[playerid]==11)  SetPlayerSkin(playerid,55);
if(firstskin[playerid]==12)  SetPlayerSkin(playerid,140);
if(firstskin[playerid]==13)  SetPlayerSkin(playerid,17);
if(firstskin[playerid]==14)  SetPlayerSkin(playerid,141);
if(firstskin[playerid]==15)  SetPlayerSkin(playerid,237);
if(firstskin[playerid]==16)  SetPlayerSkin(playerid,111);
if(firstskin[playerid]==17)  SetPlayerSkin(playerid,246);
if(firstskin[playerid]==18)  SetPlayerSkin(playerid,93);
if(firstskin[playerid]==19)  SetPlayerSkin(playerid,100);
if(firstskin[playerid]==20)  SetPlayerSkin(playerid,93);
}
if(PlayerInfo[playerid][pTeam]==1 && PlayerInfo[playerid][pRank]==1)
{
if(firstskin[playerid]==0)  SetPlayerSkin(playerid,19);
if(firstskin[playerid]==1)  SetPlayerSkin(playerid,23);
if(firstskin[playerid]==2)  SetPlayerSkin(playerid,30);
if(firstskin[playerid]==3)  SetPlayerSkin(playerid,29);
if(firstskin[playerid]==4)  SetPlayerSkin(playerid,46);
if(firstskin[playerid]==5)  SetPlayerSkin(playerid,45);
if(firstskin[playerid]==6)  SetPlayerSkin(playerid,55);
if(firstskin[playerid]==7)  SetPlayerSkin(playerid,101);
if(firstskin[playerid]==8)  SetPlayerSkin(playerid,98);
if(firstskin[playerid]==9)  SetPlayerSkin(playerid,156);
if(firstskin[playerid]==10)  SetPlayerSkin(playerid,59);
if(firstskin[playerid]==11)  SetPlayerSkin(playerid,55);
if(firstskin[playerid]==12)  SetPlayerSkin(playerid,140);
if(firstskin[playerid]==13)  SetPlayerSkin(playerid,17);
if(firstskin[playerid]==14)  SetPlayerSkin(playerid,141);
if(firstskin[playerid]==15)  SetPlayerSkin(playerid,237);
if(firstskin[playerid]==16)  SetPlayerSkin(playerid,111);
if(firstskin[playerid]==17)  SetPlayerSkin(playerid,246);
if(firstskin[playerid]==18)  SetPlayerSkin(playerid,93);
if(firstskin[playerid]==19)  SetPlayerSkin(playerid,100);
if(firstskin[playerid]==20)  SetPlayerSkin(playerid,93);
}
if(PlayerInfo[playerid][pRank]>1 && PlayerInfo[playerid][pTeam]==1)
SetPlayerSkin(playerid,gangrankskin[PlayerInfo[playerid][pTeam]][PlayerInfo[playerid][pRank]]);
if(PlayerInfo[playerid][pTeam]>1)
SetPlayerSkin(playerid,gangrankskin[PlayerInfo[playerid][pTeam]][PlayerInfo[playerid][pRank]]);
if(PlayerInfo[playerid][pTeam]==13 && dutypolice[playerid]==0)
{
SetPlayerSkin(playerid,PlayerInfo[playerid][pNSkin]);
}
return true;
}
stock RestartPlayerColor(playerid)
{
if(PlayerInfo[playerid][pADuty]==0)
{
if(PlayerInfo[playerid][pInvisible]==0)
{
SetPlayerColor(playerid,TeamInfo[PlayerInfo[playerid][pTeam]][tRCOLOR]);
if(PlayerInfo[playerid][pTeam]==0)
{
SetPlayerColor(playerid,0xFFFFFFFF);
}
}
else
{
SetPlayerColor(playerid,0xFFFFFF00);
}
}
if(PlayerInfo[playerid][pTeam]==15)
{
if(hidedf==1)
{
SetPlayerColor(playerid,0xFFFFFF00);
}
}
if(PlayerInfo[playerid][pTeam]==13 && dutypolice[playerid]==0)
{
SetPlayerColor(playerid,0xFFFFFFFF);
}
}
stock RestartVIPLaser(playerid)
{
//<<<<< VIP LASER >>>>
if(PlayerInfo[playerid][pLaser]==1)
{
if(PlayerInfo[playerid][pVip]>3 || freevip==1)
{
SetPVarInt(playerid, "color", 0);
if(PlayerInfo[playerid][pTeam]==1)
{
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==2)
{
SetPVarInt(playerid, "color", 19083);
}
if(PlayerInfo[playerid][pTeam]==13 || PlayerInfo[playerid][pTeam]==14 || PlayerInfo[playerid][pTeam]==6)
{
SetPVarInt(playerid, "color", 19080);
}
if(PlayerInfo[playerid][pTeam]==8)
{
PlayerInfo[playerid][pLaser]=1;
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==15)
{
SetPVarInt(playerid, "color", 19084);
}
}
}
//<<<<< VIP LASER >>>>
}
stock strreplace(string[], const search[], const replacement[], bool:ignorecase = false, pos = 0, limit = -1, maxlength = sizeof(string)) {
// No need to do anything if the limit is 0.
if (limit == 0)
return 0;
new
sublen = strlen(search),
replen = strlen(replacement),
bool:packed = ispacked(string),
maxlen = maxlength,
len = strlen(string),
count5 = 0
;
// "maxlen" holds the max string length (not to be confused with "maxlength", which holds the max. array size).
// Since packed strings hold 4 characters per array slot, we multiply "maxlen" by 4.
if (packed)
maxlen *= 4;
// If the length of the substring is 0, we have nothing to look for..
if (!sublen)
return 0;
// In this line we both assign the return value from "strfind" to "pos" then check if it's -1.
while (-1 != (pos = strfind(string, search, ignorecase, pos))) {
// Delete the string we found
strdel(string, pos, pos + sublen);
len -= sublen;
// If there's anything to put as replacement, insert it. Make sure there's enough room first.
if (replen && len + replen < maxlen) {
strins(string, replacement, pos, maxlength);
pos += replen;
len += replen;
}
// Is there a limit of number of replacements, if so, did we break it?
if (limit != -1 && ++count5 >= limit)
break;
}
return count5;
}
stock RemovePlayerWeapon(playerid, weaponid)
{
new plyWeapons[12];
new plyAmmo[12];
for(new slot = 0; slot != 12; slot++)
{
new wep, ammo;
GetPlayerWeaponData(playerid, slot, wep, ammo);
if(wep != weaponid)
{
GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
}
}
ResetPlayerWeapons(playerid);
for(new slot = 0; slot != 12; slot++)
{
GivePlayerWeapon(playerid, plyWeapons[slot], plyAmmo[slot]);
}
}
stock IsPlayerInRangeOfVehicle(playerid, vehicleid, Float:Range)
{
new Float:Pos[3];
GetVehiclePos(vehicleid, Pos[0], Pos[1], Pos[2]);
return IsPlayerInRangeOfPoint(playerid, Range, Pos[0], Pos[1], Pos[2]);
}
GetNumberOfPages()
{
if((gTotalItems >= SELECTION_ITEMS) && (gTotalItems % SELECTION_ITEMS) == 0)
{
return (gTotalItems / SELECTION_ITEMS);
}
else return (gTotalItems / SELECTION_ITEMS) + 1;
}
stock randomex(min, max)
{
//Credits to y_less
new rand = random(max-min)+min;
return rand;
}
PlayerText:CreateCurrentPageTextDraw(playerid, Float:Xpos, Float:Ypos)
{
new PlayerText:txtInit;
txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, "0/0");
PlayerTextDrawUseBox(playerid, txtInit, 0);
PlayerTextDrawLetterSize(playerid, txtInit, 0.4, 1.1);
PlayerTextDrawFont(playerid, txtInit, 1);
PlayerTextDrawSetShadow(playerid, txtInit, 0);
PlayerTextDrawSetOutline(playerid, txtInit, 1);
PlayerTextDrawColor(playerid, txtInit, 0xACCBF1FF);
PlayerTextDrawShow(playerid, txtInit);
return txtInit;
}
PlayerText:CreatePlayerDialogButton(playerid, Float:Xpos, Float:Ypos, Float:Width, Float:Height, button_text[])
{
new PlayerText:txtInit;
txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, button_text);
PlayerTextDrawUseBox(playerid, txtInit, 1);
PlayerTextDrawBoxColor(playerid, txtInit, 0x000000FF);
PlayerTextDrawBackgroundColor(playerid, txtInit, 0x000000FF);
PlayerTextDrawLetterSize(playerid, txtInit, 0.4, 1.1);
PlayerTextDrawFont(playerid, txtInit, 1);
PlayerTextDrawSetShadow(playerid, txtInit, 0); // no shadow
PlayerTextDrawSetOutline(playerid, txtInit, 0);
PlayerTextDrawColor(playerid, txtInit, 0x4A5A6BFF);
PlayerTextDrawSetSelectable(playerid, txtInit, 1);
PlayerTextDrawAlignment(playerid, txtInit, 2);
PlayerTextDrawTextSize(playerid, txtInit, Height, Width); // The width and height are reversed for centering.. something the game does <g>
PlayerTextDrawShow(playerid, txtInit);
return txtInit;
}
PlayerText:CreatePlayerHeaderTextDraw(playerid, Float:Xpos, Float:Ypos, header_text[])
{
new PlayerText:txtInit;
txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, header_text);
PlayerTextDrawUseBox(playerid, txtInit, 0);
PlayerTextDrawLetterSize(playerid, txtInit, 1.25, 3.0);
PlayerTextDrawFont(playerid, txtInit, 0);
PlayerTextDrawSetShadow(playerid, txtInit, 0);
PlayerTextDrawSetOutline(playerid, txtInit, 1);
PlayerTextDrawColor(playerid, txtInit, 0xACCBF1FF);
PlayerTextDrawShow(playerid, txtInit);
return txtInit;
}
PlayerText:CreatePlayerBackgroundTextDraw(playerid, Float:Xpos, Float:Ypos, Float:Width, Float:Height)
{
new PlayerText:txtBackground = CreatePlayerTextDraw(playerid, Xpos, Ypos,
"                                            ~n~"); // enough space for everyone
PlayerTextDrawUseBox(playerid, txtBackground, 1);
PlayerTextDrawBoxColor(playerid, txtBackground, 0x4A5A6BBB);
PlayerTextDrawLetterSize(playerid, txtBackground, 5.0, 5.0);
PlayerTextDrawFont(playerid, txtBackground, 0);
PlayerTextDrawSetShadow(playerid, txtBackground, 0);
PlayerTextDrawSetOutline(playerid, txtBackground, 0);
PlayerTextDrawColor(playerid, txtBackground,0x000000FF);
PlayerTextDrawTextSize(playerid, txtBackground, Width, Height);
PlayerTextDrawBackgroundColor(playerid, txtBackground, 0x4A5A6BBB);
PlayerTextDrawShow(playerid, txtBackground);
return txtBackground;
}
PlayerText:CreateModelPreviewTextDraw(playerid, modelindex, Float:Xpos, Float:Ypos, Float:width, Float:height)
{
new PlayerText:txtPlayerSprite = CreatePlayerTextDraw(playerid, Xpos, Ypos, ""); // it has to be set with SetText later
PlayerTextDrawFont(playerid, txtPlayerSprite, TEXT_DRAW_FONT_MODEL_PREVIEW);
PlayerTextDrawColor(playerid, txtPlayerSprite, 0xFFFFFFFF);
PlayerTextDrawBackgroundColor(playerid, txtPlayerSprite, 0x88888899);
PlayerTextDrawTextSize(playerid, txtPlayerSprite, width, height); // Text size is the Width:Height
PlayerTextDrawSetPreviewModel(playerid, txtPlayerSprite, modelindex);
PlayerTextDrawSetSelectable(playerid, txtPlayerSprite, 1);
PlayerTextDrawShow(playerid,txtPlayerSprite);
return txtPlayerSprite;
}
DestroyPlayerModelPreviews(playerid)
{
new x=0;
while(x != SELECTION_ITEMS) {
if(gSelectionItems[playerid][x] != PlayerText:INVALID_TEXT_DRAW) {
PlayerTextDrawDestroy(playerid, gSelectionItems[playerid][x]);
gSelectionItems[playerid][x] = PlayerText:INVALID_TEXT_DRAW;
}
x++;
}
}
ShowPlayerModelPreviews(playerid)
{
new x=0;
new Float:BaseX = DIALOG_BASE_X;
new Float:BaseY = DIALOG_BASE_Y - (SPRITE_DIM_Y * 0.33); // down a bit
new linetracker = 0;
new itemat = GetPVarInt(playerid, "skinc_page") * SELECTION_ITEMS;
// Destroy any previous ones created
DestroyPlayerModelPreviews(playerid);
while(x != SELECTION_ITEMS && itemat < gTotalItems) {
if(linetracker == 0) {
BaseX = DIALOG_BASE_X + 25.0; // in a bit from the box
BaseY += SPRITE_DIM_Y + 1.0; // move on the Y for the next line
}
if(dutypolice[playerid]==0){
gSelectionItems[playerid][x] = CreateModelPreviewTextDraw(playerid, gItemList[itemat], BaseX, BaseY, SPRITE_DIM_X, SPRITE_DIM_Y);
gSelectionItemsTag[playerid][x] = gItemList[itemat];
}
else if(dutypolice[playerid]==1)
{
gSelectionItems[playerid][x] = CreateModelPreviewTextDraw(playerid, cItemList[itemat], BaseX, BaseY, SPRITE_DIM_X, SPRITE_DIM_Y);
gSelectionItemsTag[playerid][x] = cItemList[itemat];
}
BaseX += SPRITE_DIM_X + 1.0; // move on the X for the next sprite
linetracker++;
if(linetracker == ITEMS_PER_LINE) linetracker = 0;
itemat++;
x++;
}
}
UpdatePageTextDraw(playerid)
{
new PageText[64+1];
format(PageText, 64, "%d/%d", GetPVarInt(playerid,"skinc_page") + 1, GetNumberOfPages());
PlayerTextDrawSetString(playerid, gCurrentPageTextDrawId[playerid], PageText);
}
CreateSelectionMenu(playerid)
{
gBackgroundTextDrawId[playerid] = CreatePlayerBackgroundTextDraw(playerid, DIALOG_BASE_X, DIALOG_BASE_Y + 20.0, DIALOG_WIDTH, DIALOG_HEIGHT);
gHeaderTextDrawId[playerid] = CreatePlayerHeaderTextDraw(playerid, DIALOG_BASE_X, DIALOG_BASE_Y, HEADER_TEXT);
gCurrentPageTextDrawId[playerid] = CreateCurrentPageTextDraw(playerid, DIALOG_WIDTH - 30.0, DIALOG_BASE_Y + 15.0);
if(dutypolice[playerid]==0)
{
gNextButtonTextDrawId[playerid] = CreatePlayerDialogButton(playerid, DIALOG_WIDTH - 30.0, DIALOG_BASE_Y+DIALOG_HEIGHT+100.0, 50.0, 16.0, NEXT_TEXT);
gPrevButtonTextDrawId[playerid] = CreatePlayerDialogButton(playerid, DIALOG_WIDTH - 90.0, DIALOG_BASE_Y+DIALOG_HEIGHT+100.0, 50.0, 16.0, PREV_TEXT);
}
ShowPlayerModelPreviews(playerid);
UpdatePageTextDraw(playerid);
}
DestroySelectionMenu(playerid)
{
DestroyPlayerModelPreviews(playerid);
PlayerTextDrawDestroy(playerid, gHeaderTextDrawId[playerid]);
PlayerTextDrawDestroy(playerid, gBackgroundTextDrawId[playerid]);
PlayerTextDrawDestroy(playerid, gCurrentPageTextDrawId[playerid]);
PlayerTextDrawDestroy(playerid, gNextButtonTextDrawId[playerid]);
PlayerTextDrawDestroy(playerid, gPrevButtonTextDrawId[playerid]);
gHeaderTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gBackgroundTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gCurrentPageTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gNextButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gPrevButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
}
HandlePlayerItemSelection(playerid, selecteditem)
{
// In this case we change the player's skin
if(gSelectionItemsTag[playerid][selecteditem] >= 0 && gSelectionItemsTag[playerid][selecteditem] < 319) {
if(PlayerInfo[playerid][pADuty]==1){SetPlayerSkin(playerid, gSelectionItemsTag[playerid][selecteditem]);}
if(dutypolice[playerid]==0 && PlayerInfo[playerid][pADuty]==1)
{
PlayerInfo[playerid][pASkin]=gSelectionItemsTag[playerid][selecteditem];
}
else if( PlayerInfo[playerid][pADuty]==0)
{
PlayerInfo[playerid][pNSkin]=gSelectionItemsTag[playerid][selecteditem];
SetPlayerSkin(playerid,PlayerInfo[playerid][pNSkin]);
if(dutypolice[playerid]==1)
{
dutypolice[playerid]=0;
}
}
return;
}
}
stock ToggleEngine(vehicleid, toggle)
{
new engine, lights, alarm, doors, bonnet, boot, objective;
GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
SetVehicleParamsEx(vehicleid, toggle, lights, alarm, doors, bonnet, boot, objective);
//	printf("%d /// %s ========= %d /// %s",engine,engine,toggle,toggle);
}
stock ToggleAlarm(vehicleid, toggle)
{
new engine, lights, alarm, doors, bonnet, boot, objective;
GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
SetVehicleParamsEx(vehicleid, engine, lights, toggle, doors, bonnet, boot, objective);
}
stock ToggleBonnet(vehicleid, toggle)
{
new engine, lights, alarm, doors, bonnet, boot, objective;
GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, toggle, boot, objective);
}
stock ToggleLights(vehicleid, toggle)
{
new engine, lights, alarm, doors, bonnet, boot, objective;
GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
SetVehicleParamsEx(vehicleid, engine, toggle, alarm, doors, bonnet, boot, objective);
}
stock ToggleBoot(vehicleid, toggle)
{
new engine, lights, alarm, doors, bonnet, boot, objective;
GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, toggle, objective);
}
stock IsPlayerAiming(playerid) {
new anim=GetPlayerAnimationIndex(playerid);
if (((anim >= 1160) && (anim <= 1163))||(anim==1167)||(anim==1365) ||
(anim==1643)||(anim==1453)||(anim==220)) return 1;
return 0;
}
stock IsPlayerInWater(playerid) {
new anim=GetPlayerAnimationIndex(playerid);
if (((anim >=  1538) && (anim <= 1542))||(anim==1544)||(anim==1250)||(anim==1062)) return 1;
return 0;
}
stock SetPlayerCash(playerid, money)
{
PlayerInfo[playerid][pCash]=money;
ResetPlayerMoney(playerid);
GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
return PlayerInfo[playerid][pCash];
}
stock GivePlayerCash(playerid, money)
{
PlayerInfo[playerid][pCash]+=money;
ResetPlayerMoney(playerid);
GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
return PlayerInfo[playerid][pCash];
}
stock GivePlayerCashCS(playerid, money)
{
PlayerInfo[playerid][pCashCS]+=money;
new formatcash[256];
format(formatcash,256,"~g~$%d",PlayerInfo[playerid][pCashCS]);
TextDrawSetString(cash[playerid], formatcash);
ResetPlayerMoney(playerid);
GivePlayerMoney(playerid,PlayerInfo[playerid][pCashCS]);
return PlayerInfo[playerid][pCashCS];
}
//
stock GiveTeamCash(playerid, ep)
{
TeamInfo[PlayerInfo[playerid][pTeam]][tCash]+=ep;
}
//
stock UpdatePlayerStatsTexts(playerid)
{
if(PlayerInfo[playerid][pTeam]>0)
{
if(PlayerInfo[playerid][pStyle2]==0)
{
TextDrawHideForPlayer(playerid, statistic[playerid]);
format(stringstatistic[playerid], 115, "~b~~h~Rep Level: %d          ~g~~h~EP: %d/%d~n~~b~~p~~h~Gang Level: ~r~%d          ~g~~h~~h~Gang EP: ~r~%d/~r~%d", PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pEP],PlayerInfo[playerid][pLevel]+6,TeamInfo[PlayerInfo[playerid][pTeam]][tLevel],TeamInfo[PlayerInfo[playerid][pTeam]][tKills],TeamInfo[PlayerInfo[playerid][pTeam]][tLevel]+12);
TextDrawSetString(statistic[playerid], stringstatistic[playerid]);
TextDrawFont(statistic[playerid],2);
TextDrawShowForPlayer(playerid, statistic[playerid]);
}
else if(PlayerInfo[playerid][pStyle2]==1)
{
TextDrawHideForPlayer(playerid, statistic[playerid]);
format(stringstatistic[playerid], 115, "~y~Rep Level: ~w~%d          ~y~EP: ~w~%d/%d~n~~y~Gang Level: ~w~%d          ~y~Gang EP: ~w~%d/%d", PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pEP],PlayerInfo[playerid][pLevel]+6,TeamInfo[PlayerInfo[playerid][pTeam]][tLevel],TeamInfo[PlayerInfo[playerid][pTeam]][tKills],TeamInfo[PlayerInfo[playerid][pTeam]][tLevel]+12);
TextDrawSetString(statistic[playerid], stringstatistic[playerid]);
TextDrawFont(statistic[playerid],3);
TextDrawShowForPlayer(playerid, statistic[playerid]);
}
else if(PlayerInfo[playerid][pStyle2]==2)
{
TextDrawHideForPlayer(playerid, statistic[playerid]);
format(stringstatistic[playerid], 115, "~g~~h~~h~Rep Level: ~w~%d          ~y~EP: ~w~%d/%d~n~~b~~h~~h~Gang Level: ~w~%d          ~p~~h~Gang EP: ~w~%d/%d", PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pEP],PlayerInfo[playerid][pLevel]+6,TeamInfo[PlayerInfo[playerid][pTeam]][tLevel],TeamInfo[PlayerInfo[playerid][pTeam]][tKills],TeamInfo[PlayerInfo[playerid][pTeam]][tLevel]+12);
TextDrawSetString(statistic[playerid], stringstatistic[playerid]);
TextDrawFont(statistic[playerid],1);
TextDrawShowForPlayer(playerid, statistic[playerid]);
}
else if(PlayerInfo[playerid][pStyle2]==3)
{
TextDrawHideForPlayer(playerid, statistic[playerid]);
format(stringstatistic[playerid], 115, "~p~~h~Rep Level: %d          EP: %d/%d~n~~b~~h~Gang Level: ~r~%d          Gang EP: ~r~~h~%d/~r~%d", PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pEP],PlayerInfo[playerid][pLevel]+6,TeamInfo[PlayerInfo[playerid][pTeam]][tLevel],TeamInfo[PlayerInfo[playerid][pTeam]][tKills],TeamInfo[PlayerInfo[playerid][pTeam]][tLevel]+12);
TextDrawSetString(statistic[playerid], stringstatistic[playerid]);
TextDrawFont(statistic[playerid],1);
TextDrawShowForPlayer(playerid, statistic[playerid]);
}
}
else
{
if(PlayerInfo[playerid][pStyle2]==0)
{
TextDrawHideForPlayer(playerid, statistic[playerid]);
format(stringstatistic[playerid], 115, "~b~~h~Rep Level: %d          ~g~~h~EP: %d/%d", PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pEP],PlayerInfo[playerid][pLevel]+6);
TextDrawSetString(statistic[playerid], stringstatistic[playerid]);
TextDrawFont(statistic[playerid],2);
TextDrawShowForPlayer(playerid, statistic[playerid]);
}
else if(PlayerInfo[playerid][pStyle2]==1)
{
TextDrawHideForPlayer(playerid, statistic[playerid]);
format(stringstatistic[playerid], 115, "~y~Rep Level: ~w~%d          ~y~EP: ~w~%d/%d", PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pEP],PlayerInfo[playerid][pLevel]+6);
TextDrawSetString(statistic[playerid], stringstatistic[playerid]);
TextDrawFont(statistic[playerid],3);
TextDrawShowForPlayer(playerid, statistic[playerid]);
}
else if(PlayerInfo[playerid][pStyle2]==2)
{
TextDrawHideForPlayer(playerid, statistic[playerid]);
format(stringstatistic[playerid], 115, "~g~~h~Rep Level: %d          EP: %d/%d", PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pEP],PlayerInfo[playerid][pLevel]+6);
TextDrawSetString(statistic[playerid], stringstatistic[playerid]);
TextDrawFont(statistic[playerid],1);
TextDrawShowForPlayer(playerid, statistic[playerid]);
}
else if(PlayerInfo[playerid][pStyle2]==3)
{
TextDrawHideForPlayer(playerid, statistic[playerid]);
format(stringstatistic[playerid], 115, "~p~~h~Rep Level: %d          EP: %d/%d", PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pEP],PlayerInfo[playerid][pLevel]+6);
TextDrawSetString(statistic[playerid], stringstatistic[playerid]);
TextDrawFont(statistic[playerid],1);
TextDrawShowForPlayer(playerid, statistic[playerid]);
}
}
}
stock GiveTeamEP(playerid, ep)
{
TeamInfo[PlayerInfo[playerid][pTeam]][tKills]+=ep;
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam]==PlayerInfo[playerid][pTeam])
{
if(statisticset[i] == 0)
{
UpdatePlayerStatsTexts(i);
}
}
}
}
}
stock GiveTeamLevel(playerid, ep)
{
TeamInfo[PlayerInfo[playerid][pTeam]][tKills]-=TeamInfo[PlayerInfo[playerid][pTeam]][tLevel]+12;
TeamInfo[PlayerInfo[playerid][pTeam]][tLevel]+=ep;
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam]==PlayerInfo[playerid][pTeam])
{
if(statisticset[i] == 0)
{
UpdatePlayerStatsTexts(i);
}
}
}
}
}
stock GiveTeamCash2(team, ep)
{
TeamInfo[team][tCash]+=ep;
}
//
stock GiveTeamEP2(team, ep)
{
TeamInfo[team][tKills]+=ep;
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam]==team)
{
if(statisticset[i] == 0)
{
UpdatePlayerStatsTexts(i);
}
}
}
}
}
stock GiveTeamLevel2(team, ep)
{
TeamInfo[team][tLevel]+=ep;
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam]==team)
{
if(statisticset[i] == 0)
{
UpdatePlayerStatsTexts(i);
}
}
}
}
}
stock GivePlayerEP(playerid, ep)
{
PlayerInfo[playerid][pEP]+=ep;
if(statisticset[playerid] == 0)
{
UpdatePlayerStatsTexts(playerid);
}
}
stock GivePlayerLevel(playerid, level)
{
PlayerInfo[playerid][pLevel]+=level;
SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
if(statisticset[playerid] == 0)
{
UpdatePlayerStatsTexts(playerid);
}
}
stock GetVehicleKmh(vehicleid)
{
new Float:x, Float:y, Float:z, vel;
GetVehicleVelocity(vehicleid, x, y, z);
vel=floatround(floatsqroot(x*x + y*y + z*z) * 180);
return vel;
}
//stock and other - location - closee
//main - location 2 - open
strtok(const string[], &index)
{
new length=strlen(string);
while ((index<length) && (string[index] <= ' '))
{
index++;
}
new offset=index;
new result[20];
while ((index<length) && (string[index]>' ') && ((index - offset)<(sizeof(result) - 1)))
{
result[index - offset]=string[index];
index++;
}
result[index - offset]=EOS;
return result;
}
IsNumeric(const string[])
{
for (new i=0, j=strlen(string); i<j; i++)
{
if (string[i]>'9'||string[i]<'0') return 0;
}
return 1;
}
ReturnUser(text[], playerid=INVALID_PLAYER_ID)
{
new pos=0;
while (text[pos]<0x21)
{
if (text[pos]==0) return INVALID_PLAYER_ID;
pos++;
}
new userid=INVALID_PLAYER_ID;
if (IsNumeric(text[pos]))
{
userid=strval(text[pos]);
if (userid >=0 && userid<MAX_PLAYERS)
{
if(!IsPlayerConnected(userid))
{
userid=INVALID_PLAYER_ID;
}
else
{
return userid;
}
}
}
new len=strlen(text[pos]);
new name[MAX_PLAYER_NAME];
for (new i=0; i<MAX_PLAYERS; i++)
{
if (IsPlayerConnected(i))
{
GetPlayerName(i, name, sizeof (name));
if (strcmp(name, text[pos], true, len)==0)
{
if (len==strlen(name))
{
return i;
}
else
{
count++;
userid=i;
}
}
}
}
if (count != 1)
{
if (playerid != INVALID_PLAYER_ID)
{
if (count)
{
SendClientMessage(playerid, 0xFF0000AA, "Multiple users found, please narrow search");
}
else
{
SendClientMessage(playerid, 0xFF0000AA, "No matching user found");
}
}
userid=INVALID_PLAYER_ID;
}
return userid;
}
AntiDeAMX()
{
new a[][] =
{
"Unarmed (Fist)",
"Brass K"
};
#pragma unused a
}
main()
{
printf("Сървърът беше пуснат успешно.");
printf("INTENSE, version: 1.0\n\n");
printf("·Copyright (C) 2018-2021, Daniel Miroslavov Andreev");
printf("·Всички права са запазени.\n\n");
}
//main - location 2 - close
/*
stock GetPlayerID(const name[])
{
for(new i = 0; i < MAX_PLAYERS; i++)
{
if(!IsPlayerConnected(i)) continue;
if(!strcmp(pname[i], name))
return i;
}
return INVALID_PLAYER_ID;
}
*/
stock GetTurfID(player)
{
new turfid;
for (new t = 0; t < MAX_TURFS; t++)
{
if (IsPlayerInTurf(player, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]))
{
turfid=t;
}
}
return turfid;
}
public IsPlayerInTurf(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
new Float:X3,Float:Y3,Float:Z3;
GetPlayerPos(playerid, X3, Y3, Z3);
if((X3 <= max_x && X3 >= min_x) && (Y3 <= max_y && Y3 >= min_y)) return 1;
return 0;
}
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
/*if(IsPlayerInRangeOfPoint(playerid, 45, 1177.3788,-2038.0172,69.0078))
{
SetPlayerArmedWeapon(playerid,0);
}*/
return 1;
}
CarmodDialog(playerid)
{
ShowPlayerDialog(playerid,1111,DIALOG_STYLE_LIST,"Select things to put in your car","Nitro\nCar Color\nWheels\nStereo\nHydraulics\nCar Components","Select","Cancel");
return 1;
}
RegularCarDialog(playerid)
{
new vehmd = GetVehicleModel(GetPlayerVehicleID(playerid));
new string[128];
if(vehmd == 401 || vehmd == 496 || vehmd == 518 || vehmd == 540 || vehmd == 546 || vehmd == 589)
{string = "Spoiler\nHood\nRoof\nVents\nSideskirt\nLights\n{FF0000}Back";}
else if(vehmd == 549)
{string = "Spoiler\nHood\nVents\nSideskirt\nLights\n{FF0000}Back";}
else if(vehmd == 550)
{string = "Spoiler\nHood\nRoof\nVents\nLights\n{FF0000}Back";}
else if(vehmd == 585 || vehmd == 603)
{string = "Spoiler\nRoof\nVents\nSideskirt\nLights\n{FF0000}Back";}
else if(vehmd == 410 || vehmd == 436)
{string = "Spoiler\nRoof\nSideskirt\nLights\n{FF0000}Back";}
else if(vehmd == 439 || vehmd == 458)
{string = "Spoiler\nVents\nSideskirt\nLights\n{FF0000}Back";}
else if(vehmd == 551 || vehmd == 492 || vehmd == 529)
{string = "Spoiler\nHood\nRoof\nSideskirt\n{FF0000}Back";}
else if(vehmd == 489 || vehmd == 505)
{string = "Spoiler\nHood\nRoof\nLights\n{FF0000}Back";}
else if(vehmd == 516)
{string = "Spoiler\nHood\nSideskirt\n{FF0000}Back";}
else if(vehmd == 491 || vehmd == 517)
{string = "Spoiler\nVents\nSideskirt\n{FF0000}Back";}
else if(vehmd == 418 || vehmd == 527 || vehmd == 580)
{string = "Spoiler\nRoof\nSideskirt\n{FF0000}Back";}
else if(vehmd == 420 || vehmd == 587)
{string = "Spoiler\nHood\n{FF0000}Back";}
else if(vehmd == 547)
{string = "Spoiler\nVents\n{FF0000}Back";}
else if(vehmd == 415)
{string = "Spoiler\nSideskirt\n{FF0000}Back";}
ShowPlayerDialog(playerid,1004,DIALOG_STYLE_LIST,"Choose one",string,"Select","Cancel");
return 1;
}
stock GMXStart3()
{
SendRconCommand("gmx");
}
stock GMXStart2()
{
SaveServer();
GMXStart3();
}
stock GMXStart1()
{
SendClientMessageToAll(0x00ddffFF, "[РЕСТАРТ INFO] Понеже сървърът се рестартира, всички играчи ще бъдат {ff0000}KICKED");
SendClientMessageToAll(0x00ddffFF, "[SAVE INFO] Това се прави с цел да няма {ff0000}ощетени играчи{00ddff}, които да изгубят статистиките си");
for(new i=0; i<MAX_PLAYERS; i++)
{
PlayerInfo[i][pKick] = 1;
}
GMXStart2();
}
stock GetVehiclesCount()
{
minimumvehicles=0;
minimumvehiclesWithPrivates=0;
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(IsValidVehicle(cars))
{
minimumvehicles++;
minimumvehiclesWithPrivates++;
}
}
}
public OnGameModeInit()
{
gmxsaved=0;
ATMCASH[0]= randomex(1000000,7000000);
ATMCASH[1]= randomex(1000000,7000000);
ATMCASH[2]= randomex(1000000,7000000);
ATMCASH[3]= randomex(1000000,7000000);
ATMCASH[4]= randomex(1000000,7000000);
ATMCASH[5]= randomex(200000,7000000);
ATMCASH[6]= randomex(400000,9000000);
ATMCASH[7]= randomex(900000,7000000);
ATMCASH[8]= randomex(900000,7000000);
ATMCASH[9]= randomex(900000,7000000);
ATMCASH[10]= randomex(900000,7000000);
ATMCASH[11]= randomex(900000,7000000);
ATMCASH[12]= randomex(900000,7000000);
ATMCASH[13]= randomex(900000,7000000);
ATMCASH[14]= randomex(900000,7000000);
ATMCASH[15]= randomex(900000,7000000);
ATMCASH[16]= randomex(900000,7000000);
ATMCASH[17]= randomex(900000,7000000);
ATMCASH[17]= randomex(234000,760230);
ATMCASH[18]= randomex(334000,760230);
ATMCASH[19]= randomex(434000,960230);
ATMCASH[20]= randomex(134000,1260230);
ATMCASH[21]= randomex(534000,860230);
ATMCASH[23]= randomex(234000,660230);
ATMCASH[24]= randomex(134000,260230);
ATMCASH[25]= randomex(334000,560230);
ATMCASH[26]= randomex(634000,960230);
ATMCASH[9997]= randomex(2900000,10000000); ATMCASH[9998]= randomex(3900000,12000000); ATMCASH[9999]= randomex(3200000,11000000); //BANK IDS
CreateDynamicMapIcon(2416.8391,-670.5904,127.1158, 23, -1, -1, -1, -1, 300);
CreateDynamicMapIcon(1047.4351,1006.8017,11.0000, 52, -1, -1, -1, -1, 300);
CreateDynamicMapIcon(-1492.1313,920.0684,7.1875, 52, -1, -1, -1, -1, 300);
CreateDynamicMapIcon(1481.0358,-1772.3138,18.7958, 52, -1, -1, -1, -1, 300);
CreateDynamicMapIcon(2412.5020,1123.8976,10.8203, 52, -1, -1, -1, -1, 300);
//offices - open
/*	new stringoffices[21][70];
new offices[64];
for(new alo=0; alo<21; alo++)
{
format(offices, 64, "/Offices/%d.ini", alo);
if(!dini_Exists(offices)){
dini_Create(offices);
dini_IntSet(offices,"OwnerC",0);
}
if(dini_Exists(offices)){
if(dini_Int(offices,"OwnerC")==0)
{
format(stringoffices[alo],70,"Етаж %d\nПритежател:{FF0000} Няма",alo);
}
if(dini_Int(offices,"OwnerC")==1)
{
format(stringoffices[alo],70,"Етаж %d\nПритежател:{FF0000} %s",alo,dini_Get(offices, "Owner"));
}
}
}
officestext[1]=Create3DTextLabel(stringoffices[1], 0x00FF00FF,1786.4745,-1300.6366,22.2109,10,0,0);
officestext[2]=Create3DTextLabel(stringoffices[2], 0x00FF00FF,1786.4745,-1300.6366,27.6719,10,0,0);
officestext[3]=Create3DTextLabel(stringoffices[3], 0x00FF00FF,1786.4745,-1300.6366,33.1250,10,0,0);
officestext[4]=Create3DTextLabel(stringoffices[4], 0x00FF00FF,1786.4745,-1300.6366,38.5781,10,0,0);
officestext[5]=Create3DTextLabel(stringoffices[5], 0x00FF00FF,1786.4745,-1300.6366,44.0391,10,0,0);
officestext[6]=Create3DTextLabel(stringoffices[6], 0x00FF00FF,1786.4745,-1300.6366,49.4453,10,0,0);
officestext[7]=Create3DTextLabel(stringoffices[7], 0x00FF00FF,1786.4745,-1300.6366,54.9063,10,0,0);
officestext[8]=Create3DTextLabel(stringoffices[8], 0x00FF00FF,1786.4745,-1300.6366,60.3594,10,0,0);
officestext[9]=Create3DTextLabel(stringoffices[9], 0x00FF00FF,1786.4745,-1300.6366,65.8125,10,0,0);
officestext[10]=Create3DTextLabel(stringoffices[10], 0x00FF00FF,1786.4745,-1300.6366,71.2734,10,0,0);
officestext[11]=Create3DTextLabel(stringoffices[11], 0x00FF00FF,1786.4745,-1300.6366,76.6719,10,0,0);
officestext[12]=Create3DTextLabel(stringoffices[12], 0x00FF00FF,1786.4745,-1300.6366,82.1328,10,0,0);
officestext[13]=Create3DTextLabel(stringoffices[13], 0x00FF00FF,1786.4745,-1300.6366,87.5859,10,0,0);
officestext[14]=Create3DTextLabel(stringoffices[14], 0x00FF00FF,1786.4745,-1300.6366,93.0391,10,0,0);
officestext[15]=Create3DTextLabel(stringoffices[16], 0x00FF00FF,1786.4745,-1300.6366,103.9188,10,0,0);
officestext[16]=Create3DTextLabel(stringoffices[15], 0x00FF00FF,1786.4745,-1300.6366,98.5145,10,0,0);
officestext[17]=Create3DTextLabel(stringoffices[17], 0x00FF00FF,1786.4745,-1300.6366,109.3594,10,0,0);
officestext[18]=Create3DTextLabel(stringoffices[18], 0x00FF00FF,1786.4745,-1300.6366,114.8227,10,0,0);
officestext[19]=Create3DTextLabel(stringoffices[19], 0x00FF00FF,1786.4745,-1300.6366,120.2656,10,0,0);
officestext[20]=Create3DTextLabel(stringoffices[20], 0x00FF00FF,1786.4745,-1300.6366,125.7335,10,0,0);
*/
//offices - close
for(new i=0; i<MAX_VEHICLES; i++)
{
if(GetVehicleModel(i) != 481
&& GetVehicleModel(i) != 509
&& GetVehicleModel(i) != 510
&& GetVehicleModel(i) != 481
&& GetVehicleModel(i) != 460
&& GetVehicleModel(i) != 476
&& GetVehicleModel(i) != 511
&& GetVehicleModel(i) != 512
&& GetVehicleModel(i) != 519
&& GetVehicleModel(i) != 513
&& GetVehicleModel(i) != 520
&& GetVehicleModel(i) != 533
&& GetVehicleModel(i) != 577
&& GetVehicleModel(i) != 593
&& GetVehicleModel(i) != 417
&& GetVehicleModel(i) != 425
&& GetVehicleModel(i) != 447
&& GetVehicleModel(i) != 469
&& GetVehicleModel(i) != 487
&& GetVehicleModel(i) != 497
&& GetVehicleModel(i) != 548
&& GetVehicleModel(i) != 563
&& GetVehicleModel(i) != 464
&& GetVehicleModel(i) != 441
&& GetVehicleModel(i) != 465
&& GetVehicleModel(i) != 501
&& GetVehicleModel(i) != 564
&& GetVehicleModel(i) != 594)
{
vehEngineStatusON[i]=0;
}
}
for(new i=0; i<MAX_VEHICLES; i++)
{
ToggleEngine(i, VEHICLE_PARAMS_ON); vehEngineStatusON[i]=1;
}
//possible crash error
for(new i=0; i<MAX_VEHICLES; i++)
{
if(GetVehicleModel(i) == 481
|| GetVehicleModel(i) == 509
|| GetVehicleModel(i) == 510
|| GetVehicleModel(i) == 481
|| GetVehicleModel(i) == 460
|| GetVehicleModel(i) == 476
|| GetVehicleModel(i) == 511
|| GetVehicleModel(i) == 512
|| GetVehicleModel(i) == 519
|| GetVehicleModel(i) == 513
|| GetVehicleModel(i) == 520
|| GetVehicleModel(i) == 533
|| GetVehicleModel(i) == 577
|| GetVehicleModel(i) == 593
|| GetVehicleModel(i) == 417
|| GetVehicleModel(i) == 425
|| GetVehicleModel(i) == 447
|| GetVehicleModel(i) == 469
|| GetVehicleModel(i) == 487
|| GetVehicleModel(i) == 497
|| GetVehicleModel(i) == 548
|| GetVehicleModel(i) == 563
|| GetVehicleModel(i) == 464
|| GetVehicleModel(i) == 441
|| GetVehicleModel(i) == 465
|| GetVehicleModel(i) == 501
|| GetVehicleModel(i) == 564
|| GetVehicleModel(i) == 594)
{
ToggleEngine(i, VEHICLE_PARAMS_ON); vehEngineStatusON[i]=1;
}
}
for(new i=0; i<MAX_VEHICLES; i++)
{
if(radioveh[i]<sizeof(radioAudioStreamNames))
{
new maxRadios=sizeof(radioAudioStreamNames)-1;
radioveh[i]=randomex(0,maxRadios);
}
}
//robbery pickups
//mapicons - location - open
//ready
CreateDynamicMapIcon(SweeperJob, 51,  -1, -1, -1, -1, 300);
CreateDynamicMapIcon(PilotJob, 51,  -1, -1, -1, -1, 300);
CreateDynamicMapIcon(DeliverJob, 51,  -1, -1, -1, -1, 300);
CreateDynamicMapIcon(BusJob, 51,  -1, -1, -1, -1, 300);
CreateDynamicMapIcon(BusJob2, 51,  -1, -1, -1, -1, 300);
CreateDynamicMapIcon(TaxiJob, 51,  -1, -1, -1, -1, 300);
CreateDynamicMapIcon(TaxiJob2, 51,  -1, -1, -1, -1, 300);
CreateDynamicMapIcon(PizzaJob, 51,  -1, -1, -1, -1, 300);
//mapicons - location - close
//drift system - open
TDLabels[0] = TextDrawCreate(500, 100, "Drift Points");
TextDrawColor(TDLabels[0], 0xFFFFFFFF);
TextDrawSetShadow(TDLabels[0], 0);
TextDrawSetOutline(TDLabels[0], 1);
TextDrawLetterSize(TDLabels[0], 0.5, 2);
TextDrawBackgroundColor(TDLabels[0], COLOR_LabelOut);
TextDrawFont(TDLabels[0], 1);
TDLabels[1] = TextDrawCreate(500, 150, "Drift Bonus");
TextDrawColor(TDLabels[1], 0x33aa33ff);
TextDrawSetShadow(TDLabels[1], 0);
TextDrawSetOutline(TDLabels[1], 1);
TextDrawLetterSize(TDLabels[1], 0.5, 2);
TextDrawBackgroundColor(TDLabels[1], COLOR_LabelOut);
TextDrawFont(TDLabels[1], 1);
TDLabels[2] = TextDrawCreate(500, 200, "Drift Cash");
TextDrawColor(TDLabels[2], COLOR_RED);
TextDrawSetShadow(TDLabels[2], 0);
TextDrawSetOutline(TDLabels[2], 1);
TextDrawLetterSize(TDLabels[2], 0.5, 2);
TextDrawBackgroundColor(TDLabels[2], COLOR_LabelOut);
TextDrawFont(TDLabels[2], 1);
//drift system - close
SetRandomWeather();
//main - location 3 - open
printf("Ако конзолата не се пусне до 15 секунди, натиснете ENTER.");
printf("Ако сървърът не дава да се влиза в него до 2 минути след пускането му, натиснете ENTER.");
SetGameModeText("INTENSE 1.0");
SendRconCommand("hostname [- INTENSE -][- BULGARIAN -][> 0.3.7 <]");
SendRconCommand("rcon_password BulgariaN");
//SendRconCommand("loadfs ls_elevator");
SendRconCommand("weburl www.soon.com");
SendRconCommand("mapname LS,LV");
//SendRconCommand("loadfs npc_record");
SendRconCommand("loadfs train_ls");
SendRconCommand("loadfs train_lv");
SendRconCommand("loadfs train_sf");
SendRconCommand("language Bulgarian");
SendRconCommand("reloadbans");
SendRconCommand("lanmode 0");
SetTimer("GeneralTimer", 500, 1);
SetTimer("GeneralTimer1s", 1000, 1);
DisableInteriorEnterExits();
EnableStuntBonusForAll(0);
AntiDeAMX();
//votetime=0;
//counttime[2]=0; counttime[1]=0; counttime[0]=0; activecount = 0;
new condition=0;
if(condition==0)
{
new i=1;
gangrankskin[i][2]=126; gangrankskin[i][3]=101; gangrankskin[i][4]=100; gangrankskin[i][5]=19; gangrankskin[i][6]=186; i++; // VIP GANG
gangrankskin[i][1]=105; gangrankskin[i][2]=149; gangrankskin[i][3]=86; gangrankskin[i][4]=106; gangrankskin[i][5]=107; gangrankskin[i][6]=107; i++; // GSF GANG
gangrankskin[i][1]=103; gangrankskin[i][2]=103; gangrankskin[i][3]=102; gangrankskin[i][4]=102; gangrankskin[i][5]=104; gangrankskin[i][6]=104; i++; // BALLAS GANG
gangrankskin[i][1]=109; gangrankskin[i][2]=109; gangrankskin[i][3]=110; gangrankskin[i][4]=110; gangrankskin[i][5]=108; gangrankskin[i][6]=108; i++; // VAGOS GANG
gangrankskin[i][1]=114; gangrankskin[i][2]=116; gangrankskin[i][3]=114; gangrankskin[i][4]=116; gangrankskin[i][5]=116; gangrankskin[i][6]=115; i++; // AZTECAS GANG
gangrankskin[i][1]=177; gangrankskin[i][2]=176; gangrankskin[i][3]=156; gangrankskin[i][4]=176; gangrankskin[i][5]=21; gangrankskin[i][6]=21; i++; // CRIPZ GANG
gangrankskin[i][1]=117; gangrankskin[i][2]=117; gangrankskin[i][3]=118; gangrankskin[i][4]=117; gangrankskin[i][5]=120; gangrankskin[i][6]=120; i++; // TRIADS GANG
gangrankskin[i][1]=28; gangrankskin[i][2]=28; gangrankskin[i][3]=127; gangrankskin[i][4]=124; gangrankskin[i][5]=113; gangrankskin[i][6]=113; i++; // ES GANG
gangrankskin[i][1]=73; gangrankskin[i][2]=291; gangrankskin[i][3]=247; gangrankskin[i][4]=100; gangrankskin[i][5]=248; gangrankskin[i][6]=248; i++; // SOA GANG
gangrankskin[i][1]=124; gangrankskin[i][2]=121; gangrankskin[i][3]=121; gangrankskin[i][4]=122; gangrankskin[i][5]=123; gangrankskin[i][6]=123; i++; // NANG GANG
gangrankskin[i][1]=111; gangrankskin[i][2]=112; gangrankskin[i][3]=112; gangrankskin[i][4]=125; gangrankskin[i][5]=124; gangrankskin[i][6]=126; i++; // ITALIAN GANG
gangrankskin[i][1]=112; gangrankskin[i][2]=112; gangrankskin[i][3]=124; gangrankskin[i][4]=101; gangrankskin[i][5]=293; gangrankskin[i][6]=293; i++; // BOUNTY GANG
gangrankskin[i][1]=280; gangrankskin[i][2]=284; gangrankskin[i][3]=281; gangrankskin[i][4]=281; gangrankskin[i][5]=281; gangrankskin[i][6]=280; i++; // LSPD GANG
gangrankskin[i][1]=286; gangrankskin[i][2]=286; gangrankskin[i][3]=295; gangrankskin[i][4]=240; gangrankskin[i][5]=166; gangrankskin[i][6]=165; i++; // FBI GANG
gangrankskin[i][1]=287; gangrankskin[i][2]=287; gangrankskin[i][3]=287; gangrankskin[i][4]=287; gangrankskin[i][5]=287; gangrankskin[i][6]=287; i++; // DF GANG
gangrankskin[i][1]=3; gangrankskin[i][2]=3; gangrankskin[i][3]=185; gangrankskin[i][4]=185; gangrankskin[i][5]=296; gangrankskin[i][6]=296; i++; // SOLDIER GANG
gangrankskin[i][1]=59; gangrankskin[i][2]=60; gangrankskin[i][3]=186; gangrankskin[i][4]=294; gangrankskin[i][5]=123; gangrankskin[i][6]=123; i++; // AZTECAS GANG
gangrankskin[i][1]=217; gangrankskin[i][2]=250; gangrankskin[i][3]=217; gangrankskin[i][4]=250; gangrankskin[i][5]=249; gangrankskin[i][6]=249; i++; // SYNDICATE GANG
gangrankskin[i][1]=22; gangrankskin[i][2]=20; gangrankskin[i][3]=22; gangrankskin[i][4]=29; gangrankskin[i][5]=19; gangrankskin[i][6]=19; i++; // BLOOD GANG
gangrankskin[i][1]=49; gangrankskin[i][2]=47; gangrankskin[i][3]=49; gangrankskin[i][4]=47; gangrankskin[i][5]=292; gangrankskin[i][6]=292; i++; // MS13 GANG
gangrankskin[i][1]=223; gangrankskin[i][2]=217; gangrankskin[i][3]=299; gangrankskin[i][4]=185; gangrankskin[i][5]=126; gangrankskin[i][6]=126; i++; // BGM GANG - RDY
gangrankskin[i][1]=7; gangrankskin[i][2]=7; gangrankskin[i][3]=48; gangrankskin[i][4]=48; gangrankskin[i][5]=47; gangrankskin[i][6]=47; i++; // 343 GANG
}
for(new alc=1; alc<MAX_CLANS; alc++)
{
format(stringloadclan, 180, "/Clans/%d.ini", alc);
if(dini_Exists(stringloadclan))
{
if(ClanInfo[alc][cLoaded]==0)
{
LoadClan(alc);
}
}
}
for(new alt=18; alt<MAX_TURFS; alt++)
{
format(stringloadturfs, 180, "/Turfs/%d.ini", alt);
if(!dini_Exists(stringloadturfs))
{
dini_Create(stringloadturfs);
dini_IntSet(stringloadturfs,"TurfOwner",0);
}
else
{
LoadTurf(alt);
}
}
for(new alt=0; alt<23; alt++)//MAX_TEAMS
{
format(stringloadteams, 180, "/Teams/%d.ini", alt);
if(dini_Exists(stringloadteams))
{
LoadTeam(alt);
}
//
else
{
dini_Create(stringloadteams);
if(alt==0)
{
TeamInfo[0][tTurfs]=300;
dini_IntSet(stringloadteams,"tTurfs",300);
}
dini_IntSet(stringloadteams,"tLevel",1);
dini_IntSet(stringloadteams,"tKills",1);
dini_Set(stringloadteams,"tRank1",TeamInfo[alt][tRank1]);
dini_Set(stringloadteams,"tRank2",TeamInfo[alt][tRank2]);
dini_Set(stringloadteams,"tRank3",TeamInfo[alt][tRank3]);
dini_Set(stringloadteams,"tRank4",TeamInfo[alt][tRank4]);
dini_Set(stringloadteams,"tRank5",TeamInfo[alt][tRank5]);
dini_Set(stringloadteams,"tRank6",TeamInfo[alt][tRank6]);
TeamInfo[alt][tLevel]=1;
TeamInfo[alt][tKills]=1;
}
///
}
for(new i=0;i<25;i++)
{
benzinkifuel[i]=500;
}
for(new aveh=0;aveh<MAX_VEHICLES;aveh++)
{
VehicleInfo[aveh][vASpawn]=-1;
new vehFuelRandom=randomex(96,100);
vehfuel[aveh]=vehFuelRandom;
}
//
new dmon[64]; format(dmon, 64, "/Top/dmon.ini");
if(dini_Exists(dmon))
{
dmtop=dini_Int(dmon, "Kills");
format(dmtop2,64,"%s",dini_Get(dmon,"Killer"));
}
else
{
dini_Create(dmon);
dmtop=20;
dini_IntSet(dmon,"Kills",20);
dini_Set(dmon,"Killer","Empty");
}
//
for(new alb=0; alb<MAX_BIZZ; alb++)
{
format(stringloadbizz, 64, "/Bizz/%d.ini", alb);
if(dini_Exists(stringloadbizz))
{
if(BizInfo[alb][bLoaded]==0)
{
maxbizz++;
HouseInfo[alb][hLevel]=-1;
LoadBizz(alb);
}
}
}
for(new ala=0; ala<MAX_GARAGES; ala++)
{
format(stringloadgarage, 64, "/Garages/%d.ini", ala);
if(dini_Exists(stringloadgarage))
{
if(GarageInfo[ala][gLoaded]==0)
{
maxgarages++;
LoadGarage(ala);
}
}
if(GarageInfo[ala][gGarage]==2)
{
CreateDynamic3DTextLabel("{ff0000}Special Tuning\n{00ff00}От тук можете да си поръчате специални части за личното ви превозно средство.\nНапишете {ffffff}/enter{00ff00} за да влезете в гаража", 0x00ff00FF, GarageInfo[ala][gX],GarageInfo[ala][gY],GarageInfo[ala][gZ], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1, GarageInfo[ala][gInterior], GarageInfo[ala][gVirtualWorld], 15.0);
}
if(GarageInfo[ala][gGarage]==1)
{
CreateDynamic3DTextLabel("От тук можете да си поръчате превозно средство, ако желаете екстри, то си го тунинговайте в специален гараж.\nНапишете {ffffff}/myveh{ff0000} за да пуснете превозното си средство на земята", 0xFF0000FF, GarageInfo[ala][gX],GarageInfo[ala][gY],GarageInfo[ala][gZ], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1, GarageInfo[ala][gInterior], GarageInfo[ala][gVirtualWorld], 15.0);
ordervehicles2[ala][0]=AddStaticVehicle(randomex(506,510),-1439.5133,1085.1772,1039.6211,97.0596,randomex(128,255),randomex(128,255)); // veh1
ordervehicles2[ala][1]=AddStaticVehicle(randomex(540,541),-1427.4404,1086.4181,1039.5515,90.8675,randomex(128,255),randomex(128,255)); // veh2
ordervehicles2[ala][2]=AddStaticVehicle(randomex(558,561),-1412.9806,1086.0549,1039.5001,90.3083,randomex(128,255),randomex(128,255)); // veh3
ordervehicles2[ala][3]=AddStaticVehicle(randomex(565,567),-1402.4427,1086.0875,1039.5295,89.7326,randomex(128,255),randomex(128,255)); // veh4
ordervehicles2[ala][4]=AddStaticVehicle(randomex(579,581),-1440.3552,1092.9641,1039.8922,117.9430,randomex(128,255),randomex(128,255)); // veh5
ordervehicles2[ala][5]=AddStaticVehicle(randomex(602,603),-1428.3652,1098.0424,1039.9530,104.3813,randomex(128,255),randomex(128,255)); // veh6
ordervehicles2[ala][6]=AddStaticVehicle(randomex(410,413),-1420.4293,1100.1049,1039.8750,104.6852,randomex(128,255),randomex(128,255)); // veh7
ordervehicles2[ala][7]=AddStaticVehicle(randomex(400,402),-1412.7378,1101.3362,1039.8586,95.3523,randomex(128,255),randomex(128,255)); // veh8
ordervehicle[ordervehicles2[ala][0]]=1;
ordervehicle[ordervehicles2[ala][1]]=1;
ordervehicle[ordervehicles2[ala][2]]=1;
ordervehicle[ordervehicles2[ala][3]]=1;
ordervehicle[ordervehicles2[ala][4]]=1;
ordervehicle[ordervehicles2[ala][5]]=1;
ordervehicle[ordervehicles2[ala][6]]=1;
ordervehicle[ordervehicles2[ala][7]]=1;
ordervehicles[ ordervehicles2[ala][0] ]=ala;
ordervehicles[ ordervehicles2[ala][1] ]=ala;
ordervehicles[ ordervehicles2[ala][2] ]=ala;
ordervehicles[ ordervehicles2[ala][3] ]=ala;
ordervehicles[ ordervehicles2[ala][4] ]=ala;
ordervehicles[ ordervehicles2[ala][5] ]=ala;
ordervehicles[ ordervehicles2[ala][6] ]=ala;
ordervehicles[ ordervehicles2[ala][7] ]=ala;
LinkVehicleToInterior(ordervehicles2[ala][0], 15);
LinkVehicleToInterior(ordervehicles2[ala][1], 15);
LinkVehicleToInterior(ordervehicles2[ala][2], 15);
LinkVehicleToInterior(ordervehicles2[ala][3], 15);
LinkVehicleToInterior(ordervehicles2[ala][4], 15);
LinkVehicleToInterior(ordervehicles2[ala][5], 15);
LinkVehicleToInterior(ordervehicles2[ala][6], 15);
LinkVehicleToInterior(ordervehicles2[ala][7], 15);
SetVehicleVirtualWorld(ordervehicles2[ala][0], ala);
SetVehicleVirtualWorld(ordervehicles2[ala][1], ala);
SetVehicleVirtualWorld(ordervehicles2[ala][2], ala);
SetVehicleVirtualWorld(ordervehicles2[ala][3], ala);
SetVehicleVirtualWorld(ordervehicles2[ala][4], ala);
SetVehicleVirtualWorld(ordervehicles2[ala][5], ala);
SetVehicleVirtualWorld(ordervehicles2[ala][6], ala);
SetVehicleVirtualWorld(ordervehicles2[ala][7], ala);
orderprice[ala][0]=randomex(10000,100000);
orderprice[ala][1]=randomex(10000,300000);
orderprice[ala][2]=randomex(10000,400000);
orderprice[ala][3]=randomex(100000,5000000);
orderprice[ala][4]=randomex(300000,7000000);
orderprice[ala][5]=randomex(50000,1000000);
orderprice[ala][6]=randomex(50000,1000000);
orderprice[ala][7]=randomex(70000,1000000);
orderlevel[ala][0]=randomex(1,5);
orderlevel[ala][1]=randomex(1,5);
orderlevel[ala][2]=randomex(5,15);
orderlevel[ala][3]=randomex(15,25);
orderlevel[ala][4]=randomex(25,35);
orderlevel[ala][5]=randomex(35,40);
orderlevel[ala][6]=randomex(1,50);
orderlevel[ala][7]=randomex(1,65);
new stringvehicle3[256];
CreateDynamic3DTextLabel("Използвайте Y за да поставите бомбата", 0xFFFFFFFF, 77.6705,1797.1055,48.4381, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, 0, 1, 35.0);
CreateDynamic3DTextLabel("Използвайте Y за да си купите оръжия, преди да почне рундът", 0xFFFFFFFF, 205.3115,1774.9149,42.6270, 35.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, 0, 1, 35.0);
CreateDynamic3DTextLabel("Използвайте Y за да поставите бомбата", 0xFFFFFFFF, 233.4423,1796.3499,51.9285, 35.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, 0, 1, 35.0);
CreateDynamic3DTextLabel("Използвайте Y за да си купите оръжия, преди да почне рундът", 0xFFFFFFFF, 150.4026,1595.6404,48.9556, 35.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, 0, 1, 35.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[ala][0]),FormatNumber(orderprice[ala][0]),orderlevel[ala][0]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[ala][0], 0, ala, 15, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[ala][1]),FormatNumber(orderprice[ala][1]),orderlevel[ala][1]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[ala][1], 0, ala, 15, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[ala][2]),FormatNumber(orderprice[ala][2]),orderlevel[ala][2]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[ala][2], 0, ala, 15, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[ala][3]),FormatNumber(orderprice[ala][3]),orderlevel[ala][3]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[ala][3], 0, ala, 15, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[ala][4]),FormatNumber(orderprice[ala][4]),orderlevel[ala][4]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[ala][4], 0, ala, 15, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[ala][5]),FormatNumber(orderprice[ala][5]),orderlevel[ala][5]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[ala][5], 0, ala, 15, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[ala][6]),FormatNumber(orderprice[ala][6]),orderlevel[ala][6]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[ala][6], 0, ala, 15, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[ala][7]),FormatNumber(orderprice[ala][7]),orderlevel[ala][7]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[ala][7], 0, ala, 15, -1, 12.0);
}
}
for(new ala=0; ala<MAX_APARTMENTS; ala++)
{
format(stringloadapartment, 180, "/Apartments/%d.ini", ala);
if(dini_Exists(stringloadapartment))
{
if(ApartmentInfo[ala][aLoaded]==0)
{
maxapartments++;
LoadApartments(ala);
}
}
}
for(new alc=0; alc<MAX_COMPANIES; alc++)
{
format(stringloadcompany, 180, "/Companies/%d.ini", alc);
if(dini_Exists(stringloadcompany))
{
if(CompanyInfo[alc][coLoaded]==0)
{
maxcompanies++;
LoadCompany(alc);
}
}
}
getdate(year, month, day);
gettime(hours,minutes,seconds);
updatedseconds=seconds;
if(hours==0) SetWorldTime(0); if(hours==6) SetWorldTime(5); if(hours==12) SetWorldTime(12); if(hours==18) SetWorldTime(16);
if(hours==1) SetWorldTime(0); if(hours==7) SetWorldTime(6); if(hours==13) SetWorldTime(12); if(hours==19) SetWorldTime(16);
if(hours==2) SetWorldTime(0); if(hours==8) SetWorldTime(7); if(hours==14) SetWorldTime(12); if(hours==20) SetWorldTime(23);
if(hours==3) SetWorldTime(0); if(hours==9) SetWorldTime(12); if(hours==15) SetWorldTime(12); if(hours==21) SetWorldTime(23);
if(hours==4) SetWorldTime(5); if(hours==10) SetWorldTime(12); if(hours==16) SetWorldTime(12); if(hours==22) SetWorldTime(2);
if(hours==5) SetWorldTime(5); if(hours==11) SetWorldTime(12); if(hours==17) SetWorldTime(16); if(hours==23) SetWorldTime(0);
//main - location 3 - close
//texts - location 2 - open
SpeedoLine[0]=TextDrawCreate(485.5190, 334.0, "-");
TextDrawFont(SpeedoLine[0], 1);
TextDrawLetterSize(SpeedoLine[0], 9.250051, 4.399999);
TextDrawSetOutline(SpeedoLine[0], 1);
TextDrawSetProportional(SpeedoLine[0], 1);
SpeedoLine[1]=TextDrawCreate(485.5190, 378.0, "-");
TextDrawFont(SpeedoLine[1], 1);
TextDrawLetterSize(SpeedoLine[1], 9.250051, 4.399999);
TextDrawSetOutline(SpeedoLine[1], 1);
TextDrawSetProportional(SpeedoLine[1], 1);
RESTART=TextDrawCreate(400.000000,328.000000," ");
TextDrawBackgroundColor(RESTART, 250);
TextDrawFont(RESTART, 1);
TextDrawLetterSize(RESTART, 0.2700,1.5500);
TextDrawColor(RESTART, -1);
TextDrawSetOutline(RESTART, 1);
TextDrawSetProportional(RESTART, 1);
AchievementText=TextDrawCreate(3.000000,308.500000,"  ~y~] ~w~NEW ACHIEVEMENT"); //499.000000,7.600000
TextDrawBackgroundColor(AchievementText, 250);
TextDrawFont(AchievementText, 2);
TextDrawLetterSize(AchievementText, 0.1799,0.9900);
TextDrawColor(AchievementText, -1);
TextDrawSetOutline(AchievementText, 1);
TextDrawSetProportional(AchievementText, 1);
ClockDate=TextDrawCreate(3.000000,34.500000,"  ~w~15:16:24"); //499.000000,7.600000
TextDrawBackgroundColor(ClockDate, 250);
TextDrawFont(ClockDate, 1);
TextDrawLetterSize(ClockDate, 0.3299,1.6999);
TextDrawColor(ClockDate, -1);
TextDrawSetOutline(ClockDate, 1);
TextDrawSetProportional(ClockDate, 1);
DMON2=TextDrawCreate(528.000000,328.000000,"~g~ + 1 Kill~n~+ 25 Armour");
TextDrawAlignment(DMON2,0);
TextDrawBackgroundColor(DMON2,0x000000ff);
TextDrawFont(DMON2,1);
TextDrawLetterSize(DMON2, 0.2800,1.8000);
TextDrawSetProportional(DMON2,1);
TextDrawSetShadow(DMON2,1);
Box[0]=TextDrawCreate(0.000000, 0.000000, "~n~");
TextDrawUseBox(Box[0], 1);
TextDrawBoxColor(Box[0], 0x000000FF);
TextDrawLetterSize(Box[0], 5.0, 12.0);
Box[1]=TextDrawCreate(0.000000, 380.000000, "~n~");
TextDrawUseBox(Box[1], 1);
TextDrawBoxColor(Box[1], 0x000000FF);
TextDrawLetterSize(Box[1], 5.0, 12.0);
IntroEnter[0]=TextDrawCreate(190.000000, 190.000000, "~w~WELCOME TO INTENSE");
TextDrawFont(IntroEnter[0], 1);
TextDrawLetterSize(IntroEnter[0], 0.570000, 1.799999);
TextDrawSetOutline(IntroEnter[0], 1);
TextDrawSetProportional(IntroEnter[0], 1);
IntroEnter[1]=TextDrawCreate(310.000000, 210.000000, "~g~~h~WE WISH YOU");
TextDrawFont(IntroEnter[1], 1);
TextDrawLetterSize(IntroEnter[1], 0.570000, 1.799999);
TextDrawSetOutline(IntroEnter[1], 1);
TextDrawSetProportional(IntroEnter[1], 1);
IntroEnter[2]=TextDrawCreate(210.000000, 240.000000, "~r~~h~A NICE GAME");
TextDrawFont(IntroEnter[2], 1);
TextDrawLetterSize(IntroEnter[2], 0.570000, 1.799999);
TextDrawSetOutline(IntroEnter[2], 1);
TextDrawSetProportional(IntroEnter[2], 1);
intensetext=TextDrawCreate(542.600000, 25.000000,"~w~GTA ~g~~h~INTE~r~NSE");
TextDrawBackgroundColor(intensetext, 250);
TextDrawFont(intensetext, 1);
TextDrawLetterSize(intensetext, 0.4,1.68);
TextDrawColor(intensetext, -1);
TextDrawSetOutline(intensetext, 1);
TextDrawSetProportional(intensetext, 1);
Intro[0]=TextDrawCreate(642.0, 1.0, "~n~");
TextDrawLetterSize(Intro[0], 0.5, 49.5);
TextDrawUseBox(Intro[0], 1);
TextDrawBoxColor(Intro[0], 0x000000CC);
TextDrawTextSize(Intro[0], -2.0, 0.0);
Intro[1]=TextDrawCreate(642.0, 1.0, "~n~");
TextDrawLetterSize(Intro[1], 0.5, 49.5);
TextDrawUseBox(Intro[1], 1);
TextDrawBoxColor(Intro[1], 0x000000ff);
TextDrawTextSize(Intro[1], -2.0, 0.0);
//
//texts - location 2 - close
//classes - location - open
AddPlayerClass(19, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(23, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(30, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(29, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(46, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(45, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(55, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(101, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(98, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(156, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(59, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(55, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(140, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(17, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(141, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(237, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(111, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(246, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(93, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(100, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
AddPlayerClass(93, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
//classes - location - close
new tmpobjid;
//fishing - open
tmpobjid = CreateDynamicObject(11497, 2152.457519, -103.895492, 1.340256, -2.299999, -0.499999, 115.799964, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(11698, 2132.660156, -99.856140, 0.904702, 0.000000, 0.000000, -49.699996, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(11698, 2130.431396, -101.744705, 0.904702, 0.000000, 0.000000, -49.699996, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(11698, 2128.195068, -103.639747, 0.904702, 0.000000, 0.000000, -49.699996, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(11698, 2125.951660, -105.541275, 0.904702, 0.000000, 0.000000, -49.699996, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(11698, 2142.276123, -111.197036, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(11698, 2140.435546, -113.513610, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(11698, 2138.589355, -115.830070, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(11698, 2136.741943, -118.154373, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(11698, 2134.906250, -120.463035, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(11698, 2133.055175, -122.795249, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
//fishing - close
//Nacionalna lotariq - open
tmpobjid = CreateDynamicObject(1568, 1071.739746, 1147.384521, 17.545492, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(1568, 1071.739746, 1140.064331, 17.545492, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(1568, 1090.159545, 1140.064331, 17.545492, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(1568, 1090.159545, 1148.914184, 17.545492, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(1568, 1098.629516, 1148.173583, 17.545492, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(1568, 1098.629516, 1139.312866, 17.545492, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(1568, 1022.649658, 1112.461669, 17.545492, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(1568, 1032.599853, 1112.461669, 17.545492, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(1568, 1028.388671, 1104.821411, 17.545492, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(1568, 1018.777954, 1104.821411, 17.545492, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(712, 1066.675170, 1080.882446, 18.096603, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(712, 1053.645507, 1102.303222, 18.096603, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(712, 1042.014648, 1064.533203, 18.096603, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(712, 1067.145385, 1034.701904, 18.096603, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(712, 1084.145141, 1054.893066, 18.096603, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(712, 1103.215332, 1029.661987, 18.096603, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3472, 1125.357055, 1048.804565, 8.214454, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3472, 1125.357055, 1093.975097, 8.214454, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3472, 1108.146850, 1069.214843, 8.214454, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3472, 1108.146850, 1117.106323, 8.214454, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3472, 1083.196777, 1117.106323, 8.214454, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3472, 1092.557250, 1100.686157, 8.214454, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3749, 1027.346923, 1164.792236, 15.487957, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(3749, 1027.346923, 1145.550659, 15.487957, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(8210, 1064.142456, 1165.332519, 12.860133, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(8210, 1116.005004, 1151.351196, 12.860133, 0.000000, 0.000000, -30.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(8210, 1156.047851, 1115.425415, 12.860133, 0.000000, 0.000000, -53.499984, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(8210, 1171.061523, 1066.026000, 12.860133, 0.000000, 0.000000, -93.099975, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(8210, 1153.488403, 1016.734252, 12.860133, 0.000000, 0.000000, -124.699951, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(8210, 1064.142456, 1165.332519, 12.860133, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(8210, 993.182312, 1165.332519, 12.860133, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(8210, 968.803833, 1137.913940, 12.860133, 0.000000, 0.000000, 96.599998, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(8210, 975.105712, 1083.447387, 12.860133, 0.000000, 0.000000, 96.599998, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19124, 1036.673217, 1158.174072, 10.155266, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19124, 1036.673217, 1155.333740, 10.155266, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19124, 1036.673217, 1152.203613, 10.155266, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19124, 1036.673217, 1149.473510, 10.155266, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19124, 1020.422851, 1158.174072, 10.155266, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19124, 1020.422851, 1155.333740, 10.155266, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19124, 1020.422851, 1152.203613, 10.155266, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(19124, 1020.422851, 1149.473510, 10.155266, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
tmpobjid = CreateDynamicObject(6965, 1087.744873, 1074.469970, 13.466800, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
//Nacionalna lotariq - close
//Los Santos Park 1 - open
CreateDynamicObject(984, 1755.21008, -1769.55798, 13.17090,   0.00000, 0.00000, 89.00000);
CreateDynamicObject(984, 1768.01221, -1769.78455, 13.17090,   0.00000, 0.00000, 89.00000);
CreateDynamicObject(984, 1780.73364, -1769.93823, 13.17090,   0.00000, 0.00000, 89.00000);
CreateDynamicObject(984, 1793.46521, -1770.15137, 13.17090,   0.00000, 0.00000, 89.00000);
CreateDynamicObject(984, 1756.57861, -1750.96399, 13.17090,   0.00000, 0.00000, 89.00000);
CreateDynamicObject(984, 1769.28821, -1751.13635, 13.17090,   0.00000, 0.00000, 89.00000);
CreateDynamicObject(984, 1782.04602, -1751.33826, 13.17090,   0.00000, 0.00000, 89.00000);
CreateDynamicObject(984, 1794.81628, -1751.51794, 13.17090,   0.00000, 0.00000, 89.00000);
CreateDynamicObject(7952, 1769.18274, -1742.37573, 12.94810,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(7952, 1810.06140, -1783.04761, 12.94810,   0.00000, 0.00000, 179.00000);
CreateDynamicObject(9697, 1757.16565, -1774.04517, 12.55220,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9697, 1755.40601, -1755.39185, 12.55220,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3660, 1798.63696, -1821.82959, 14.94660,   0.00000, 0.00000, -4.00000);
CreateDynamicObject(3660, 1761.00439, -1814.58704, 14.94660,   0.00000, 0.00000, -14.00000);
CreateDynamicObject(3660, 1780.04785, -1819.09558, 14.94660,   0.00000, 0.00000, -13.00000);
CreateDynamicObject(1360, 1809.80432, -1803.66577, 13.28210,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1809.67249, -1807.57117, 13.28210,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1810.02515, -1785.92041, 13.28210,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1810.08240, -1783.12109, 13.28210,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1810.39075, -1765.54456, 13.28210,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1810.50525, -1758.97827, 13.28210,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1290, 1811.39111, -1762.62952, 17.85910,   0.00000, 0.00000, 89.00000);
CreateDynamicObject(1290, 1789.59448, -1741.64771, 17.85910,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1290, 1767.66809, -1741.86377, 17.85910,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1290, 1746.07922, -1741.88171, 17.85910,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1729.12952, -1800.33899, 12.21917,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1714.96899, -1798.97241, 11.98985,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1768.10059, -1741.28308, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1762.86072, -1741.16455, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1757.69177, -1740.97034, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1752.53357, -1740.85376, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1747.41272, -1740.95093, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1742.24670, -1740.89294, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1737.06763, -1740.83142, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1731.99780, -1740.86829, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1773.34497, -1741.11609, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1778.55615, -1741.05859, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1783.76086, -1741.05042, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1788.92102, -1740.97266, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1794.05823, -1740.92090, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1799.33313, -1741.00427, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19868, 1804.48669, -1741.04602, 12.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(645, 1784.98621, -1816.44104, 12.51861,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(648, 1802.98816, -1818.51331, 10.39544,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(874, 1795.57776, -1817.35083, 11.64551,   0.00000, 0.00000, 77.00000);
CreateDynamicObject(874, 1801.15356, -1817.72070, 11.64551,   0.00000, 0.00000, 77.00000);
//Los Santos Park 1 - close
//Los santos 24/7 - open
CreateDynamicObject(1216, 1362.73096, -1747.08984, 13.10078,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1216, 1362.66077, -1747.73242, 13.10078,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1343, 1363.33313, -1758.99072, 13.24083,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1336.82544, -1763.13770, 12.95461,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1336.74622, -1764.94177, 12.95461,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1336.76685, -1766.75842, 12.95461,   0.00000, 0.00000, 0.00000);
//Los santos 24/7 - close
//banka exterior - open
CreateDynamicObject(1649, 1491.94788, -1751.03845, 24.91257,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1491.94788, -1751.03845, 21.64585,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1491.94788, -1751.03845, 18.40866,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1491.94788, -1751.03845, 15.13166,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1486.65771, -1751.23474, 24.91257,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1486.65771, -1751.23474, 21.69713,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1486.65771, -1751.23474, 18.41969,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1486.65771, -1751.23474, 15.13130,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1475.68481, -1751.25659, 24.91257,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1475.68481, -1751.25659, 21.64072,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1475.68481, -1751.25659, 18.36888,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1475.68481, -1751.25659, 15.06503,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1470.21387, -1751.20850, 24.91257,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1470.21387, -1751.20850, 21.62359,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1470.21387, -1751.20850, 18.37724,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1470.21387, -1751.20850, 15.14004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1475.68481, -1751.25659, 24.91260,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1475.68481, -1751.25659, 21.64070,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1475.68481, -1751.25659, 18.36890,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1475.68481, -1751.25659, 15.06500,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1470.21387, -1751.20850, 24.91260,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1470.21387, -1751.20850, 21.62360,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1470.21387, -1751.20850, 18.37720,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1470.21387, -1751.20850, 15.14000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1486.65771, -1751.23474, 24.91260,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1486.65771, -1751.23474, 21.69710,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1486.65771, -1751.23474, 18.41970,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1486.65771, -1751.23474, 15.13130,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1491.94788, -1751.03845, 24.91260,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1491.94788, -1751.03845, 21.64590,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1491.94788, -1751.03845, 18.40870,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1491.94788, -1751.03845, 15.13170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1231, 1506.82666, -1754.33484, 13.58516,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1506.74377, -1751.80908, 13.58516,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1506.72571, -1749.13574, 13.58516,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1456.21606, -1754.32483, 13.49043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1456.41504, -1751.89331, 13.49043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1456.54004, -1749.53137, 13.49043,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1331, 1534.15234, -1755.28198, 13.39049,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1334, 1531.59192, -1755.17493, 13.41624,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, 1494.37354, -1771.28687, 18.36866,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, 1494.38110, -1768.58203, 18.36866,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, 1468.00122, -1771.26587, 18.36866,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, 1467.97815, -1768.52942, 18.36866,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1494.17896, -1766.41260, 17.39805,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1494.02148, -1764.30640, 17.39805,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1468.08386, -1766.83472, 17.39805,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1468.03967, -1764.55225, 17.39805,   0.00000, 0.00000, 0.00000);
//banka exterior - close
//kolelo ls beach
CreateDynamicObject(19879,1421.3800000,-1477.6000000,42.2031000,0.0000000,0.0000000,0.0000000);
//Sdelka ili ne Interior - open
CreateDynamicObject(1704, 1723.94775, -1640.14832, 22.64260,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1704, 1725.11304, -1640.16785, 22.64260,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1704, 1726.22327, -1640.13293, 22.64260,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1704, 1727.36804, -1640.10901, 22.64260,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1704, 1728.47046, -1640.09717, 22.64260,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1704, 1725.11304, -1640.16785, 26.16359,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1704, 1723.96155, -1640.15234, 26.16359,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1704, 1726.22217, -1640.16882, 26.16359,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1704, 1727.33118, -1640.16992, 26.16359,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1704, 1728.45496, -1640.12878, 26.16359,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1704, 1729.56213, -1640.10999, 26.16359,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(19121, 1724.59216, -1642.00293, 19.95295,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(19121, 1722.77734, -1642.08179, 19.95295,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(19121, 1728.99792, -1642.17236, 19.95295,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(19121, 1730.52844, -1642.32507, 19.95295,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(2699, 1723.04150, -1664.65271, 19.82860,   0.00000, 0.00000, 26.00000,1);
CreateDynamicObject(2699, 1728.39697, -1659.41272, 19.82862,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(2699, 1729.38306, -1651.82776, 19.82862,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(2699, 1728.23010, -1645.76270, 19.82862,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(2699, 1723.80347, -1645.02246, 19.82862,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(2699, 1716.97644, -1646.05432, 19.82862,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(2699, 1714.52026, -1652.11743, 19.82862,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(2699, 1716.59021, -1663.73218, 19.82862,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(2699, 1719.92603, -1645.22559, 19.82862,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(2699, 1714.61804, -1657.97180, 19.82862,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(2604, 1733.22656, -1658.40210, 26.88556,   0.00000, 0.00000, 91.00000,1);
CreateDynamicObject(11727, 1718.84033, -1642.12134, 30.71021,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(11727, 1720.63525, -1642.16943, 30.71021,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(19807, 1723.25476, -1664.87000, 20.50390,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(19921, 1728.52625, -1659.50354, 20.56030,   0.00000, 0.00000, 55.00000,1);
CreateDynamicObject(19921, 1729.33594, -1652.05676, 20.54371,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(19921, 1728.23035, -1646.07288, 20.54922,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(19921, 1723.83447, -1645.16052, 20.51931,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(19921, 1719.93140, -1645.33875, 20.50646,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(19921, 1716.89014, -1646.17664, 20.49666,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(19921, 1714.37988, -1652.17859, 20.54260,   0.00000, 0.00000, 316.00000,1);
CreateDynamicObject(19921, 1714.62915, -1658.25085, 20.53645,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(19921, 1716.55847, -1664.01648, 20.54011,   0.00000, 0.00000, 0.00000,1);
//Sdelka ili ne Interior - close
//mall items objects - open
CreateDynamicObject(1840, 1159.04688, -1464.97961, 14.71660,   0.00000, 0.00000, 107.00000);
CreateDynamicObject(2317, 1160.77234, -1464.69629, 15.03251,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2230, 1163.56653, -1463.78418, 14.77699,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2202, 1167.77527, -1478.92737, 14.64303,   0.00000, 0.00000, 193.00000);
CreateDynamicObject(2226, 1167.25110, -1471.38184, 14.77245,   0.00000, 0.00000, 113.00000);
CreateDynamicObject(2103, 1166.84619, -1468.98230, 14.75266,   0.00000, 0.00000, -76.00000);
CreateDynamicObject(1481, 1169.18323, -1506.11108, 15.48010,   0.00000, 0.00000, -113.00000);
CreateDynamicObject(2603, 1163.80029, -1511.44873, 15.11110,   0.00000, 0.00000, 74.00000);
CreateDynamicObject(2629, 1164.45520, -1501.34753, 14.76018,   0.00000, 0.00000, 62.00000);
CreateDynamicObject(2452, 1168.45190, -1503.30237, 14.65378,   0.00000, 0.00000, -22.00000);
CreateDynamicObject(14446, 1167.47986, -1509.28601, 15.34745,   0.00000, 0.00000, -113.00000);
//mall items objects - close
//MALL OBJECTS - OPEN
CreateDynamicObject(19322,1117.5800000,-1490.0100000,32.7200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19323,1117.5800000,-1490.0100000,32.7200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19325,1155.4000000,-1434.8900000,16.4900000,0.0000000,0.0000000,0.3000000); //
CreateDynamicObject(19325,1155.3700000,-1445.4100000,16.3100000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19325,1155.2900000,-1452.3800000,16.3100000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19325,1157.3600000,-1468.3500000,16.3100000,0.0000000,0.0000000,18.6600000); //
CreateDynamicObject(19325,1160.6400000,-1478.3700000,16.3100000,0.0000000,0.0000000,17.7600000); //
CreateDynamicObject(19325,1159.8400000,-1502.0600000,16.3100000,0.0000000,0.0000000,-19.9200000); //
CreateDynamicObject(19325,1139.2800000,-1523.7100000,16.3100000,0.0000000,0.0000000,-69.3600000); //
CreateDynamicObject(19325,1117.0600000,-1523.4300000,16.5100000,0.0000000,0.0000000,-109.4400000); //
CreateDynamicObject(19325,1097.1800000,-1502.4300000,16.5100000,0.0000000,0.0000000,-158.5800000); //
CreateDynamicObject(19325,1096.4700000,-1478.2900000,16.5100000,0.0000000,0.0000000,-197.9400000); //
CreateDynamicObject(19325,1099.7000000,-1468.2700000,16.5100000,0.0000000,0.0000000,-197.9400000); //
CreateDynamicObject(19325,1101.8100000,-1445.4500000,16.2200000,0.0000000,0.0000000,-180.2400000); //
CreateDynamicObject(19325,1101.7600000,-1452.4700000,16.2200000,0.0000000,0.0000000,-181.6200000); //
CreateDynamicObject(19325,1101.7700000,-1434.8800000,16.2200000,0.0000000,0.0000000,-180.2400000); //
CreateDynamicObject(19325,1094.3100000,-1444.9200000,23.4700000,0.0000000,0.0000000,-180.2400000); //
CreateDynamicObject(19325,1094.3700000,-1458.3700000,23.4700000,0.0000000,0.0000000,-179.4600000); //
CreateDynamicObject(19325,1093.0100000,-1517.4400000,23.4400000,0.0000000,0.0000000,-138.7200000); //
CreateDynamicObject(19325,1101.0800000,-1526.6400000,23.4200000,0.0000000,0.0000000,-137.3400000); //
CreateDynamicObject(19325,1155.1200000,-1526.3800000,23.4600000,0.0000000,0.0000000,-42.1200000); //
CreateDynamicObject(19325,1163.0900000,-1517.2500000,23.4600000,0.0000000,0.0000000,-40.7400000); //
CreateDynamicObject(19325,1163.0400000,-1442.0600000,23.4000000,0.0000000,0.0000000,-0.1200000); //
CreateDynamicObject(19325,1163.0900000,-1428.4700000,23.5000000,0.0000000,0.0000000,0.5400000); //
CreateDynamicObject(19326,1155.3400000,-1446.7300000,16.3800000,0.0000000,0.0000000,-89.8200000); //
CreateDynamicObject(19326,1155.2500000,-1443.8500000,16.3600000,0.0000000,0.0000000,-89.8200000); //
CreateDynamicObject(19326,1155.3700000,-1436.3200000,16.3600000,0.0000000,0.0000000,-89.8200000); //
CreateDynamicObject(19326,1155.3500000,-1433.5100000,16.3600000,0.0000000,0.0000000,-89.7000000); //
CreateDynamicObject(19329,1155.1800000,-1440.2200000,18.7000000,0.0000000,0.0000000,89.0400000); //
CreateDynamicObject(19329,1161.5900000,-1431.5000000,17.9300000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19329,1160.4000000,-1448.7900000,17.9600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2543,1168.1800000,-1436.3900000,14.7900000,0.0000000,0.0000000,0.3000000); //
CreateDynamicObject(2535,1182.7400000,-1448.3000000,14.7000000,0.0000000,0.0000000,-90.9600000); //
CreateDynamicObject(2543,1167.1000000,-1436.4000000,14.7900000,0.0000000,0.0000000,0.3100000); //
CreateDynamicObject(2538,1172.3100000,-1435.3200000,14.7900000,0.0000000,0.0000000,180.3400000); //
CreateDynamicObject(2539,1171.3800000,-1435.3100000,14.7900000,0.0000000,0.0000000,180.1900000); //
CreateDynamicObject(2540,1169.5600000,-1435.3600000,14.7900000,0.0000000,0.0000000,180.1700000); //
CreateDynamicObject(1984,1157.3700000,-1442.5900000,14.7900000,0.0000000,0.0000000,-450.0600000); //
CreateDynamicObject(2012,1163.2500000,-1448.3100000,14.7500000,0.0000000,0.0000000,-179.1600000); //
CreateDynamicObject(2012,1169.2900000,-1431.9200000,14.7500000,0.0000000,0.0000000,359.8000000); //
CreateDynamicObject(1987,1163.1300000,-1436.3400000,14.7900000,0.0000000,0.0000000,361.0600000); //
CreateDynamicObject(1988,1164.1300000,-1436.3300000,14.7900000,0.0000000,0.0000000,360.8000000); //
CreateDynamicObject(2871,1164.7900000,-1443.9600000,14.7900000,0.0000000,0.0000000,177.7300000); //
CreateDynamicObject(2871,1164.7000000,-1444.9800000,14.7900000,0.0000000,0.0000000,358.0700000); //
CreateDynamicObject(1987,1164.1200000,-1435.3200000,14.7700000,0.0000000,0.0000000,180.9600000); //
CreateDynamicObject(2530,1171.1300000,-1443.7900000,14.7900000,0.0000000,0.0000000,-182.1600000); //
CreateDynamicObject(1991,1173.7500000,-1439.5600000,14.7900000,0.0000000,0.0000000,179.4700000); //
CreateDynamicObject(1996,1169.8200000,-1439.5000000,14.7900000,0.0000000,0.0000000,179.1000000); //
CreateDynamicObject(1996,1174.2400000,-1435.3800000,14.7900000,0.0000000,0.0000000,179.2400000); //
CreateDynamicObject(1991,1175.2300000,-1435.3900000,14.7900000,0.0000000,0.0000000,179.5700000); //
CreateDynamicObject(1995,1182.6500000,-1435.1000000,14.7900000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1994,1182.6600000,-1438.0700000,14.7900000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1993,1182.6600000,-1437.0800000,14.7900000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2542,1163.7800000,-1443.9200000,14.7600000,0.0000000,0.0000000,178.7700000); //
CreateDynamicObject(2536,1166.8800000,-1445.0700000,14.7000000,0.0000000,0.0000000,-0.4200000); //
CreateDynamicObject(2542,1163.7000000,-1444.9300000,14.7800000,0.0000000,0.0000000,-1.7400000); //
CreateDynamicObject(1984,1157.3400000,-1435.7100000,14.7900000,0.0000000,0.0000000,-450.0600000); //
CreateDynamicObject(2012,1166.3100000,-1448.2800000,14.7500000,0.0000000,0.0000000,-180.1200000); //
CreateDynamicObject(2530,1172.1400000,-1443.8300000,14.7900000,0.0000000,0.0000000,-181.3800000); //
CreateDynamicObject(2530,1173.1400000,-1443.8500000,14.7900000,0.0000000,0.0000000,-180.9600000); //
CreateDynamicObject(2530,1174.1300000,-1443.8800000,14.7900000,0.0000000,0.0000000,-181.5000000); //
CreateDynamicObject(1981,1170.7600000,-1439.5200000,14.7900000,0.0000000,0.0000000,-181.7400000); //
CreateDynamicObject(1981,1171.7600000,-1439.5400000,14.7900000,0.0000000,0.0000000,-180.8000000); //
CreateDynamicObject(1981,1172.7500000,-1439.5500000,14.7900000,0.0000000,0.0000000,-180.8400000); //
CreateDynamicObject(2535,1182.7500000,-1447.2800000,14.7000000,0.0000000,0.0000000,-90.7800000); //
CreateDynamicObject(2535,1182.7400000,-1446.2800000,14.7000000,0.0000000,0.0000000,-90.7800000); //
CreateDynamicObject(2535,1182.7400000,-1445.2600000,14.7000000,0.0000000,0.0000000,-90.0000000); //
CreateDynamicObject(2541,1182.7500000,-1444.2200000,14.7900000,0.0000000,0.0000000,-90.0600000); //
CreateDynamicObject(2541,1182.7500000,-1443.2000000,14.7900000,0.0000000,0.0000000,-90.0600000); //
CreateDynamicObject(2541,1182.7400000,-1442.1600000,14.7900000,0.0000000,0.0000000,-90.0600000); //
CreateDynamicObject(2543,1182.7600000,-1441.1800000,14.7900000,0.0000000,0.0000000,-90.8400000); //
CreateDynamicObject(2541,1182.7900000,-1440.1700000,14.7900000,0.0000000,0.0000000,-90.0600000); //
CreateDynamicObject(2543,1182.7200000,-1439.1500000,14.7900000,0.0000000,0.0000000,-90.8400000); //
CreateDynamicObject(1990,1182.6600000,-1431.6700000,14.7900000,0.0000000,0.0000000,3.3000000); //
CreateDynamicObject(1990,1181.6300000,-1431.7300000,14.7900000,0.0000000,0.0000000,3.3000000); //
CreateDynamicObject(1990,1180.6100000,-1431.8100000,14.7900000,0.0000000,0.0000000,3.3000000); //
CreateDynamicObject(1990,1179.6100000,-1431.8300000,14.7900000,0.0000000,0.0000000,3.3000000); //
CreateDynamicObject(1990,1178.6100000,-1431.8900000,14.7900000,0.0000000,0.0000000,3.3000000); //
CreateDynamicObject(1990,1177.5900000,-1431.8600000,14.7900000,0.0000000,0.0000000,3.3000000); //
CreateDynamicObject(1993,1182.6600000,-1436.0900000,14.7900000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2012,1175.5000000,-1431.8200000,14.7500000,0.0000000,0.0000000,361.1700000); //
CreateDynamicObject(2012,1172.4200000,-1431.8700000,14.7500000,0.0000000,0.0000000,359.9300000); //
CreateDynamicObject(2012,1160.1000000,-1448.3500000,14.7500000,0.0000000,0.0000000,-179.9400000); //
CreateDynamicObject(2539,1170.4500000,-1435.3300000,14.7900000,0.0000000,0.0000000,181.2600000); //
CreateDynamicObject(2545,1161.8200000,-1431.8400000,14.9100000,0.0000000,0.0000000,-90.5400000); //
CreateDynamicObject(2545,1160.8200000,-1431.8300000,14.9100000,0.0000000,0.0000000,-90.5400000); //
CreateDynamicObject(2545,1159.8100000,-1431.8600000,14.9100000,0.0000000,0.0000000,-90.5400000); //
CreateDynamicObject(2545,1162.8200000,-1431.8700000,14.9100000,0.0000000,0.0000000,-90.5400000); //
CreateDynamicObject(1988,1163.1300000,-1435.3400000,14.7900000,0.0000000,0.0000000,541.4600000); //
CreateDynamicObject(1988,1166.0700000,-1436.3200000,14.7900000,0.0000000,0.0000000,360.8000000); //
CreateDynamicObject(1987,1165.0700000,-1436.3300000,14.7900000,0.0000000,0.0000000,361.0600000); //
CreateDynamicObject(1987,1166.1100000,-1435.3000000,14.7700000,0.0000000,0.0000000,180.9600000); //
CreateDynamicObject(1988,1165.0700000,-1435.3100000,14.7900000,0.0000000,0.0000000,540.4400000); //
CreateDynamicObject(2536,1165.7900000,-1445.0700000,14.7000000,0.0000000,0.0000000,-1.2000000); //
CreateDynamicObject(2536,1167.8300000,-1445.0700000,14.7000000,0.0000000,0.0000000,-0.0600000); //
CreateDynamicObject(2871,1165.7900000,-1444.0000000,14.7900000,0.0000000,0.0000000,178.2700000); //
CreateDynamicObject(2871,1166.8100000,-1444.0300000,14.7900000,0.0000000,0.0000000,179.3500000); //
CreateDynamicObject(2871,1167.7900000,-1444.0400000,14.7900000,0.0000000,0.0000000,179.8900000); //
CreateDynamicObject(2543,1168.1300000,-1435.3600000,14.7900000,0.0000000,0.0000000,180.0500000); //
CreateDynamicObject(2543,1167.1000000,-1435.3700000,14.7900000,0.0000000,0.0000000,180.3500000); //
CreateDynamicObject(2012,1170.6300000,-1440.6700000,14.7500000,0.0000000,0.0000000,359.5000000); //
CreateDynamicObject(2012,1173.7700000,-1440.7200000,14.7500000,0.0000000,0.0000000,359.8200000); //
CreateDynamicObject(2012,1177.3000000,-1445.3100000,14.7500000,0.0000000,0.0000000,359.9300000); //
CreateDynamicObject(1996,1173.3600000,-1448.3000000,14.7900000,0.0000000,0.0000000,179.1000000); //
CreateDynamicObject(1981,1174.3300000,-1448.3200000,14.7900000,0.0000000,0.0000000,-181.7400000); //
CreateDynamicObject(1981,1175.3200000,-1448.3500000,14.7900000,0.0000000,0.0000000,-180.8400000); //
CreateDynamicObject(1981,1176.3000000,-1448.3700000,14.7900000,0.0000000,0.0000000,-180.8400000); //
CreateDynamicObject(1991,1177.2800000,-1448.3700000,14.7900000,0.0000000,0.0000000,179.4700000); //
CreateDynamicObject(1996,1178.3300000,-1448.3600000,14.7900000,0.0000000,0.0000000,179.2400000); //
CreateDynamicObject(1991,1179.3300000,-1448.3700000,14.7900000,0.0000000,0.0000000,179.5700000); //
CreateDynamicObject(1994,1176.8200000,-1444.1600000,14.7900000,0.0000000,0.0000000,-0.8400000); //
CreateDynamicObject(1995,1178.8100000,-1444.2000000,14.7900000,0.0000000,0.0000000,-1.2600000); //
CreateDynamicObject(2543,1168.8900000,-1444.0600000,14.7900000,0.0000000,0.0000000,178.9700000); //
CreateDynamicObject(2543,1169.9100000,-1444.0700000,14.7900000,0.0000000,0.0000000,179.6900000); //
CreateDynamicObject(2543,1169.8700000,-1445.1200000,14.7900000,0.0000000,0.0000000,-0.0600000); //
CreateDynamicObject(2543,1168.8600000,-1445.1100000,14.7900000,0.0000000,0.0000000,0.3100000); //
CreateDynamicObject(2538,1167.0200000,-1431.8700000,14.7900000,0.0000000,0.0000000,0.4200000); //
CreateDynamicObject(2539,1166.0300000,-1431.8900000,14.7900000,0.0000000,0.0000000,0.7000000); //
CreateDynamicObject(2540,1164.0400000,-1431.9100000,14.7900000,0.0000000,0.0000000,0.6000000); //
CreateDynamicObject(2539,1165.0300000,-1431.9100000,14.7900000,0.0000000,0.0000000,1.0200000); //
CreateDynamicObject(2538,1176.1700000,-1436.3800000,14.7900000,0.0000000,0.0000000,0.2400000); //
CreateDynamicObject(2539,1174.2200000,-1436.3700000,14.7900000,0.0000000,0.0000000,-0.0600000); //
CreateDynamicObject(2540,1173.2200000,-1436.3600000,14.7900000,0.0000000,0.0000000,0.1800000); //
CreateDynamicObject(2539,1175.2000000,-1436.3800000,14.7900000,0.0000000,0.0000000,-2.0600000); //
CreateDynamicObject(2540,1173.2600000,-1435.3100000,14.7900000,0.0000000,0.0000000,180.1700000); //
CreateDynamicObject(1991,1175.7400000,-1439.5800000,14.7900000,0.0000000,0.0000000,179.5700000); //
CreateDynamicObject(1996,1174.7400000,-1439.5700000,14.7900000,0.0000000,0.0000000,179.2400000); //
CreateDynamicObject(1996,1176.1700000,-1435.3700000,14.7900000,0.0000000,0.0000000,179.2400000); //
CreateDynamicObject(1991,1177.1600000,-1435.3800000,14.7900000,0.0000000,0.0000000,179.5700000); //
CreateDynamicObject(2540,1169.4400000,-1436.3500000,14.7900000,0.0000000,0.0000000,0.1800000); //
CreateDynamicObject(2539,1170.4300000,-1436.3500000,14.7900000,0.0000000,0.0000000,0.9000000); //
CreateDynamicObject(2539,1171.3400000,-1436.3300000,14.7900000,0.0000000,0.0000000,0.5800000); //
CreateDynamicObject(2538,1172.2200000,-1436.3200000,14.7900000,0.0000000,0.0000000,0.3000000); //
CreateDynamicObject(2871,1163.4000000,-1440.6800000,14.7900000,0.0000000,0.0000000,360.4100000); //
CreateDynamicObject(2536,1164.4900000,-1440.7300000,14.7000000,0.0000000,0.0000000,-1.2000000); //
CreateDynamicObject(2536,1165.4900000,-1440.7500000,14.7000000,0.0000000,0.0000000,-0.4200000); //
CreateDynamicObject(2536,1166.5000000,-1440.7500000,14.7000000,0.0000000,0.0000000,-0.0600000); //
CreateDynamicObject(2543,1167.6100000,-1440.6400000,14.7900000,0.0000000,0.0000000,0.3100000); //
CreateDynamicObject(2543,1168.6200000,-1440.6400000,14.7900000,0.0000000,0.0000000,0.3000000); //
CreateDynamicObject(2543,1168.6400000,-1439.6000000,14.7900000,0.0000000,0.0000000,180.0500000); //
CreateDynamicObject(2543,1167.6700000,-1439.6100000,14.7900000,0.0000000,0.0000000,180.3500000); //
CreateDynamicObject(2871,1163.6500000,-1439.6700000,14.7900000,0.0000000,0.0000000,180.6100000); //
CreateDynamicObject(2871,1164.6800000,-1439.6700000,14.7900000,0.0000000,0.0000000,179.7700000); //
CreateDynamicObject(2871,1165.6800000,-1439.6800000,14.7900000,0.0000000,0.0000000,180.6100000); //
CreateDynamicObject(2871,1166.6800000,-1439.6600000,14.7900000,0.0000000,0.0000000,180.6100000); //
CreateDynamicObject(1990,1175.0900000,-1444.9700000,14.7900000,0.0000000,0.0000000,-2.4600000); //
CreateDynamicObject(1990,1181.6300000,-1431.7300000,14.7900000,0.0000000,0.0000000,3.3000000); //
CreateDynamicObject(1990,1174.0700000,-1444.9400000,14.7900000,0.0000000,0.0000000,0.4800000); //
CreateDynamicObject(1990,1173.0900000,-1444.9400000,14.7900000,0.0000000,0.0000000,-1.2000000); //
CreateDynamicObject(1990,1172.1100000,-1444.9200000,14.7900000,0.0000000,0.0000000,-1.1400000); //
CreateDynamicObject(1990,1171.1200000,-1444.9100000,14.7900000,0.0000000,0.0000000,-0.7200000); //
CreateDynamicObject(2530,1168.5400000,-1448.3100000,14.7900000,0.0000000,0.0000000,-178.9800000); //
CreateDynamicObject(2530,1169.6000000,-1448.2900000,14.7900000,0.0000000,0.0000000,-178.9800000); //
CreateDynamicObject(2530,1170.6700000,-1448.3000000,14.7900000,0.0000000,0.0000000,-178.9800000); //
CreateDynamicObject(2530,1171.7200000,-1448.3200000,14.7900000,0.0000000,0.0000000,-181.5000000); //
CreateDynamicObject(2530,1175.1300000,-1443.9100000,14.7900000,0.0000000,0.0000000,-181.5000000); //
CreateDynamicObject(2012,1176.8200000,-1440.7500000,14.7500000,0.0000000,0.0000000,359.9300000); //
CreateDynamicObject(1995,1177.7100000,-1439.6300000,14.7900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1994,1176.7300000,-1439.6300000,14.7900000,0.0000000,0.0000000,0.0600000); //
CreateDynamicObject(1993,1177.8300000,-1444.1500000,14.7900000,0.0000000,0.0000000,179.4600000); //
//MALL OBJECTS - CLOSE
//lotariq otvun
CreateDynamicObject(19273, 1043.597778, 1009.135314, 12.192556, 0.000000, 0.000000, 143.299972);
CreateDynamicObject(19273, 1051.383789, 1003.418823, 12.192556, 0.000000, 0.000000, 143.299972);
CreateDynamicObject(3437, 1077.274169, 1002.715637, 31.224754, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3437, 1068.874267, 1004.825805, 31.224754, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3437, 1088.044677, 1002.385925, 31.224754, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3437, 1097.204956, 1002.385925, 31.224754, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3437, 1029.763916, 1033.935791, 31.224754, 0.000000, 0.000000, -65.600028);
CreateDynamicObject(3437, 1024.319824, 1043.709228, 31.224754, 0.000000, 0.000000, -65.600028);
CreateDynamicObject(3437, 1020.234252, 1052.715698, 31.224754, 0.000000, 0.000000, -65.600028);
CreateDynamicObject(3437, 1016.074157, 1061.886962, 31.224754, 0.000000, 0.000000, -65.600028);
CreateDynamicObject(2531, 1025.787475, 1035.790405, 9.953278, 0.000000, 0.000000, 122.999954);
CreateDynamicObject(2531, 1029.638061, 1029.860961, 9.953278, 0.000000, 0.000000, 122.999954);
CreateDynamicObject(2531, 1028.820922, 1031.118774, 9.953278, 0.000000, 0.000000, 122.999954);
CreateDynamicObject(2531, 1026.588134, 1034.557128, 9.953278, 0.000000, 0.000000, 122.999954);
CreateDynamicObject(2224, 1071.932373, 1015.442138, 10.064731, 0.000000, 0.000000, 116.200050);
CreateDynamicObject(2224, 1067.796386, 1016.751831, 10.064731, 0.000000, 0.000000, 116.200050);
CreateDynamicObject(1256, 1081.764526, 1013.835754, 10.613433, 0.000000, 0.000000, -92.599990);
CreateDynamicObject(1256, 1079.036743, 1013.959350, 10.613433, 0.000000, 0.000000, -92.599990);
//lotariq otvun
//nacionalna lotariq
CreateDynamicObject(19377, 2234.110107, 1638.323730, 1009.517578, 0.000000, 0.000000, -89.599960,1);
CreateDynamicObject(19377, 2243.732421, 1638.391113, 1009.517578, 0.000000, 0.000000, -89.599960,1);
CreateDynamicObject(19377, 2242.613037, 1662.351684, 1009.517578, 0.000000, 0.000000, -4.299956,1);
tabela[0]=CreateDynamicObject(19377, 2243.342285, 1672.034423, 1009.517578, 0.000000, 0.000000, -4.299956,1);
tabela[1]=CreateDynamicObject(19377, 2244.060546, 1681.587524, 1009.517578, 0.000000, 0.000000, -4.299956,1);
SetDynamicObjectMaterialText(tabela[0] , 0 , "{FFFFFF}НАЦИОНАЛНА ЛОТАРИЯ" , OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, 0x0000FFFF, 0x0000FFFF,0);
SetDynamicObjectMaterialText(tabela[1] , 0 , "{FFFFFF}НАЦИОНАЛНА ЛОТАРИЯ" , OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 1, 0x0000FFFF, 0x0000FFFF,0);
CreateDynamicObject(19377, 2246.261230, 1690.653808, 1009.517578, 0.000000, 0.000000, -22.799964,1);
lottogate[1]=CreateDynamicObject(19377, 2241.052246, 1659.112792, 1009.517578, 0.000000, 0.000000, -89.599960,1);
lottogate[2]=CreateDynamicObject(19377, 2231.600097, 1659.046264, 1009.517578, 0.000000, 0.000000, -89.599960,1);
CreateDynamicObject(3437, 2244.675781, 1685.913574, 1008.921813, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(3437, 2243.324462, 1667.954711, 1008.921813, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(3437, 2243.324462, 1669.305541, 1008.921813, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(3437, 2243.324462, 1684.486450, 1008.921813, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(1942, 2244.048828, 1683.397705, 1009.693725, 0.000000, 0.000000, 89.400024,1);
CreateDynamicObject(1942, 2244.048828, 1683.397705, 1011.114196, 0.000000, 0.000000, 89.400024,1);
CreateDynamicObject(1942, 2243.113281, 1670.407714, 1011.114196, 0.000000, 0.000000, 89.400024,1);
CreateDynamicObject(1942, 2243.113281, 1670.407714, 1009.804260, 0.000000, 0.000000, 89.400024,1);
CreateDynamicObject(1775, 2224.123046, 1696.377807, 1008.412902, 0.000000, 0.000000, 91.600028,1);
CreateDynamicObject(1775, 2224.049072, 1699.077880, 1008.412902, 0.000000, 0.000000, 91.600028,1);
CreateDynamicObject(1775, 2224.086669, 1697.677734, 1008.412902, 0.000000, 0.000000, 91.600028,1);
CreateDynamicObject(1550, 2242.970214, 1675.375732, 1007.675109, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(1550, 2242.421875, 1677.472167, 1007.433044, -74.399940, 5.899999, 29.400003,1);
CreateDynamicObject(1550, 2242.954833, 1676.262207, 1007.481140, -74.399940, 5.899999, 29.400003,1);
CreateDynamicObject(1235, 2246.359130, 1695.815307, 1007.869262, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(1235, 2246.359130, 1698.365478, 1007.869262, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(1235, 2246.359130, 1697.015625, 1007.869262, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(19121, 2241.653076, 1659.605468, 1007.627319, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(19121, 2228.200195, 1659.605468, 1007.627319, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(994, 2224.753417, 1692.014038, 1007.332580, 0.000000, 0.000000, -100.900062,1);
CreateDynamicObject(994, 2223.572265, 1685.877075, 1007.332580, 0.000000, 0.000000, -100.900062,1);
CreateDynamicObject(994, 2222.426025, 1679.926513, 1007.332580, 0.000000, 0.000000, -100.900062,1);
CreateDynamicObject(994, 2221.260986, 1673.885620, 1007.332580, 0.000000, 0.000000, -100.900062,1);
CreateDynamicObject(19121, 2229.180664, 1659.605468, 1007.627319, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(19121, 2240.652099, 1659.605468, 1007.627319, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(18648, 2237.943115, 1658.532592, 1007.142089, -1.599999, -3.499999, -85.799980,1);
CreateDynamicObject(18648, 2230.152099, 1658.542602, 1007.003601, -1.599999, -3.499999, -85.799980,1);
CreateDynamicObject(19273, 2227.724609, 1659.447021, 1009.802368, 0.000000, 0.000000, -16.600002,1);
CreateDynamicObject(994, 2233.289062, 1650.141479, 1007.259155, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2228.073242, 1694.111572, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2229.293701, 1694.111572, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2230.574218, 1694.111572, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2243.866943, 1694.111572, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2242.706542, 1694.111572, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2241.497070, 1694.111572, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2241.497070, 1695.982055, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2242.776367, 1695.982055, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2244.027099, 1695.982055, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2230.865722, 1695.982055, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2229.585693, 1695.982055, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2228.334960, 1695.982055, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2228.334960, 1697.762451, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2229.476074, 1697.762451, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2230.387207, 1697.762451, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2231.626464, 1697.762451, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2241.237548, 1697.762451, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2242.438476, 1697.762451, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2243.659179, 1697.762451, 1007.326293, 0.000000, 0.000000, 0.000000,1);
CreateDynamicObject(11685, 2244.838623, 1697.762451, 1007.326293, 0.000000, 0.000000, 0.000000,1);
display[0]=CreateDynamicObject(1980, 2243.693603, 1677.003540, 1009.549499, 0.000000, 0.000000, -3.700000,1);
display[1]=CreateDynamicObject(1980, 2235.869140, 1645.973510, 1010.577209, 0.000000, 0.000000, -90.699974,1);
//nacionalna lotariq
//mission mysteries 1
mysteries[0]=CreateDynamicObject(18846, 2560.639404, -642.661926, 184.977172, 0.000000, 0.000000, 0.000000);
mysteries[1]=CreateDynamicObject(18846, 2585.541015, -614.862182, 184.977172, 0.000000, 0.000000, 0.000000);
mysteries[2]=CreateDynamicObject(18846, 2563.627441, -611.625854, 184.977172, 0.000000, 0.000000, 0.000000);
mysteries[3]=CreateDynamicObject(12986, 2569.757568, -626.789733, 135.518127, -7.599999, 1.299999, 0.000000);
mysteries[4]=CreateDynamicObject(12986, 2583.441894, -626.873107, 134.873596, -7.599999, 1.299999, 0.000000);
mysteries[5]=CreateDynamicObject(16340, 2571.539794, -624.770263, 196.286468, 0.000000, 0.000000, 0.000000);
mysteries[6]=CreateDynamicObject(18656, 2569.495849, -627.374206, 195.194854, -85.100021, -3.699999, 0.000000);
mysteries[7]=CreateDynamicObject(70, 2567.1294,-631.7607,135.9508, 0, 0, 0.000000);
//mission mysteries 1
//counter strike
//counter strike
CreateDynamicObject(3798, 216.39999, 1792.90002, 41.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3796, 188.00000, 1773.40002, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(2988, 240.50000, 1845.30005, 50.50000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(12814, 250.20000, 1792.40002, 40.77000,   337.00000, 0.00000, 180.00000,1);
CreateDynamicObject(8136, 277.89999, 1755.40002, 46.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 235.30000, 1806.80005, 42.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 250.20000, 1840.30005, 50.51000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16202, 192.10001, 1830.90002, 46.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16202, 338.29999, 1843.19995, 46.40000,   0.00000, 0.00000, 270.00000,1);
CreateDynamicObject(9339, 235.30000, 1806.80005, 43.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 225.30000, 1826.00000, 41.10000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 235.30000, 1832.79004, 45.10000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 225.20000, 1838.59998, 46.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 205.60001, 1808.80005, 46.20000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 266.89999, 1804.80005, 46.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 266.60001, 1825.19995, 46.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 266.39999, 1845.69995, 46.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 233.89999, 1856.69995, 46.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6232, 212.80000, 1657.40002, 50.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 253.89999, 1856.69995, 46.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(2988, 248.89999, 1845.30005, 50.50000,   0.00000, 0.00000, 270.00000,1);
CreateDynamicObject(10631, 225.70000, 1740.19995, 45.81000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 200.50000, 1782.39001, 50.20000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(8136, 277.89999, 1755.40002, 40.80000,   0.00000, 0.00000, 0.00000,1);
//
CreateDynamicObject(16113, 261.00000, 1852.00000, 59.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16113, 269.79999, 1828.59998, 59.60000,   0.00000, 0.00000, 320.00000,1);
CreateDynamicObject(16113, 269.50000, 1883.30005, 62.80000,   0.00000, 0.00000, 320.00000,1);
CreateDynamicObject(16113, 274.60001, 1789.09998, 57.00000,   0.00000, 0.00000, 320.00000,1);
CreateDynamicObject(10631, 225.50000, 1758.50000, 46.10000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 192.80000, 1806.30005, 54.90000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 225.80000, 1740.40002, 55.10000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(8558, 232.60001, 1814.19995, 49.40000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(8558, 227.48000, 1814.09998, 49.40000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(8558, 222.36000, 1814.09998, 49.40000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(8558, 217.96001, 1814.09998, 49.38000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3798, 220.30000, 1793.59998, 41.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 228.70000, 1798.80005, 52.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 218.39999, 1792.59998, 41.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 228.89999, 1799.59998, 50.90000,   0.00000, 0.00000, 340.00000,1);
CreateDynamicObject(3798, 220.60001, 1830.59998, 50.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 236.30000, 1797.59998, 43.30000,   14.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 276.10001, 1694.59998, 42.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1222, 233.50000, 1795.09998, 51.40000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 228.50000, 1797.19995, 50.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 209.20000, 1824.90002, 46.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6232, 194.00000, 1781.69995, 46.00000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(1554, 207.20000, 1812.00000, 50.50000,   0.00000, 0.00000, 0.00000,1);
//
CreateDynamicObject(10631, 225.60001, 1758.59998, 55.10000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 195.30000, 1768.90002, 54.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 195.10001, 1786.69995, 54.70000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(10631, 209.20000, 1823.00000, 55.30000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(12814, 219.89999, 1733.30005, 43.75000,   345.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 188.20000, 1678.59998, 46.30000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(10631, 204.80000, 1734.30005, 46.01000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(10631, 205.89999, 1734.09998, 54.10000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(3798, 214.50000, 1746.90002, 47.40000,   14.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16113, 222.80000, 1851.19995, 59.60000,   0.00000, 0.00000, 70.00000,1);
CreateDynamicObject(10631, 205.30000, 1720.00000, 46.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 188.20000, 1699.09998, 46.30000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(6232, 214.89999, 1781.69995, 46.00000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(10631, 225.00000, 1804.90002, 46.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 235.30000, 1806.80005, 45.10000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 254.30000, 1856.50000, 55.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 234.20000, 1856.50000, 55.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 266.39999, 1845.50000, 55.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 266.60001, 1825.19995, 55.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 267.00000, 1805.00000, 55.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 225.30000, 1843.09998, 55.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(8558, 199.20000, 1811.50000, 52.00000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(9339, 235.20000, 1826.69995, 50.20000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1554, 208.30000, 1811.50000, 50.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1554, 206.50000, 1810.50000, 50.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1554, 204.60001, 1811.80005, 50.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1554, 211.00000, 1812.59998, 50.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1554, 210.39999, 1811.00000, 50.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(1554, 212.39999, 1812.00000, 50.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(8136, 277.89999, 1755.40002, 52.30000,   0.00000, 0.00000, 0.00000,1);
//
CreateDynamicObject(12814, 201.50000, 1823.00000, 50.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 269.39999, 1705.59998, 46.10000,   0.00000, 0.00000, 270.00000,1);
CreateDynamicObject(10631, 269.39999, 1665.50000, 46.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 288.20001, 1685.50000, 46.40000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 225.39999, 1720.00000, 45.81000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 243.30000, 1650.00000, 31.80000,   336.98999, 0.00000, 179.99001,1);
CreateDynamicObject(9339, 258.70001, 1674.40002, 42.40000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 273.70001, 1683.09998, 42.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 232.60001, 1799.69995, 50.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 276.10001, 1692.69995, 42.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 218.60001, 1707.90002, 41.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 218.50000, 1708.00000, 43.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 220.70000, 1707.90002, 41.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 220.60001, 1708.00000, 43.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 218.60001, 1705.80005, 41.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 220.70000, 1705.80005, 41.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 218.50000, 1705.90002, 43.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 220.60001, 1705.90002, 43.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 223.30000, 1707.69995, 41.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 258.70001, 1703.40002, 42.40000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(14877, 257.39999, 1688.90002, 40.82000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 269.39999, 1665.50000, 37.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(6232, 243.20000, 1634.69995, 43.10000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 212.30000, 1652.19995, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6232, 212.80000, 1636.69995, 50.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3095, 228.30000, 1673.30005, 50.70000,   0.00000, 90.00000, 0.00000,1);
CreateDynamicObject(10631, 236.80000, 1626.30005, 44.70000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(3095, 169.72000, 1607.30005, 46.50000,   0.00000, 90.00000, 0.00000,1);
CreateDynamicObject(3095, 228.30000, 1664.30005, 41.70000,   0.00000, 90.00000, 0.00000,1);
//
CreateDynamicObject(3095, 228.30000, 1664.30005, 50.70000,   0.00000, 90.00000, 0.00000,1);
CreateDynamicObject(3095, 228.30000, 1655.30005, 50.70000,   0.00000, 90.00000, 0.00000,1);
CreateDynamicObject(3095, 228.30000, 1655.30005, 41.70000,   0.00000, 90.00000, 0.00000,1);
CreateDynamicObject(9339, 258.70001, 1688.40002, 42.20000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3095, 228.30000, 1655.30005, 32.70000,   0.00000, 90.00000, 0.00000,1);
CreateDynamicObject(3095, 228.30000, 1664.30005, 32.70000,   0.00000, 90.00000, 0.00000,1);
CreateDynamicObject(10631, 238.80000, 1643.50000, 48.40000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(10631, 258.70001, 1643.59998, 48.40000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 269.60001, 1705.40002, 55.10000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 288.39999, 1685.19995, 55.40000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 269.60001, 1665.30005, 55.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 259.89999, 1644.69995, 57.40000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 218.39999, 1666.09998, 55.90000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(10631, 188.20000, 1646.40002, 46.30000,   0.00000, 0.00000, 270.00000,1);
CreateDynamicObject(12814, 212.30000, 1602.30005, 41.60000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(10631, 188.20000, 1678.90002, 55.30000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(10631, 188.20000, 1698.80005, 55.30000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(10631, 205.99001, 1718.90002, 54.80000,   0.00000, 0.00000, 270.00000,1);
CreateDynamicObject(12814, 182.30000, 1652.19995, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 182.30000, 1602.30005, 41.60000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 188.89999, 1660.00000, 45.70000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 188.39999, 1646.69995, 55.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 189.30000, 1662.80005, 54.70000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(12814, 199.20000, 1752.19995, 47.01000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 195.28999, 1768.81995, 51.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6959, 250.70000, 1636.69995, 26.30000,   90.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 205.00000, 1753.59998, 47.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 205.00000, 1754.59998, 49.10000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 204.00000, 1756.69995, 46.00000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 204.70000, 1756.69995, 48.00000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16773, 206.80000, 1651.09998, 53.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16773, 220.00000, 1655.50000, 45.60000,   0.00000, 0.00000, 320.00000,1);
CreateDynamicObject(16773, 220.00000, 1655.50000, 53.60000,   0.00000, 0.00000, 320.00000,1);
CreateDynamicObject(16773, 206.80000, 1651.09998, 45.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(621, 256.39999, 1781.19995, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(621, 257.00000, 1765.09998, 41.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 256.50000, 1775.59998, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 257.29999, 1772.59998, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 257.29999, 1769.59998, 41.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16113, 152.70000, 1803.09998, 41.20000,   0.00000, 0.00000, 40.00000,1);
CreateDynamicObject(16113, 120.50000, 1803.30005, 41.60000,   0.00000, 0.00000, 40.00000,1);
//
CreateDynamicObject(16113, 97.60000, 1807.69995, 43.10000,   0.00000, 0.00000, 40.00000,1);
CreateDynamicObject(6232, 158.00000, 1749.30005, 45.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 247.89999, 1751.50000, 41.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 208.70000, 1757.80005, 41.55000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(16773, 165.00000, 1760.90002, 45.60000,   0.00000, 0.00000, 319.98999,1);
CreateDynamicObject(12814, 243.70000, 1702.00000, 41.53000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(12814, 243.70000, 1697.90002, 41.51000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 258.29999, 1778.30005, 49.00000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 258.29999, 1770.09998, 49.00000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 258.29999, 1740.69995, 48.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 258.10001, 1710.09998, 50.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 258.10001, 1704.00000, 50.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 258.10001, 1671.00000, 51.00000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 258.10001, 1664.09998, 51.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 256.39999, 1831.30005, 54.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 256.39999, 1824.50000, 54.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 213.70000, 1702.00000, 41.57000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 185.70000, 1702.00000, 41.57000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 143.89999, 1788.59998, 41.60000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(10631, 134.70000, 1762.19995, 41.70000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 114.60000, 1762.50000, 41.70000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 239.70000, 1644.40002, 57.40000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 203.10001, 1665.50000, 55.90000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 218.39999, 1648.80005, 55.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 203.10001, 1648.19995, 55.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 225.50000, 1720.19995, 54.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 235.80000, 1758.40002, 50.50000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(16500, 203.00000, 1808.59998, 54.90000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(16500, 203.00000, 1801.90002, 54.90000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(16500, 205.30000, 1785.40002, 54.10000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(16500, 205.30000, 1792.59998, 54.10000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(16500, 205.70000, 1764.80005, 54.30000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(16500, 219.39999, 1822.30005, 54.10000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(16500, 236.10001, 1738.59998, 50.40000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(16500, 235.80000, 1716.90002, 50.30000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(16500, 173.89999, 1786.59998, 54.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 134.80000, 1762.09998, 50.70000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 93.60000, 1761.00000, 49.00000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(6232, 110.60000, 1786.30005, 58.00000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3798, 179.50000, 1791.30005, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 175.50000, 1772.00000, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 181.39999, 1791.30005, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 181.39999, 1789.40002, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 184.89999, 1760.69995, 47.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 185.10001, 1788.50000, 54.40000,   0.00000, 0.00000, 270.00000,1);
CreateDynamicObject(10631, 185.10001, 1768.59998, 54.40000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 153.20000, 1759.41003, 50.70000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(10631, 173.20000, 1759.41003, 50.70000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(16500, 198.50000, 1685.19995, 48.90000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(16500, 173.89999, 1779.59998, 54.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 121.70000, 1775.69995, 44.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 118.30000, 1775.59998, 44.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 119.50000, 1778.30005, 44.70000,   0.00000, 0.00000, 0.00000,1);
//
CreateDynamicObject(3798, 127.60000, 1791.40002, 44.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 130.10001, 1793.30005, 44.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 132.50000, 1791.09998, 44.20000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3796, 117.90000, 1793.59998, 45.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(11092, 138.39999, 1614.59998, 53.30000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(17859, 152.10001, 1607.00000, 43.80000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(10631, 181.30000, 1739.80005, 42.30000,   0.00000, 0.00000, 270.00000,1);
CreateDynamicObject(10631, 181.39999, 1719.80005, 42.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(12814, 185.00000, 1733.50000, 47.00000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6959, 124.70000, 1734.40002, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 170.30000, 1736.19995, 47.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16113, 283.00000, 1737.19995, 57.00000,   0.00000, 0.00000, 320.00000,1);
CreateDynamicObject(16113, 286.29999, 1691.59998, 59.70000,   0.00000, 0.00000, 320.00000,1);
CreateDynamicObject(10631, 237.10001, 1626.09998, 53.70000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 219.10001, 1606.09998, 46.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 219.20000, 1606.09998, 55.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 219.20000, 1585.90002, 46.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 219.10001, 1585.90002, 55.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(6232, 222.39999, 1592.30005, 50.30000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(16773, 203.89999, 1598.50000, 45.60000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(16773, 203.60001, 1586.80005, 45.60000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3095, 206.60001, 1608.00000, 41.60000,   0.00000, 90.00000, 90.00000,1);
CreateDynamicObject(3095, 206.70000, 1608.09998, 46.10000,   0.00000, 90.00000, 90.00000,1);
CreateDynamicObject(3095, 206.80000, 1608.08997, 50.60000,   0.00000, 90.00000, 90.00000,1);
CreateDynamicObject(17859, 141.10001, 1739.40002, 43.80000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(12814, 165.50000, 1597.09998, 26.60000,   20.00000, 90.00000, 90.00000,1);
CreateDynamicObject(16113, 274.79999, 1658.90002, 59.60000,   0.00000, 0.00000, 270.00000,1);
CreateDynamicObject(16113, 183.30000, 1556.90002, 56.70000,   0.00000, 0.00000, 230.00000,1);
CreateDynamicObject(12814, 122.20000, 1582.09998, 49.15000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(12814, 152.39999, 1620.19995, 41.60000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(6232, 127.70000, 1580.50000, 66.40000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(10631, 204.20000, 1567.00000, 43.50000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 204.00000, 1567.00000, 52.50000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 184.80000, 1567.59998, 43.50000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 184.70000, 1566.90002, 52.50000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 168.70000, 1567.40002, 43.50000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 149.00000, 1556.40002, 47.30000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 148.89999, 1556.40002, 56.30000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 139.00000, 1556.59998, 47.50000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 96.60000, 1556.69995, 52.00000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 168.60001, 1566.80005, 52.50000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(12814, 170.60001, 1582.09998, 40.60000,   19.99000, 0.00000, 90.00000,1);
CreateDynamicObject(12814, 122.40000, 1596.98999, 34.30000,   0.00000, 90.00000, 90.00000,1);
CreateDynamicObject(9339, 85.30000, 1597.09998, 45.50000,   20.00000, 0.00000, 270.00000,1);
CreateDynamicObject(9339, 110.60000, 1597.00000, 49.90000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3095, 228.30000, 1673.30005, 41.70000,   0.00000, 90.00000, 0.00000,1);
CreateDynamicObject(3095, 169.72000, 1615.19995, 46.50000,   0.00000, 90.00000, 0.00000,1);
CreateDynamicObject(3798, 154.39999, 1610.30005, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 153.10001, 1658.59998, 41.58000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 136.30000, 1721.09998, 46.30000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 136.39999, 1700.69995, 46.20000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 136.50000, 1680.40002, 46.20000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(12814, 79.00000, 1596.80005, 26.50000,   20.00000, 270.00000, 270.00000,1);
CreateDynamicObject(10631, 136.80000, 1556.69995, 56.50000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 82.80000, 1556.00000, 48.30000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 72.80000, 1556.90002, 45.60000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 58.60000, 1555.50000, 45.90000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(16113, 243.80000, 1622.19995, 58.00000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(16113, 219.80000, 1576.80005, 56.60000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(16113, 140.70000, 1558.59998, 58.80000,   0.00000, 0.00000, 230.00000,1);
CreateDynamicObject(3798, 140.50000, 1741.59998, 41.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 138.50000, 1666.69995, 46.20000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 138.60001, 1646.19995, 46.20000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 138.70000, 1627.09998, 46.30000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 138.80000, 1606.80005, 46.30000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 178.10001, 1699.69995, 42.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 178.10001, 1679.50000, 42.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(12814, 182.00000, 1684.90002, 47.10000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(9339, 170.20000, 1723.00000, 47.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 167.10001, 1696.69995, 47.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 167.10001, 1673.00000, 47.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 181.89999, 1640.80005, 31.06000,   320.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 178.09000, 1671.50000, 42.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(12814, 167.00000, 1651.09998, 20.31000,   320.00000, 90.00000, 179.99001,1);
CreateDynamicObject(12814, 63.20000, 1587.19995, 41.60000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(16113, 87.10000, 1558.80005, 48.80000,   0.00000, 0.00000, 229.99001,1);
CreateDynamicObject(16773, 153.00000, 1762.09998, 45.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 134.30000, 1596.90002, 49.80000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(9339, 159.50000, 1596.90002, 45.30000,   19.99000, 0.00000, 90.00000,1);
CreateDynamicObject(11092, 212.10001, 1667.30005, 62.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(11092, 137.50000, 1650.00000, 53.20000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(11092, 136.70000, 1685.19995, 53.20000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(11092, 135.10001, 1718.90002, 53.30000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(11472, 122.80000, 1732.19995, 41.70000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(11472, 133.00000, 1738.00000, 40.00000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(17859, 65.90000, 1756.40002, 46.80000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(6959, 111.00000, 1754.00000, 49.00000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6959, 101.50000, 1756.00000, 44.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 126.70000, 1737.30005, 46.80000,   90.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 126.40000, 1742.59998, 43.90000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3055, 126.70000, 1745.59998, 43.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 122.50000, 1738.80005, 43.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 116.00000, 1776.69995, 44.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 113.40000, 1776.50000, 44.10000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 111.50000, 1776.30005, 44.30000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 109.30000, 1776.40002, 44.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 122.50000, 1737.30005, 46.80000,   90.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 118.50000, 1742.69995, 46.80000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3055, 118.60000, 1749.09998, 46.80000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3055, 118.50000, 1733.30005, 46.80000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3055, 118.51000, 1738.59998, 48.90000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3055, 126.40000, 1742.59998, 46.80000,   90.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3055, 122.50000, 1737.30005, 43.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 126.70000, 1737.30005, 43.90000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 115.10000, 1751.90002, 46.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 107.40000, 1752.00000, 46.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 106.30000, 1735.80005, 46.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 95.90000, 1736.09998, 46.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6959, 60.50000, 1756.00000, 44.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 98.60000, 1735.80005, 46.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 83.20000, 1736.30005, 46.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 75.40000, 1736.30005, 46.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 99.60000, 1752.00000, 46.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 91.80000, 1752.00000, 46.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 86.30000, 1752.09998, 46.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 91.00000, 1736.30005, 46.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16202, 79.70000, 1743.30005, 35.60000,   350.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3066, 168.80000, 1703.69995, 48.20000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 157.89999, 1728.69995, 33.00000,   20.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 149.80000, 1767.09998, 41.50000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(10631, 136.50000, 1680.40002, 37.20000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 136.39999, 1700.69995, 37.20000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 136.30000, 1721.09998, 37.20000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 136.28999, 1741.08997, 37.20000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(3361, 49.40000, 1789.00000, 43.70000,   0.00000, 0.00000, 270.00000,1);
CreateDynamicObject(10631, 181.39999, 1719.80005, 33.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 178.10001, 1699.69995, 33.30000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(10631, 181.30000, 1739.80005, 33.30000,   0.00000, 0.00000, 270.00000,1);
CreateDynamicObject(12814, 200.10001, 1758.00000, 41.55000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3798, 181.39999, 1789.40002, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 65.30000, 1786.40002, 44.45000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3055, 59.80000, 1736.30005, 46.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 55.90000, 1740.09998, 46.80000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3055, 67.60000, 1736.30005, 46.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3055, 55.90000, 1747.90002, 46.80000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(3055, 55.80000, 1751.50000, 46.80000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(6959, 72.00000, 1748.00000, 49.02000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(17859, 110.40000, 1722.69995, 46.70000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(3438, 118.50000, 1738.09998, 41.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 57.40000, 1751.00000, 44.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 65.60000, 1749.90002, 44.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 61.60000, 1747.09998, 44.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 61.20000, 1742.69995, 44.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 60.40000, 1739.00000, 44.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 70.60000, 1811.50000, 44.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 116.60000, 1743.40002, 44.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 65.70000, 1744.80005, 44.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 116.60000, 1741.09998, 44.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 155.00000, 1707.69995, 35.11000,   345.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 89.30000, 1786.40002, 44.44000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(10631, 114.70000, 1762.40002, 50.70000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 47.60000, 1765.90002, 48.50000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(10631, 31.30000, 1784.80005, 48.50000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(10631, 31.20000, 1804.80005, 48.50000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(10631, 31.50000, 1825.40002, 49.10000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(10631, 49.90000, 1835.09998, 48.50000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(10631, 70.30000, 1826.40002, 48.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16773, 96.60000, 1780.69995, 56.40000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(16773, 99.40000, 1793.50000, 56.40000,   0.00000, 0.00000, 120.00000,1);
CreateDynamicObject(16773, 96.60000, 1780.69995, 48.40000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(16773, 99.40000, 1793.50000, 48.40000,   0.00000, 0.00000, 120.00000,1);
CreateDynamicObject(10631, 31.90000, 1766.00000, 47.90000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(12814, 65.30000, 1800.40002, 44.45000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(16202, 32.40000, 1653.00000, 46.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(2988, 70.60000, 1815.19995, 44.50000,   0.00000, 0.00000, 270.00000,1);
CreateDynamicObject(2988, 62.20000, 1815.09998, 44.50000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(9339, 60.80000, 1804.80005, 45.20000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 47.70000, 1791.90002, 45.20000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(12814, 35.90000, 1806.90002, 45.80000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(16305, 84.70000, 1797.00000, 49.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 78.90000, 1800.90002, 48.50000,   11.00000, 0.00000, 10.00000,1);
CreateDynamicObject(9339, 78.90000, 1800.90002, 49.90000,   11.00000, 0.00000, 10.00000,1);
CreateDynamicObject(9339, 78.90000, 1800.90002, 47.10000,   11.00000, 0.00000, 10.00000,1);
CreateDynamicObject(16113, 42.30000, 1833.40002, 51.70000,   0.00000, 0.00000, 40.00000,1);
CreateDynamicObject(16134, 78.60000, 1821.80005, 48.00000,   90.00000, 0.00000, 270.00000,1);
CreateDynamicObject(3361, 149.89999, 1742.30005, 39.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3361, 51.50000, 1789.00000, 43.70000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(3798, 67.00000, 1741.30005, 44.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 71.20000, 1807.30005, 44.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 64.50000, 1811.00000, 44.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 66.80000, 1806.40002, 44.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 56.70000, 1790.90002, 44.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 58.70000, 1790.90002, 44.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 56.70000, 1789.00000, 44.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 58.70000, 1789.00000, 44.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 56.70000, 1790.90002, 46.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 58.70000, 1790.90002, 46.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 56.70000, 1789.00000, 46.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 58.70000, 1789.00000, 46.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 43.50000, 1813.59998, 45.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 43.50000, 1793.40002, 45.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 43.40000, 1802.40002, 45.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 43.50000, 1811.59998, 45.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 45.50000, 1813.90002, 45.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 44.00000, 1812.80005, 47.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 48.40000, 1820.80005, 45.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 58.30000, 1820.50000, 45.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16113, 42.00000, 1614.19995, 51.20000,   0.00000, 0.00000, 130.00000,1);
CreateDynamicObject(12814, 35.90000, 1836.90002, 45.80000,   0.00000, 0.00000, 90.00000,1);
CreateDynamicObject(12814, 73.70000, 1582.09998, 40.60000,   19.98000, 0.00000, 269.98999,1);
CreateDynamicObject(8136, 34.80000, 1604.69995, 42.40000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(8136, 34.80000, 1604.69995, 48.10000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(8136, 34.80000, 1683.69995, 48.10000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(8136, 34.80000, 1683.69995, 42.30000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 63.60000, 1724.19995, 45.40000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 83.70000, 1723.90002, 45.40000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(9339, 115.50000, 1718.19995, 44.30000,   0.00000, 90.00000, 90.00000,1);
CreateDynamicObject(9339, 115.50000, 1716.80005, 44.30000,   0.00000, 90.00000, 90.00000,1);
CreateDynamicObject(9339, 115.50000, 1715.40002, 44.30000,   0.00000, 90.00000, 90.00000,1);
CreateDynamicObject(9339, 115.50000, 1714.00000, 44.30000,   0.00000, 90.00000, 90.00000,1);
CreateDynamicObject(9339, 115.50000, 1712.60999, 44.30000,   0.00000, 90.00000, 270.00000,1);
CreateDynamicObject(10631, 93.69000, 1723.40002, 45.40000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(14407, 114.10000, 1710.30005, 41.20000,   0.00000, 0.00000, 180.00000,1);
CreateDynamicObject(9339, 115.40000, 1712.19995, 43.40000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(9339, 115.40000, 1712.19995, 42.00000,   0.00000, 0.00000, 269.98999,1);
CreateDynamicObject(16500, 195.89999, 1737.19995, 54.40000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 215.60001, 1754.90002, 53.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 178.10001, 1662.90002, 53.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 177.20000, 1650.00000, 54.20000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 177.20000, 1644.19995, 54.20000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 225.89999, 1626.59998, 51.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 126.40000, 1705.50000, 45.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 126.40000, 1697.30005, 45.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 126.50000, 1680.19995, 45.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 128.60001, 1645.90002, 45.40000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 128.70000, 1625.19995, 45.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 128.80000, 1609.09998, 45.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 128.80000, 1603.40002, 45.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16500, 158.60001, 1574.30005, 52.00000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 128.30000, 1672.90002, 39.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 123.80000, 1718.40002, 39.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 56.40000, 1570.00000, 39.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 42.50000, 1778.80005, 39.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 59.10000, 1769.80005, 39.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 44.70000, 1824.80005, 39.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 59.00000, 1824.80005, 39.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 83.60000, 1772.19995, 39.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 147.20000, 1756.80005, 39.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 166.10001, 1756.50000, 39.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 255.20000, 1845.30005, 42.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 235.30000, 1845.30005, 42.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 235.60001, 1769.69995, 42.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 254.50000, 1647.30005, 49.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 230.30000, 1646.80005, 49.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 225.60001, 1619.80005, 49.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 207.89999, 1610.59998, 49.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 158.30000, 1569.59998, 43.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(12814, 117.60000, 1597.00000, 47.70000,   90.00000, 90.00000, 90.00000,1);
CreateDynamicObject(16500, 198.60001, 1692.40002, 48.80000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(16500, 198.50000, 1700.00000, 48.80000,   0.00000, 0.00000, 179.99001,1);
CreateDynamicObject(10631, 63.40000, 1724.09998, 54.40000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 83.80000, 1724.00000, 54.70000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(10631, 94.10000, 1724.09998, 54.40000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(6295, 56.60000, 1713.00000, 39.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(7017, 151.60001, 1568.00000, 47.50000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(7017, 195.60001, 1578.90002, 41.60000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(7017, 68.80000, 1568.09998, 42.40000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 97.60000, 1597.80005, 41.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 97.60000, 1599.80005, 41.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 97.60000, 1601.80005, 41.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 97.70000, 1597.90002, 43.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 97.70000, 1599.80005, 43.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 97.80000, 1598.00000, 45.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 95.80000, 1598.00000, 41.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 99.50000, 1598.30005, 41.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(3798, 101.70000, 1598.50000, 41.80000,   0.00000, 0.00000, 0.00000,1);
CreateDynamicObject(16113, 31.10000, 1797.59998, 52.80000,   0.00000, 0.00000, 130.00000,1);
CreateDynamicObject(16113, 45.60000, 1565.50000, 52.00000,   0.00000, 0.00000, 130.00000,1);
CreateDynamicObject(16113, 39.90000, 1667.90002, 51.20000,   0.00000, 0.00000, 130.00000,1);
CreateDynamicObject(16113, 36.50000, 1718.19995, 51.20000,   0.00000, 0.00000, 130.00000,1);
CreateDynamicObject(16113, 26.60000, 1758.00000, 51.20000,   0.00000, 0.00000, 130.00000,1);
CreateDynamicObject(16113, 179.20000, 1826.09998, 56.10000,   0.00000, 0.00000, 70.00000,1);
//counter strike
//drift 1
CreateObject(18761, -302.33, 1508.98, 79.09,   0.00, 0.00, 0.00);
CreateObject(18800, -246.87, 1536.20, 85.48,   0.00, 0.00, 46.08);
CreateObject(18803, -510.09, 1379.29, 31.23,   4.00, 0.00, 24.00);
CreateObject(6997, -253.80, 1456.88, 102.82,   0.00, 0.00, 135.93);
CreateObject(6869, -196.13, 1417.46, 98.52,   0.00, 0.00, 135.93);
CreateObject(3493, -255.56, 1408.48, 105.40,   0.00, 0.00, 315.98);
CreateObject(3493, -254.33, 1409.72, 110.90,   0.00, 0.00, 315.98);
CreateObject(3493, -246.66, 1417.42, 116.46,   0.00, 0.00, 315.98);
CreateObject(3493, -246.66, 1417.42, 121.98,   0.00, 0.00, 315.98);
CreateObject(18761, -252.12, 1497.72, 103.45,   0.00, 0.00, 315.77);
CreateObject(18761, -296.01, 1431.67, 76.94,   0.00, 0.00, 0.00);
CreateObject(18761, -327.21, 1416.58, 73.76,   0.00, 0.00, 37.56);
CreateObject(18761, -346.53, 1382.25, 61.00,   0.00, 0.00, 30.35);
CreateObject(18761, -363.79, 1354.22, 49.73,   0.00, 0.00, 30.35);
CreateObject(18761, -428.34, 1446.58, 38.64,   0.00, 0.00, 288.26);
CreateObject(18761, -440.47, 1410.33, 35.86,   0.00, 0.00, 288.63);
CreateObject(18803, -646.94, 1319.09, 23.39,   4.00, -6.00, 23.90);
CreateObject(18802, -724.34, 1285.64, 12.45,   4.00, -6.00, 23.90);
CreateObject(18761, -728.67, 1283.77, 15.46,   0.00, 0.00, 300.19);
CreateObject(18761, -790.23, 1317.36, 17.85,   0.00, 0.00, 210.62);
CreateObject(18761, -847.46, 1423.57, 17.75,   0.00, 0.00, 198.36);
CreateObject(3511, -310.40, 1495.89, 74.58,   0.00, 0.00, 0.00);
CreateObject(3511, -292.99, 1497.09, 74.58,   0.00, 0.00, 0.00);
CreateObject(3437, -313.28, 1532.13, 74.58,   0.00, 0.00, 0.00);
CreateObject(3511, -308.33, 1478.96, 74.17,   0.00, 0.00, 0.00);
CreateObject(3511, -292.25, 1481.19, 74.37,   0.00, 0.00, 0.00);
CreateObject(3511, -307.71, 1464.02, 73.15,   0.00, 0.00, 0.00);
CreateObject(3511, -290.41, 1464.75, 73.35,   0.00, 0.00, 0.00);
CreateObject(3511, -306.12, 1447.17, 71.93,   0.00, 0.00, 0.00);
CreateObject(3511, -288.16, 1448.47, 71.32,   0.00, 0.00, 0.00);
CreateObject(3511, -304.81, 1426.88, 71.42,   0.00, 0.00, 0.00);
CreateObject(3511, -287.07, 1427.47, 70.91,   0.00, 0.00, 0.00);
CreateObject(3511, -303.67, 1413.66, 70.91,   0.00, 0.00, 0.00);
CreateObject(3511, -286.15, 1415.37, 70.51,   0.00, 0.00, 0.00);
CreateObject(3511, -292.46, 1392.26, 70.51,   0.00, 0.00, 0.00);
CreateObject(3511, -315.01, 1387.73, 70.10,   0.00, 0.00, 0.00);
CreateObject(3511, -316.40, 1411.79, 69.18,   0.00, 0.00, 0.00);
CreateObject(3511, -328.57, 1401.84, 68.67,   0.00, 0.00, 0.00);
CreateObject(3511, -339.26, 1421.05, 67.16,   0.00, 0.00, 0.00);
CreateObject(3511, -323.84, 1428.88, 66.66,   0.00, 0.00, 0.00);
CreateObject(3511, -346.90, 1438.17, 65.32,   0.00, 0.00, 0.00);
CreateObject(3511, -333.55, 1446.96, 65.01,   0.00, 0.00, 0.00);
CreateObject(3511, -341.23, 1463.93, 63.54,   0.00, 0.00, 0.00);
CreateObject(3511, -356.46, 1453.01, 63.24,   0.00, 0.00, 0.00);
CreateObject(3511, -370.05, 1453.73, 60.80,   0.00, 0.00, 0.00);
CreateObject(3511, -360.68, 1473.97, 61.92,   0.00, 0.00, 0.00);
CreateObject(3511, -377.08, 1471.42, 61.01,   0.00, 0.00, 0.00);
CreateObject(3511, -388.22, 1455.91, 59.67,   0.00, 0.00, 0.00);
CreateObject(3511, -366.63, 1436.97, 59.37,   0.00, 0.00, 0.00);
CreateObject(3511, -383.05, 1434.20, 59.77,   0.00, 0.00, 0.00);
CreateObject(3511, -375.17, 1416.79, 58.66,   0.00, 0.00, 0.00);
CreateObject(3511, -360.11, 1423.14, 58.15,   0.00, 0.00, 0.00);
CreateObject(3511, -353.04, 1409.44, 57.01,   0.00, 0.00, 0.00);
CreateObject(3511, -367.29, 1401.47, 56.50,   0.00, 0.00, 0.00);
CreateObject(3511, -343.06, 1392.73, 56.19,   0.00, 0.00, 0.00);
CreateObject(3511, -357.69, 1384.32, 55.58,   0.00, 0.00, 0.00);
CreateObject(3511, -347.85, 1366.79, 53.94,   0.00, 0.00, 0.00);
CreateObject(3511, -332.53, 1374.40, 55.17,   0.00, 0.00, 0.00);
CreateObject(3511, -322.42, 1355.66, 53.74,   0.00, 0.00, 0.00);
CreateObject(3511, -335.87, 1349.23, 53.03,   0.00, 0.00, 0.00);
CreateObject(3511, -312.37, 1336.46, 52.42,   0.00, 0.00, 0.00);
CreateObject(3511, -329.23, 1332.50, 51.91,   0.00, 0.00, 0.00);
CreateObject(3511, -341.94, 1332.93, 49.65,   0.00, 0.00, 0.00);
CreateObject(3511, -350.46, 1348.19, 48.32,   0.00, 0.00, 0.00);
CreateObject(3511, -364.79, 1340.03, 47.48,   0.00, 0.00, 0.00);
CreateObject(3511, -355.06, 1324.71, 48.40,   0.00, 0.00, 0.00);
CreateObject(3511, -363.55, 1369.53, 44.59,   0.00, 0.00, 0.00);
CreateObject(3511, -376.05, 1361.23, 44.69,   0.00, 0.00, 0.00);
CreateObject(3511, -387.69, 1379.42, 42.91,   0.00, 0.00, 0.00);
CreateObject(3511, -373.13, 1387.24, 41.84,   0.00, 0.00, 0.00);
CreateObject(3511, -399.77, 1402.05, 39.56,   0.00, 0.00, 0.00);
CreateObject(3511, -383.68, 1410.48, 39.35,   0.00, 0.00, 0.00);
CreateObject(3511, -394.37, 1431.94, 36.58,   0.00, 0.00, 0.00);
CreateObject(3511, -408.55, 1424.51, 36.48,   0.00, 0.00, 0.00);
CreateObject(3511, -415.07, 1437.25, 34.74,   0.00, 0.00, 0.00);
CreateObject(3511, -410.34, 1453.75, 34.01,   0.00, 0.00, 0.00);
CreateObject(3511, -425.66, 1456.02, 32.85,   0.00, 0.00, 0.00);
CreateObject(3511, -425.55, 1426.67, 31.80,   0.00, 0.00, 0.00);
CreateObject(3511, -423.21, 1412.12, 30.86,   0.00, 0.00, 0.00);
CreateObject(3511, -444.64, 1426.93, 31.89,   0.00, 0.00, 0.00);
CreateObject(3511, -449.17, 1442.75, 31.89,   0.00, 0.00, 0.00);
CreateObject(11463, -550.66, 1361.82, 10.10,   0.00, 0.00, 12.12);
CreateObject(978, -298.08, 1390.16, 72.28,   0.00, 0.00, 21.42);
CreateObject(978, -307.14, 1388.28, 72.28,   0.00, 0.00, 2.13);
CreateObject(978, -315.73, 1390.70, 72.28,   0.00, 0.00, 326.28);
CreateObject(978, -291.42, 1395.99, 72.28,   0.00, 0.00, 60.83);
CreateObject(978, -272.14, 1442.45, 120.13,   0.00, 0.00, 136.04);
CreateObject(978, -265.40, 1435.96, 120.13,   0.00, 0.00, 136.04);
CreateObject(978, -246.01, 1426.61, 120.03,   0.00, 0.00, 224.55);
CreateObject(978, -248.37, 1424.29, 120.03,   0.00, 0.00, 224.54);
CreateObject(978, -246.28, 1434.71, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -251.24, 1439.58, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -255.20, 1426.16, 120.13,   0.00, 0.00, 136.04);
CreateObject(978, -260.22, 1430.99, 120.13,   0.00, 0.00, 136.04);
CreateObject(978, -233.97, 1422.31, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -238.92, 1427.21, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -228.52, 1416.96, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -223.57, 1412.07, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -229.84, 1400.57, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -223.21, 1394.08, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -236.45, 1407.07, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -221.18, 1392.11, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -253.44, 1419.22, 120.03,   0.00, 0.00, 224.54);
CreateObject(978, -258.43, 1414.36, 120.03,   0.00, 0.00, 224.54);
CreateObject(978, -257.24, 1408.25, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -250.74, 1401.84, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -244.12, 1395.28, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -241.59, 1392.76, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -272.13, 1442.65, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -266.20, 1436.86, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -251.48, 1445.75, 114.55,   0.00, 0.00, 45.43);
CreateObject(978, -246.59, 1450.69, 114.55,   0.00, 0.00, 45.43);
CreateObject(978, -250.83, 1439.37, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -245.88, 1434.46, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -259.68, 1430.41, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -254.10, 1424.90, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -246.03, 1421.74, 114.55,   0.00, 0.00, 358.38);
CreateObject(978, -236.98, 1421.03, 114.55,   0.00, 0.00, 355.63);
CreateObject(978, -235.36, 1438.94, 114.55,   0.00, 0.00, 45.43);
CreateObject(978, -239.48, 1434.82, 114.55,   0.00, 0.00, 45.43);
CreateObject(978, -225.45, 1397.12, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -220.49, 1392.32, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -251.84, 1416.52, 114.55,   0.00, 0.00, 89.97);
CreateObject(978, -251.36, 1407.20, 114.55,   0.00, 0.00, 96.05);
CreateObject(978, -227.97, 1416.78, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -223.01, 1411.88, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -232.17, 1403.66, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -237.30, 1408.65, 114.55,   0.00, 0.00, 316.12);
CreateObject(978, -247.54, 1399.27, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -241.14, 1392.98, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -264.73, 1414.72, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -271.37, 1421.24, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -276.32, 1426.13, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -282.21, 1431.92, 114.55,   0.00, 0.00, 315.51);
CreateObject(978, -266.60, 1405.87, 114.55,   0.00, 0.00, 45.43);
CreateObject(978, -263.65, 1408.84, 114.55,   0.00, 0.00, 45.43);
CreateObject(3493, -246.59, 1418.04, 99.93,   0.00, 0.00, 315.98);
CreateObject(978, -264.60, 1415.53, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -269.24, 1420.12, 120.03,   0.00, 0.00, 315.51);
CreateObject(978, -270.51, 1426.07, 120.03,   0.00, 0.00, 45.41);
CreateObject(978, -266.43, 1430.22, 120.03,   0.00, 0.00, 45.41);
CreateObject(978, -244.66, 1423.28, 109.09,   0.00, 0.00, 175.70);
CreateObject(978, -252.10, 1445.29, 109.09,   0.00, 0.00, 45.41);
CreateObject(978, -246.89, 1450.59, 109.09,   0.00, 0.00, 45.41);
CreateObject(978, -258.60, 1438.70, 109.09,   0.00, 0.00, 45.41);
CreateObject(978, -235.36, 1422.56, 109.09,   0.00, 0.00, 175.40);
CreateObject(978, -242.59, 1409.38, 109.09,   0.00, 0.00, 45.41);
CreateObject(978, -246.19, 1405.73, 109.09,   0.00, 0.00, 45.41);
CreateObject(978, -251.11, 1405.70, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -257.61, 1412.22, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -263.15, 1417.78, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -268.95, 1423.62, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -272.38, 1431.61, 109.09,   0.00, 0.00, 271.68);
CreateObject(978, -272.64, 1440.81, 109.09,   0.00, 0.00, 271.68);
CreateObject(978, -272.91, 1450.08, 109.09,   0.00, 0.00, 271.68);
CreateObject(978, -258.91, 1432.04, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -253.21, 1426.31, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -226.67, 1419.20, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -221.90, 1414.42, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -230.81, 1405.29, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -215.36, 1408.34, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -210.45, 1403.42, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -235.70, 1410.23, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -230.59, 1398.49, 109.09,   0.00, 0.00, 45.41);
CreateObject(978, -233.87, 1395.16, 109.09,   0.00, 0.00, 45.41);
CreateObject(978, -245.97, 1400.01, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -241.06, 1395.07, 109.09,   0.00, 0.00, 314.89);
CreateObject(978, -253.51, 1448.78, 103.42,   0.00, 0.00, 89.04);
CreateObject(978, -253.32, 1458.09, 103.42,   0.00, 0.00, 89.04);
CreateObject(978, -249.97, 1440.60, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -244.98, 1435.76, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -245.70, 1421.62, 103.42,   0.00, 0.00, 352.19);
CreateObject(978, -260.21, 1430.68, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -254.26, 1424.90, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -272.12, 1442.64, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -266.41, 1437.08, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -236.40, 1421.08, 103.42,   0.00, 0.00, 1.21);
CreateObject(978, -280.22, 1437.91, 103.42,   0.00, 0.00, 250.03);
CreateObject(978, -282.63, 1428.90, 103.42,   0.00, 0.00, 259.90);
CreateObject(978, -282.61, 1419.70, 103.42,   0.00, 0.00, 280.24);
CreateObject(978, -277.83, 1444.45, 103.42,   0.00, 0.00, 250.03);
CreateObject(978, -239.22, 1435.16, 103.51,   0.00, 0.00, 226.46);
CreateObject(978, -232.79, 1441.93, 103.51,   0.00, 0.00, 226.46);
CreateObject(978, -255.30, 1412.30, 103.42,   0.00, 0.00, 357.36);
CreateObject(978, -246.00, 1411.68, 103.42,   0.00, 0.00, 354.94);
CreateObject(978, -227.88, 1418.01, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -222.91, 1413.15, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -220.46, 1392.75, 103.42,   0.00, 0.00, 315.71);
CreateObject(978, -227.10, 1399.22, 103.42,   0.00, 0.00, 315.71);
CreateObject(978, -233.74, 1405.69, 103.42,   0.00, 0.00, 315.71);
CreateObject(978, -237.09, 1408.94, 103.42,   0.00, 0.00, 315.71);
CreateObject(978, -263.92, 1415.94, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -268.89, 1420.85, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -264.35, 1402.65, 103.42,   0.00, 0.00, 357.36);
CreateObject(978, -255.19, 1402.05, 103.42,   0.00, 0.00, 354.94);
CreateObject(978, -274.25, 1406.13, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -279.21, 1411.00, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -246.42, 1399.07, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -241.42, 1394.21, 103.42,   0.00, 0.00, 135.77);
CreateObject(978, -242.29, 1380.41, 103.42,   0.00, 0.00, 351.35);
CreateObject(978, -233.19, 1379.01, 103.42,   0.00, 0.00, 351.35);
CreateObject(978, -255.50, 1388.34, 103.42,   0.00, 0.00, 314.21);
CreateObject(978, -250.89, 1383.48, 103.42,   0.00, 0.00, 314.21);
CreateObject(978, -262.18, 1388.51, 103.51,   0.00, 0.00, 46.03);
CreateObject(978, -267.38, 1383.06, 103.51,   0.00, 0.00, 46.03);
CreateObject(978, -230.01, 1382.82, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -255.49, 1412.32, 98.07,   0.00, 0.00, 357.93);
CreateObject(978, -246.14, 1411.94, 98.07,   0.00, 0.00, 357.93);
CreateObject(978, -234.35, 1423.91, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -239.38, 1428.63, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -257.82, 1446.66, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -264.61, 1453.01, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -250.95, 1439.77, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -245.62, 1434.69, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -255.00, 1425.19, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -261.74, 1431.58, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -268.45, 1437.91, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -275.01, 1444.55, 98.07,   0.00, 0.00, 132.49);
CreateObject(978, -248.80, 1425.26, 98.07,   0.00, 0.00, 225.74);
CreateObject(978, -245.15, 1429.01, 98.07,   0.00, 0.00, 225.74);
CreateObject(978, -227.98, 1417.32, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -223.64, 1413.25, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -232.31, 1403.40, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -237.36, 1408.21, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -235.07, 1387.61, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -241.93, 1393.43, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -247.00, 1398.22, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -253.86, 1404.75, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -260.61, 1411.10, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -265.66, 1415.88, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -270.29, 1420.30, 98.07,   0.00, 0.00, 135.98);
CreateObject(978, -225.96, 1397.71, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -220.77, 1392.80, 98.07,   0.00, 0.00, 136.68);
CreateObject(978, -339.54, 1311.55, 51.25,   0.00, 0.00, 332.55);
CreateObject(978, -354.87, 1470.42, 63.50,   0.00, 0.00, 162.22);
CreateObject(978, -363.82, 1470.91, 62.99,   0.00, 0.00, 191.70);
CreateObject(978, -372.85, 1468.51, 62.07,   0.00, 0.00, 199.31);
CreateObject(978, -380.45, 1463.67, 61.67,   0.00, 0.00, 226.41);
CreateObject(978, -385.05, 1455.73, 61.35,   0.00, 0.00, 252.90);
CreateObject(978, -347.14, 1316.89, 50.85,   0.00, 0.00, 317.26);
CreateObject(978, -402.84, 1444.89, 36.04,   0.00, 0.00, 128.56);
CreateObject(978, -409.88, 1450.76, 35.43,   0.00, 6.00, 152.00);
CreateObject(978, -418.63, 1453.76, 34.37,   0.00, 6.00, 170.15);
CreateObject(0, -427.75, 1454.17, 33.56,   4.00, 4.00, 184.00);
CreateObject(978, -1174.14, 1802.22, 40.09,   0.00, 0.00, 226.53);
CreateObject(978, -1178.03, 1794.15, 40.09,   0.00, 0.00, 261.97);
CreateObject(978, -1166.23, 1805.71, 40.09,   0.00, 0.00, 181.13);
CreateObject(978, -1174.94, 1786.70, 40.09,   0.00, 0.00, 323.17);
CreateObject(978, -845.43, 1844.67, 59.61,   0.00, 0.00, 91.96);
CreateObject(978, -845.90, 1835.36, 59.61,   0.00, 0.00, 82.35);
CreateObject(978, -847.90, 1826.25, 59.61,   0.00, 0.00, 72.89);
CreateObject(978, -851.00, 1817.43, 59.61,   0.00, 0.00, 68.26);
CreateObject(978, -855.28, 1809.20, 59.61,   0.00, 0.00, 56.94);
CreateObject(978, -887.17, 2001.40, 60.12,   0.00, 0.00, 227.58);
CreateObject(978, -892.26, 1993.69, 60.12,   0.00, 0.00, 245.48);
CreateObject(978, -894.19, 1984.75, 60.12,   0.00, 0.00, 270.06);
CreateObject(978, -403.77, 2087.43, 61.28,   0.00, 0.00, 195.92);
CreateObject(978, -394.64, 2088.07, 61.12,   0.00, -2.00, 172.17);
CreateObject(978, -386.05, 2084.92, 60.79,   0.00, -2.00, 147.32);
CreateObject(978, -378.80, 2079.10, 60.47,   0.00, -2.00, 135.06);
CreateObject(978, -373.71, 2071.44, 60.30,   0.00, 0.00, 112.00);
CreateObject(978, -479.53, 1960.55, 84.74,   0.00, -8.00, 243.91);
CreateObject(978, -483.59, 1952.26, 85.89,   0.00, -8.00, 244.00);
CreateObject(978, -486.26, 1943.55, 86.52,   0.00, 0.00, 261.64);
CreateObject(978, -472.82, 1768.12, 72.73,   0.00, 2.00, 300.00);
CreateObject(978, -467.55, 1760.42, 72.43,   0.00, 2.00, 308.50);
CreateObject(978, -460.35, 1754.79, 72.29,   0.00, 0.00, 335.00);
CreateObject(978, -451.45, 1752.39, 72.29,   0.00, 0.00, 355.00);
CreateObject(978, -442.27, 1753.26, 71.99,   0.00, 0.00, 15.77);
CreateObject(978, -433.61, 1756.71, 71.99,   0.00, 0.00, 27.60);
CreateObject(978, -426.22, 1762.21, 71.99,   0.00, 0.00, 45.65);
CreateObject(978, -420.44, 1769.49, 71.74,   0.00, 3.00, 57.00);
CreateObject(978, -393.97, 1745.84, 42.18,   0.00, -6.00, 65.19);
CreateObject(18761, -446.65, 1481.42, 38.13,   0.00, 0.00, 187.00);
//drift 1
//sapd
CreateDynamicObject(5822, 1545.51917, -1638.21411, 21.53090,   0.00000, 0.00000, 5.00000);
CreateDynamicObject(970, 1539.49414, -1653.46118, 13.05350,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1649.33618, 13.45850,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1645.22620, 13.45850,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1641.11621, 13.45850,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1638.19116, 13.45850,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1541.53406, -1636.13623, 13.45850,   0.00000, 0.00000, 1.00000);
CreateDynamicObject(970, 1539.49414, -1657.58618, 13.05350,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1661.71118, 13.05350,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1665.85120, 13.05350,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1697.87915, 13.05350,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49243, -1693.74207, 13.05350,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1689.61218, 13.05350,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1685.46021, 13.05350,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1681.30823, 13.05350,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1669.96118, 13.05350,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1541.56213, -1671.98230, 13.05350,   0.00000, 0.00000, 1.00000);
CreateDynamicObject(970, 1541.56213, -1679.19934, 13.05350,   0.00000, 0.00000, 1.00000);
CreateDynamicObject(646, 1546.38794, -1672.36792, 15.26000,   360.00000, 0.00000, 3.00000);
CreateDynamicObject(646, 1546.38708, -1678.63367, 15.26000,   360.00000, 0.00000, 3.00000);
CreateDynamicObject(970, 1539.49414, -1701.99524, 13.45250,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1706.11121, 13.45250,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1710.22717, 13.45250,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1539.49414, -1713.46118, 13.45250,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1541.55212, -1715.51917, 13.45250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1544.99597, -1637.25989, 27.28470,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1542.59607, -1639.76245, 27.28470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1542.59607, -1644.76038, 27.28470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1542.59607, -1648.30945, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1545.13708, -1650.70337, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1550.13513, -1650.70337, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1551.22705, -1650.70337, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1553.61658, -1653.14917, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1553.61658, -1658.14722, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1553.61658, -1663.14514, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1553.61658, -1668.14307, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1553.61658, -1670.32715, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1556.02515, -1672.73450, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1553.61658, -1680.84814, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1556.04797, -1678.44971, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1553.61658, -1685.84607, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1553.61658, -1690.84412, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1553.61658, -1695.84204, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1553.61658, -1698.08899, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1551.17505, -1700.49341, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1545.00098, -1700.49341, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1547.37402, -1700.49341, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1542.60425, -1702.93689, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1542.60425, -1707.93494, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1542.60425, -1711.98792, 27.28400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 1545.06848, -1714.38000, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1550.06653, -1714.38000, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1555.06445, -1714.38000, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1560.06250, -1714.38000, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1565.06055, -1714.38000, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1570.05847, -1714.38000, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1575.05652, -1714.38000, 27.28400,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1553.31201, -1637.25989, 27.28470,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1558.31006, -1637.25989, 27.28470,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1563.30798, -1637.25989, 27.28470,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1568.30603, -1637.25989, 27.28470,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1573.30396, -1637.25989, 27.28470,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 1574.98401, -1637.25989, 27.28470,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1577.46301, -1642.41284, 28.74160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1577.46301, -1652.68176, 28.74160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1577.46301, -1662.95081, 28.74160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1577.46301, -1673.21985, 28.74160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1577.46301, -1683.50977, 28.74160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1577.46301, -1693.79980, 28.74160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1577.46301, -1704.06885, 28.74160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1577.46301, -1709.21375, 28.74160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1281, 1573.23254, -1641.55920, 28.16140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1281, 1573.00403, -1648.18005, 28.16140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1281, 1572.92285, -1654.72229, 28.16140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1281, 1566.01233, -1655.59998, 28.16140,   0.00000, 0.00000, -40.00000);
CreateDynamicObject(1281, 1558.97595, -1647.87231, 28.16140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1281, 1565.80432, -1640.48767, 28.16140,   0.00000, 0.00000, -40.00000);
CreateDynamicObject(1281, 1559.01025, -1640.73145, 28.16140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1281, 1559.00134, -1655.37329, 28.16140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3928, 1549.68713, -1707.94373, 27.39350,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3928, 1568.32617, -1708.28162, 27.39350,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3928, 1564.01624, -1693.65405, 27.39350,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, 1565.31213, -1648.34399, 30.27860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1571, 1560.37769, -1665.41504, 28.61190,   0.00000, 0.00000, 164.00000);
CreateDynamicObject(1342, 1568.29065, -1665.51685, 28.37360,   0.00000, 0.00000, 120.00000);
CreateDynamicObject(1341, 1544.26294, -1648.26831, 28.36770,   0.00000, 0.00000, 18.00000);
CreateDynamicObject(1340, 1544.78650, -1642.63086, 28.47270,   0.00000, 0.00000, -18.00000);
CreateDynamicObject(1359, 1563.47131, -1651.79480, 28.03310,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1359, 1569.33154, -1651.29248, 28.03310,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1359, 1568.71057, -1644.54810, 28.03310,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1359, 1563.13672, -1644.81055, 28.03310,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1226, 1544.08020, -1637.91687, 31.14240,   0.00000, 0.00000, 156.00000);
CreateDynamicObject(1226, 1543.97839, -1649.71106, 31.14240,   0.00000, 0.00000, 207.00000);
CreateDynamicObject(1226, 1576.44263, -1638.24597, 31.14240,   0.00000, 0.00000, 33.00000);
CreateDynamicObject(3666, 1559.15454, -1707.77917, 27.84800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1573.23706, -1699.46655, 27.84800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3666, 1556.78442, -1686.50610, 27.84800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1638.16650, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1640.13147, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1642.08154, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1644.04651, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1646.04150, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1648.00647, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1649.80652, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1701.38745, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1703.30151, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1705.21545, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1707.12952, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1709.04346, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1710.95752, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1712.93750, 27.41170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18648, 1542.50476, -1713.46545, 27.41170,   0.00000, 0.00000, 0.00000);
//sapd
//delta force
//DF SF BAZA
CreateDynamicObject(19121, -2430.344726, 501.731445, 29.570299, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(19121, -2442.924804, 501.731445, 29.570299, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(19121, -2442.924804, 500.021606, 29.460300, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(19121, -2429.222412, 500.021606, 29.460300, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(18885, -2446.639892, 505.265350, 30.003786, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(19967, -2426.492919, 498.203491, 28.925918, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(1231, -2453.934814, 500.281036, 31.684034, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(1231, -2456.897216, 500.281036, 31.684034, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(1231, -2460.599853, 500.281036, 31.734033, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(1231, -2466.502441, 500.281036, 31.664031, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(1231, -2433.719482, 513.431213, 31.664031, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(1231, -2433.719482, 519.241271, 31.664031, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(1231, -2433.719482, 524.241394, 31.664031, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(3472, -2423.382568, 549.267700, 23.966846, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(3472, -2403.218750, 549.267700, 23.966846, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(3472, -2440.347167, 549.267700, 23.846843, 0.000000, 0.000000, 0.000000, -1);
CreateDynamicObject(1723, -2444.213378, 510.319793, 28.820251, 0.000000, 0.000000, 89.899955, -1);
CreateDynamicObject(1723, -2444.219482, 507.369995, 28.820251, 0.000000, 0.000000, 89.899955, -1);
CreateDynamicObject(3437, -2454.844970, 515.472656, 44.169986, 0.000000, 0.000000, 82.900009, -1);
CreateDynamicObject(3437, -2453.027343, 530.029479, 44.169986, 0.000000, 0.000000, 82.900009, -1);
CreateDynamicObject(3437, -2448.020751, 527.560668, 36.279960, 0.000000, 0.000000, 82.900009, -1);
CreateDynamicObject(3437, -2448.036376, 518.583862, 36.279960, 0.000000, 0.000000, 82.900009, -1);
CreateDynamicObject(13011, -2436.942871, 534.251342, 29.934328, 0.000000, 0.000000, 173.700195, 11);
CreateDynamicObject(13011, -2437.644287, 522.804992, 34.694362, 0.000000, 0.000000, 91.100204, 11);
CreateDynamicObject(13011, -2442.841308, 522.690734, 39.669761, 12.600002, 0.000000, 92.300193, 11);
CreateDynamicObject(16359, -2487.531738, 497.557525, 28.910942, 0.000000, 0.000000, 87.800041, 11);
CreateDynamicObject(16359, -2468.994140, 496.845458, 28.910942, 0.000000, 0.000000, 87.800041, 11);
CreateDynamicObject(9320, -2511.708740, 518.319641, 19.553424, 0.000000, 0.000000, 0.800001, 11);
CreateDynamicObject(9320, -2511.993652, 538.797546, 19.553424, 0.000000, 0.000000, 0.800001, 11);
//DF SF BAZA
//DF BAZA
dfp3 = CreateDynamicObject(980, 836.487792, -2069.757812, 14.618954, 0.000000, 0.000000, 0.000000);
dfp4 = CreateDynamicObject(980, 836.365417, -2027.369750, 14.646684, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 838.197326, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 809.826354, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 869.766296, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 900.604187, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 778.814208, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 778.814208, -2128.983642, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 778.814208, -2167.389892, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 778.814208, -2205.367675, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 778.814208, -2243.125976, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 815.823974, -2243.125976, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 847.703552, -2243.125976, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 847.703552, -2208.197509, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 847.703552, -2169.537841, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 847.703552, -2129.957275, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 808.544006, -2129.957275, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 810.361206, -2171.278076, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 810.361206, -2202.869384, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 883.081054, -2202.869384, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 882.577819, -2168.588623, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 882.577819, -2243.432861, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 882.577819, -2130.613037, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 901.378356, -2130.540283, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 901.378356, -2168.619628, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 901.378356, -2206.968017, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(4585, 901.378356, -2243.368408, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(8148, 759.284545, -2151.047363, 14.962260, 0.000000, 0.000000, 0.000000);
CreateObject(8148, 759.284545, -2183.484375, 14.962260, 0.000000, 0.000000, 0.000000);
CreateObject(8148, 919.654968, -2151.047363, 14.962260, 0.000000, 0.000000, 0.000000);
CreateObject(8148, 919.654968, -2182.510742, 14.962260, 0.000000, 0.000000, 0.000000);
CreateObject(987, 759.586059, -2070.185791, 11.661706, 0.000000, 0.000000, 0.000000);
CreateObject(987, 759.586059, -2070.185791, 14.601703, 0.000000, 0.000000, 0.000000);
CreateObject(987, 771.615783, -2070.185791, 14.601703, 0.000000, 0.000000, 0.000000);
CreateObject(987, 771.615783, -2070.185791, 10.311701, 0.000000, 0.000000, 0.000000);
CreateObject(987, 783.405822, -2070.185791, 10.311701, 0.000000, 0.000000, 0.000000);
CreateObject(987, 783.405822, -2070.185791, 14.511699, 0.000000, 0.000000, 0.000000);
CreateObject(987, 795.275939, -2070.185791, 14.511699, 0.000000, 0.000000, 0.000000);
CreateObject(987, 795.275939, -2070.185791, 9.631697, 0.000000, 0.000000, 0.000000);
CreateObject(987, 807.076110, -2070.185791, 9.631697, 0.000000, 0.000000, 0.000000);
CreateObject(987, 807.046081, -2070.185791, 14.641714, 0.000000, 0.000000, 0.000000);
CreateObject(987, 854.142333, -2070.517333, 14.339406, 0.000000, 0.000000, 0.000000);
CreateObject(987, 854.073547, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
CreateObject(987, 866.073974, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
CreateObject(987, 878.063659, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
CreateObject(987, 890.113464, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
CreateObject(987, 902.023132, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
CreateObject(987, 907.973815, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
CreateObject(987, 907.973815, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
CreateObject(987, 896.093750, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
CreateObject(987, 884.144042, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
CreateObject(987, 872.094055, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
CreateObject(987, 861.053588, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
CreateObject(987, 919.919067, -2264.012939, 11.826725, 0.000000, 0.000000, -174.800018);
CreateObject(987, 919.919067, -2264.012939, 14.626738, 0.000000, 0.000000, -174.800018);
CreateObject(987, 908.018188, -2265.096923, 14.626738, 0.000000, 0.000000, -174.800018);
CreateObject(987, 908.018188, -2265.096923, 10.196736, 0.000000, 0.000000, -174.800018);
CreateObject(987, 896.426330, -2266.151611, 10.196736, 0.000000, 0.000000, -174.800018);
CreateObject(987, 884.475402, -2267.239501, 10.196736, 0.000000, 0.000000, -174.800018);
CreateObject(987, 861.780639, -2266.685791, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 849.730529, -2266.601806, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 837.880554, -2266.518798, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 825.921081, -2266.436035, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 813.971130, -2266.351562, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 802.001708, -2266.267089, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 790.011901, -2266.184082, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 778.002014, -2266.100341, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 771.831176, -2266.056640, 11.716729, 0.000000, 0.000000, 179.600006);
CreateObject(987, 771.831176, -2266.056640, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 783.810485, -2266.141113, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 795.800720, -2266.225341, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 807.710998, -2266.308593, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 819.640502, -2266.391357, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 831.650451, -2266.474365, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 843.600585, -2266.558837, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 855.570556, -2266.642822, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 861.700622, -2266.685546, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 885.840881, -2266.854248, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 897.840576, -2266.937255, 14.666730, 0.000000, 0.000000, 179.600006);
CreateObject(987, 757.960754, -2266.936767, 14.666730, 0.000000, 0.000000, 0.000000);
CreateObject(987, 757.956665, -2265.785644, 11.386724, 0.000000, 0.000000, 0.000000);
CreateObject(987, 820.092590, -2027.803222, 11.850197, 0.000000, 0.000000, 0.000000);
CreateObject(987, 820.092590, -2027.803222, 15.310198, 0.000000, 0.000000, 0.000000);
CreateObject(987, 841.303161, -2027.803222, 11.840193, 0.000000, 0.000000, 0.000000);
CreateObject(987, 841.303161, -2027.803222, 15.860177, 0.000000, 0.000000, 0.000000);
CreateObject(987, 820.073059, -2027.803222, 20.310178, 0.000000, 0.000000, 0.000000);
CreateObject(987, 841.133178, -2027.803222, 20.310178, 0.000000, 0.000000, 0.000000);
CreateObject(987, 830.412902, -2027.803222, 20.310178, 0.000000, 0.000000, 0.000000);
CreateObject(3528, 826.434936, -2026.530273, 24.639692, 0.000000, 0.000000, 87.700004);
CreateObject(3528, 846.362731, -2025.989013, 24.639692, 0.000000, 0.000000, 87.700004);
CreateObject(987, 841.611206, -2039.449218, 11.845917, 0.000000, 0.000000, 90.799964);
CreateObject(987, 841.777465, -2051.337402, 11.845917, 0.000000, 0.000000, 90.799964);
CreateObject(987, 841.940734, -2063.061767, 11.845917, 0.000000, 0.000000, 90.799964);
CreateObject(987, 842.038940, -2070.074951, 11.845917, 0.000000, 0.000000, 90.799964);
CreateObject(987, 842.038940, -2070.074951, 11.845917, 0.000000, 0.000000, -1.400006);
CreateObject(987, 832.153747, -2027.829345, 11.845917, 0.000000, 0.000000, -89.200187);
CreateObject(987, 832.152038, -2039.022583, 11.845917, 0.000000, 0.000000, -90.800094);
CreateObject(987, 831.987060, -2050.821044, 11.845917, 0.000000, 0.000000, -90.800094);
CreateObject(987, 831.882812, -2058.282958, 11.845917, 0.000000, 0.000000, -90.800094);
CreateObject(987, 831.458374, -2069.631103, 11.845917, 0.000000, 0.000000, -176.900085);
CreateObject(987, 830.769104, -2069.667724, 11.845917, 0.000000, 0.000000, -176.900085);
CreateObject(987, 830.769104, -2069.667724, 14.495929, 0.000000, 0.000000, -179.100128);
CreateObject(987, 831.489196, -2069.655517, 14.495929, 0.000000, 0.000000, -179.100128);
CreateObject(987, 853.896240, -2069.303955, 14.495929, 0.000000, 0.000000, -179.100128);
CreateObject(987, 842.487731, -2069.484863, 16.215896, 0.000000, 0.000000, -179.100128);
CreateObject(3464, 892.028015, -2086.043457, 14.214990, 0.000000, 0.000000, 0.000000);
CreateObject(3464, 892.028015, -2112.745605, 14.214990, 0.000000, 0.000000, 0.000000);
CreateObject(3464, 892.028015, -2139.313476, 14.214990, 0.000000, 0.000000, 0.000000);
CreateObject(3464, 892.028015, -2165.366699, 14.214990, 0.000000, 0.000000, 0.000000);
CreateObject(3464, 892.028015, -2191.177001, 14.214990, 0.000000, 0.000000, 0.000000);
CreateObject(3464, 892.028015, -2217.870361, 14.214990, 0.000000, 0.000000, 0.000000);
CreateObject(3279, 846.334899, -2075.705810, 11.810224, 0.000000, 0.000000, 178.900085);
CreateObject(3279, 826.744873, -2075.705810, 11.810224, 0.000000, 0.000000, 0.000000);
CreateObject(1231, 847.466430, -2025.762939, 14.636410, 0.000000, 0.000000, 0.000000);
CreateObject(1231, 850.666442, -2025.762939, 14.526410, 0.000000, 0.000000, 0.000000);
CreateObject(1231, 831.016418, -2025.762939, 14.526410, 0.000000, 0.000000, 0.000000);
CreateObject(1231, 824.560546, -2025.762939, 14.526410, 0.000000, 0.000000, 0.000000);
CreateObject(7021, 797.706970, -2113.315673, 15.438562, 0.000000, 0.000000, -0.199970);
CreateObject(6522, 798.324035, -2195.433593, 20.330322, 0.000000, 0.000000, 90.599983);
CreateObject(3598, 767.498474, -2166.142578, 13.959624, 0.000000, 0.000000, 88.899986);
CreateObject(3598, 768.002502, -2138.904785, 13.959624, 0.000000, 0.000000, 88.899986);
CreateObject(3598, 768.529785, -2111.417724, 13.959624, 0.000000, 0.000000, 88.899986);
CreateObject(3598, 769.053466, -2084.142089, 13.959624, 0.000000, 0.000000, 88.899986);
CreateObject(16093, 881.974914, -2253.761230, 11.698994, 0.000000, 0.000000, -174.599990);
CreateObject(4585, 815.823974, -2243.125976, -87.991020, 0.000000, 0.000000, 0.000000);
CreateObject(8171, 865.214660, -2331.259277, 11.658988, 0.000000, 0.000000, 0.000000);
CreateObject(3092, 835.018859, -2027.055175, 21.408720, 0.000000, 0.000000, 0.000000);
CreateObject(3092, 837.814819, -2027.697875, 21.640621, 0.000000, 0.000000, 0.000000);
CreateObject(18885, 880.052551, -2256.146240, 12.884333, 0.000000, 0.000000, 140.300003);
CreateObject(2942, 884.644592, -2256.028320, 12.464345, 0.000000, 0.000000, -154.699981);
CreateObject(7021, 797.563781, -2154.332275, 15.438562, 0.000000, 0.000000, -0.199970);
CreateObject(11493, 822.785827, -2284.706054, 4.800974, 0.000000, 0.000000, -76.799980);
CreateObject(17068, 806.152893, -2300.848876, 1.993783, 0.000000, 0.000000, 150.799987);
CreateObject(17068, 798.887756, -2313.852050, 1.993783, 0.000000, 0.000000, 150.799987);
CreateObject(17068, 784.206176, -2319.484375, 1.993783, 0.000000, 0.000000, -117.999847);
CreateObject(8546, 874.673278, -2186.790771, -121.204551, 0.000000, 0.000000, 0.000000);
CreateObject(987, 831.230346, -2028.613403, 17.104427, 0.000000, 0.000000, 0.000000);
CreateObject(980, 836.569641, -2069.956542, 8.990184, 0.000000, 0.000000, 0.000000);
//delt force
//Sdelka ili ne --- Door, gate door - open
CreateDynamicObject(1980, 1418.63135, -1615.89563, 14.07649,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1505, 1418.76550, -1615.20178, 12.51506,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1505, 1418.74670, -1616.64185, 12.51506,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19911, 1392.90930, -1646.61389, 13.47203,   0.00000, 0.00000, 92.00000);
//Sdelka ili ne --- Door, gate dooor - close
//vip gang
CreateDynamicObject(3095, 1249.11206, -1998.17908, 58.50360,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19383, 1246.21716, -2002.58130, 60.73510,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19399, 1252.00830, -2002.58130, 60.73510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19426, 1248.59692, -2002.58130, 60.73510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19426, 1250.13892, -2002.57935, 60.73510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19353, 1253.52747, -2000.96338, 60.73510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 1253.52551, -1997.93140, 60.73510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 1253.52747, -1995.29138, 60.73510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 1251.88977, -1993.77307, 60.73510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19353, 1248.72485, -1993.77710, 60.73510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19353, 1246.23486, -1993.77307, 60.73510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19353, 1244.71716, -1995.38062, 60.73510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 1244.72119, -1998.56055, 60.73510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 1244.71716, -2000.93054, 60.73510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1504, 1245.43628, -2002.70337, 58.96280,   0.00000, 0.00000, 65.00000);
CreateDynamicObject(1649, 1251.20374, -2002.55908, 60.31350,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(10942, 1240.34973, -2039.74548, 705615.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19381, 1262.72571, -1998.52832, 62.02130,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(3095, 1262.68994, -1998.23096, 58.07360,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19355, 1258.29004, -2001.12244, 60.35530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19355, 1258.29663, -1997.93103, 60.35530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19355, 1258.29663, -1995.34094, 60.35530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19355, 1259.95789, -1993.83264, 60.35530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19355, 1263.14795, -1993.83264, 60.35530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19355, 1263.14795, -1993.83264, 60.35530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19355, 1267.09375, -1995.48743, 60.35530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19355, 1267.09375, -1998.60742, 60.35530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19355, 1267.09375, -2001.11743, 60.35530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19385, 1259.95715, -2002.63318, 60.35530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19401, 1263.15479, -2002.62329, 60.35530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19428, 1265.44580, -2002.62732, 60.35530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19428, 1266.27576, -2002.62524, 60.35530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3095, 1276.26904, -1998.28638, 57.65160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1271.87573, -2001.16418, 59.87550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1271.87573, -1997.96814, 59.87550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1271.87573, -1995.38806, 59.87550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19401, 1265.55957, -1993.84473, 60.35530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1273.51514, -1993.87769, 59.87550,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1276.70508, -1993.87769, 59.87550,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1279.15515, -1993.87769, 59.87550,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1280.67249, -1995.49585, 59.87550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1280.67249, -1998.55579, 59.87550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1280.67249, -2001.16577, 59.87550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 1273.49292, -2002.67981, 59.87550,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19404, 1279.09180, -2002.68396, 59.87550,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1276.24048, -2002.68335, 59.87550,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19377, 1249.01587, -1998.47290, 62.40400,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1276.30737, -1998.33386, 61.54400,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1504, 1259.11572, -2002.74866, 58.57780,   0.00000, 0.00000, 65.00000);
CreateDynamicObject(1504, 1272.69055, -2002.80090, 58.14780,   0.00000, 0.00000, 65.00000);
CreateDynamicObject(1649, 1263.39514, -2002.66895, 60.00850,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1264.78723, -1993.82239, 60.00850,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1278.33069, -2002.63940, 59.66350,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1247.45825, -2011.16797, 58.28860,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1247.48376, -2020.11108, 58.28860,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1247.46716, -2029.08215, 58.28860,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1247.46716, -2037.98218, 58.28860,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1247.46716, -2044.16223, 58.28700,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1256.41833, -2011.14795, 58.01860,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1256.41833, -2020.05798, 58.01860,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1256.41833, -2029.03784, 58.01860,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1256.41833, -2037.99792, 58.01860,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1256.41833, -2045.98792, 58.01860,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1256.61829, -2046.14087, 58.00900,   -0.10000, 1.71000, -1.85000);
CreateDynamicObject(3095, 1265.39832, -2011.13794, 57.74860,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1265.39832, -2020.10791, 57.74860,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1265.39832, -2029.04785, 57.74860,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1265.39832, -2038.02795, 57.74860,   0.00000, 1.71000, 0.00000);
CreateDynamicObject(3095, 1265.35522, -2046.42603, 57.75150,   -0.10000, 1.71000, -2.01000);
CreateDynamicObject(3095, 1274.31836, -2011.13794, 57.54860,   0.00000, 0.81000, 0.00000);
CreateDynamicObject(3095, 1274.31836, -2020.11792, 57.54560,   0.00000, 0.81000, 0.00000);
CreateDynamicObject(3095, 1274.31836, -2029.07788, 57.54560,   0.00000, 0.81000, 0.00000);
CreateDynamicObject(3095, 1274.31836, -2038.05786, 57.54560,   0.00000, 0.81000, 0.00000);
CreateDynamicObject(3095, 1274.33240, -2044.63220, 57.54500,   0.00000, 0.81000, 0.00000);
CreateDynamicObject(3095, 1271.25879, -2046.59680, 57.57150,   -0.24000, 1.69000, -2.01000);
CreateDynamicObject(2434, 1250.05005, -1995.25281, 59.03540,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2435, 1250.04980, -1994.32458, 59.03360,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2435, 1251.16528, -1995.41968, 59.03360,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2435, 1252.08533, -1995.41968, 59.03360,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2435, 1252.99524, -1995.41968, 59.03360,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2161, 1244.81445, -1995.17456, 59.01580,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2161, 1245.75867, -1993.86072, 59.01580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1817, 1250.75098, -2001.18616, 59.05670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2256, 1253.40906, -1998.75586, 61.12590,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19998, 1251.66772, -2000.95386, 59.65020,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19897, 1250.93750, -2000.91931, 59.57030,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 1251.88232, -2001.92322, 59.05700,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1724, 1252.93176, -2000.17847, 59.05710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1724, 1247.06213, -1994.80225, 59.05710,   0.00000, 0.00000, 25.00000);
CreateDynamicObject(1724, 1245.30334, -1997.06104, 59.05710,   0.00000, 0.00000, 69.00000);
CreateDynamicObject(2239, 1252.81592, -2001.75049, 59.05770,   0.00000, 0.00000, -120.00000);
CreateDynamicObject(19124, 1245.07288, -1994.21582, 59.61590,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2450, 1260.84924, -1996.13306, 58.60670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2446, 1259.86121, -1996.13147, 58.61680,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2446, 1258.86816, -1996.12915, 58.61680,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2446, 1260.60962, -1994.43408, 58.61680,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2446, 1260.60791, -1995.42212, 58.61680,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2161, 1266.97400, -2001.23840, 58.59580,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2161, 1266.01025, -2002.54102, 58.59580,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1724, 1264.80603, -2001.59717, 58.57710,   0.00000, 0.00000, 209.00000);
CreateDynamicObject(1724, 1266.50269, -1999.50110, 58.58710,   0.00000, 0.00000, 246.00000);
CreateDynamicObject(1817, 1264.21228, -1996.07092, 58.61670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 1263.45386, -1994.44385, 58.57700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1724, 1266.46753, -1994.95117, 58.57710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2239, 1266.26111, -1994.53101, 58.58770,   0.00000, 0.00000, -40.00000);
CreateDynamicObject(2435, 1278.09741, -1994.41443, 58.16510,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2435, 1279.23376, -1995.49304, 58.16510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2435, 1280.14380, -1995.49304, 58.16510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2434, 1278.10010, -1995.32141, 58.16520,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1723, 1279.13379, -2002.10803, 58.19430,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1724, 1280.05969, -2000.57605, 58.19440,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1817, 1277.74316, -2001.50488, 58.18670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2239, 1280.08545, -2002.19275, 58.15770,   0.00000, 0.00000, -149.00000);
CreateDynamicObject(1775, 1272.42090, -1996.68494, 59.27240,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1209, 1272.26343, -1995.17688, 58.16150,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2035, 1274.16504, -1993.97351, 60.21630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2036, 1275.35181, -1993.96912, 60.71870,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2044, 1276.05225, -1993.98682, 60.19600,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1266.70813, -2002.25134, 58.98590,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, 1241.89526, -2002.60486, 59.50290,   0.00000, -2.00000, 0.00000);
CreateDynamicObject(1408, 1236.69531, -2002.60486, 59.32290,   0.00000, -2.00000, 0.00000);
CreateDynamicObject(1408, 1255.78516, -2002.57166, 59.26290,   0.00000, 2.00000, 0.51000);
CreateDynamicObject(1408, 1269.47168, -2002.64758, 58.81290,   0.00000, 2.00000, 0.00000);
CreateDynamicObject(1408, 1281.41736, -2002.69324, 58.42290,   0.00000, 2.00000, 0.00000);
CreateDynamicObject(1408, 1284.13721, -2005.48987, 58.35290,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, 1284.13721, -2010.68994, 58.35290,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, 1284.13721, -2015.89990, 58.40290,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, 1284.13721, -2021.10986, 58.42290,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, 1284.13721, -2026.31995, 58.42290,   0.00000, -0.58000, -90.00000);
CreateDynamicObject(1408, 1284.13721, -2031.52991, 58.45290,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, 1284.13721, -2036.72986, 58.49290,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, 1284.13721, -2041.94995, 58.51290,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, 1284.13916, -2043.95996, 58.52290,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1340, 1241.55457, -2005.66565, 60.11570,   0.00000, 0.00000, -47.00000);
CreateDynamicObject(1342, 1239.89380, -2007.80334, 59.93560,   0.00000, 0.00000, -18.00000);
CreateDynamicObject(1257, 1286.46460, -2047.98145, 59.02160,   0.00000, 0.00000, 89.00000);
CreateDynamicObject(1281, 1240.60754, -2011.90735, 59.72740,   0.00000, -0.69000, 56.00000);
CreateDynamicObject(1281, 1240.55994, -2016.19910, 59.72740,   0.00000, -0.69000, 56.00000);
CreateDynamicObject(1286, 1242.76868, -2008.16492, 59.54950,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1288, 1242.76477, -2008.65015, 59.55180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1285, 1242.76599, -2009.12598, 59.55130,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(736, 1240.56360, -2000.15979, 69.59790,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 1255.69275, -2000.24072, 68.65790,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 1269.39648, -2000.32996, 68.35790,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(886, 1287.01953, -2010.86084, 57.29040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(886, 1289.77625, -2035.48120, 57.14040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(691, 1293.21155, -2021.34485, 55.41470,   356.85840, 0.00000, -1.80260);
CreateDynamicObject(3472, 1237.85925, -2002.96265, 58.90380,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1283.17749, -2003.79980, 57.86380,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1283.59180, -2046.56226, 57.78380,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1243.93140, -2003.09497, 63.03630,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1254.03052, -2003.14307, 63.02630,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1248.99756, -2003.18237, 63.02630,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1262.53699, -2003.09998, 62.57630,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1257.74463, -2003.11902, 62.60630,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1267.70996, -2003.10095, 62.65630,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1276.31116, -2002.90576, 62.13630,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1271.26978, -2002.92432, 62.13630,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1281.32153, -2002.97559, 62.13630,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1235, 1283.84814, -2049.34351, 58.50110,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2222, 1240.82593, -2015.74902, 59.81590,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2222, 1240.89832, -2011.32910, 59.81590,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1236.03210, -2042.54944, 59.19330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1236.01941, -2031.47900, 59.19330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(691, 1308.93335, -2074.56934, 55.78906,   356.85840, 0.00000, -0.78349);
CreateDynamicObject(762, 1273.07581, -2074.56494, 58.04090,   3.14160, 0.00000, 2.03680);
CreateDynamicObject(661, 1290.01074, -2077.32397, 55.62880,   356.85840, 0.00000, 3.14160);
CreateDynamicObject(9833, 1153.95435, -2020.11218, 70.76300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, 1153.97766, -2054.32422, 70.71300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, 1195.24512, -2019.73511, 70.47300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, 1196.71875, -2051.91406, 70.61300,   0.00000, 0.00000, 0.00000);
CreateDynamicActor(91,1251.0594,-1994.6299,60.0590,181.0540); // guide
CreateDynamicActor(93,1259.9349,-1995.5428,59.6290,177.5839); // guide
CreateDynamicActor(17,1279.0742,-1994.7058,59.2070,164.4340); // guide
Create3DTextLabel("{33aa33}Телепорт\n{FFFFFF}Натиснете {ffff00}F/ENTER{ffffff} за да се телепортирате до\n{ff0000}Deliver Job", 0xFFFFFFFF,1246.4418,-2061.7073,59.9934,25,0,0);
Create3DTextLabel("{33aa33}Телепорт\n{FFFFFF}Натиснете {ffff00}F/ENTER{ffffff} за да се телепортирате до\n{ff0000}Pilot Job", 0xFFFFFFFF,1230.0413,-2032.9204,63.1250,25,0,0);
Create3DTextLabel("{33aa33}Телепорт\n{FFFFFF}Натиснете {ffff00}F/ENTER{ffffff} за да се телепортирате до\n{ff0000}Fishing", 0xFFFFFFFF,1229.7527,-2041.2668,63.1250,25,0,0);
Create3DTextLabel("{33aa33}Телепорт\n{FFFFFF}Натиснете {ffff00}F/ENTER{ffffff} за да се телепортирате до\n{ff0000}Sweeper Job", 0xFFFFFFFF,1249.9390,-2003.0155,59.8920,25,0,0);
Create3DTextLabel("{33aa33}Телепорт\n{FFFFFF}Натиснете {ffff00}F/ENTER{ffffff} за да се телепортирате до\n{ff0000}Coalmine Job", 0xFFFFFFFF,1252.6222,-2003.0173,59.8055,25,0,0);
Create3DTextLabel("{33aa33}Телепорт\n{FFFFFF}Натиснете {ffff00}F/ENTER{ffffff} за да се телепортирате до\n{ff0000}Lottery Show", 0xFFFFFFFF,1262.8815,-2003.0593,59.4757,25,0,0);
Create3DTextLabel("{33aa33}Телепорт\n{FFFFFF}Натиснете {ffff00}F/ENTER{ffffff} за да се телепортирате до\n{ff0000}Pizza Job", 0xFFFFFFFF,1265.7859,-2003.0634,59.3821,25,0,0);
Create3DTextLabel("{33aa33}Телепорт\n{FFFFFF}Натиснете {ffff00}F/ENTER{ffffff} за да се телепортирате до\n{ff0000}Bus Job", 0xFFFFFFFF,1276.3033,-2003.1194,59.0443,25,0,0);
Create3DTextLabel("{33aa33}Телепорт\n{FFFFFF}Натиснете {ffff00}F/ENTER{ffffff} за да се телепортирате до\n{ff0000}Taxi Job", 0xFFFFFFFF,1279.8812,-2003.1205,58.9289,25,0,0);
//
Create3DTextLabel("{00FF00}Натиснете {ff0000}F/ENTER{00ff00} за да се разкарате из Los Santos с балона", 0xFFFFFFFF,237.0472,-1821.7990,4.0377,8,0,0);
//
Create3DTextLabel("{15C0DF}Можете да видите всички команди чрез {ffffff}/help", 0xFFFFFFFF,1259.9349,-1995.5428,59.6290,10,0,0);
Create3DTextLabel("{15C0DF}Можете да видите информация за сървъра чрез {ffffff}/help", 0xFFFFFFFF,1251.0594,-1994.6299,60.0590,10,0,0);
Create3DTextLabel("{15C0DF}Можете да видите всичко ново относно сървъра чрез {ffffff}/news", 0xFFFFFFFF,1279.0742,-1994.7058,59.2070,10,0,0);
Create3DTextLabel("{00ff00}--[Наръчник за начинаещи]--\nВсе още {ff0000}не знаеш не знаеш как се ползва банкомат?\n{00ff00}Натисни {ff0000}Y{00ff00} за да теглиш пари оттук или всеки Друг Банкомат", 0xFFFFFFFF,1539.5656,-1613.9242,16.9234,13,0,0);
Create3DTextLabel("{00ff00}--[Наръчник за начинаещи]--\nВсе още {ff0000}не знаеш как се влиза в бизнес/къща?\n{00ff00}Напиши {ff0000}/enter или /exit{00ff00} за да влезеш(enter) или излезеш(exit)", 0xFFFFFFFF,1352.3679,-1758.6650,16.9744,13,0,0);
Create3DTextLabel("{00ff00}--[Наръчник за начинаещи]--\nВсе още {ff0000}не знаеш как се прави мисия?\n{00ff00}Само трябва да {ff0000}влезеш в червения кръг", 0xFFFFFFFF,1271.0834,-2055.8203,63.9403,20,0,0);
Create3DTextLabel("{00ff00}--[Наръчник за начинаещи]--\nВсе още {ff0000}не знаеш как се започва работа?\n{00ff00}Само трябва да {ff0000}напишеш командата, която ще ти изпише, когато влезеш в превозното средство", 0xFFFFFFFF,2089.5649,-1806.3577,16.7477,25,0,0);
Create3DTextLabel("{00ff00}--[Наръчник за начинаещи]--\nКак да {ff0000}си купиш повече бомби?\n{00ff00}Само трябва да {ff0000}намерите дийлърски магазин, в сървъра има няколко", 0xFFFFFFFF,2191.6987,1986.1820,13.1992,15,0,0);
Create3DTextLabel("{00ff00}--[Наръчник за начинаещи]--\nЗа да почнеш {ff0000}състезание, трябва да си в личната си кола, чрез /joinrace\n{00ff00}Ако си на{ff0000} Мисия 5, влез в кръга с личната си кола", 0xFFFFFFFF,2403.6670,-1727.1512,16.0936,20,0,0);
Create3DTextLabel("{00ff00}--[Наръчник за начинаещи]--\nЗа да {ff0000}пазаруваш, трябва да си в Clothes Store(магазин за облекла)\n{00ff00}След като си там използвай {ff0000}/buy за да си купиш нещо", 0xFFFFFFFF,2244.2175,-1664.4690,19.1875,20,0,0);
Create3DTextLabel("{00ff00}--[Наръчник за начинаещи]--\nЗа да {ff0000}си изтеглите заем\n{00ff00}Използвайте{ff0000}/credit до Долара", 0xFFFFFFFF,2312.8450,-10.7978,27.7747,13,-1,-1);
Create3DTextLabel("{00ff00}--[Наръчник за начинаещи]--\nАко {ff0000}спечелите участие в 'Национална Лотария Шоу'\n{00ff00}Уведомете{ff0000} администратор с високо ниво за това", 0xFFFFFFFF,1533.9786,-1721.7141,17.0019,13,0,0);
Create3DTextLabel("{00ff00}--[Наръчник за начинаещи]--\nВсе още {ff0000}не знаеш как се тренира боен стил?\n{00ff00}Влез в {ff0000}този фитнес чрез /enter{00ff00} ,след което използвай {ff0000}/exit за да излезеш, когато пожелаеш", 0xFFFFFFFF,1380.0497,-1753.1426,18.9984,13,0,0);
Create3DTextLabel("{00ff00}--[Наръчник за начинаещи]--\nАко {ff0000}не знаеш как се Излиза от Магазина\n{00ff00}Отиди до вратата и напиши {ff0000}/exit за да излезеш{00ff00} оттук или от друг бизнес", 0xFFFFFFFF,-27.3025,-57.6649,1003.7969,6,-1,-1);
//vip gang
Create3DTextLabel("{ebebeb}Риболов\n{2C80C4}За да метнете въдицата, трябва да сте тук или в лодка\nИзползвайте /fish за да хвърлите въдицата",0xFFFFFFFF,2102.1777,-104.5141,2.2685,25,0,0); //FISH
//grove 2
CreateDynamicObject(1446, 2498.60352, -1688.16382, 13.23430,   0.00000, 0.00000, 189.97000);
CreateDynamicObject(1446, 2492.01855, -1687.95483, 13.23430,   0.00000, 0.00000, 180.44501);
CreateDynamicObject(1446, 2487.46313, -1688.00232, 13.23430,   0.00000, 0.00000, 180.44501);
CreateDynamicObject(1281, 2462.60522, -1680.65076, 13.26070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1281, 2459.45776, -1672.93018, 13.26070,   0.00000, 0.00000, 55.00000);
CreateDynamicObject(1281, 2457.20166, -1678.81824, 13.26070,   0.00000, 0.00000, 113.00000);
CreateDynamicObject(1775, 2465.97461, -1684.51794, 13.59460,   0.00000, 0.00000, 178.00000);
CreateDynamicObject(1776, 2464.59058, -1684.52441, 13.55690,   0.00000, 0.00000, 178.00000);
CreateDynamicObject(1302, 2463.15527, -1684.53479, 12.47900,   0.00000, 0.00000, 178.00000);
CreateDynamicObject(1340, 2455.21289, -1673.88379, 13.59570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1341, 2454.39453, -1671.55237, 13.46650,   0.00000, 0.00000, 33.00000);
CreateDynamicObject(19167, 2459.83740, -1672.55762, 13.28000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18750, 1484.10559, -1754.90649, 51.27220,   90.00000, 0.00000, -180.00000);
//grove 2
//vip gang
CreateDynamicObject(19913, 1333.72021, -2024.36035, 61.34685,   0.00000, 0.00000, -83.00000);
CreateDynamicObject(19913, 1330.06641, -1996.17542, 61.34685,   0.00000, 0.00000, -83.00000);
CreateDynamicObject(19870, 1336.75598, -2049.12305, 58.93230,   0.00000, 0.00000, 6.00000);
CreateDynamicObject(19870, 1340.91943, -2048.74390, 58.93230,   0.00000, 0.00000, 6.00000);
//vip gang
//cripz
CreateObject(3095, 333.30530, -1208.72827, 74.75200,   0.00000, -0.92000, 38.36000);
CreateObject(3095, 340.37061, -1203.14844, 74.89200,   0.00000, -0.92000, 38.36000);
CreateObject(3095, 326.26358, -1214.31177, 74.61200,   0.00000, -0.92000, 38.36000);
CreateObject(3095, 331.81860, -1221.28308, 74.61200,   0.00000, -0.92000, 38.36000);
CreateObject(3095, 338.86539, -1215.69873, 74.75200,   0.00000, -0.92000, 38.36000);
CreateObject(3095, 345.90820, -1210.13110, 74.89200,   0.00000, -0.92000, 38.36000);
CreateObject(3095, 351.47195, -1217.15051, 74.89200,   0.00000, -0.92000, 38.36000);
CreateObject(3095, 344.41721, -1222.73438, 74.75200,   0.00000, -0.92000, 38.36000);
CreateObject(3095, 337.38303, -1228.30908, 74.61200,   0.00000, -0.92000, 38.36000);
CreateObject(3095, 319.22321, -1219.88525, 74.50300,   0.00000, -0.92000, 38.36000);
CreateObject(3095, 324.72101, -1226.84021, 74.49000,   0.00000, -0.92000, 38.36000);
CreateObject(3095, 330.32889, -1233.87610, 74.47200,   0.00000, -0.92000, 38.36000);
CreateObject(19866, 342.66858, -1198.77771, 75.40250,   0.00000, 0.00000, 38.00000);
CreateObject(19866, 345.71487, -1202.67529, 75.40250,   0.00000, 0.00000, 38.00000);
CreateObject(19866, 348.78024, -1206.59790, 75.40250,   0.00000, 0.00000, 38.00000);
CreateObject(19866, 351.80658, -1210.46277, 75.40250,   0.00000, 0.00000, 38.00000);
CreateObject(19866, 354.86295, -1214.38098, 75.40250,   0.00000, 0.00000, 38.00000);
CreateObject(19866, 356.14871, -1216.00757, 75.38250,   0.00000, 0.00000, 38.00000);
CreateObject(19866, 351.81500, -1222.48975, 75.36250,   0.44000, 0.00000, -51.24000);
CreateObject(19866, 347.93579, -1225.61719, 75.30250,   0.94000, 0.00000, -51.06000);
CreateObject(19866, 355.69131, -1219.39490, 75.38250,   -0.02000, 0.00000, -51.68000);
CreateObject(19866, 344.08469, -1228.74353, 75.22250,   0.96000, 0.00000, -51.06000);
CreateObject(19866, 340.21161, -1231.87244, 75.12250,   1.42000, 0.00000, -51.06000);
CreateObject(19866, 336.32349, -1235.01733, 75.00250,   1.20000, 0.00000, -51.06000);
CreateObject(19866, 332.45239, -1238.17261, 74.89250,   1.20000, 0.00000, -51.06000);
CreateObject(19866, 331.64145, -1238.82043, 74.86250,   1.20000, 0.00000, -51.06000);
CreateObject(19866, 328.24133, -1238.43713, 74.86250,   1.00000, 0.00000, 38.46000);
CreateObject(19866, 325.16428, -1234.55237, 74.90250,   0.00000, 0.00000, 38.46000);
CreateObject(19866, 322.07050, -1230.65295, 74.90250,   0.00000, 0.00000, 38.46000);
CreateObject(19866, 318.96988, -1226.77319, 74.90250,   0.00000, 0.00000, 38.46000);
CreateObject(19866, 315.86377, -1222.86621, 74.90250,   0.00000, 0.00000, 38.46000);
CreateObject(19866, 314.17480, -1220.74158, 74.90250,   0.00000, 0.00000, 38.46000);
CreateObject(19866, 314.71570, -1217.34058, 74.94250,   0.88000, 0.00000, -53.00000);
CreateObject(19866, 318.65970, -1214.37170, 75.00250,   0.74000, 0.00000, -53.00000);
CreateObject(19866, 322.63400, -1211.38306, 75.06250,   0.82000, 0.00000, -53.00000);
CreateObject(3095, 319.19171, -1219.63428, 74.48300,   0.00000, -0.92000, 38.36000);
CreateObject(19866, 326.59201, -1208.36963, 75.13500,   0.82000, 0.00000, -52.58000);
CreateObject(19866, 330.52246, -1205.31323, 75.21500,   0.86000, 0.00000, -51.62000);
CreateObject(19866, 339.27686, -1198.38013, 75.35500,   0.86000, 0.00000, -51.62000);
CreateObject(966, 337.83450, -1200.01636, 75.35740,   0.00000, 0.00000, 37.44000);
CreateObject(8407, 340.34579, -1199.40454, 76.84730,   0.00000, 0.00000, 38.48000);
CreateObject(1482, 344.21863, -1202.92847, 77.15720,   0.00000, 0.00000, -142.00000);
CreateObject(1482, 348.34329, -1208.17688, 77.15720,   0.00000, 0.00000, -141.80000);
CreateObject(1482, 352.49255, -1213.42944, 77.15720,   0.00000, 0.00000, -141.80000);
CreateObject(1482, 354.22189, -1218.85913, 77.05720,   0.00000, 0.00000, -231.34900);
CreateObject(1482, 354.53720, -1215.98816, 77.15520,   0.00000, 0.00000, -141.80000);
CreateObject(1482, 349.03400, -1223.05396, 77.05720,   0.00000, 0.00000, -231.34900);
CreateObject(1482, 343.81119, -1227.24243, 77.05720,   0.00000, 0.00000, -230.92700);
CreateObject(1482, 338.62149, -1231.45728, 77.04720,   0.00000, 0.00000, -230.92700);
CreateObject(1482, 333.45239, -1235.68298, 77.03720,   0.00000, 0.00000, -230.92700);
CreateObject(1482, 328.75711, -1236.91760, 77.02720,   0.00000, 0.00000, 38.31000);
CreateObject(1482, 324.61758, -1231.70496, 77.02720,   0.00000, 0.00000, 38.48000);
CreateObject(1482, 320.43872, -1226.46985, 77.02720,   0.00000, 0.00000, 38.48000);
CreateObject(1482, 316.26382, -1221.23621, 77.02720,   0.00000, 0.00000, 38.48000);
CreateObject(19122, 332.20096, -1203.59973, 75.88240,   0.00000, 0.00000, 0.00000);
CreateObject(19122, 337.22427, -1199.68848, 75.88240,   0.00000, 0.00000, 0.00000);
CreateObject(1341, 329.07230, -1204.18530, 76.29900,   0.00000, 0.00000, 98.00000);
CreateObject(1340, 326.24402, -1205.88281, 76.38960,   0.00000, 0.00000, 115.00000);
CreateObject(1290, 329.05869, -1206.54504, 79.59240,   0.06000, 0.00000, -52.88000);
CreateObject(1290, 319.66229, -1213.76733, 79.39240,   0.00000, 0.00000, -52.88000);
CreateObject(1297, 356.72153, -1217.71582, 78.62860,   0.00000, 0.00000, -8.00000);
CreateObject(1297, 329.79642, -1239.35913, 78.29860,   0.00000, 0.00000, -98.00000);
CreateObject(1597, 334.02054, -1217.78528, 77.79540,   -0.68000, 0.00000, 129.60001);
CreateObject(19122, 331.75293, -1203.00769, 75.88240,   0.00000, 0.00000, 0.00000);
CreateObject(19122, 331.26236, -1202.37781, 75.88240,   0.00000, 0.00000, 0.00000);
CreateObject(19122, 336.81393, -1199.16235, 75.88240,   0.00000, 0.00000, 0.00000);
CreateObject(19122, 336.29953, -1198.47546, 75.88240,   0.00000, 0.00000, 0.00000);
CreateObject(700, 347.36966, -1195.42139, 72.64030,   356.85840, 0.00000, -2.00710);
CreateObject(700, 311.08365, -1222.28674, 74.08030,   356.85840, 0.00000, -2.00710);
//CreateDynamicObject(968, 337.33939, -1200.37244, 0.08190,   0.00000, 0.00000, 127.06000);
//CreateDynamicObject(968, 337.66650, -1200.02100, 0.08190,   -90.00000, 0.00000, 127.00000);
//cripz
//grove
groveb1=CreateDynamicObject(968, 2451.77979, -1648.77783, 13.54980,    0.00000, -92.00000, 0.00000);
CreateDynamicObject(1468, 2461.79297, -1641.07568, 13.81250,   356.85840, 0.00000, 1.57080);
CreateDynamicObject(1468, 2461.79932, -1635.89941, 13.81250,   356.85840, 0.00000, 1.57080);
CreateDynamicObject(19381, 2430.44482, -1644.25208, 12.47700,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(19381, 2440.83130, -1644.20117, 12.47620,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(19381, 2451.32300, -1644.19324, 12.49550,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(19381, 2451.36133, -1634.68567, 12.49650,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(19381, 2440.91235, -1634.69397, 12.49620,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(19381, 2430.44678, -1634.69531, 12.49620,   0.00000, -90.00000, 0.00000);
CreateDynamicObject(19866, 2425.28760, -1632.37390, 12.59763,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 2425.28247, -1637.28931, 12.59763,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 2425.27246, -1646.56519, 12.59760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 2425.28003, -1641.75879, 12.59763,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 2427.68408, -1649.07935, 12.59760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 2432.68408, -1649.07935, 12.59760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 2437.68408, -1649.07935, 12.59760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 2442.68408, -1649.07935, 12.59760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 2454.12402, -1649.05640, 12.59760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 2456.52222, -1646.63843, 12.59760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 2456.52222, -1641.63843, 12.59760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 2456.52222, -1636.63843, 12.59760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 2456.52222, -1632.35840, 12.59760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19866, 2454.12134, -1629.95813, 12.59760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 2449.12134, -1629.95813, 12.59760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 2444.12134, -1629.95813, 12.59760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 2439.12134, -1629.95813, 12.59760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 2434.12134, -1629.95813, 12.59760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 2429.12134, -1629.95813, 12.59760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19866, 2427.70142, -1629.95813, 12.59760,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(966, 2451.92480, -1648.70081, 12.55674,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8407, 2453.84912, -1648.05908, 13.87740,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2428.61816, -1647.39099, 10.82250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2430.99829, -1647.39099, 10.82250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2433.41821, -1647.39099, 10.82250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2435.69824, -1647.39099, 10.82250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2438.17822, -1647.39099, 10.82250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2440.87817, -1647.39099, 10.82250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2443.53809, -1647.39099, 10.82250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2428.56958, -1631.63892, 10.84250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2431.34961, -1631.63892, 10.84250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2434.00952, -1631.63892, 10.84250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2436.72949, -1631.63892, 10.84250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2439.46948, -1631.63892, 10.84250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2442.32959, -1631.63892, 10.84250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2445.22949, -1631.63892, 10.84250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2448.12939, -1631.63892, 10.84250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2451.08960, -1631.63892, 10.84250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2453.98950, -1631.63892, 10.84250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19353, 2426.93579, -1633.15845, 10.84250,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19353, 2426.97583, -1635.69824, 10.84250,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19353, 2426.97583, -1637.95825, 10.84250,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19353, 2426.97583, -1640.37830, 10.84250,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19353, 2426.97583, -1642.85828, 10.84250,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19353, 2426.97583, -1645.85828, 10.84250,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19123, 2443.50366, -1645.78491, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2440.85669, -1645.76685, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2438.13770, -1645.73657, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2435.67822, -1645.78638, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2433.36865, -1645.80554, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2430.99097, -1645.80225, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2428.61060, -1645.86597, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2428.48877, -1642.86169, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2428.54077, -1640.39465, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2428.52051, -1637.99365, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2428.54517, -1635.71069, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2428.56055, -1633.16907, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2431.34937, -1633.19519, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2434.00000, -1633.16846, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2436.71045, -1633.21252, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2439.45679, -1633.21179, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2442.29663, -1633.19922, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2445.19995, -1633.23206, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2448.12476, -1633.24817, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2451.07837, -1633.19775, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 2453.97949, -1633.25195, 13.02010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1226, 2426.36450, -1648.21362, 16.42970,   357.00000, 0.00000, -145.00000);
CreateDynamicObject(1226, 2426.36914, -1630.78772, 16.42970,   357.00000, 0.00000, 145.00000);
CreateDynamicObject(1226, 2455.45435, -1630.98413, 16.42970,   357.00000, 0.00000, 45.00000);
CreateDynamicObject(1226, 2455.55420, -1648.06543, 16.42970,   357.00000, 0.00000, -45.00000);
CreateDynamicObject(627, 2427.15771, -1647.48950, 14.36040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(627, 2427.21558, -1631.72461, 14.36040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(627, 2455.28931, -1631.59558, 14.36040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(627, 2455.83154, -1648.34680, 14.36040,   0.00000, 0.00000, 0.00000);
//grove
//police
CreateDynamicObject(19122, 1544.43652, -1622.39258, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1544.50122, -1621.12671, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1544.55273, -1619.91296, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1544.61340, -1618.68115, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1544.11853, -1633.61548, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1544.11926, -1635.17773, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 1532.14929, -1608.20044, 12.35470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 1527.00183, -1608.22375, 12.35470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 1532.20715, -1639.31909, 12.35470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 1527.04614, -1639.32886, 12.35470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 1532.24060, -1709.89343, 12.35470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 1527.05933, -1709.91211, 12.35470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1297, 1607.13318, -1603.29688, 15.64540,   0.00000, 0.00000, 45.00000);
CreateDynamicObject(1297, 1607.18555, -1637.23901, 15.64540,   0.00000, 0.00000, -45.00000);
CreateDynamicObject(1297, 1607.04456, -1619.82019, 15.64540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1297, 1587.63354, -1603.51135, 15.64540,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1297, 1568.13599, -1603.57947, 15.64540,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1297, 1540.69580, -1603.12146, 15.64540,   0.00000, 0.00000, 145.00000);
CreateDynamicObject(1297, 1540.48853, -1616.95447, 15.64540,   0.00000, 0.00000, 220.00000);
CreateDynamicObject(3095, 1544.30798, -1607.05200, 11.82750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1553.28723, -1607.04907, 11.82750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1562.27332, -1607.04871, 11.82750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1571.26392, -1607.05444, 11.82750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1580.25854, -1607.06335, 11.82750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1589.23962, -1607.05469, 11.82750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1597.74634, -1607.05249, 11.90750,   0.00000, -1.00000, 0.00000);
CreateDynamicObject(3095, 1603.41589, -1607.05774, 12.00750,   0.00000, -1.00000, 0.00000);
CreateDynamicObject(3095, 1544.21252, -1613.11646, 11.82700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1553.20361, -1613.24719, 11.82700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1562.18811, -1613.46985, 11.82700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1571.16614, -1616.00256, 11.82700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1580.16174, -1616.05286, 11.82700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1589.14771, -1616.04175, 11.82700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1597.54810, -1616.02319, 11.90750,   0.02000, -1.00000, 0.00000);
CreateDynamicObject(3095, 1603.40894, -1616.02405, 12.00750,   0.00000, -1.00000, 0.00000);
CreateDynamicObject(3095, 1580.04443, -1625.03357, 11.84700,   -0.04000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1571.06201, -1625.04980, 11.84700,   -0.02000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1562.08850, -1625.06885, 11.84700,   -0.02000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1553.10974, -1625.08801, 11.84700,   -0.02000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1544.11194, -1625.11804, 11.84700,   -0.02000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1603.49731, -1625.01465, 12.00750,   0.00000, -1.00000, 0.00000);
CreateDynamicObject(3095, 1596.22839, -1625.00854, 11.90750,   -0.22000, -1.00000, 0.00000);
CreateDynamicObject(3095, 1588.43408, -1625.01025, 11.84300,   -0.10000, -0.02000, 0.00000);
CreateDynamicObject(3095, 1603.75537, -1628.39050, 11.92750,   -2.06000, -0.88000, 0.00000);
CreateDynamicObject(3095, 1594.84656, -1632.59949, 11.96750,   -1.38000, -0.88000, 0.00000);
CreateDynamicObject(3095, 1585.90491, -1632.52588, 11.94750,   -1.24000, -0.74000, 0.00000);
CreateDynamicObject(3095, 1576.99072, -1633.91528, 11.84700,   -0.04000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1568.01196, -1634.03784, 11.84700,   -0.02000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1559.01807, -1634.05688, 11.84700,   -0.02000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1550.05237, -1634.08154, 11.84700,   -0.02000, 0.00000, 0.00000);
CreateDynamicObject(3095, 1544.12158, -1634.10583, 11.84600,   -0.02000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1547.59216, -1620.32434, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1551.63184, -1620.31921, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1555.87231, -1620.29480, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1559.57288, -1620.30847, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1563.33240, -1620.30518, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1566.89246, -1620.32019, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1570.86121, -1620.29077, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1574.75537, -1620.29419, 13.08260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1579.45056, -1620.30713, 13.08260,   0.00000, 0.00000, 0.00000);
//police
//cameras - location - open
CreateDynamicObject(1622, 2191.86450, 2414.80005, 57.86871,   4.00000, -11.00000, 156.00000);
CreateDynamicObject(1622, 1668.35461, 1404.63977, 19.66030,   0.00000, 0.00000, 178.00000);
CreateDynamicObject(1622, 1668.16040, 1404.83142, 19.00468,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1622, 1901.48071, 989.47858, 48.11060,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(1622, 1580.17358, -1218.67798, 99.41030,   0.00000, 0.00000, -135.00000);
CreateDynamicObject(1622, 1553.99841, -1658.63025, 25.77017,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1622, 1774.58325, -1294.12720, 96.18890,   0.00000, 0.00000, -120.00000);
//cameras - location - close
//garage interior
tmpobjid = CreateDynamicObject(19366,199.925,45.926,1069.520,0.000,0.000,270.250,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19366,203.076,45.956,1069.520,0.000,0.000,270.247,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19366,189.952,41.032,1069.520,0.000,0.000,0.247,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19366,189.949,37.819,1069.520,0.000,0.000,0.247,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19366,189.961,34.617,1069.520,0.000,0.000,0.247,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19366,189.974,31.416,1069.520,0.000,0.000,0.247,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19366,206.208,45.937,1069.520,0.000,0.000,270.247,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19366,209.408,45.958,1069.520,0.000,0.000,270.247,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19366,212.328,45.965,1069.520,0.000,0.000,270.247,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19458,193.380,42.648,1069.525,0.000,0.000,-89.880,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19458,198.270,47.388,1069.523,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19458,213.872,42.990,1069.523,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(18981,201.370,33.889,1071.733,0.000,90.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_flagstone1", 0x00000000);
tmpobjid = CreateDynamicObject(19458,209.284,30.627,1069.525,0.000,0.000,-89.879,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19458,199.835,30.624,1069.525,0.000,0.000,-89.879,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19458,190.503,30.606,1069.525,0.000,0.000,-89.879,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(19458,213.876,33.431,1069.523,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 9920, "anotherbuildsfe", "gz_vic1c", 0x00000000);
tmpobjid = CreateDynamicObject(13188,213.815,41.875,1069.009,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "gz_vicdoor1", 0x00000000);
tmpobjid = CreateDynamicObject(13188,213.827,33.748,1069.009,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "gz_vicdoor1", 0x00000000);
tmpobjid = CreateDynamicObject(18981,201.370,33.889,1067.277,0.000,90.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_flagstone1", 0x00000000);
tmpobjid = CreateDynamicObject(3944,206.908,44.969,1065.032,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 1, 3881, "apsecurity_sfxrf", "ws_rooftarmac2", 0x00000000);
tmpobjid = CreateDynamicObject(3944,189.321,41.697,1065.012,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 1, 3881, "apsecurity_sfxrf", "ws_rooftarmac2", 0x00000000);
tmpobjid = CreateDynamicObject(3944,190.926,38.596,1065.012,0.000,0.000,90.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 1, 3881, "apsecurity_sfxrf", "ws_rooftarmac2", 0x00000000);
tmpobjid = CreateDynamicObject(3944,190.914,22.252,1065.012,0.000,0.000,90.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 1, 3881, "apsecurity_sfxrf", "ws_rooftarmac2", 0x00000000);
tmpobjid = CreateDynamicObject(3944,197.328,31.573,1065.017,0.000,0.000,180.119,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 1, 3881, "apsecurity_sfxrf", "ws_rooftarmac2", 0x00000000);
tmpobjid = CreateDynamicObject(3944,215.374,31.586,1065.017,0.000,0.000,180.119,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 1, 3881, "apsecurity_sfxrf", "ws_rooftarmac2", 0x00000000);
tmpobjid = CreateDynamicObject(3944,212.922,22.315,1065.017,0.000,0.000,270.119,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 1, 3881, "apsecurity_sfxrf", "ws_rooftarmac2", 0x00000000);
tmpobjid = CreateDynamicObject(3944,212.925,45.198,1065.017,0.000,0.000,270.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 1, 3881, "apsecurity_sfxrf", "ws_rooftarmac2", 0x00000000);
tmpobjid = CreateDynamicObject(2254,207.061,45.807,1070.179,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14859, "gf1", "mp_apt1_pos1", 0x00000000);
tmpobjid = CreateDynamicObject(3944,189.435,44.978,1065.012,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 1, 3881, "apsecurity_sfxrf", "ws_rooftarmac2", 0x00000000);
tmpobjid = CreateDynamicObject(14852,190.124,58.296,1072.245,0.000,0.000,90.120,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 1, 7981, "vgssairport02", "metalcopy", 0x00000000);
SetDynamicObjectMaterial(tmpobjid, 2, 7981, "vgssairport02", "metalcopy", 0x00000000);
SetDynamicObjectMaterial(tmpobjid, 3, 9549, "beachbx_sfw", "SF_garden3", 0x00000000);
tmpobjid = CreateDynamicObject(8661,202.920,37.500,1067.777,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble2", 0x00000000);
tmpobjid = CreateDynamicObject(2254,192.398,42.544,1070.039,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14859, "gf1", "mp_apt1_pos2", 0x00000000);
tmpobjid = CreateDynamicObject(2256,213.739,37.708,1070.118,0.000,0.000,270.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 7981, "vgssairport02", "drivecare_64", 0x00000000);
tmpobjid = CreateDynamicObject(2255,190.524,36.882,1069.501,0.000,0.000,90.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 14859, "gf1", "mp_apt1_pos3", 0x00000000);
tmpobjid = CreateDynamicObject(2774,197.537,41.709,1068.493,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble2", 0x00000000);
SetDynamicObjectMaterial(tmpobjid, 1, 3881, "apsecurity_sfxrf", "ws_rooftarmac2", 0x00000000);
tmpobjid = CreateDynamicObject(2774,197.537,38.069,1068.493,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble2", 0x00000000);
SetDynamicObjectMaterial(tmpobjid, 1, 3881, "apsecurity_sfxrf", "ws_rooftarmac2", 0x00000000);
tmpobjid = CreateDynamicObject(2774,197.537,34.249,1068.493,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble2", 0x00000000);
SetDynamicObjectMaterial(tmpobjid, 1, 3881, "apsecurity_sfxrf", "ws_rooftarmac2", 0x00000000);
tmpobjid = CreateDynamicObject(2774,197.537,30.649,1068.493,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
SetDynamicObjectMaterial(tmpobjid, 0, 3922, "bistro", "Marble2", 0x00000000);
SetDynamicObjectMaterial(tmpobjid, 1, 3881, "apsecurity_sfxrf", "ws_rooftarmac2", 0x00000000);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
tmpobjid = CreateDynamicObject(1893,193.773,36.932,1071.634,-0.399,0.199,-87.899,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(1893,205.416,41.598,1071.555,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(1569,198.343,42.862,1067.773,0.000,0.000,90.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(0,206.595,32.435,1068.339,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(1569,198.350,45.852,1067.773,0.000,0.000,270.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(1723,190.618,31.691,1067.767,-1.500,0.799,90.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(14852,234.437,45.788,1072.255,0.000,0.000,0.119,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(1723,191.497,42.066,1067.751,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(1723,190.577,35.955,1067.751,0.000,0.000,90.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(1893,205.422,33.866,1071.586,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(1717,195.447,31.482,1067.759,0.000,0.000,135.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(2232,195.858,31.036,1068.308,0.000,0.000,180.100,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(2232,193.622,31.078,1068.285,0.000,0.000,180.100,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(2028,194.720,31.965,1067.859,0.000,0.000,180.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(2195,194.519,41.982,1068.373,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(2195,190.517,42.070,1068.373,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(2195,190.558,34.889,1068.373,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(2195,192.295,31.176,1068.373,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(2162,207.420,30.723,1069.710,0.000,0.000,180.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(1819,190.210,38.785,1067.763,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(1819,190.283,40.303,1067.763,0.000,0.000,0.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(1486,190.932,41.033,1068.406,0.000,0.000,-162.719,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(1486,190.657,40.723,1068.406,0.000,0.000,28.200,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(2608,204.755,30.891,1069.810,0.000,0.000,180.000,-1,-1,-1,150.000,150.000);
tmpobjid = CreateDynamicObject(2608,209.358,30.895,1069.840,0.000,0.000,180.000,-1,-1,-1,150.000,150.000);
//garage interior
//gang house interior
CreateDynamicObject(19508, 2567.265380, 569.226379, 42.432559, 0.000000, 0.000000, 0.000000,-1,2);
CreateDynamicObject(11682, 2562.690429, 575.189025, 40.146492, 0.000000, 0.000000, 94.099975,-1,2);
CreateDynamicObject(1504, 2565.057128, 575.667358, 40.133369, 0.000000, 0.000000, 0.000000,-1,2);
CreateDynamicObject(1504, 2566.487792, 575.667358, 40.133373, 0.000000, 0.000000, 0.000000,-1,2);
CreateDynamicObject(1557, 2563.773925, 563.370483, 40.164653, 0.000000, 0.000000, 0.000000,-1,2);
CreateDynamicObject(1505, 2562.294433, 569.922790, 40.102706, 0.000000, 0.000000, 88.400039,-1,2);
CreateDynamicObject(18755, 2571.304443, 573.489685, 42.146903, 0.000000, 0.000000, 0.000000,-1,2);
CreateDynamicObject(2561, 2573.336181, 567.247741, 40.874530, 0.000000, 0.000000, -84.599990,-1,2);
CreateDynamicObject(2561, 2562.465332, 563.718994, 40.874530, 0.000000, 0.000000, 87.500068,-1,2);
CreateDynamicObject(2561, 2562.361328, 570.901062, 40.874530, 0.000000, 0.000000, 87.500068,-1,2);
CreateDynamicObject(1649, 2562.133300, 573.775512, 41.557716, 0.000000, 0.000000, 92.000068,-1,2);
CreateDynamicObject(1649, 2562.140869, 565.821044, 41.557716, 0.000000, 0.000000, 92.000068,-1,2);
CreateDynamicObject(1649, 2573.769287, 566.289001, 41.557716, 0.000000, 0.000000, -86.899909,-1,2);
CreateDynamicObject(2957, 2570.868408, 575.771423, 41.190372, 0.000000, 0.000000, 0.000000,-1,2);
CreateDynamicObject(2957, 2563.229980, 575.771423, 41.190372, 0.000000, 0.000000, 0.000000,-1,2);
CreateDynamicObject(2957, 2561.865234, 573.685485, 41.190372, 0.000000, 0.000000, 94.500099,-1,2);
CreateDynamicObject(2957, 2561.975585, 566.120727, 41.190372, 0.000000, 0.000000, 94.500099,-1,2);
CreateDynamicObject(2957, 2573.933105, 567.062377, 41.190372, 0.000000, 0.000000, 94.500099,-1,2);
CreateDynamicObject(14444, -187.80469, 30.55957, 1751.78723,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14415, -187.80371, 30.55859, 1751.78748,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14399, -166.09082, 20.71484, 1751.75012,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14414, -159.99219, 28.84863, 1748.75757,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, -189.81445, 42.53906, 1751.04102,   90.00000, 179.99451, 179.99451);
CreateDynamicObject(3095, -189.80176, 38.03223, 1755.14160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, -189.80762, 42.00391, 1751.04102,   90.00000, 179.99451, 359.98901);
CreateDynamicObject(14414, -188.59277, 44.42188, 1752.45630,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3095, -189.57129, 44.83398, 1751.06604,   90.00000, 179.99451, 179.99451);
CreateDynamicObject(970, -187.42609, 42.46802, 1756.17346,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, -185.35742, 40.32617, 1756.17346,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, -185.35295, 35.97736, 1756.17346,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2395, -162.49709, 42.96945, 1756.34302,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1502, -162.40137, 39.77344, 1756.33679,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2395, -162.28000, 40.21700, 1756.34302,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(13011, -162.93164, 35.21582, 1753.08997,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, -178.10258, 18.61329, 1756.24268,   90.00000, 179.99451, 270.01099);
CreateDynamicObject(14434, -173.65332, 33.24432, 1758.37634,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14434, -166.57042, 20.89083, 1758.37634,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3095, -183.19434, 22.53320, 1756.49146,   90.00000, 179.99451, 359.98352);
CreateDynamicObject(3095, -185.16309, 42.54980, 1747.31238,   90.00000, 179.99451, 179.99451);
CreateDynamicObject(3095, -181.19141, 46.50098, 1747.18994,   90.00000, 180.00549, 270.00000);
CreateDynamicObject(2523, -156.66992, 40.14941, 1756.34192,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2528, -159.66016, 41.99121, 1756.34338,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2741, -156.24219, 40.28418, 1757.53088,   0.00000, 0.00000, 272.49939);
CreateDynamicObject(2742, -156.21387, 38.79395, 1757.65796,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2836, -157.83789, 40.45313, 1756.34192,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1825, -183.02077, 24.91266, 1751.96692,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2527, -161.26172, 41.04395, 1756.34192,   0.00000, 0.00000, 0.24719);
CreateDynamicObject(2526, -157.88574, 42.05469, 1756.34119,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2340, -159.42578, 37.55664, 1756.34192,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2131, -157.42757, 37.55441, 1756.34192,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1778, -160.02539, 37.33301, 1756.34167,   0.00000, 0.00000, 321.99829);
CreateDynamicObject(14684, -157.94531, 40.06543, 1757.51843,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(10444, -151.07910, 56.81543, 1756.86475,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18077, -172.38281, 26.09863, 1752.53040,   0.00000, 0.00000, 270.74707);
CreateDynamicObject(18077, -178.47168, 26.02832, 1752.53040,   0.00000, 0.00000, 0.24170);
CreateDynamicObject(970, -185.36328, 40.45020, 1752.47253,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, -185.35156, 37.19922, 1752.47253,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1665, -174.72656, 22.55664, 1753.13562,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1551, -172.18164, 22.56641, 1753.36536,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1548, -170.07520, 22.56348, 1753.13745,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1545, -173.37793, 17.85059, 1753.57861,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1541, -170.04199, 22.00977, 1753.26843,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1509, -168.64844, 22.67188, 1753.32263,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1665, -172.68848, 22.57129, 1753.13562,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1665, -167.55859, 22.59180, 1753.13562,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1775, -162.94824, 20.14844, 1753.06396,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1502, -180.00391, 25.68555, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1502, -180.00400, 33.84483, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1502, -176.97168, 33.89160, 1745.62341,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1502, -176.97516, 25.73200, 1745.62341,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1502, -200.57201, 26.04970, 1745.62341,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1502, -203.60449, 26.00293, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1502, -162.19397, 37.76900, 1745.62341,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1502, -162.24001, 40.79900, 1745.62341,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1502, -195.78836, 17.80200, 1745.62341,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1502, -195.83501, 20.83500, 1745.62341,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1502, -208.33400, 39.80100, 1745.62341,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(1502, -208.28711, 36.76758, 1745.62341,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -218.07910, 40.64648, 1748.01929,   0.00000, 90.00000, 179.99451);
CreateDynamicObject(1649, -218.16602, 40.47949, 1748.01929,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1499, -221.36914, 40.34961, 1745.60278,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1499, -217.39453, 36.77832, 1745.60278,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1499, -217.41309, 39.79199, 1745.60278,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16782, -187.98669, 18.32685, 1748.54321,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16782, -187.98679, 23.16500, 1748.54321,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9819, -186.62793, 20.92773, 1746.47620,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(1671, -185.90707, 18.85716, 1746.08362,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1671, -185.96901, 21.85613, 1746.08362,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(2357, -174.60632, 21.10380, 1746.01855,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2509, -185.29840, 41.95354, 1747.53284,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(14455, -211.79492, 19.04785, 1747.30151,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(14813, -193.53932, 36.15162, 1746.07385,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16378, -198.54956, 23.50096, 1746.37756,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1651, -169.02451, 20.93079, 1748.29028,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2233, -168.48747, 18.86673, 1747.72302,   7.25000, 0.00000, 270.00000);
CreateDynamicObject(2233, -168.48991, 22.19142, 1747.72302,   7.24548, 0.00000, 270.00000);
CreateDynamicObject(1714, -177.33737, 21.02534, 1745.62341,   0.00000, 0.00000, 106.00000);
CreateDynamicObject(1714, -173.34404, 22.38408, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, -171.77557, 21.07204, 1745.62341,   0.00000, 0.00000, 263.98901);
CreateDynamicObject(1714, -173.29262, 19.79048, 1745.62341,   0.00000, 0.00000, 177.99500);
CreateDynamicObject(2208, -171.66264, 17.02963, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2208, -169.14064, 17.51513, 1745.62000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2208, -169.13890, 20.19600, 1745.62341,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2208, -169.13965, 22.44531, 1745.62097,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2208, -169.04439, 25.12173, 1745.62341,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2611, -175.11290, 25.24817, 1747.22498,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14455, -211.78999, 24.79980, 1747.30151,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(14813, -164.49521, 25.45233, 1746.07385,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2509, -183.41238, 41.95400, 1747.53284,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(18092, -184.30859, 40.20996, 1746.10779,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(18053, -185.99707, 41.51367, 1746.49756,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2058, -183.41183, 39.98657, 1746.61401,   0.00000, 0.00000, 22.00000);
CreateDynamicObject(2044, -185.24843, 39.93881, 1746.63586,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, -186.27617, 39.93819, 1746.90015,   0.00000, 0.00000, 239.99998);
CreateDynamicObject(2690, -178.67480, 44.02441, 1745.98279,   0.00000, 0.00000, 357.99500);
CreateDynamicObject(2057, -183.89275, 34.49291, 1745.80396,   0.00000, 0.00000, 184.74997);
CreateDynamicObject(2045, -184.31953, 39.87709, 1746.67615,   2.00000, 0.00000, 122.00000);
CreateDynamicObject(2035, -185.49297, 41.94381, 1747.75732,   90.00000, 180.00000, 180.00000);
CreateDynamicObject(1672, -184.90631, 40.22266, 1746.70398,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1650, -186.56396, 40.52298, 1746.91492,   0.00000, 0.00000, 272.00000);
CreateDynamicObject(1654, -182.17305, 40.50990, 1746.80029,   0.00000, 0.00000, 344.00000);
CreateDynamicObject(2035, -185.49219, 41.94336, 1747.33191,   90.00000, 179.99451, 179.99451);
CreateDynamicObject(2036, -184.22968, 41.93793, 1747.76709,   90.00000, 180.00549, 179.98352);
CreateDynamicObject(2036, -184.22949, 41.93750, 1747.34241,   90.00000, 180.00549, 179.98352);
CreateDynamicObject(2044, -183.01430, 41.89991, 1747.76050,   90.00000, 180.00000, 180.00000);
CreateDynamicObject(2044, -183.01367, 41.89941, 1747.38513,   90.00000, 179.99451, 179.99451);
CreateDynamicObject(2358, -187.61444, 35.30867, 1745.73999,   0.00000, 0.00000, 165.99963);
CreateDynamicObject(2358, -187.21866, 34.63239, 1745.73999,   0.00000, 0.00000, 143.99963);
CreateDynamicObject(2358, -187.50293, 34.95898, 1745.98975,   0.00000, 0.00000, 111.99463);
CreateDynamicObject(1672, -184.74100, 40.28547, 1746.70398,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1672, -185.22018, 40.25404, 1746.70398,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1654, -182.49757, 40.52147, 1746.80029,   0.00000, 0.00000, 13.99841);
CreateDynamicObject(2055, -178.58508, 44.24855, 1747.22107,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2164, -208.69434, 16.88867, 1745.62109,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2167, -207.75999, 16.88400, 1745.62341,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2204, -202.73689, 33.76978, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2206, -208.75781, 22.24902, 1745.62341,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14458, -208.20996, 20.70215, 1746.58496,   0.00000, 0.00000, 182.74658);
CreateDynamicObject(2190, -208.71582, 20.25781, 1746.55994,   0.00000, 0.00000, 227.99928);
CreateDynamicObject(2894, -208.90112, 21.64009, 1746.55994,   0.00000, 0.00000, 290.00000);
CreateDynamicObject(2290, -199.02486, 17.42163, 1745.62341,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2332, -208.78105, 26.06119, 1746.92505,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1708, -207.08244, 20.72332, 1745.62341,   0.00000, 0.00000, 255.99997);
CreateDynamicObject(1708, -207.28027, 22.70996, 1745.62341,   0.00000, 0.00000, 285.99609);
CreateDynamicObject(948, -206.07719, 17.34791, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, -203.22461, 17.37967, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, -196.97057, 17.26558, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2606, -217.57704, 42.38357, 1747.55042,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2606, -217.57617, 42.38281, 1748.00085,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(2161, -196.09711, 23.83538, 1746.67322,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2161, -196.09700, 22.50500, 1746.67322,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(2604, -218.05925, 42.67033, 1746.22009,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1671, -219.28078, 43.38665, 1746.08362,   0.00000, 0.00000, 52.00000);
CreateDynamicObject(2007, -221.07968, 42.77251, 1745.62341,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3503, -189.00566, 38.29950, 1757.13037,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14833, -175.28178, 52.18096, 1758.11230,   0.00000, 0.00000, 181.99951);
CreateDynamicObject(3095, -166.93466, 45.00074, 1755.91760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, -166.50597, 38.46795, 1757.02283,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, -164.45204, 40.62404, 1757.02380,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, -168.62105, 36.42590, 1757.02356,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2232, -167.11551, 17.80444, 1755.76135,   0.00000, 180.00000, 179.99451);
CreateDynamicObject(2232, -175.46680, 17.75977, 1755.76135,   0.00000, 180.00000, 179.99451);
CreateDynamicObject(2232, -172.93715, 33.97760, 1762.28809,   52.00000, 0.00000, 179.99451);
CreateDynamicObject(2232, -166.64465, 33.98953, 1762.28809,   51.99829, 0.00000, 179.99451);
CreateDynamicObject(2208, -172.47791, 40.03921, 1756.49707,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14820, -171.12280, 40.02384, 1757.37244,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1502, -162.19922, 22.26953, 1751.96692,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1502, -162.24600, 25.30300, 1751.96692,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1886, -216.44009, 36.61821, 1751.62476,   22.00000, 0.00000, 108.00000);
CreateDynamicObject(3265, -217.12163, 38.27887, 1748.15076,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16780, -169.58607, 39.23366, 1762.42456,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16780, -178.80681, 29.82772, 1751.62598,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16780, -178.35254, 21.01855, 1751.62598,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16780, -182.64354, 37.92813, 1751.62598,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16780, -202.29126, 30.31218, 1751.62598,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16780, -207.99335, 20.96545, 1751.62598,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1886, -221.15137, 39.77051, 1751.65674,   23.99963, 0.00000, 39.99573);
CreateDynamicObject(638, -176.60612, 43.90091, 1752.66394,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2240, -167.03232, 36.95991, 1756.98987,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2240, -162.93973, 21.55962, 1752.56519,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2240, -158.56639, 22.57900, 1752.55115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2811, -158.65627, 41.33518, 1745.62317,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2010, -178.14487, 25.08279, 1753.04492,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, -210.61107, 41.19770, 1746.31433,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(638, -210.48352, 35.39672, 1746.31433,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2254, -168.40810, 38.97766, 1748.88660,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2258, -195.53403, 28.39161, 1747.81958,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(644, -163.16942, 43.59230, 1752.29712,   0.00000, 0.00000, 227.98755);
CreateDynamicObject(3920, -168.76227, 33.70035, 1759.50049,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3920, -181.47499, 33.67940, 1759.50049,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3920, -184.60066, 39.28267, 1759.50049,   0.00000, 0.00000, 270.25000);
CreateDynamicObject(2232, -162.51465, 30.37598, 1756.51208,   0.00000, 179.99451, 270.00000);
CreateDynamicObject(638, -180.83008, 43.90820, 1752.66394,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16782, -187.98674, 20.74833, 1748.54321,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, -170.26831, 40.71830, 1755.91614,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, -172.58258, 36.42500, 1757.02356,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, -166.13660, 38.02235, 1757.18921,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(13011, -175.32495, 38.93677, 1753.32483,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, -174.65584, 38.44440, 1757.04785,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, -174.65500, 40.55370, 1757.04785,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1825, -180.37646, 24.75747, 1751.96692,   0.00000, 0.00000, 332.00000);
CreateDynamicObject(1825, -180.23428, 27.64695, 1751.96692,   0.00000, 0.00000, 323.99585);
CreateDynamicObject(1825, -182.83125, 28.13157, 1751.96692,   0.00000, 0.00000, 4.24231);
CreateDynamicObject(2240, -174.16916, 36.89055, 1756.98987,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3440, -166.09001, 36.55367, 1754.06812,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3440, -174.44125, 36.53667, 1754.06812,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, -192.89648, 38.90437, 1755.69067,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1723, -192.89767, 35.89307, 1755.69067,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1724, -191.87244, 34.40000, 1755.66663,   0.00000, 0.00000, 141.74713);
CreateDynamicObject(1723, -189.06432, 34.27048, 1755.69067,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1723, -186.08748, 34.27191, 1755.69067,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(14651, -170.67308, 39.58691, 1754.03320,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14651, -166.60001, 39.58690, 1754.03320,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, -174.47304, 38.92511, 1752.52209,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, -174.47000, 43.06000, 1752.52209,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, -172.36356, 36.51766, 1752.52258,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, -166.16040, 36.53133, 1752.52258,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, -162.01216, 36.53114, 1752.52258,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3113, -179.79449, 40.95436, 1745.01563,   0.00000, 285.00000, 89.99997);
CreateDynamicObject(3095, -193.09200, 34.34171, 1747.26526,   90.00000, 179.99451, 179.99451);
CreateDynamicObject(3095, -203.59512, 34.34060, 1747.26526,   90.00000, 179.99451, 179.99451);
CreateDynamicObject(3095, -201.11990, 34.36142, 1752.61438,   90.00000, 179.99451, 179.99451);
CreateDynamicObject(1502, -199.10300, 33.90000, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, -203.58073, 33.87913, 1747.26526,   90.00000, 179.99451, 0.01099);
CreateDynamicObject(3095, -193.06110, 33.87610, 1747.26526,   90.00000, 179.99451, 0.01099);
CreateDynamicObject(3095, -200.82100, 33.86864, 1752.61755,   90.00000, 180.00549, 359.99451);
CreateDynamicObject(3095, -189.79843, 33.23359, 1756.34302,   90.00000, 179.99451, 0.00000);
CreateDynamicObject(1825, -190.99275, 35.86059, 1751.96692,   0.00000, 0.00000, 10.00000);
CreateDynamicObject(1825, -191.81052, 39.51755, 1751.96692,   0.00000, 0.00000, 37.99756);
CreateDynamicObject(1825, -189.67377, 37.87300, 1751.96692,   0.00000, 0.00000, 71.99622);
CreateDynamicObject(1825, -188.15288, 40.33879, 1751.96692,   0.00000, 0.00000, 30.00000);
CreateDynamicObject(1825, -186.74168, 37.80301, 1751.96692,   0.00000, 0.00000, 29.99817);
CreateDynamicObject(1825, -187.87025, 35.22579, 1751.96692,   0.00000, 0.00000, 81.99817);
CreateDynamicObject(638, -184.90538, 36.49785, 1752.66394,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, -184.90530, 40.64642, 1752.66394,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, -184.87219, 38.55571, 1751.96692,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, -178.72174, 43.85153, 1751.96692,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3113, -206.09071, 41.22899, 1745.01563,   0.00000, 284.99634, 89.99451);
CreateDynamicObject(1714, -174.25015, 19.80540, 1745.62341,   0.00000, 0.00000, 177.99500);
CreateDynamicObject(1714, -175.07640, 19.80926, 1745.62341,   0.00000, 0.00000, 177.99500);
CreateDynamicObject(1714, -175.95065, 19.84098, 1745.62341,   0.00000, 0.00000, 177.99500);
CreateDynamicObject(1714, -174.32030, 22.43295, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, -175.17825, 22.41634, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, -176.11421, 22.38444, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3657, -181.87836, 17.96431, 1746.14160,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3657, -181.86220, 19.26762, 1746.14160,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(3657, -181.87059, 20.56972, 1746.14160,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(3657, -181.85216, 21.84808, 1746.14160,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(3383, -206.56313, 43.63635, 1745.64954,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(14455, -207.89604, 32.29519, 1747.30151,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(3095, -204.26837, 19.80531, 1747.26526,   90.00000, 180.00549, 270.00000);
CreateDynamicObject(1502, -203.95036, 25.83430, 1745.62341,   0.00000, 0.00000, 269.99997);
CreateDynamicObject(3095, -204.28369, 21.33467, 1752.61755,   90.00000, 179.99451, 270.00549);
CreateDynamicObject(3095, -203.73401, 21.36155, 1752.61755,   90.00000, 180.00549, 89.98904);
CreateDynamicObject(3095, -203.74097, 19.81135, 1749.61755,   90.00000, 180.00549, 89.98901);
CreateDynamicObject(2290, -203.16681, 19.82147, 1745.62341,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3383, -207.66837, 41.94972, 1745.64954,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3383, -203.85518, 43.63558, 1745.64954,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(3383, -201.17198, 43.63282, 1745.64954,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(3383, -198.48943, 43.63084, 1745.64954,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(3383, -195.68213, 43.63715, 1745.64954,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2208, -204.65575, 28.77493, 1745.62097,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1708, -203.24881, 31.48377, 1745.62341,   0.00000, 0.00000, 285.99609);
CreateDynamicObject(1708, -202.98222, 29.67865, 1745.62341,   0.00000, 0.00000, 257.99609);
CreateDynamicObject(14458, -204.74458, 31.37055, 1746.58496,   0.00000, 0.00000, 247.74658);
CreateDynamicObject(2190, -204.40012, 30.89535, 1746.50989,   0.00000, 0.00000, 297.99930);
CreateDynamicObject(2164, -205.01387, 26.28507, 1745.62109,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(16780, -201.94998, 40.09555, 1751.62598,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3113, -221.62880, 29.14274, 1745.01563,   0.00000, 284.99634, 0.00000);
CreateDynamicObject(3409, -205.75935, 44.86729, 1746.08044,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3409, -201.10216, 44.88602, 1746.08044,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3409, -198.67992, 44.84290, 1746.08044,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3409, -203.36121, 44.82776, 1746.08044,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3409, -206.57068, 44.83928, 1746.08044,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3409, -196.45280, 44.86875, 1746.08044,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2901, -207.36086, 41.55122, 1746.99414,   0.00000, 0.00000, 84.00000);
CreateDynamicObject(2991, -175.09940, 42.32222, 1746.27588,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(964, -184.96484, 37.23814, 1745.64648,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14782, -187.77641, 38.73970, 1746.66113,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2991, -175.09863, 42.32129, 1747.52710,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(964, -183.42287, 37.23075, 1745.64648,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11102, -168.97462, 39.42512, 1747.81274,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3577, -173.02646, 37.41407, 1746.42834,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3576, -176.99136, 37.33717, 1747.13843,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2036, -178.60078, 37.94006, 1746.08105,   180.00000, 0.00000, 90.00000);
CreateDynamicObject(14455, -196.27545, 27.93210, 1747.30151,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2202, -205.99709, 33.31185, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2290, -197.59503, 26.81812, 1745.62341,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2737, -181.78450, 25.21136, 1746.78870,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(937, -203.56685, 38.77435, 1746.12097,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(937, -201.67999, 38.77400, 1746.12097,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(937, -199.80515, 38.77400, 1746.12097,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2063, -201.02950, 34.72986, 1746.55273,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2063, -203.72372, 34.72295, 1746.55273,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(931, -206.63264, 35.33113, 1746.70557,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2901, -206.67929, 35.17282, 1747.11926,   0.00000, 0.00000, 165.99597);
CreateDynamicObject(2901, -206.67598, 35.88411, 1747.11926,   0.00000, 0.00000, 165.99243);
CreateDynamicObject(2901, -206.65387, 35.27591, 1745.99390,   0.00000, 0.00000, 145.99243);
CreateDynamicObject(1578, -203.54970, 38.68192, 1746.59875,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1578, -203.54883, 38.68164, 1746.77393,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1578, -202.89537, 38.91335, 1746.59875,   0.00000, 0.00000, 326.00000);
CreateDynamicObject(1578, -202.21722, 38.66452, 1746.59875,   0.00000, 0.00000, 25.99731);
CreateDynamicObject(1578, -201.64134, 39.10520, 1746.59875,   0.00000, 0.00000, 5.99365);
CreateDynamicObject(1578, -201.27898, 39.01859, 1745.89807,   0.00000, 0.00000, 67.99304);
CreateDynamicObject(1578, -201.97696, 38.96671, 1745.89807,   0.00000, 0.00000, 109.98889);
CreateDynamicObject(1580, -199.31802, 38.93009, 1746.60974,   0.00000, 0.00000, 330.00000);
CreateDynamicObject(1580, -199.84415, 38.62144, 1746.60974,   0.00000, 0.00000, 49.99634);
CreateDynamicObject(1580, -200.68280, 38.78976, 1746.60974,   0.00000, 0.00000, 89.99329);
CreateDynamicObject(1580, -199.81157, 38.61858, 1745.83398,   0.00000, 0.00000, 65.98901);
CreateDynamicObject(1577, -200.25894, 34.74748, 1746.47974,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1577, -200.89162, 34.75760, 1746.47974,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1577, -201.54048, 34.76362, 1746.47974,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1576, -203.05142, 34.83030, 1746.48340,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(1576, -203.68784, 34.80471, 1746.48340,   0.00000, 0.00000, 3.99902);
CreateDynamicObject(1575, -203.89430, 34.77990, 1746.01367,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, -204.54340, 34.77414, 1746.01367,   0.00000, 0.00000, 346.00000);
CreateDynamicObject(644, -173.87714, 43.56632, 1752.29712,   0.00000, 0.00000, 299.98282);
CreateDynamicObject(3095, -221.31039, 27.11147, 1747.74146,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, -221.21945, 36.15437, 1752.24365,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(3095, -221.30563, 24.65061, 1747.86658,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(18051, -223.19473, 31.29245, 1747.17029,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3095, -221.30777, 31.63166, 1747.71643,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2435, -218.07051, 35.88113, 1745.65015,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2435, -218.99442, 35.87950, 1745.65015,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2435, -219.91661, 35.88000, 1745.65015,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2435, -220.84079, 35.88000, 1745.65015,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2435, -221.76462, 35.88000, 1745.65015,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(3095, -217.63766, 28.63422, 1746.26404,   90.00000, 179.99451, 270.01099);
CreateDynamicObject(3095, -217.64192, 31.07844, 1746.26404,   90.00000, 180.00549, 270.00000);
CreateDynamicObject(3095, -221.52611, 31.09596, 1746.26404,   90.00000, 180.00549, 89.98904);
CreateDynamicObject(3095, -221.52768, 22.74538, 1746.26404,   90.00000, 180.00549, 89.98901);
CreateDynamicObject(2055, -221.54787, 38.22368, 1747.37195,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2056, -218.24367, 25.46601, 1746.87109,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2056, -219.45078, 28.55319, 1746.87109,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2056, -220.70064, 28.58944, 1746.87109,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(3025, -219.46838, 28.44307, 1746.81506,   0.00000, 180.00000, 0.00000);
CreateDynamicObject(3025, -220.72989, 28.49892, 1746.81506,   0.00000, 179.99451, 0.00000);
CreateDynamicObject(3025, -218.25150, 25.36017, 1746.81506,   0.00000, 179.99451, 0.00000);
CreateDynamicObject(2240, -185.87567, 41.89798, 1756.24084,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, -178.23956, 37.34294, 1751.96692,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, -176.81094, 35.96544, 1751.96692,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2240, -162.95917, 26.27254, 1752.56519,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1557, -162.49062, 28.30278, 1751.96692,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1557, -162.49200, 31.32556, 1751.96692,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2872, -162.99655, 41.62327, 1751.96692,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2779, -162.99194, 40.29551, 1751.96692,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2778, -162.99973, 39.04860, 1751.96692,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1557, -193.76924, 33.84943, 1745.62341,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1557, -190.73611, 33.84594, 1745.62341,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(644, -189.21072, 22.39655, 1745.89673,   0.00000, 0.00000, 137.98279);
CreateDynamicObject(638, -184.12128, 33.42543, 1746.31311,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(638, -184.42133, 26.10066, 1746.31311,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(638, -172.71831, 33.42019, 1746.31311,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(638, -172.92087, 26.14052, 1746.31311,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19462, 246.08929, 216.66949, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19462, 242.62645, 216.66057, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19462, 239.21500, 216.66949, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19462, 239.21500, 207.08600, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19450, 247.71910, 216.66949, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19450, 246.76253, 210.44907, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, 243.15221, 221.36861, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19462, 235.81371, 216.66949, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19462, 235.79268, 207.06430, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19388, 238.43500, 215.50191, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 238.43500, 217.85049, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 238.43500, 219.37450, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 238.43504, 220.61708, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19450, 238.43500, 209.27780, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19450, 229.20743, 211.86049, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 241.87570, 215.78700, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 241.87570, 214.30251, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 241.16150, 213.57768, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 239.67003, 213.57153, 1042.93115,   0.00000, 0.00000, -89.16000);
CreateDynamicObject(19431, 238.69872, 212.84651, 1042.93115,   0.00000, 0.00000, -18.78002);
CreateDynamicObject(19462, 236.48769, 200.74252, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19388, 241.86391, 211.89661, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 241.86391, 209.50999, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19439, 240.14580, 209.17560, 1041.19714,   -15.00000, 90.00000, 0.00000);
CreateDynamicObject(19439, 240.16580, 207.61430, 1041.40527,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19439, 240.16580, 206.07210, 1041.19714,   15.00000, 90.00000, 0.00000);
CreateDynamicObject(1892, 239.68147, 209.71469, 1041.19470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 238.86411, 209.67070, 1041.83325,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 241.45396, 209.67070, 1041.82190,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, 247.26778, 217.31670, 1041.81433,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, 247.21368, 213.24977, 1041.81433,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 247.71910, 211.17751, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19443, 245.97330, 211.09810, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19443, 242.53430, 211.09810, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19443, 242.70493, 209.56400, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19431, 241.09943, 202.76305, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 239.55620, 202.76300, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 234.85480, 202.76300, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, 229.32713, 202.77643, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19462, 232.40950, 207.08430, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19462, 229.05611, 207.08430, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19462, 225.61279, 207.08430, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19462, 232.35030, 216.66949, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19462, 228.92230, 216.66949, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19388, 236.84660, 211.84100, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 234.54800, 211.84100, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2172, 233.28360, 211.26810, 1041.19507,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2172, 231.38280, 211.26810, 1041.19507,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2172, 227.41150, 203.34779, 1041.19507,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2172, 227.25729, 211.26810, 1041.19507,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2172, 230.29449, 203.34779, 1041.19507,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2198, 235.14990, 210.55791, 1041.19507,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2198, 232.27361, 203.34779, 1041.19507,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2193, 234.26469, 204.31400, 1041.19507,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2193, 233.25000, 206.20750, 1041.19507,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2198, 231.10353, 209.22444, 1041.13940,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2198, 231.10350, 207.32291, 1041.13940,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2198, 225.04829, 205.37160, 1041.13940,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2198, 225.04829, 207.25600, 1041.13940,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2198, 234.55298, 219.62183, 1041.13940,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2197, 228.33839, 204.23010, 1041.14514,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2197, 225.50380, 204.23010, 1041.14514,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1715, 230.01964, 209.09465, 1041.18201,   0.00000, 0.00000, 53.21999);
CreateDynamicObject(1715, 229.96886, 206.26369, 1041.18201,   0.00000, 0.00000, 129.59998);
CreateDynamicObject(1715, 233.53725, 205.44641, 1041.18201,   0.00000, 0.00000, 129.59998);
CreateDynamicObject(1715, 234.43213, 209.70557, 1041.18201,   0.00000, 0.00000, 129.59998);
CreateDynamicObject(1715, 234.05086, 211.02629, 1041.18201,   0.00000, 0.00000, 183.06000);
CreateDynamicObject(1715, 232.09351, 211.02278, 1041.18201,   0.00000, 0.00000, 183.06000);
CreateDynamicObject(1715, 227.91965, 210.43234, 1041.18201,   0.00000, 0.00000, 183.06000);
CreateDynamicObject(1715, 229.71283, 204.06133, 1041.18201,   0.00000, 0.00000, 306.60004);
CreateDynamicObject(1715, 233.59024, 204.21477, 1041.18201,   0.00000, 0.00000, 372.95999);
CreateDynamicObject(1715, 231.43353, 204.09596, 1041.18201,   0.00000, 0.00000, 372.95999);
CreateDynamicObject(1715, 226.65463, 204.25981, 1041.18201,   0.00000, 0.00000, 372.95999);
CreateDynamicObject(1715, 225.79338, 206.33546, 1041.18201,   0.00000, 0.00000, 309.71997);
CreateDynamicObject(1715, 225.96272, 207.92903, 1041.18201,   0.00000, 0.00000, 282.77997);
CreateDynamicObject(19388, 237.25920, 202.76300, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19462, 236.49565, 197.27028, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19450, 241.33760, 197.95840, 1042.93115,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19450, 236.61252, 195.53183, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, 231.76396, 197.96803, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2184, 235.08121, 197.59138, 1041.22339,   0.00000, 0.00000, 91.25994);
CreateDynamicObject(1714, 233.22302, 198.66566, 1041.19788,   0.00000, 0.00000, 87.42003);
CreateDynamicObject(1715, 236.10294, 200.02625, 1041.18201,   0.00000, 0.00000, 299.15988);
CreateDynamicObject(1715, 236.29346, 197.54741, 1041.18201,   0.00000, 0.00000, 255.36005);
CreateDynamicObject(2204, 231.85103, 197.80946, 1041.20190,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2197, 233.31207, 200.59674, 1041.14514,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2197, 233.20305, 196.97807, 1041.14514,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2199, 232.11111, 201.98062, 1041.24463,   0.00000, 0.00000, 58.74000);
CreateDynamicObject(2186, 229.42052, 211.36543, 1041.16882,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1808, 235.42091, 208.69363, 1041.13489,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1808, 232.23459, 196.12059, 1041.13489,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2253, 234.84711, 197.59108, 1042.21350,   0.00000, 0.00000, -26.58000);
CreateDynamicObject(0, 234.93829, 199.77010, 1042.21350,   0.00000, 0.00000, 40.14000);
CreateDynamicObject(638, 247.26778, 217.31670, 1041.81433,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, 237.91284, 195.98735, 1041.81433,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(638, 240.89661, 201.28610, 1041.81433,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, 240.89661, 196.94231, 1041.81433,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2755, 235.99260, 207.25420, 1042.82104,   0.00000, 0.00000, 90.54000);
CreateDynamicObject(19431, 235.99263, 211.01379, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 235.99260, 209.42760, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2611, 231.79437, 202.93237, 1043.30652,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2611, 224.60510, 206.98433, 1043.30652,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2611, 236.74173, 195.66884, 1043.30652,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1502, 238.47430, 214.75813, 1041.18677,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1502, 238.00171, 202.76228, 1041.19885,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2198, 241.36150, 218.95551, 1041.13940,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2198, 241.36150, 220.83070, 1041.13940,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1715, 239.92632, 220.18680, 1041.18201,   0.00000, 0.00000, 88.55998);
CreateDynamicObject(1715, 240.05246, 218.20854, 1041.18201,   0.00000, 0.00000, 86.15997);
CreateDynamicObject(19404, 241.87570, 218.14391, 1042.93091,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 241.84941, 218.96581, 1044.57776,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 241.84940, 218.96581, 1044.57776,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2611, 241.72350, 215.16769, 1043.30652,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2611, 240.55908, 213.73134, 1043.30652,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(949, 238.76216, 213.82988, 1041.83325,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(0, 247.49879, 215.62930, 1041.18103,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1722, 247.49879, 214.98900, 1041.18103,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1722, 247.49879, 219.00011, 1041.18103,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1722, 247.49879, 219.66051, 1041.18103,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1722, 247.49879, 220.32050, 1041.18103,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1722, 247.49879, 220.94031, 1041.18103,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(627, 247.12334, 211.24809, 1042.71521,   0.00000, 0.00000, 63.84000);
CreateDynamicObject(627, 247.12334, 211.24809, 1042.71521,   0.00000, 0.00000, 112.86000);
CreateDynamicObject(627, 247.12334, 211.24809, 1042.71521,   0.00000, 0.00000, 136.14000);
CreateDynamicObject(2195, 242.32590, 210.85434, 1041.78210,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2195, 242.32590, 212.98010, 1041.78210,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, 242.18240, 216.45351, 1041.16541,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(948, 242.18240, 220.01170, 1041.16541,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1536, 244.88927, 221.19690, 1041.19971,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(0, 242.02570, 215.60680, 1043.36499,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 241.86391, 208.02609, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 241.86391, 206.46420, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 241.86717, 204.07021, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19462, 245.75240, 204.01131, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19431, 242.67340, 202.56081, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 244.25571, 202.56081, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 244.96400, 201.80200, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 244.96400, 200.22620, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 244.96400, 198.67799, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19462, 245.75240, 200.54320, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19462, 249.76628, 197.06754, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19450, 246.74448, 205.68721, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 250.60046, 204.80971, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 250.60049, 203.25191, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 244.96400, 197.25290, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 244.96400, 195.74809, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19462, 255.39301, 200.54320, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19462, 259.38376, 197.05186, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19431, 250.60049, 1042.93115, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19462, 255.39301, 193.58549, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19450, 255.34950, 1042.93115, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19302, 251.56830, 199.42058, 1042.41504,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 252.45747, 199.42148, 1044.27625,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19456, 255.34950, 202.36121, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19456, 260.14490, 197.62410, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 260.14490, 192.03850, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19456, 255.34950, 192.21831, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19437, 250.60170, 192.92191, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 250.60049, 194.52640, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 250.60049, 200.13530, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 250.60049, 201.71629, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 253.23380, 199.49710, 1041.93359,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19437, 254.10066, 200.20445, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 254.10069, 201.74440, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 252.87389, 201.73389, 1041.61914,   0.00000, 0.00000, 89.27998);
CreateDynamicObject(2602, 253.64069, 200.22705, 1041.69592,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19304, 255.93840, 199.42101, 1044.27625,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19302, 255.04871, 199.42059, 1042.41504,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 256.71530, 199.49710, 1041.93359,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19437, 257.44290, 200.20450, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 257.44290, 201.74440, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2603, 256.17685, 201.75761, 1041.61914,   0.00000, 0.00000, 89.27998);
CreateDynamicObject(2602, 256.95291, 200.47200, 1041.69592,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19304, 259.25970, 199.42101, 1044.27625,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19302, 258.43011, 199.42059, 1042.41504,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 260.09860, 199.49710, 1041.93359,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2603, 258.92410, 201.70288, 1041.61914,   0.00000, 0.00000, 89.27998);
CreateDynamicObject(2602, 259.71692, 200.48491, 1041.69592,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19304, 252.45750, 195.31320, 1044.27625,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19302, 251.56830, 195.33681, 1042.41504,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 253.23380, 195.29410, 1041.93359,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2603, 252.87390, 192.84680, 1041.61914,   0.00000, 0.00000, 89.28000);
CreateDynamicObject(19437, 254.10069, 194.57570, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 254.10069, 193.11450, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2602, 253.64070, 194.51891, 1041.69592,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19304, 255.93840, 195.31320, 1044.27625,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19302, 255.04871, 195.34039, 1042.41504,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 256.71530, 195.33720, 1041.93359,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19437, 257.44290, 194.57570, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 257.44290, 193.02290, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19304, 259.25970, 195.31320, 1044.27625,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19302, 258.43011, 195.32010, 1042.41504,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 260.09860, 195.38150, 1041.93359,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2603, 256.22266, 192.84081, 1041.61914,   0.00000, 0.00000, 89.28000);
CreateDynamicObject(2602, 256.97095, 194.42946, 1041.69592,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2603, 258.94302, 192.87650, 1041.61914,   0.00000, 0.00000, 89.28000);
CreateDynamicObject(2602, 259.69247, 194.58528, 1041.69592,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2166, 247.87196, 204.12323, 1041.20593,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2165, 247.83203, 202.18648, 1041.20593,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 247.36121, 202.94630, 1041.81421,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 248.96741, 199.75450, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2165, 247.84853, 200.26144, 1041.20593,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(983, 247.36121, 202.94630, 1043.03418,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 249.02600, 195.26833, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19388, 246.52090, 195.26830, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19437, 247.85237, 194.51573, 1040.68909,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 247.85240, 192.97560, 1040.68909,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 247.85240, 191.41560, 1040.68909,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 247.96333, 191.97264, 1042.41736,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19462, 245.74628, 193.57753, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19462, 245.73190, 190.12650, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19437, 250.59930, 191.31650, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 250.60049, 189.70660, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 247.87241, 190.70950, 1042.90344,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 247.87379, 189.12830, 1042.90344,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19456, 246.02522, 188.97336, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19437, 241.68866, 193.98938, 1042.90344,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 241.45029, 192.47086, 1042.90344,   0.00000, 0.00000, -15.60000);
CreateDynamicObject(19437, 241.27119, 191.25459, 1042.90344,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 241.27124, 189.70168, 1042.90344,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 242.03307, 194.87842, 1042.90344,   0.00000, 0.00000, -51.36000);
CreateDynamicObject(19437, 242.55170, 195.33600, 1042.90344,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19437, 244.13300, 195.33600, 1042.90344,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1715, 249.07294, 204.41908, 1041.18201,   0.00000, 0.00000, 299.15988);
CreateDynamicObject(1715, 249.25769, 202.92995, 1041.18201,   0.00000, 0.00000, 269.04016);
CreateDynamicObject(1715, 248.92230, 201.40260, 1041.18201,   0.00000, 0.00000, 269.04016);
CreateDynamicObject(1737, 249.18527, 191.45564, 1041.01147,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1810, 249.73067, 191.85225, 1041.14819,   0.00000, 0.00000, -147.06000);
CreateDynamicObject(1810, 248.19551, 191.80630, 1041.14819,   0.00000, 0.00000, -227.70007);
CreateDynamicObject(1999, 247.32536, 193.85254, 1041.17749,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2308, 242.85139, 189.54961, 1041.19324,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11631, 247.09921, 191.38342, 1042.45117,   0.00000, 0.00000, -90.05998);
CreateDynamicObject(2611, 245.17368, 189.10674, 1043.30652,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2606, 246.65117, 189.20346, 1044.14355,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(2615, 242.18196, 194.81573, 1043.02405,   0.00000, 0.00000, 39.30000);
CreateDynamicObject(2612, 243.63907, 189.09579, 1043.33789,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19100, 247.42484, 193.84062, 1042.08289,   0.00000, 270.00000, 127.55998);
CreateDynamicObject(2613, 247.89760, 195.91180, 1041.17761,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1715, 243.31668, 190.76581, 1041.18201,   0.00000, 0.00000, 311.22003);
CreateDynamicObject(1715, 246.02834, 192.83603, 1041.18201,   0.00000, 0.00000, 450.96024);
CreateDynamicObject(1715, 245.98749, 191.19456, 1041.18201,   0.00000, 0.00000, 450.96024);
CreateDynamicObject(1649, 247.90070, 193.09129, 1043.71460,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1502, 249.76378, 195.29817, 1041.19885,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1502, 247.28256, 195.30548, 1041.19885,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(18064, 221.61833, 218.01898, 1043.19250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19462, 233.89632, 223.19553, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19462, 222.46880, 216.68719, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19462, 222.46880, 220.18480, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19431, 227.11288, 212.57510, 1042.93115,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19431, 227.11290, 214.17320, 1042.93115,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19431, 226.40100, 215.06889, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19388, 225.67183, 216.59563, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19404, 225.67180, 219.80141, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 225.73325, 219.70482, 1042.89185,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, 225.73320, 219.70480, 1042.89185,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19431, 225.67180, 222.13100, 1042.93115,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19450, 220.93860, 221.92570, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, 211.41721, 221.92570, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, 220.90070, 215.05638, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, 211.41721, 215.06889, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19458, 212.89748, 220.23611, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19458, 212.89751, 216.79240, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19437, 208.14915, 221.18861, 1042.90344,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 208.14920, 219.58810, 1042.90344,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 208.14920, 217.98540, 1042.90344,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 208.14920, 216.38429, 1042.90344,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19437, 208.14920, 214.84540, 1042.90344,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18105, 231.78200, 219.02319, 1043.19116,   0.00000, 0.00000, 360.00000);
CreateDynamicObject(19462, 224.43570, 223.19550, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19431, 225.67180, 223.66330, 1042.93115,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19450, 230.55420, 223.92230, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 236.10620, 223.92230, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 237.67130, 223.92230, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 238.43504, 223.33160, 1042.93115,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19431, 238.43500, 221.99890, 1042.93115,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(18044, 233.77458, 220.68341, 1042.64160,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(964, 234.66733, 223.07057, 1040.96362,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(964, 235.95399, 223.07060, 1040.96362,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(964, 237.21460, 223.07060, 1040.96362,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(964, 237.82907, 220.66113, 1040.96362,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(964, 237.82745, 219.03290, 1040.96362,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2038, 234.32787, 223.30898, 1041.98108,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2043, 234.70334, 222.85123, 1041.97925,   0.00000, 0.00000, 32.94000);
CreateDynamicObject(0, 235.66600, 222.94791, 1042.05005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(0, 234.33600, 222.88950, 1042.00098,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2068, 231.86325, 220.40530, 1044.09351,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2041, 236.47507, 223.01416, 1042.08679,   0.00000, 0.00000, -54.30000);
CreateDynamicObject(2358, 237.18871, 222.79132, 1042.05005,   0.00000, 0.00000, -41.10000);
CreateDynamicObject(2043, 233.18512, 212.87312, 1042.32104,   0.00000, 0.00000, 166.79999);
CreateDynamicObject(2043, 233.36296, 213.48006, 1042.32104,   0.00000, 0.00000, 97.37998);
CreateDynamicObject(2043, 233.07362, 213.83766, 1042.32104,   0.00000, 0.00000, 116.33999);
CreateDynamicObject(353, 232.58600, 215.77820, 1041.76636,   0.00000, 0.00000, 6.00000);
CreateDynamicObject(356, 232.15105, 215.84077, 1041.86768,   0.00000, 0.00000, 186.00000);
CreateDynamicObject(2058, 231.84630, 211.96291, 1043.47363,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(349, 230.15981, 211.92380, 1042.41638,   0.00000, 0.00000, 6.00000);
CreateDynamicObject(1583, 208.21770, 215.97591, 1041.93945,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 208.21770, 217.61681, 1042.65137,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 208.21770, 219.12300, 1041.95276,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19458, 217.69231, 217.09186, 1040.31226,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19458, 217.61000, 217.11478, 1045.45642,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 208.21770, 220.77910, 1041.33496,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2611, 230.35104, 212.00841, 1043.30737,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(348, 230.36346, 215.80928, 1041.86792,   0.00000, 0.00000, 6.00000);
CreateDynamicObject(348, 229.92700, 215.84430, 1041.86792,   0.00000, 0.00000, 186.00000);
CreateDynamicObject(349, 233.77859, 212.46620, 1041.79175,   0.00000, 0.00000, 96.00000);
CreateDynamicObject(358, 233.76044, 214.26212, 1041.85498,   0.00000, 0.00000, 96.00000);
CreateDynamicObject(2612, 227.31557, 213.46877, 1043.24670,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2043, 233.13948, 214.99150, 1042.32104,   0.00000, 0.00000, 121.67999);
CreateDynamicObject(3013, 232.46367, 215.24184, 1042.34802,   0.00000, 0.00000, -16.74000);
CreateDynamicObject(3013, 232.09685, 215.39757, 1042.34802,   0.00000, 0.00000, 13.98000);
CreateDynamicObject(2358, 231.39182, 215.31589, 1042.29382,   0.00000, 0.00000, -12.60000);
CreateDynamicObject(2358, 230.26883, 215.37347, 1042.29382,   0.00000, 0.00000, 17.64000);
CreateDynamicObject(2358, 229.25099, 215.46280, 1042.29382,   0.00000, 0.00000, 17.64000);
CreateDynamicObject(2921, 242.69185, 210.50085, 1043.68628,   0.00000, 0.00000, -88.44000);
CreateDynamicObject(2921, 250.56161, 201.67224, 1043.39392,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2921, 250.67522, 189.39590, 1043.73718,   0.00000, 0.00000, -26.40000);
CreateDynamicObject(2921, 241.42645, 201.23253, 1043.54785,   0.00000, 0.00000, 43.49999);
CreateDynamicObject(2921, 238.31929, 213.87067, 1043.65295,   0.00000, 0.00000, 20.76000);
CreateDynamicObject(19404, 241.87570, 220.86200, 1042.93091,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 224.48160, 206.78490, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 224.48160, 205.18629, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 224.48160, 203.59030, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 224.48160, 208.38470, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 222.94080, 209.10249, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19462, 222.13280, 207.08430, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19431, 220.55170, 209.10249, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 218.99260, 209.10249, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19462, 218.67120, 207.08430, 1041.11206,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19450, 218.27521, 204.37653, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1722, 221.72244, 208.97420, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 221.16240, 208.97420, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 220.60240, 208.97420, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 220.02240, 208.97420, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 219.46240, 208.97420, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 218.90100, 208.97420, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 218.90100, 207.55510, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 219.46240, 207.55510, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 220.02240, 207.55510, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 220.60240, 207.55510, 1041.19287,   0.00000, 0.00000, 179.94000);
CreateDynamicObject(1722, 221.16240, 207.55510, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 221.72240, 207.55510, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 218.90230, 206.35840, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 219.46240, 206.35840, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 220.02240, 206.35840, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 220.60240, 206.35840, 1041.19287,   0.00000, 0.00000, 179.94000);
CreateDynamicObject(1722, 221.16240, 206.35840, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1722, 221.72240, 206.35840, 1041.19287,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2611, 223.21667, 202.90529, 1043.30652,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3077, 220.35591, 203.02872, 1041.17126,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16377, 223.66162, 203.40067, 1042.04407,   0.00000, 0.00000, 26.40001);
CreateDynamicObject(2612, 224.33359, 203.74706, 1043.49524,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(16782, 218.46413, 204.27966, 1043.09900,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19462, 212.10344, 210.02698, 1041.11206,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19450, 218.11520, 204.37650, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19450, 219.79269, 211.86050, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 214.22720, 211.86050, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 223.60381, 202.71510, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 222.04340, 202.71510, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 220.46390, 202.71510, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 218.86330, 202.71510, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, 213.25540, 205.44040, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19462, 212.10339, 206.55600, 1041.11206,   0.00000, 90.00000, 90.12000);
CreateDynamicObject(19431, 212.66589, 211.86050, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 211.11700, 211.86050, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 209.57680, 211.86050, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 208.03571, 211.86050, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 207.29849, 211.01549, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 207.29849, 209.45540, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 207.29849, 207.87630, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 207.29849, 206.27589, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 207.29849, 204.79590, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 207.83670, 205.44040, 1042.93115,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1737, 209.75000, 208.37502, 1041.15759,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1737, 211.62309, 208.37500, 1041.15759,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1737, 213.47009, 208.37500, 1041.15759,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, 209.33620, 207.04317, 1041.18872,   0.00000, 0.00000, 158.22000);
CreateDynamicObject(1714, 215.83549, 208.33139, 1041.18872,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1714, 209.18732, 209.54054, 1041.18872,   0.00000, 0.00000, 58.00000);
CreateDynamicObject(1714, 214.33430, 206.92799, 1041.18872,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1714, 213.49150, 206.92799, 1041.18872,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1714, 212.69180, 206.92799, 1041.18872,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1714, 211.90930, 206.92799, 1041.18872,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1714, 211.12910, 206.92799, 1041.18872,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1714, 210.33051, 206.92799, 1041.18872,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1714, 214.33430, 209.79050, 1041.18872,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, 213.49150, 209.79050, 1041.18872,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, 212.69180, 209.79050, 1041.18872,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, 211.90930, 209.79050, 1041.18872,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, 211.12910, 209.79050, 1041.18872,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, 210.33051, 209.79050, 1041.18872,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, 208.35310, 208.34351, 1041.18872,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2611, 215.88351, 205.58141, 1043.30652,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2612, 217.95554, 206.95209, 1043.49524,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1808, 222.66428, 203.20987, 1041.13489,   0.00000, 0.00000, -176.75999);
CreateDynamicObject(1808, 217.73958, 205.84106, 1041.13489,   0.00000, 0.00000, -121.56000);
CreateDynamicObject(2606, 207.30429, 208.36786, 1044.36084,   45.00000, 0.00000, 90.00000);
CreateDynamicObject(2615, 213.64941, 205.57539, 1043.70251,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2253, 209.86630, 208.38811, 1042.20129,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2253, 214.50960, 208.39450, 1042.20129,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2612, 215.31212, 211.73454, 1043.49524,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16782, 207.47905, 208.43498, 1042.68005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16377, 208.10619, 206.25835, 1042.04407,   0.00000, 0.00000, -47.75997);
CreateDynamicObject(16377, 207.98891, 210.77242, 1042.04407,   0.00000, 0.00000, -119.99995);
CreateDynamicObject(19388, 218.11520, 210.76151, 1042.93115,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1502, 223.71114, 209.07730, 1041.19885,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1502, 218.14633, 209.99895, 1041.19885,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(948, 244.00211, 221.04201, 1041.16541,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2614, 209.55627, 211.68893, 1043.46252,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1536, 220.53755, 211.69777, 1041.19971,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1536, 223.42534, 211.69455, 1041.19971,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19463, 206.23564, 187.77112, 1044.61279,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 245.90242, 216.49751, 1044.58447,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 242.48370, 216.49750, 1044.58447,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 239.06700, 216.49750, 1044.58447,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 235.63260, 216.49750, 1044.58447,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 232.11980, 216.49750, 1044.58447,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 228.73441, 216.49750, 1044.58447,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 225.30969, 216.49750, 1044.58447,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 221.84570, 216.49750, 1044.58447,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 218.52119, 216.49750, 1044.58447,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 215.03400, 216.49750, 1044.58447,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 211.62010, 216.49750, 1044.58447,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 208.25639, 216.49750, 1044.58447,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 233.58521, 223.01711, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 223.97791, 223.01711, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 214.37309, 223.01711, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 204.73848, 223.03735, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 246.62633, 209.95177, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 237.02341, 209.95180, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 227.41701, 209.95180, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 217.84370, 209.95180, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 208.26770, 209.95180, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 237.02341, 206.49120, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 227.38049, 206.49120, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 217.83659, 206.49120, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 208.23621, 206.49120, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 217.83659, 203.03481, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 227.43190, 203.03481, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 237.07600, 203.03481, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 246.66020, 203.03481, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 246.66020, 206.49120, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 236.45836, 199.54230, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 236.45840, 196.04500, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 256.23849, 203.03481, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 246.66020, 199.53410, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 256.23849, 199.53410, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 245.82210, 196.07339, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 255.45903, 196.04677, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 245.82210, 192.56950, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 255.45900, 192.59351, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 245.82211, 189.13158, 1044.58447,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(1502, 241.88564, 211.19580, 1041.13879,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1502, 241.94638, 203.30887, 1041.15869,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 243.21246, 217.03354, 1041.70996,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2773, 243.10735, 219.59175, 1041.70996,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1502, 236.06177, 211.80748, 1041.18677,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1502, 225.68576, 215.86182, 1041.18677,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2614, 242.03067, 214.98531, 1043.52295,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2257, 244.57524, 210.66202, 1043.30005,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2260, 247.16389, 216.07341, 1042.70459,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1502, 248.18634, 199.81874, 1041.13879,   0.00000, 0.00000, 0.00000);
//gang house interior
//3dtextlabels - location - open
CreateDynamic3DTextLabel("{ff0000}Натиснете {ffffff}Y{ff0000} за да ви излезе менюто с избори\nАко искате да излезете от гаража, напишете {ffffff}/exit{ff0000}.", 0xFFFFFFFF,211.2297,37.1333,1068.4808, 12.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 12.0);
CreateDynamic3DTextLabel("{FF0000}Ако желаете някое превозно средство, отидете до него и натиснете {ffffff}Y", 0xFFFFFFFF, -1444.0856,1087.5129,1040.7969, 12.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 12.0);
CreateDynamic3DTextLabel("{FF0000}Скоро ще има нова стока и нови цени, бъдете в очакване.", 0xFFFFFFFF, -1428.0303,1090.5726,1040.7969, 12.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 12.0);
//
CreateDynamic3DTextLabel("{FF0000}VIP's Car Shop\n{FF4000}Ако желаете някое превозно средство, отидете до него и натиснете {FFFF00}Y", 0xFFFFFFFF, 1352.5394,-2027.7439,56.4365, 24.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 12.0);
CreateDynamic3DTextLabel("{FF0000}VIP's Car Shop\n{FF4000}Скоро ще има нова стока и нови цени, бъдете в очакване.", 0xFFFFFFFF, 1350.4303,-2011.8361,56.2054, 24.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 12.0);
CreateDynamic3DTextLabel("Grove's Car Shop\n{FF4000}Ако желаете някое превозно средство, отидете до него и натиснете {FFFF00}Y", COLOR_RGROVE, 2448.0974,-1639.3861,13.5824, 24.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 12.0);
CreateDynamic3DTextLabel("Grove's Car Shop\n{FF4000}Скоро ще има нова стока и нови цени, бъдете в очакване.", COLOR_RGROVE, 2435.3875,-1639.6246,13.5629, 24.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 12.0);
//
CreateDynamic3DTextLabel("Cripz's Car Shop\n{FF4000}Ако желаете някое превозно средство, отидете до него и натиснете {FFFF00}Y", COLOR_RCRIPZ, 339.6406,-1212.9713,76.3444, 24.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 12.0);
CreateDynamic3DTextLabel("Cripz's Car Shop\n{FF4000}Скоро ще има нова стока и нови цени, бъдете в очакване.", COLOR_RCRIPZ, 328.5220,-1221.5833,76.1229, 24.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 12.0);
//
// CreateDynamic3DTextLabel("Такса за вход $50\n{FFFF00}/enter", 0x3FBF03AA, 478.2492,-19.3125,1000.6797, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 5.0);
Create3DTextLabel("{ffff00}24/7 Store\n\n{ffffff}Можеш да си купиш различни предмети или джаджи оттук, използвай {ff0000}/enter{ffffff}, за да влезеш,\nслед което {ff0000}/buy{ffffff} за да си купиш нещо,\nа за да излезеш, използвай {ff0000}/exit", 0x08FF08FF, 2181.8801,1991.3766,10.8203, 20, 0);
//
Create3DTextLabel("{FFFF00}Rank: 2\n{FF4000}Натисни {FFFF00}Y{FF4000} за да вземеш щит\n{00ff00}Цена: $500", COLOR_RLSPD,258.5221,77.5805,1003.6406, 10, 1);
Create3DTextLabel("{FFFF00}Rank: 3\n{FF4000}Натисни {FFFF00}Y{FF4000} за да вземеш шипове за улици\n{00ff00}Цена: $5000", COLOR_RLSPD,253.2742,78.0450,1003.6406, 10, 1);
Create3DTextLabel("{FF0000}От тук можете да влезете/излезете от смяна чрез {FFFFFF}/duty", COLOR_RLSPD,251.6632,70.9856,1003.6406+0.203, 10, 1);
Create3DTextLabel("{FFFF00}Rank 2\n{FF0000}От тук можете да си смените дрехите за извън смяна чрез \n{FFFFFF}/policeskin", COLOR_RLSPD,254.8505,73.6967,1003.6406, 10, 1);
//
Create3DTextLabel("{A4A400}Достъпно само за Delta Force\n{FFFFFF}Използвайте {00c903}SCROLL на мишката{FFFFFF}, ако искате да отворите заграждението пеш\nАко сте в превозно средство, използвайте копчето {ff0000}2", 0x08FF08FF, 134.9989,1941.1821,19.3147+0.203, 20, 0);
Create3DTextLabel("{A4A400}Достъпно само за Delta Force\n{FFFFFF}Използвайте {00c903}SCROLL на мишката{FFFFFF}, ако искате да отворите заграждението пеш\nАко сте в превозно средство, използвайте копчето {ff0000}2", 0x08FF08FF, 285.3733,1821.1147,17.6406+0.203, 20, 0);
//{FFFFFF}Натиснете \n{ffff00}---[ F/ENTER ]---\n{00c903}за да се телепортирате до \n{FF0000}Taxi Job
Create3DTextLabel("{A4A400}Достъпно само за Delta Force\n{FFFFFF}Използвайте {00c903}SCROLL на мишката{FFFFFF}, ако искате да отворите заграждението пеш\nАко сте в превозно средство, използвайте копчето {ff0000}2", 0x08FF08FF, 837.2773,-2030.8582,12.8672+0.203, 20, 0);
Create3DTextLabel("{A4A400}Достъпно само за Delta Force\n{FFFFFF}Използвайте {00c903}SCROLL на мишката{FFFFFF}, ако искате да отворите заграждението пеш\nАко сте в превозно средство, използвайте копчето {ff0000}2", 0x08FF08FF, 837.3369,-2074.3181,12.8527+0.203, 20, 0);
Create3DTextLabel("{A4A400}Достъпно само за Delta Force\n{FFFFFF}Натисни {ffff00}F/ENTER{FFFFFF} за да се телепортираш до другата база в SF", 0x08FF08FF, 879.4335,-2257.6353,12.8527+0.203, 20, 0);
Create3DTextLabel("{A4A400}Достъпно само за Delta Force\n{FFFFFF}Натисни {ffff00}F/ENTER{FFFFFF} за да се телепортираш до другата база в LV", 0x08FF08FF, 882.4497,-2257.9644,12.8527+0.203, 20, 0);
Create3DTextLabel("{A4A400}Достъпно само за Delta Force\n{FFFFFF}Натисни {ffff00}F/ENTER{FFFFFF} за да се телепортираш до другата база в SF", 0x08FF08FF, 215.1642,1814.8489,17.6406+0.203, 20, 0);
Create3DTextLabel("{A4A400}Достъпно само за Delta Force\n{FFFFFF}Натисни {ffff00}F/ENTER{FFFFFF} за да се телепортираш до другата база в LS", 0x08FF08FF, 211.6035,1814.6014,17.6406+0.203, 20, 0);
Create3DTextLabel("{A4A400}Достъпно само за Delta Force\n{FFFFFF}Натисни {ffff00}F/ENTER{FFFFFF} за да се телепортираш до другата база в LV", 0x08FF08FF, -2450.7051,505.0456,30.0820+0.203, 20, 0);
Create3DTextLabel("{A4A400}Достъпно само за Delta Force\n{FFFFFF}Натисни {FF0000}F/ENTER{FFFFFF} за да се телепортираш до другата база в LS", 0x08FF08FF, -2453.3984,505.0079,30.0804+0.203, 20, 0);
Create3DTextLabel("{000099}Достъпно само за Vinewood Cripz\n{FFFFFF}Използвайте {00c903}SCROLL на мишката{FFFFFF}, ако искате да отворите заграждението пеш\nАко сте в превозно средство, използвайте копчето {ff0000}2", 0x08FF08FF, 319.9627,-1187.5275,76.7607+0.203, 20, 0);
Create3DTextLabel("{FF3737}Достъпно само за VIP Gang\n{FFFFFF}Използвайте {00c903}SCROLL на мишката{FFFFFF}, ако искате да отворите заграждението пеш\nАко сте в превозно средство, използвайте копчето {ff0000}2", 0x08FF08FF, 1355.8478,-2048.7498,56.6921+0.203, 20, 0);
//
Create3DTextLabel("Достъпно само за Grove Street Families\n{FFFFFF}Използвайте {00c903}SCROLL на мишката{FFFFFF}, ако искате да отворите заграждението пеш\nАко сте в превозно средство, използвайте копчето {ff0000}2", COLOR_RGROVE, 2448.5400,-1650.9452,13.4048+0.203, 20, 0);
//
Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n{FFFFFF}Използвайте {00c903}SCROLL на мишката{FFFFFF}, ако искате да отворите заграждението пеш\nАко сте в превозно средство, използвайте копчето {ff0000}2", 0x08FF08FF, -1630.4064,687.8070,7.1875+0.203, 20, 0);
Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n{FFFFFF}Използвайте {00c903}SCROLL на мишката{FFFFFF}, ако искате да отворите заграждението пеш\nАко сте в превозно средство, използвайте копчето {ff0000}2", 0x08FF08FF, 2336.8582,2443.3186,6.1081+0.203, 20, 0);
Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n{00FF00}Натисни {FF0000}SCROLL{00FF00} за да отвориш портата", 0x08FF08FF, 1583.2278,-1636.9800,13.3905, 20, 0);
Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n{FFFFFF}Използвайте {00c903}SCROLL на мишката{FFFFFF}, ако искате да отворите заграждението пеш\nАко сте в превозно средство, използвайте копчето {ff0000}2", 0x08FF08FF, 2237.7688,2453.5955,10.7848+0.203, 20, 0);
Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n{FFFFFF}Използвайте {00c903}SCROLL на мишката{FFFFFF}, ако искате да отворите заграждението пеш\nАко сте в превозно средство, използвайте копчето {ff0000}2", 0x08FF08FF, 1544.3254,-1627.6206,13.3828+0.203, 20, 0);
Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n{FFFFFF}Използвайте {00c903}SCROLL на мишката{FFFFFF}, ако искате да отворите заграждението пеш\nАко сте в превозно средство, използвайте копчето {ff0000}2", 0x08FF08FF, 1588.5579,-1636.7866,13.4154+0.203, 20, 0);
Create3DTextLabel("{FF0000}VIP's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,1230.4954,-2005.5513,60.8984+0.203, 10, 0);
Create3DTextLabel("{E52020}Blood Mafia's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,1083.3113,-1231.9309,15.8203+0.203, 10, 0);
//
Create3DTextLabel("{000099}Cripz's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,137.9121,1380.8513,1088.3672+0.203, 10, 1);
//
Create3DTextLabel("San Fierro Triads's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", COLOR_RTRIADS,1969.2216,953.4484,10.8203, 10, 0);
Create3DTextLabel("San Andreas Police Department\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", COLOR_RLSPD,254.7288,62.7026,1003.6406, 10, 1);
Create3DTextLabel("San Andreas Police Department{FFFF00}\nRank: 4\n{FF4000}Натисни {FFFF00}Y{FF4000} за да си вземеш електрошок\n{00ff00}Цена: $15000", COLOR_RLSPD,252.6609,62.8114,1003.6406, 10, 1);
Create3DTextLabel("Italian Mafia's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", COLOR_RITALIAN,-691.5956,935.6432,13.6328, 10, 0);
Create3DTextLabel("{A4A400}Delta Force's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,213.2412,1806.7898,17.6406, 10, 0);
Create3DTextLabel("{A4A400}Delta Force's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,880.5287,-2255.5732,12.8527, 10, 0);
Create3DTextLabel("{A4A400}Delta Force's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,-2446.6365,504.5200,30.0893, 10, 0);
Create3DTextLabel("{33AA33}Grove's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,2497.0251,-1703.2537,1014.7422, 10, 1);
Create3DTextLabel("{276BA9}Syndicate Texas's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,2497.0251,-1703.2537,1014.7422, 10, 2);
Create3DTextLabel("{d9d9d9}ES's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,2449.6282,-1696.3843,1013.5078, 10, 1);
Create3DTextLabel("{FF40FF}Bulgarian Mafia's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", 0xFFFFFFFF,1267.0983,-784.8137,1091.9063, 10, 1);
Create3DTextLabel("Mara Salvatrucha 13's Gun Machine\n{FF4000}Натисни {FFFF00}SCROLL{FF4000} за да си вземеш оръжие", COLOR_RMS13,-38.7398,1078.9197,20.2060, 10, 0);
Create3DTextLabel("{33AA33}Grove Street Families\n{FF4000}Натисни {FFFF00}ENTER{FF4000} за да влезеш",0xFFFFFFFF,2495.3496,-1690.8401,14.7656,10,0,0);
Create3DTextLabel("{33AA33}Grove Street Families\n{FF4000}Натисни {FFFF00}ENTER{FF4000} за да излезеш",0xFFFFFFFF,2496.049804,-1695.238159,1014.742187,10,1,0);
Create3DTextLabel("{FF0000}Напиши {FFFFFF}/plate{FF0000} за да смениш номера на твоята кола", 0xFFFFFFFF,1838.5139,-1856.2627,13.3828, 10, 0);
Create3DTextLabel("{FF0000}Напиши {FFFFFF}/plate{FF0000} за да смениш номера на твоята кола", 0xFFFFFFFF,-1786.8502,1205.3788,25.1250, 10, 0);
Create3DTextLabel("{FF0000}Напиши {FFFFFF}/plate{FF0000} за да смениш номера на твоята кола", 0xFFFFFFFF,2005.9323,2298.5537,10.8203, 10, 0);
Create3DTextLabel("{15C0DF}За да да станете VIP потребител, трябва да качвате нива и пари в играта\n{15dfdf}След като вече имате VIP, можете да разберете какво можете да правите с него чрез\n{FFFFFF}/viphelp",0xFFFFFFFF,1203.2736,-2011.3766,85.1735,20,0,0);
Create3DTextLabel("{15C0DF}За да да станете VIP потребител, трябва да качвате нива и пари в играта\n{15dfdf}След като вече имате VIP, можете да разберете какво можете да правите с него чрез\n{FFFFFF}/viphelp ",0xFFFFFFFF,1706.1938,1448.5729,10.8181,20,0,0);
Create3DTextLabel("{15C0DF}За да да станете VIP потребител, трябва да качвате нива и пари в играта\n{15dfdf}След като вече имате VIP, можете да разберете какво можете да правите с него чрез\n{FFFFFF}/viphelp ",0xFFFFFFFF,1240.1112,-2038.7124,61.8419,20,0,0);
Create3DTextLabel("{15C0DF}За да да станете VIP потребител, трябва да качвате нива и пари в играта\n{15dfdf}След като вече имате VIP, можете да разберете какво можете да правите с него чрез\n{FFFFFF}/viphelp ",0xFFFFFFFF,1125.4641,-2029.7620,75.8093,20,0,0);
Create3DTextLabel("{15C0DF}За да да станете VIP потребител, трябва да качвате нива и пари в играта\n{15dfdf}След като вече имате VIP, можете да разберете какво можете да правите с него чрез\n{FFFFFF}/viphelp ",0xFFFFFFFF,1510.7715,-1607.2186,15.3986,20,0,0);
Create3DTextLabel("{15C0DF}За да да станете VIP потребител, трябва да качвате нива и пари в играта\n{15dfdf}След като вече имате VIP, можете да разберете какво можете да правите с него чрез\n{FFFFFF}/viphelp ",0xFFFFFFFF,1176.9319,-2037.2865,69.1413,20,0,0);
Create3DTextLabel("{15C0DF}За да видите правилата на сървъра използвайте командата {FFFFFF}/rules ",0xFFFFFFFF,1125.4333,-2044.1055,75.8093,20,0,0);
Create3DTextLabel("{FF0000}Качи се като пътник с {FFFFFF}G{FF0000} за да отидеш до\n{FFFFFF}LS Police", 0xB55900FF,1706.1328,1436.7501,10.7364,10,0,0);
Create3DTextLabel("{FF0000}Качи се като пътник с {FFFFFF}G{FF0000} за да отидеш до\n{FFFFFF}VIP Gang", 0xB55900FF,1708.1820,1449.8413,10.8178,10,0,0);
Create3DTextLabel("{FF0000}Качи се като пътник с {FFFFFF}G{FF0000} за да отидеш до\n{FFFFFF}LS Police", 0xB55900FF,2272.1147,2410.6118,10.6719,10,0,0);
Create3DTextLabel("{FF0000}Качи се като пътник с {FFFFFF}G{FF0000} за да отидеш до\n{FFFFFF}LV Police", 0xB55900FF,1525.8333,-1670.6831,13.3828,10,0,0);
//Create3DTextLabel("{FF0000}За да да станете VIP потребител, трябва да качвате нива и пари в играта\nСлед като вече имате VIP, можете да разберете какво можете да правите с него чрез\n{FFFFFF}/viphelp ",0xFFFFFFFF,1538.7894,-1690.8087,13.5469,20,0,0);
Create3DTextLabel("{15C0DF}За да да станете VIP потребител, трябва да качвате нива и пари в играта\n{15dfdf}След като вече имате VIP, можете да разберете какво можете да правите с него чрез\n{FFFFFF}/viphelp ",0xFFFFFFFF,1480.1886,-1639.7046,14.1484,20,0,0);
Create3DTextLabel("{15C0DF}За да да станете VIP потребител, трябва да качвате нива и пари в играта\n{15dfdf}След като вече имате VIP, можете да разберете какво можете да правите с него чрез\n{FFFFFF}/viphelp ",0xFFFFFFFF,2115.0881,962.9519,15.7348,20,0,0);
Create3DTextLabel("{FFFFFF}Сайт на сървъра -{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: danielandreevofficial#1084",0xFFFFFFFF,1347.9866,-1742.0200,13.3906,20,0,0);
Create3DTextLabel("{FFFFFF}Сайт на сървъра -{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: danielandreevofficial#1084",0xFFFFFFFF,1174.8677,-2037.0220,77.3178,20,0,0);
Create3DTextLabel("{FFFFFF}Сайт на сървъра -{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: danielandreevofficial#1084",0xFFFFFFFF,1246.3448,-2052.0242,64.5867,20,0,0);
Create3DTextLabel("{FFFFFF}Сайт на сървъра -{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: danielandreevofficial#1084",0xFFFFFFFF,2097.7795,963.0507,15.7348,20,0,0);
//Create3DTextLabel("{FF0000}За да да станете VIP потребител, трябва да качвате нива и пари в играта\nСлед като вече имате VIP, можете да разберете какво можете да правите с него чрез\n{FFFFFF}/viphelp ",0xFFFFFFFF,1481.1449,-1739.6332,13.5469,20,0,0);
Create3DTextLabel("{FFFFFF}Сайт на сървъра -{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: danielandreevofficial#1084",0xFFFFFFFF,1262.4489,-2026.9534,59.3499,20,0,0);
Create3DTextLabel("{FFFFFF}Сайт на сървъра -{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: danielandreevofficial#1084",0xFFFFFFFF,1262.4489,-2026.9534,59.3499,20,0,0);
Create3DTextLabel("{FFFFFF}Сайт на сървъра -{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: danielandreevofficial#1084",0xFFFFFFFF,1538.1416,-1674.9762,13.5469,20,0,0);
Create3DTextLabel("{FFFFFF}Сайт на сървъра -{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: danielandreevofficial#1084",0xFFFFFFFF,2397.0432,1019.7305,10.8203,20,0,0);
Create3DTextLabel("{FFFFFF}Сайт на сървъра -{FFFF00} Скоро\n{00c903}Връзка с главния администратор\n{ff0000}Discord: {c8ee01}Scripter, Owner: danielandreevofficial#1084",0xFFFFFFFF,2005.7382,1545.0450,13.5198,20,0,0);
Create3DTextLabel("{15C0DF}Ако искате да се телепортирате можете да използвате някой от тези телепорти:\n{FFFFFF}/dm /dm2 /ls /lv ",0xFFFFFFFF,1240.0763,-2036.8870,59.9441,20,0,0);
Create3DTextLabel("{15C0DF}Тук можете да се забавлявате чрез правене на мисии", -1, 1015.7611,-1025.3098,32.1016, 20.0, 0, 0);
Create3DTextLabel("{15C0DF}Всяка банда си има свой Black List, внимавайте да не попаднете там, защото\n{15dfdf}играчите в нея ще могат да печелят пари за главата ви", -1,1275.4573,-2037.0475,59.0849, 35.0, 0, 0);
Create3DTextLabel("{15C0DF}Искате бърз и лесен обир ? Можете да ударите ATM с близо 1/2, обаче ще ви е нужна бомба", -1, 1279.0686,-2008.9364,58.8695, 35.0, 0, 0);
Create3DTextLabel("{15C0DF}Искате състезания и яки коли? Можете да влезете чрез /joinrace\n{15dfdf}а за да си направите колата грандиозна, отидете до специален гараж и й сложете каквото пожелаете", -1, 1244.1565,-2007.8112,59.9428, 35.0, 0, 0);
Create3DTextLabel("{15C0DF}Когато сте заподозрени и срещнете полицай, то ще ви се пусне музика, можете да я спрете чрез /pursuit", -1, 1243.3673,-2044.2424,59.9650, 35.0, 0, 0);
Create3DTextLabel("{15C0DF}Никога не сте сам, внимавайте да не ядосате някого, защото може да обяви залог за главата ви", -1, 1251.9065,-2034.2748,59.7117, 35.0, 0, 0);
Create3DTextLabel("{15C0DF}Престъпниците са лесни за полицията, но и още по-лесни за Delta Force, те ще ви гонят, ако имате 6 звезди", -1, 1267.8477,-2023.4661,59.2311, 35.0, 0, 0);
//gas stations texts - location - open
benzinki[0]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,1004.0327,-937.5370,50.3281,65,0,0);
benzinki[1]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,1942.3719,-1772.8666,21.6406,65,0,0);
benzinki[2]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,-1606.7223,-2713.3562,56.5335,65,0,0);
benzinki[3]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,-2026.7813,156.5509,37.0391,65,0,0);
benzinki[4]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,-2243.8149,-2559.8899,39.9219,65,0,0);
benzinki[5]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,-1676.2601,413.5443,12.1797,65,0,0);
benzinki[6]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,2201.8296,2475.1350,18.8203,65,0,0);
benzinki[7]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,615.3391,1690.0454,14.9922,65,0,0);
benzinki[8]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,-1328.2731,2677.5278,58.0625,65,0,0);
benzinki[9]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,70.3842,1219.0177,26.8116,65,0,0);
benzinki[10]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,2113.3835,919.5655,18.8203,65,0,0);
benzinki[11]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,2641.0115,1106.6252,18.8203,65,0,0);
benzinki[12]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,2146.7964,2747.8115,18.8203,65,0,0);
benzinki[13]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,1595.7935,2199.5996,18.8203,65,0,0);
benzinki[14]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,-1471.1836,1863.7598,40.6328,65,0,0);
benzinki[15]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,655.7673,-565.0798,23.3359,65,0,0);
benzinki[16]=Create3DTextLabel("{00FF00}[ 500/500 литра ]",0xFFFFFFFF,1381.8230,459.1453,28.3452,65,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,1004.0327,-937.5370,42.3281,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,1942.3719,-1772.8666,13.6406,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,-1606.7223,-2713.3562,48.5335,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,-2026.7813,156.5509,29.0391,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,-2243.8149,-2559.8899,31.9219,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,-1676.2601,413.5443,7.1797,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,2201.8296,2475.1350,10.8203,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,615.3391,1690.0454,6.9922,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,-1328.2731,2677.5278,50.0625,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,70.3842,1219.0177,18.8116,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,2113.3835,919.5655,10.8203,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,2641.0115,1106.6252,10.8203,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,2146.7964,2747.8115,10.8203,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,1595.7935,2199.5996,10.8203,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,-1471.1836,1863.7598,32.6328,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,655.7673,-565.0798,16.3359,40,0,0);
Create3DTextLabel("{4dc3ff}[ Бензиностанция ]\n\n{FF0000}{9999ff}/refuel{ebebeb} - за да презаредите превозното си средство\n{9999ff}/refillfc{ebebeb} - за да заредите тубата си",0xFFFFFFFF,1381.8230,459.1453,20.3452,40,0,0);
//gas stations texts - location - close
Create3DTextLabel("{FF0000}Килия 2\n{FFFF00}Rank 4\n{FFFFFF}ENTER", 0x08FF08FF, 266.2491,84.4284,1001.7091, 6, 1);
Create3DTextLabel("{FF0000}Килия 1\n{FFFF00}Rank 4\n{FFFFFF}ENTER", 0x08FF08FF, 266.2492,88.6102,1001.7091, 6, 1);
Create3DTextLabel("{FF0000}Врата\n{FFFFFF}ENTER", 0x08FF08FF, 259.6782,90.6767,1002.3298, 6, 1);
//3dtextlabels - location - close
//police cameras - loction - open
CreateDynamicObject(18880, 2037.37463, 1225.68372, 9.64497,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 1793.00061, 745.21344, 12.27700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 1841.18750, -1374.76685, 12.31981,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 1464.23010, -1597.90088, 12.35268,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 674.75470, -1580.89050, 13.03473,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 320.00360, -1384.27588, 13.18036,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 1513.29456, 1094.11792, 9.59839,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 2157.72510, 1948.96619, 9.79085,   0.00000, 0.00000, 0.00000);
//police cameras - location - open
//park - location - open
CreateDynamicObject(19377, 1508.88171, -1722.49072, 12.32580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1498.39063, -1722.49072, 12.32580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1477.42065, -1722.49072, 12.32580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1466.91663, -1722.49072, 12.32580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1456.43347, -1722.49072, 12.32580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1445.95544, -1722.49072, 12.32580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1439.70276, -1712.85889, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1439.70276, -1703.23535, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1439.70276, -1693.60095, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1439.70276, -1683.97412, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1439.70276, -1674.35059, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1439.70276, -1664.73352, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1439.70276, -1655.10181, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1439.70276, -1645.48047, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1439.70276, -1635.84766, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1439.70276, -1626.22754, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1439.70276, -1616.60291, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1439.70276, -1606.99622, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1519.36206, -1712.85889, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1519.36206, -1693.60095, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1519.36206, -1683.97412, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1519.36206, -1664.73352, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1519.36206, -1674.35059, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1519.36206, -1655.10181, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1519.36206, -1645.48047, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1519.36206, -1635.84766, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1519.36206, -1626.22754, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1519.36206, -1616.60291, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1519.36206, -1606.99622, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1450.20459, -1601.98511, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1460.69678, -1601.98511, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1471.19165, -1601.98511, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1481.69031, -1601.98511, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1492.15833, -1601.98511, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1502.65112, -1601.98511, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1513.13928, -1601.98511, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1442.70789, -1705.62183, 9.15570,   0.00000, 35.00000, 0.00000);
CreateDynamicObject(19435, 1445.25586, -1714.62781, 12.79647,   125.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, 1445.25354, -1712.17981, 12.79650,   125.00000, 90.00000, 90.00000);
CreateDynamicObject(19377, 1442.70789, -1695.99976, 9.15570,   0.00000, 35.00000, 0.00000);
CreateDynamicObject(19377, 1442.70789, -1686.37952, 9.15570,   0.00000, 35.00000, 0.00000);
CreateDynamicObject(19377, 1442.70789, -1676.77954, 9.15570,   0.00000, 35.00000, 0.00000);
CreateDynamicObject(19377, 1442.70789, -1663.64417, 9.15570,   0.00000, 35.00000, 0.00000);
CreateDynamicObject(19435, 1445.49414, -1670.23193, 12.48390,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19377, 1442.70789, -1654.02490, 9.15570,   0.00000, 35.00000, 0.00000);
CreateDynamicObject(19377, 1442.70789, -1644.40491, 9.15570,   0.00000, 35.00000, 0.00000);
CreateDynamicObject(19377, 1442.70789, -1634.79102, 9.15570,   0.00000, 35.00000, 0.00000);
CreateDynamicObject(19377, 1442.70789, -1625.16675, 9.15570,   0.00000, 35.00000, 0.00000);
CreateDynamicObject(19377, 1450.20459, -1611.61096, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1460.69678, -1611.61096, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1471.19165, -1611.61096, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1481.67542, -1611.59753, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1492.15833, -1611.61096, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1502.65112, -1611.61096, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1513.13928, -1611.61096, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1442.70459, -1622.78247, 9.15570,   0.00000, 35.00000, 0.00000);
CreateDynamicObject(19377, 1451.32556, -1614.31140, 9.15570,   0.00000, 35.00000, 270.00000);
CreateDynamicObject(19377, 1450.18103, -1621.22144, 12.32580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1445.66162, -1618.02832, 11.75660,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19435, 1446.53674, -1617.24072, 11.75660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, 1445.63049, -1716.21338, 11.75660,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19377, 1450.18921, -1712.87146, 12.32580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1446.49194, -1716.91992, 11.75660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, 1451.26477, -1719.87866, 9.15570,   0.00000, 35.00000, 90.00000);
CreateDynamicObject(19377, 1460.89832, -1719.87866, 9.15570,   0.00000, 35.00000, 90.00000);
CreateDynamicObject(19377, 1470.52515, -1719.87866, 9.15570,   0.00000, 35.00000, 90.00000);
CreateDynamicObject(19377, 1486.55957, -1719.88550, 9.15570,   0.00000, 35.00000, 90.00000);
CreateDynamicObject(19435, 1480.02869, -1716.99036, 12.50390,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1493.23572, -1719.87866, 9.15570,   0.00000, 35.00000, 90.00000);
CreateDynamicObject(19377, 1502.85828, -1719.87866, 9.15570,   0.00000, 35.00000, 90.00000);
CreateDynamicObject(19377, 1508.86646, -1712.85840, 12.32580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1512.43005, -1716.89014, 11.75660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, 1516.28821, -1711.40063, 9.15570,   0.00000, 35.00000, 180.00000);
CreateDynamicObject(19377, 1507.55798, -1719.87415, 9.15570,   0.00000, 35.00000, 90.00000);
CreateDynamicObject(19435, 1513.34705, -1716.17163, 11.75660,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19377, 1516.30261, -1701.77917, 9.15570,   0.00000, 35.00000, 180.00000);
CreateDynamicObject(19435, 1513.51538, -1670.20288, 12.48390,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19377, 1516.30261, -1692.14404, 9.15570,   0.00000, 35.00000, 180.00000);
CreateDynamicObject(19377, 1516.30261, -1682.52527, 9.15570,   0.00000, 35.00000, 180.00000);
CreateDynamicObject(19377, 1516.29675, -1676.74878, 9.15570,   0.00000, 35.00000, 180.00000);
CreateDynamicObject(19377, 1516.27844, -1663.63354, 9.15570,   0.00000, 35.00000, 180.00000);
CreateDynamicObject(19377, 1516.29785, -1654.03357, 9.15570,   0.00000, 35.00000, 180.00000);
CreateDynamicObject(19377, 1516.29785, -1644.41357, 9.15570,   0.00000, 35.00000, 180.00000);
CreateDynamicObject(19377, 1516.29785, -1634.79565, 9.15570,   0.00000, 35.00000, 180.00000);
CreateDynamicObject(19377, 1516.29785, -1625.18298, 9.15570,   0.00000, 35.00000, 180.00000);
CreateDynamicObject(19377, 1473.47461, -1719.88330, 9.15570,   0.00000, 35.00000, 90.00000);
CreateDynamicObject(19381, 1473.04053, -1712.11926, 13.41755,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1462.55237, -1712.11926, 13.41760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1452.08582, -1712.11926, 13.41760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1451.66394, -1712.11926, 13.43760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1450.93079, -1711.47070, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1486.98718, -1712.11926, 13.41760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1497.47144, -1712.11926, 13.41760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1507.26343, -1712.11926, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1508.09546, -1711.30200, 13.43760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1508.09875, -1701.68457, 13.43760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1508.09875, -1692.05420, 13.43760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1508.09875, -1682.42297, 13.43760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1508.12183, -1676.75818, 13.41760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1508.10095, -1663.64636, 13.41760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1508.10364, -1654.02112, 13.41760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1508.09937, -1644.38782, 13.41760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1508.10706, -1634.76282, 13.41760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1450.92920, -1701.84314, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1450.92920, -1692.22351, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1450.92297, -1682.69031, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1450.91870, -1676.76917, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1450.89294, -1663.65015, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1450.89294, -1654.02820, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1450.89294, -1644.40588, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1450.89294, -1634.78589, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1480.02869, -1716.75037, 12.68390,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1480.02869, -1716.47046, 12.86390,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1480.02869, -1716.21045, 13.04390,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1480.02869, -1715.93042, 13.22390,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1480.02869, -1715.65039, 13.38390,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1481.78479, -1713.00293, 8.24413,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, 1478.24023, -1713.00293, 8.24410,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, 1480.02869, -1715.33044, 13.44390,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19358, 1480.00769, -1717.70520, 10.84030,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1480.00769, -1717.46521, 11.02030,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1480.00769, -1717.18518, 11.20030,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1480.00769, -1716.94519, 11.38030,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1480.00769, -1716.64514, 11.56030,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1480.00769, -1716.36511, 11.72030,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, 1480.03186, -1709.78882, 13.43666,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1473.46960, -1705.64648, 13.43670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 1463.86182, -1705.64648, 13.43670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 1486.58496, -1705.64648, 13.43670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 1496.20728, -1705.64648, 13.43670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 1480.03186, -1700.16296, 13.43670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1479.96765, -1680.88245, 13.43670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1480.03186, -1690.52783, 13.43670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1479.97461, -1671.26294, 13.43670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(8397, 1479.88538, -1661.09277, 23.88650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, 1479.96765, -1661.62939, 13.43670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1449.48999, -1668.40332, 8.22830,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19377, 1449.48999, -1672.03345, 8.22830,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19435, 1445.75415, -1670.23193, 12.66390,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, 1446.03418, -1670.23193, 12.84390,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, 1446.31421, -1670.23193, 13.02390,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, 1446.55420, -1670.23193, 13.20390,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, 1446.81421, -1670.23193, 13.38390,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19358, 1444.77515, -1670.21667, 10.81570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1445.03516, -1670.21667, 10.99570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1445.31519, -1670.21667, 11.17570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1445.59521, -1670.21667, 11.35570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1445.81519, -1670.21667, 11.53570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1446.09521, -1670.21667, 11.71570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, 1509.53394, -1668.39819, 8.25052,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19377, 1509.53394, -1672.00989, 8.25050,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19435, 1513.27539, -1670.20288, 12.66390,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, 1513.03882, -1670.21399, 12.84390,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, 1512.79883, -1670.21399, 13.02390,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, 1512.53882, -1670.21399, 13.20390,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, 1512.25879, -1670.21399, 13.38390,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19358, 1514.24109, -1670.20422, 10.81570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1514.00110, -1670.20422, 10.99570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1513.76111, -1670.20422, 11.17570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1513.52112, -1670.20422, 11.35570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1513.26111, -1670.20422, 11.53570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1512.98108, -1670.20422, 11.69570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, 1508.18774, -1670.20422, 13.43670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 1498.55103, -1670.20422, 13.43670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 1488.91553, -1670.20422, 13.45670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 1450.98840, -1670.21338, 13.43670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 1460.60718, -1670.21338, 13.43670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 1470.23792, -1670.21338, 13.44670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 1457.77417, -1702.60022, 13.45670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1457.77417, -1692.98364, 13.45670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1457.77417, -1683.37952, 13.45670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1457.77417, -1673.77722, 13.45670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1501.13916, -1702.61389, 13.45670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1501.13916, -1692.99854, 13.45670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1501.13916, -1683.36108, 13.45670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1501.13916, -1673.73962, 13.45670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1463.52881, -1700.01123, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1474.02112, -1700.01123, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1486.73230, -1700.01123, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1497.23328, -1700.00952, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1463.52881, -1690.42725, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1474.00110, -1690.42749, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1486.73230, -1690.42725, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1497.21338, -1690.42725, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1463.52881, -1680.83569, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1463.52881, -1671.21753, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1474.00110, -1680.83569, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1486.73230, -1680.83569, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1497.21338, -1680.83569, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1474.00317, -1671.23743, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1486.71228, -1671.21655, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1497.21338, -1671.21753, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1453.07312, -1671.20288, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1461.38684, -1661.58337, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1479.85034, -1656.88635, 13.45670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1461.38684, -1651.96069, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1461.38684, -1642.37512, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1461.38684, -1632.77686, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1471.85876, -1661.58337, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1471.85876, -1651.96118, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1471.85876, -1642.34363, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1471.85876, -1632.74780, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1482.34070, -1651.96118, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1482.34070, -1642.34363, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1482.34070, -1632.74780, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1492.83008, -1661.65405, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1482.34070, -1661.58337, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1492.82849, -1651.96118, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1492.82849, -1642.34363, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1492.82849, -1632.74780, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1503.30896, -1661.58337, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1502.04663, -1671.19641, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1503.30896, -1651.96118, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1503.30896, -1642.34363, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1503.28906, -1632.74780, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1485.93738, -1610.95264, 9.15570,   0.00000, 35.00000, 315.00000);
CreateDynamicObject(19377, 1473.85901, -1610.95569, 9.15570,   0.00000, 35.00000, -495.00000);
CreateDynamicObject(19377, 1479.88306, -1613.50000, 9.15570,   0.00000, 35.00000, 270.00000);
CreateDynamicObject(19377, 1496.16296, -1606.71228, 9.15570,   0.00000, 35.00000, 270.00000);
CreateDynamicObject(19377, 1463.59680, -1606.73035, 9.15570,   0.00000, 35.00000, 270.00000);
CreateDynamicObject(19377, 1507.75635, -1614.31140, 9.15570,   0.00000, 35.00000, 270.00000);
CreateDynamicObject(19377, 1508.85754, -1621.00366, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1512.56323, -1617.23132, 11.75660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, 1516.30750, -1622.70276, 9.15570,   0.00000, 35.00000, 180.00000);
CreateDynamicObject(19435, 1513.34790, -1617.94604, 11.75660,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19377, 1503.09802, -1613.70752, 8.23787,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, 1456.03601, -1613.68384, 8.23787,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, 1498.24280, -1606.70361, 9.15570,   0.00000, 35.00000, 270.00000);
CreateDynamicObject(19377, 1460.92017, -1606.73328, 9.15570,   0.00000, 35.00000, 270.00000);
CreateDynamicObject(19435, 1491.34705, -1609.66785, 11.73660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, 1491.42505, -1609.67993, 11.73660,   0.00000, 0.00000, 45.00000);
CreateDynamicObject(19435, 1468.38025, -1609.72314, 11.73660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, 1468.38501, -1609.70459, 11.73660,   0.00000, 0.00000, -45.00000);
CreateDynamicObject(19381, 1508.10706, -1625.15247, 13.41760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1508.11743, -1622.67212, 13.43760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1507.37683, -1622.07764, 13.41760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1503.28906, -1623.14148, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1492.82849, -1623.14148, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1482.34070, -1623.14148, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1471.85876, -1623.14148, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1461.38684, -1623.14148, 13.38760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1450.89294, -1625.15161, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1450.89294, -1622.77393, 13.42760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1451.72864, -1622.06812, 13.40760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1461.19556, -1614.48413, 13.41760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1463.05457, -1614.47620, 13.43760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1468.07507, -1616.74243, 13.41760,   0.00000, 90.00000, 45.00000);
CreateDynamicObject(19381, 1478.19897, -1621.26697, 13.43760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1488.70142, -1621.26697, 13.43760,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1491.12866, -1616.71912, 13.41760,   0.00000, 90.00000, 45.00000);
CreateDynamicObject(19381, 1496.65503, -1614.47888, 13.43787,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, 1497.93884, -1614.46509, 13.41790,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1501.13916, -1664.11804, 13.45670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1499.30444, -1655.67566, 13.43670,   0.00000, 90.00000, 25.00000);
CreateDynamicObject(19454, 1497.45557, -1647.32593, 13.45670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1457.77551, -1664.13794, 13.45670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1459.58887, -1655.68628, 13.43670,   0.00000, 90.00000, -25.00000);
CreateDynamicObject(19454, 1461.44836, -1647.24805, 13.45670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1494.48315, -1640.28735, 13.43670,   0.00000, 90.00000, 45.00000);
CreateDynamicObject(19454, 1464.32813, -1640.21899, 13.43670,   0.00000, 90.00000, -45.00000);
CreateDynamicObject(19454, 1471.30029, -1637.33179, 13.44670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 1480.92505, -1637.33179, 13.44670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, 1487.49194, -1637.33179, 13.42670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(870, 1486.74707, -1673.56812, 13.66356,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1486.75085, -1675.81470, 13.66356,   0.00000, 0.00000, -11.04000);
CreateDynamicObject(870, 1486.70288, -1678.14941, 13.66356,   0.00000, 0.00000, 49.07999);
CreateDynamicObject(870, 1486.72949, -1680.13525, 13.66356,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1473.41223, -1673.73572, 13.66356,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1473.34985, -1676.05920, 13.66356,   0.00000, 0.00000, -11.04000);
CreateDynamicObject(870, 1473.21790, -1678.40027, 13.66356,   0.00000, 0.00000, 49.07999);
CreateDynamicObject(870, 1473.21387, -1679.95349, 13.66356,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(803, 1485.06433, -1647.30273, 14.33030,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1473.02258, -1682.12622, 13.66356,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1473.14038, -1684.15051, 13.66356,   0.00000, 0.00000, -11.04000);
CreateDynamicObject(870, 1486.65662, -1682.35181, 13.66356,   0.00000, 0.00000, 49.07999);
CreateDynamicObject(870, 1486.77979, -1684.31775, 13.66356,   0.00000, 0.00000, -11.04000);
CreateDynamicObject(1359, 1475.84900, -1679.46387, 14.16905,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1359, 1484.00500, -1679.26343, 14.16910,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1478.02808, -1711.80286, 13.44473,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1469.28589, -1703.49097, 13.44470,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1223, 1490.23804, -1703.66504, 13.44470,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1223, 1508.06519, -1668.09155, 13.44470,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1223, 1450.97778, -1667.96216, 13.44470,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1223, 1462.53735, -1639.07422, 13.44470,   0.00000, 0.00000, -45.00000);
CreateDynamicObject(1223, 1495.81714, -1638.89160, 13.44470,   0.00000, 0.00000, 235.00000);
CreateDynamicObject(1280, 1462.81079, -1648.31836, 13.87610,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1280, 1496.19299, -1647.73718, 13.87610,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1359, 1462.67126, -1646.28284, 14.16905,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1359, 1496.04932, -1645.64380, 14.16905,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1226, 1445.17603, -1717.72961, 16.42190,   0.00000, 0.00000, 45.00000);
CreateDynamicObject(1226, 1514.09729, -1717.49438, 16.42190,   0.00000, 0.00000, 135.00000);
CreateDynamicObject(8674, 1472.41833, -1716.90796, 14.77496,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 1487.42102, -1716.90796, 14.77500,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 1462.11401, -1716.90796, 14.77500,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 1451.82690, -1716.90796, 14.77500,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 1497.76807, -1716.90796, 14.77500,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 1507.13928, -1716.89343, 14.77500,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8674, 1513.35120, -1710.94629, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1513.35120, -1700.61987, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1513.35120, -1690.27539, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1513.28015, -1679.95764, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1513.35120, -1660.69629, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1513.35120, -1650.39819, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1513.35120, -1640.07642, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1513.35120, -1629.77539, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1445.69165, -1711.00439, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1445.69165, -1700.70264, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1445.69165, -1690.42029, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1445.69165, -1680.11804, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1445.69165, -1661.09680, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1445.69165, -1650.79626, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1445.69165, -1640.49658, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8674, 1445.69165, -1630.13672, 14.77500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19375, 1479.83838, -1616.51538, 12.58726,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19375, 1487.93469, -1613.21936, 12.58730,   0.00000, 0.00000, -45.00000);
CreateDynamicObject(19375, 1471.72485, -1613.12793, 12.58730,   0.00000, 0.00000, 45.00000);
CreateDynamicObject(16101, 1484.60083, -1616.44043, 17.84425,   0.00000, 180.00000, 0.00000);
CreateDynamicObject(16101, 1475.13391, -1616.42139, 17.84425,   0.00000, 180.00000, 0.00000);
CreateDynamicObject(16101, 1491.32849, -1609.77209, 17.84425,   0.00000, 180.00000, 0.00000);
CreateDynamicObject(16101, 1468.38757, -1609.73926, 17.84425,   0.00000, 180.00000, 0.00000);
CreateDynamicObject(717, 1454.41028, -1724.50159, 12.64662,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, 1488.63708, -1724.45447, 12.64660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, 1510.41858, -1726.09192, 12.64660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, 1444.22437, -1724.39514, 12.64660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(647, 1507.37256, -1683.78992, 14.62020,   0.00000, 0.00000, 12.36000);
CreateDynamicObject(808, 1506.47192, -1695.36072, 14.86119,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(647, 1467.14807, -1711.56897, 14.62020,   0.00000, 0.00000, 12.36000);
CreateDynamicObject(647, 1450.51086, -1691.39258, 14.65979,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(808, 1450.58972, -1679.66064, 14.94301,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(808, 1464.70337, -1679.59241, 14.94301,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(803, 1491.99072, -1628.83252, 14.33030,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(647, 1475.34644, -1626.60693, 14.62020,   0.00000, 0.00000, 12.36000);
CreateDynamicObject(808, 1483.36938, -1627.71924, 14.80097,   0.00000, 0.00000, -132.30000);
CreateDynamicObject(808, 1463.88586, -1619.72961, 14.80097,   0.00000, 0.00000, -259.56003);
CreateDynamicObject(1445, 1523.05615, -1718.02747, 12.99100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1342, 1517.18445, -1706.82813, 13.41548,   0.00000, 0.00000, -22.56001);
CreateDynamicObject(1340, 1516.44543, -1710.76160, 13.40245,   0.00000, 0.00000, -1.62000);
CreateDynamicObject(1341, 1516.69788, -1713.60925, 13.20514,   0.00000, 0.00000, 7.38000);
CreateDynamicObject(1281, 1520.77197, -1710.58533, 13.16697,   0.00000, 0.00000, 70.74000);
CreateDynamicObject(19377, 1519.38037, -1703.23792, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(717, 1522.46021, -1687.07397, 12.48909,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, 1522.28198, -1644.33130, 12.48909,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1257, 1522.84570, -1680.78235, 13.52780,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1285, 1514.67847, -1666.44910, 12.94730,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1286, 1514.67847, -1665.97815, 12.94730,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1289, 1514.67847, -1665.48560, 12.94730,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1258, 1522.84900, -1663.76233, 12.92386,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1257, 1499.39880, -1724.91907, 13.52780,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1288, 1455.15051, -1718.09497, 12.86884,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1286, 1455.61316, -1718.09497, 12.86880,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1285, 1456.06897, -1718.09497, 12.86880,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3861, 1442.50464, -1628.31079, 13.40645,   0.00000, 0.00000, -75.29993);
CreateDynamicObject(3862, 1442.73206, -1633.44592, 13.40650,   0.00000, 0.00000, -91.56003);
CreateDynamicObject(3863, 1442.04663, -1638.94373, 13.40650,   0.00000, 0.00000, -97.98000);
CreateDynamicObject(3862, 1442.20044, -1643.76355, 13.40650,   0.00000, 0.00000, -88.80002);
CreateDynamicObject(1258, 1436.09424, -1653.96704, 12.93698,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1493.12427, -1610.86584, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1495.26624, -1610.91602, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1497.59375, -1611.07996, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1499.54102, -1610.90955, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1501.64050, -1610.77234, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1501.58765, -1612.73511, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1501.52930, -1614.82288, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1501.42297, -1616.79053, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1502.15027, -1618.57703, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1504.13062, -1618.76343, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1506.29321, -1618.77344, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1508.63452, -1618.75525, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1510.83606, -1618.76318, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1466.58447, -1610.88232, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1464.48303, -1610.77966, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1462.72314, -1610.79358, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1458.40186, -1610.76868, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1460.54224, -1610.75098, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1457.34033, -1610.82092, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1457.48572, -1612.62537, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1457.34705, -1614.54260, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1457.57727, -1616.58240, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1454.89368, -1618.45728, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1457.18054, -1618.33704, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1452.81348, -1618.51599, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1450.78857, -1618.47070, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(870, 1448.64343, -1618.43225, 13.51375,   0.00000, 0.00000, -67.07995);
CreateDynamicObject(3462, 1479.67908, -1609.86084, 13.84636,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3515, 1497.88525, -1614.69727, 12.67966,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1461.12244, -1614.91492, 12.67966,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1280, 1497.23047, -1608.41650, 12.81052,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1280, 1462.13184, -1608.54211, 12.81052,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1359, 1494.89636, -1608.17090, 13.13175,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1359, 1464.19116, -1608.33765, 13.13175,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, 1512.45764, -1608.19226, 12.48909,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, 1447.13293, -1608.19226, 12.48910,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, 1495.62939, -1598.58789, 12.48910,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(717, 1460.77112, -1598.58789, 12.48910,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1280, 1479.69531, -1615.19067, 12.81052,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1361, 1489.13794, -1605.29932, 13.19079,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1485.80688, -1601.79956, 13.19079,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1479.69421, -1601.79956, 13.19080,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1474.36401, -1601.79956, 13.19080,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1470.50537, -1605.29932, 13.19080,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(647, 1496.22546, -1711.98975, 14.62020,   0.00000, 0.00000, 12.36000);
CreateDynamicObject(19450, 1507.55786, -1715.96814, 12.44190,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(19450, 1497.92810, -1715.96814, 12.44190,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(19450, 1478.72632, -1715.96814, 12.44190,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(19450, 1488.34668, -1715.96777, 12.44190,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(19450, 1469.09741, -1715.96814, 12.44190,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(19450, 1459.48438, -1715.96814, 12.44190,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(19450, 1451.39819, -1715.96814, 12.44190,   0.00000, 270.00000, 90.00000);
CreateDynamicObject(19450, 1446.58630, -1711.36450, 12.44190,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19450, 1446.58630, -1701.75024, 12.44190,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19450, 1446.58630, -1692.12854, 12.44190,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19450, 1446.58630, -1682.50598, 12.44190,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19450, 1446.58630, -1672.92273, 12.44190,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19450, 1446.58630, -1663.28760, 12.44190,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19450, 1446.58630, -1653.67578, 12.44190,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19450, 1446.58630, -1644.07239, 12.44190,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19450, 1446.58630, -1624.91846, 12.44190,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19450, 1446.58972, -1634.50305, 12.44190,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19450, 1446.60632, -1622.93115, 12.44190,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19450, 1512.39441, -1711.31299, 12.44190,   0.00000, 270.00000, 180.00000);
CreateDynamicObject(19435, 1511.75098, -1716.15601, 11.75660,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, 1512.39441, -1701.69250, 12.44190,   0.00000, 270.00000, 180.00000);
CreateDynamicObject(19450, 1512.39441, -1692.13269, 12.44190,   0.00000, 270.00000, 180.00000);
CreateDynamicObject(19450, 1512.39441, -1682.53162, 12.44190,   0.00000, 270.00000, 180.00000);
CreateDynamicObject(19450, 1512.39441, -1672.94080, 12.44190,   0.00000, 270.00000, 180.00000);
CreateDynamicObject(19450, 1512.39441, -1663.69824, 12.44190,   0.00000, 270.00000, 180.00000);
CreateDynamicObject(19450, 1512.39441, -1654.10229, 12.44190,   0.00000, 270.00000, 180.00000);
CreateDynamicObject(19450, 1512.39441, -1644.46838, 12.44190,   0.00000, 270.00000, 180.00000);
CreateDynamicObject(19450, 1512.39441, -1634.88770, 12.44190,   0.00000, 270.00000, 180.00000);
CreateDynamicObject(19450, 1512.39441, -1625.28271, 12.44190,   0.00000, 270.00000, 180.00000);
CreateDynamicObject(19450, 1512.41907, -1622.90210, 12.44190,   0.00000, 270.00000, 180.00000);
CreateDynamicObject(19450, 1507.72498, -1618.20215, 12.44190,   0.00000, 270.00000, 270.00000);
CreateDynamicObject(19450, 1451.38257, -1618.21594, 12.44190,   0.00000, 270.00000, 270.00000);
CreateDynamicObject(19450, 1457.67932, -1613.97278, 12.44190,   0.00000, 270.00000, 0.00000);
CreateDynamicObject(19450, 1501.45007, -1613.87769, 12.44190,   0.00000, 270.00000, 180.00000);
CreateDynamicObject(19450, 1460.87463, -1610.67480, 12.44190,   0.00000, 270.00000, 270.00000);
CreateDynamicObject(19450, 1463.51831, -1610.67883, 12.44190,   0.00000, 270.00000, 270.00000);
CreateDynamicObject(19450, 1498.20447, -1610.59827, 12.44190,   0.00000, 270.00000, 270.00000);
CreateDynamicObject(19450, 1496.20923, -1610.60999, 12.44190,   0.00000, 270.00000, 270.00000);
CreateDynamicObject(19445, 1477.25854, -1717.68872, 10.68335,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, 1473.62073, -1717.68872, 10.68330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, 1470.05212, -1717.68872, 10.68330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, 1466.16370, -1717.68872, 10.68330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, 1462.28748, -1717.68872, 10.68330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, 1458.17480, -1717.68872, 10.68330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, 1472.54517, -1717.77502, 10.70330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, 1462.92468, -1717.78345, 10.70330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, 1444.74011, -1710.22729, 10.68330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, 1444.74011, -1700.59949, 10.68330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, 1444.74011, -1690.97375, 10.68330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, 1444.74670, -1681.88721, 10.68330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19445, 1443.91309, -1714.94946, 10.66330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, 1443.91309, -1711.03003, 10.66330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, 1443.91309, -1707.08728, 10.66330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, 1443.91309, -1702.96423, 10.66330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, 1443.76367, -1698.76575, 10.66330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, 1443.91309, -1694.52478, 10.66330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, 1443.91309, -1690.24316, 10.66330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, 1443.91309, -1686.03369, 10.66330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, 1443.91309, -1681.64929, 10.66330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19445, 1443.91309, -1677.16418, 10.66330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19377, 1439.67529, -1717.75500, 12.29580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, 1436.85059, -1722.66699, 12.31460,   0.00000, 90.00000, -45.59996);
CreateDynamicObject(19362, 1439.02258, -1724.89551, 12.30460,   0.00000, 90.00000, -45.60000);
CreateDynamicObject(19377, 1444.31958, -1722.48987, 12.34580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1519.31799, -1717.69470, 12.32580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 1514.66406, -1722.46851, 12.30580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, 1522.19397, -1722.62964, 12.31460,   0.00000, 90.00000, 45.17999);
CreateDynamicObject(19362, 1519.94702, -1724.89258, 12.29460,   0.00000, 90.00000, 45.18000);
CreateDynamicObject(19377, 1516.19617, -1601.99988, 12.32580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, 1520.82825, -1599.46289, 12.31460,   0.00000, 90.00000, 32.39949);
CreateDynamicObject(19362, 1522.27283, -1601.77734, 12.29460,   0.00000, 90.00000, 32.33995);
CreateDynamicObject(19362, 1522.77515, -1601.44897, 12.27460,   0.00000, 90.00000, 32.33990);
CreateDynamicObject(19362, 1521.52698, -1598.46338, 12.27460,   0.00000, 90.00000, 32.33990);
CreateDynamicObject(19377, 1444.20691, -1602.04956, 12.32580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, 1436.83508, -1601.98303, 12.29460,   0.00000, 90.00000, 47.22002);
CreateDynamicObject(19362, 1438.99658, -1599.60559, 12.31460,   0.00000, 90.00000, 48.12000);
CreateDynamicObject(19362, 1436.00574, -1601.11731, 12.27460,   0.00000, 90.00000, 47.22000);
CreateDynamicObject(19362, 1438.10999, -1598.29688, 12.27460,   0.00000, 90.00000, 47.22000);
CreateDynamicObject(673, 1466.30945, -1661.40344, 13.48555,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(706, 1460.56128, -1628.76392, 13.49221,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 1477.05322, -1714.39734, 24.36810,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 1483.38660, -1715.02063, 24.36810,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 1511.51440, -1673.98560, 24.36810,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 1511.35828, -1666.92261, 24.36810,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 1446.68799, -1666.99902, 24.36810,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(736, 1446.81531, -1673.93933, 24.36810,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1364, 1476.00500, -1682.76477, 14.23470,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1364, 1476.11670, -1675.87720, 14.23470,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1364, 1483.93262, -1675.61829, 14.23470,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1364, 1483.97510, -1682.71936, 14.23470,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(870, 1476.60205, -1686.87195, 13.66360,   0.00000, 0.00000, -59.00000);
CreateDynamicObject(870, 1474.57666, -1686.72107, 13.66360,   0.00000, 0.00000, -76.00000);
CreateDynamicObject(870, 1472.91052, -1686.48730, 13.66360,   0.00000, 0.00000, 30.00000);
CreateDynamicObject(870, 1486.62341, -1686.70288, 13.66360,   0.00000, 0.00000, 30.00000);
CreateDynamicObject(870, 1484.88757, -1686.77258, 13.66360,   0.00000, 0.00000, -62.00000);
CreateDynamicObject(870, 1483.22205, -1686.91479, 13.66360,   0.00000, 0.00000, -69.00000);
CreateDynamicObject(1361, 1484.04590, -1672.76990, 14.22200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1476.03809, -1672.94580, 14.22200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1498.65808, -1667.82422, 14.22200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1498.67346, -1672.63464, 14.22200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1498.73596, -1703.04700, 14.22200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1482.52466, -1703.18542, 14.22200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1477.55872, -1703.08801, 14.22200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1460.14197, -1703.26514, 14.22200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1460.10608, -1672.65295, 14.22200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1361, 1460.16394, -1667.85388, 14.22200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1364, 1465.37341, -1703.35620, 14.23470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1364, 1493.77466, -1703.46729, 14.23470,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(672, 1506.89294, -1712.11035, 13.49253,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19121, 1496.69727, -1668.28540, 14.05370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19121, 1493.29309, -1668.29028, 14.05370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19121, 1493.20459, -1672.13428, 14.05370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19121, 1496.85107, -1672.15833, 14.05370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 1495.53943, -1668.28418, 14.04510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 1495.67041, -1672.19885, 14.04510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 1492.13623, -1668.30249, 14.04510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 1492.00342, -1672.14294, 14.04510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1494.51550, -1668.27783, 14.04460,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1490.96765, -1668.28784, 14.04460,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1490.93372, -1672.15759, 14.04460,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1494.40942, -1672.17822, 14.04460,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18749, 1479.88733, -1667.54004, 18.70710,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, 1468.67578, -1694.08594, 16.40220,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, 1489.92078, -1694.52002, 16.40220,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1521.88977, -1718.16101, 12.50600,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1522.48486, -1694.68420, 12.50600,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1521.67981, -1660.81091, 12.50600,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1521.23071, -1631.88818, 12.50600,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1521.78491, -1609.14734, 12.50600,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, 1487.89990, -1722.49072, 12.32580,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(3472, 1477.20020, -1722.39941, 12.40840,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1436.96179, -1665.84668, 12.40840,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1437.25574, -1624.01123, 12.40840,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1452.45398, -1600.73499, 12.40840,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3472, 1509.07251, -1601.12561, 12.40840,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11722, 1520.84631, -1710.26404, 13.30850,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11723, 1520.88464, -1710.45129, 13.30900,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1546.55652, -1664.17639, 12.13970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1546.45898, -1686.77051, 12.13970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(813, 1546.70020, -1658.13257, 14.70680,   0.00000, 0.00000, 116.00000);
CreateDynamicObject(813, 1546.11194, -1692.10413, 14.70680,   0.00000, 0.00000, 136.00000);
CreateDynamicObject(18014, 1553.15515, -1672.40918, 16.09030,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(18014, 1553.18140, -1678.74683, 16.09030,   0.00000, 0.00000, 91.00000);
CreateDynamicObject(767, 1506.23889, -1649.78210, 13.43520,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(768, 1455.51160, -1711.47302, 13.43950,   0.00000, 0.00000, -40.00000);
CreateDynamicObject(640, 1546.77832, -1667.41528, 13.20100,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(640, 1546.69580, -1683.78174, 13.20100,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19122, 1543.88562, -1666.77991, 13.44800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1543.83728, -1655.78760, 13.44800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1549.46570, -1655.75208, 13.44800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1549.45471, -1666.77844, 13.44800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1543.76538, -1684.39160, 13.44800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1549.62695, -1684.40137, 13.44800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1549.65564, -1695.55066, 13.44800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19122, 1543.79858, -1695.55310, 13.44800,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1504.98389, -1666.34668, 12.71970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1504.95703, -1674.08093, 12.71970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1483.86926, -1709.52429, 12.71970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1476.18738, -1709.53760, 12.71970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1453.95337, -1674.11230, 12.71970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, 1453.93970, -1666.35120, 12.71970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19121, 1461.56885, -1668.35437, 14.05370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19121, 1461.68286, -1672.09998, 14.05370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 1462.69336, -1668.37219, 14.04510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 1462.78943, -1672.09277, 14.04510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1464.00049, -1668.35938, 14.04460,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1464.04749, -1672.13489, 14.04460,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19121, 1465.31042, -1668.35132, 14.05370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19121, 1465.27197, -1672.11536, 14.05370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 1466.53162, -1668.36572, 14.04510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19123, 1466.44238, -1672.10962, 14.04510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1467.73621, -1668.33899, 14.04460,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1467.64844, -1672.08936, 14.04460,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6965, 1151.00000, 8066.00000, -2020.00000,   0.00000, 0.00000, 0.00000);
//park - location - close
//advert - location - open
CreateDynamicObject(2165, 1720.055175, -1672.107788, 19.166679, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1714, 1720.824707, -1672.834228, 19.220752, 0.000000, 0.000000, -172.900039);
//advert - location - close
//FUEL COMPANY - location - open
CreateDynamicObject(11546, 285.549499, 1386.814086, 9.519872, 0.000000, 0.000000, -88.500015);
CreateDynamicObject(9193, 286.184661, 1398.065063, 14.108742, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(9193, 286.184661, 1423.356567, 14.108742, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(16083, 264.158660, 1459.661010, 14.346237, 0.000000, 0.000000, 79.399955);
//FUEL COMPANY - location - close
//DUEL, DMON elevator door - open
CreateDynamicObject(18757, 1416.280761, 5.712075, 1008.918090, 0.000000, 0.000000, -89.599983);
//DUEL, DMON elevator door - close
//порти - location - open
CreateDynamicObject(19313, 344.711486, 1797.858520, 18.126768, 0.000000, 0.000000, 34.900020);
CreateDynamicObject(19313, 96.767890, 1914.917602, 20.396505, 0.000000, 0.000000, -89.899971);
dfp2=CreateDynamicObject(19313, 285.723236, 1820.534057, 19.915033, 0.000000, 0.000000, 89.800071);
dfp1=CreateDynamicObject(19313, 135.142593, 1941.479492, 21.597537, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19312, 191.151473, 1870.016113, 21.471294, 0.000000, 0.000000, 0.000000);
lvpd1 = CreateDynamicObject(968, 2238.197509, 2450.464599, 10.341962, -4.799997, -89.000000, -89.499954);
lvpd2 = CreateDynamicObject(16773, 2335.417236, 2444.029785, 6.957778, 0.000000, 0.000000, 59.200016);
lspdb1 = CreateDynamicObject(968, 1544.746337, -1630.744995, 13.016739, 1.000004, -89.500076, -89.200096);
lspdp1=CreateDynamicObject(10558, 1588.668334, -1638.399414, 14.457103, 0.000000, 0.000000, -90.600067);
lspdp2=CreateDynamicObject(6400, 1581.937133, -1637.983764, 13.921833, 0.000000, 0.000000, -87.099975);
vipp1=CreateDynamicObject(2990, 1350.60486, -2048.07642, 59.41744,   0.00000, 0.00000, 4.00000);
vipp2=CreateDynamicObject(2990, 1360.36194, -2046.93872, 59.11782,   0.00000, 0.00000, 9.00000);
sfpdp1=CreateDynamicObject(8378, -1627.72546, 688.88586, 1.77552,   0.00000, 0.00000, 0.00000);
cripzp1=CreateDynamicObject(985, 321.13589, -1188.31604, 75.33490,   0.00000, 0.00000, 39.00000);
//IFC cars - location - close
//порти - location - close
//menus - location - open
TuningMenu = CreateMenu("TuneMenu",1,20,120,150,40);
AddMenuItem(TuningMenu,0,"Paint Jobs");
AddMenuItem(TuningMenu,0,"Colors");
AddMenuItem(TuningMenu,0,"Exhausts");
AddMenuItem(TuningMenu,0,"Front Bumper");
AddMenuItem(TuningMenu,0,"Rear Bumper");
AddMenuItem(TuningMenu,0,"Roof");
AddMenuItem(TuningMenu,0,"Spoilers");
AddMenuItem(TuningMenu,0,"Side Skirts");
AddMenuItem(TuningMenu,0,"Wheels");
AddMenuItem(TuningMenu,0,"Others");
// Paintjobs
Paintjobs = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Paintjobs,0,"PaintJobs");
AddMenuItem(Paintjobs,0,"Paintjob 1");
AddMenuItem(Paintjobs,0,"Paintjob 2");
AddMenuItem(Paintjobs,0,"Paintjob 3");
AddMenuItem(Paintjobs,0,"Paintjob 4");
AddMenuItem(Paintjobs,0,"Paintjob 5");
AddMenuItem(Paintjobs,0,"Main Menu");
// Colors
Colors = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Colors,0,"Colors");
AddMenuItem(Colors,0,"Black");
AddMenuItem(Colors,0,"White");
AddMenuItem(Colors,0,"Red");
AddMenuItem(Colors,0,"Blue");
AddMenuItem(Colors,0,"Green");
AddMenuItem(Colors,0,"Yellow");
AddMenuItem(Colors,0,"Pink");
AddMenuItem(Colors,0,"Brown");
AddMenuItem(Colors,0,"Next Page");
// Colors 2
Colors1 = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Colors1,0,"Colors");
AddMenuItem(Colors1,0,"Grey");
AddMenuItem(Colors1,0,"Gold");
AddMenuItem(Colors1,0,"Dark Blue");
AddMenuItem(Colors1,0,"Light Blue");
AddMenuItem(Colors1,0,"Green");
AddMenuItem(Colors1,0,"Light Grey");
AddMenuItem(Colors1,0,"Dark Red");
AddMenuItem(Colors1,0,"Dark Brown");
AddMenuItem(Colors1,0,"Main Menu");
// Exhausts
Exhausts = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Exhausts,0,"Exhausts");
AddMenuItem(Exhausts,0,"Wheel Arch Alien Exhaust");
AddMenuItem(Exhausts,0,"Wheel Arch X-Flow Exhaust");
AddMenuItem(Exhausts,0,"Loco Low-Co Chromer Exhaust");
AddMenuItem(Exhausts,0,"Loco Low-Co Slamin Exhaust");
AddMenuItem(Exhausts,0,"Main Menu");
// Front bumpers
Frontbumper = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Frontbumper,0,"Frontbumpers");
AddMenuItem(Frontbumper,0,"Wheel Arch Alien bumper");
AddMenuItem(Frontbumper,0,"Wheel Arch X-Flow bumper");
AddMenuItem(Frontbumper,0,"Loco Low-Co Chromer bumper");
AddMenuItem(Frontbumper,0,"Loco Low-Co Slamin bumper");
AddMenuItem(Frontbumper,0,"Main Menu");
// Rear bumpers
Rearbumper = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Rearbumper,0,"Rearbumpers");
AddMenuItem(Rearbumper,0,"Wheel Arch Alien bumper");
AddMenuItem(Rearbumper,0,"Wheel Arch X-Flow bumper");
AddMenuItem(Rearbumper,0,"Loco Low-Co Chromer bumper");
AddMenuItem(Rearbumper,0,"Loco Low-Co Slamin bumper");
AddMenuItem(Rearbumper,0,"Main Menu");
// Roof
Roof = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Roof,0,"Roof");
AddMenuItem(Roof,0,"Wheel Arch Alien Roof Vent");
AddMenuItem(Roof,0,"Wheel Arch X-Flow Roof Vent");
AddMenuItem(Roof,0,"Loco Low-Co Hardtop Roof");
AddMenuItem(Roof,0,"Loco Low-Co Softtop Roof");
AddMenuItem(Roof,0,"Main Menu");
// Spoilers
Spoilers = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Spoilers,0,"Spoliers");
AddMenuItem(Spoilers,0,"Alien Spoiler");
AddMenuItem(Spoilers,0,"X-Flow Spoiler");
AddMenuItem(Spoilers,0,"Main Menu");
// Side skirts
Sideskirts = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Sideskirts,0,"SideSkirts");
AddMenuItem(Sideskirts,0,"Wheel Arch Alien Side Skirts");
AddMenuItem(Sideskirts,0,"Wheel Arch X-Flow Side Skirts");
AddMenuItem(Sideskirts,0,"Loco Low-Co Chrome Strip");
AddMenuItem(Sideskirts,0,"Loco Low-Co Chrome Flames");
AddMenuItem(Sideskirts,0,"Loco Low-Co Chrome Arches");
AddMenuItem(Sideskirts,0,"Loco Low-Co Chrome Trim");
AddMenuItem(Sideskirts,0,"Loco Low-Co Wheelcovers");
AddMenuItem(Sideskirts,0,"Main Menu");
// Wheels
Wheels = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Wheels,0,"Wheels");
AddMenuItem(Wheels,0,"Offroad");
AddMenuItem(Wheels,0,"Mega");
AddMenuItem(Wheels,0,"Wires");
AddMenuItem(Wheels,0,"Twist");
AddMenuItem(Wheels,0,"Grove");
AddMenuItem(Wheels,0,"Import");
AddMenuItem(Wheels,0,"Atomic");
AddMenuItem(Wheels,0,"Ahab");
AddMenuItem(Wheels,0,"Virtual");
AddMenuItem(Wheels,0,"Access");
AddMenuItem(Wheels,0,"Next Page");
AddMenuItem(Wheels,0,"Main Menu");
// wheels 2
Wheels1 = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Wheels1,0,"Wheels");
AddMenuItem(Wheels1,0,"Trance");
AddMenuItem(Wheels1,0,"Shadow");
AddMenuItem(Wheels1,0,"Rimshine");
AddMenuItem(Wheels1,0,"Classic");
AddMenuItem(Wheels1,0,"Cutter");
AddMenuItem(Wheels1,0,"Switch");
AddMenuItem(Wheels1,0,"Dollar");
AddMenuItem(Wheels1,0,"Main Menu");
// Nitro
Nitro = CreateMenu("TuningMenu",1,20,120,150,40);
SetMenuColumnHeader(Nitro,0,"Nitro");
AddMenuItem(Nitro,0,"2x Nitrous");
AddMenuItem(Nitro,0,"5x Nitrous");
AddMenuItem(Nitro,0,"10x Nitrous");
AddMenuItem(Nitro,0,"Main Menu");
// Others
Others = CreateMenu("TuneMenu",1,20,120,150,40);
SetMenuColumnHeader(Others,0, "Other addons");
AddMenuItem(Others,0,"Hydraulics");
AddMenuItem(Others,0,"Car Stereo");
AddMenuItem(Others,0,"Nitro");
AddMenuItem(Others,0,"Main Menu");
//menus - location - close
//pickups - location - open
//lodkacheck[0]=
//CreateDynamicPickup(1318, 1, -1392.2205,2111.2021,42.1264,0);
//lodkacheck[1]=
IFCDUTY=CreateDynamicPickup(1275, 1, 283.4191,1387.8158,10.5859, 0);
DFDUTY=CreateDynamicPickup(1239, 1, 211.5823,1812.2897,21.8594, 0);
DFDUTY2=CreateDynamicPickup(1239, 1, 881.8779,-2252.2192,12.8527, 0);
SDELKAEXIT=CreateDynamicPickup(1318, 1, 1727.1481,-1638.8367,20.2234, 1);
CreateDynamicPickup(1239, 1, 2005.9323,2298.5537,10.8203, 0);
CreateDynamicPickup(1239, 1, 1838.5139,-1856.2627,13.3828, 0);
CreateDynamicPickup(1318,1, 2091.4688,-1806.6732,13.5469,0);
CreateDynamicPickup(1318, 1, 1706.1328,1436.7501,10.7364,0);
CreateDynamicPickup(1318, 1, 2233.9548,1677.4158,1008.3594,1);
CreateDynamicPickup(1318, 1, 1419.1746,-1615.1367,13.5395,0);
CreateDynamicPickup(1318, 1, 251.6632,70.9856,1003.6406,1);
CreateDynamicPickup(1318, 1, 1708.1820,1449.8413,10.8178,0);
CreateDynamicPickup(1318, 1, 2272.1147,2410.6118,10.6719,0);
CreateDynamicPickup(1318, 1, 254.8505,73.6967,1003.6406,1);
CreateDynamicPickup(1318, 1, 253.2742,78.0450,1003.6406,1);
CreateDynamicPickup(1318, 1, 258.5221,77.5805,1003.6406,1);
CreateDynamicPickup(1318, 1, 2236.3701,1650.7100,1008.3594,1);
CreateDynamicPickup(1318, 1, 1525.8333,-1670.6831,13.3828,0);
CreateDynamicPickup(1318, 1, 1525.8333,-1670.6831,13.3828,0);
CreateDynamicPickup(1318, 1, 211.6035,1814.6014,17.6406,0);
CreateDynamicPickup(1318, 1, 882.4497,-2257.9644,12.8527,0);
CreateDynamicPickup(1318, 1, 879.4335,-2257.6353,12.8527,0);
CreateDynamicPickup(1318,1 , 215.1642,1814.8489,17.6406,0);
CreateDynamicPickup(1318, 1, -2450.7051,505.0456,30.0820,0);
CreateDynamicPickup(1318, 1, -2453.3984,505.0079,30.0804,0);
//
VIPPick1=CreateDynamicPickup(1318,1,1279.8148,-2003.1206,58.9311,0); // taxi job
VIPPick2=CreateDynamicPickup(1318,1,1276.3037,-2003.1206,59.0443,0); // bus job
VIPPick3=CreateDynamicPickup(1318,1,1265.8612,-2003.0636,59.3797,0); // pizza job
VIPPick4=CreateDynamicPickup(1318,1,1262.9565,-2003.0615,59.4733,0); // las venturas
VIPPick5=CreateDynamicPickup(1318,1,1252.6023,-2003.0217,59.8063,0); // coalmine
VIPPick6=CreateDynamicPickup(1318,1,1249.8823,-2003.0156,59.8938,0); // sweeper
VIPPick7=CreateDynamicPickup(1318,1,1229.8131,-2032.6885,63.1250,0); // pilot
VIPPick8=CreateDynamicPickup(1318,1,1229.7809,-2041.6234,63.1250,0); // fish
VIPPick9=CreateDynamicPickup(1318,1,1246.4418,-2061.7073,59.9934,0); // Deliver
//
CreateDynamicPickup(1318,1,2571.0122,573.5831,41.3469,-1,2);
CreateDynamicPickup(1318,1,2571.0122,573.5831,41.3469,-1,2);
VIPPickup=CreateDynamicPickup(1318, 1, 1353.8860,-2038.6312,56.4188,0);
GrovePickup=CreateDynamicPickup(1318, 1, 2448.1567,-1647.5823,13.5814,0);
LotteryPickup[0]=CreateDynamicPickup(1318, 1, 1047.5492,1006.7177,11.0000,0);
LotteryPickup[1]=CreateDynamicPickup(1318, 1, 2233.7991,1714.6870,1012.3828,1);
CripzPickup[6]=CreateDynamicPickup(1318, 1, 335.2979,-1203.3108,76.3819,0);
CreateDynamic3DTextLabel("{00FF00}[Лична колекция]\nНатиснете {FF0000}Y {00FF00}", 0xFF0000FF, 2236.3701,1650.7100,1008.3594, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 1, -1, 25.0);
CreateDynamic3DTextLabel("{00FF00}[Колело на късмета]\nНатиснете {FF0000}Y {00FF00} за да изберете число", 0xFF0000FF, 2233.9548,1677.4158,1008.3594, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 1, -1, 25.0);
CreateDynamic3DTextLabel("Натиснете {FFFFFF}Y {FF0000} за да използвате асансьора\nИзползвайте {FFFFFF}/exit {ff0000}за да излезете", 0xFF0000FF, 2571.0122,573.5831,41.3469, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, 2, -1, 5.0);
//info
CreateDynamicPickup(1318, 1, BusJob2,0);
CreateDynamicPickup(1318, 1, BusJob,0);
CreateDynamicPickup(1318, 1, SweeperJob,0);
CreateDynamicPickup(1318, 1, TaxiJob,0);
CreateDynamicPickup(1318, 1, TaxiJob2,0);
CreateDynamicPickup(1318, 1, DeliverJob,0);
CreateDynamicPickup(1318, 1, PizzaJob,0);
CreateDynamicPickup(1318, 1, PilotJob,0);
CreatePickup(19134,1,722.9109,-1496.5250,1.9343,0);
CreatePickup(1318,1,Fishing,0);
CreatePickup(1318,1,CoalmineJob,0);
CreatePickup(1318,1,LotteryShow,0);
Create3DTextLabel("{FF0000}Достъпно само за VIP Gang\n{FF0000}Натиснете {FFFFFF}F/ENTER{FF0000} за да се телепортирате до базата", 0x08FF08FF, LotteryShow, 14, 0);
Create3DTextLabel("{FF0000}Достъпно само за VIP Gang\n{FF0000}Натиснете {FFFFFF}F/ENTER{FF0000} за да се телепортирате до базата", 0x08FF08FF, CoalmineJob, 14, 0);
Create3DTextLabel("{FF0000}Достъпно само за VIP Gang\n{FF0000}Натиснете {FFFFFF}F/ENTER{FF0000} за да се телепортирате до базата", 0x08FF08FF, Fishing, 14, 0);
//
Create3DTextLabel("{B55900}Bus Job\n{FF0000}Слез долу до автобусите и започни работа", 0x08FF08FF, BusJob2, 14, 0);
Create3DTextLabel("{B55900}Pilot Job\n{FF0000}Влез в самолета и занеси доставките\n{FF0000}Достъпно само за VIP Gang\n{FF0000}Натиснете {FFFFFF}F/ENTER{FF0000} за да се телепортирате до базата", 0x08FF08FF, PilotJob, 14, 0);
Create3DTextLabel("{B55900}Bus Job\n{FF0000}Влез в автобуса, след което разнеси буса из спирките\n{FF0000}Достъпно само за VIP Gang\n{FF0000}Натиснете {FFFFFF}F/ENTER{FF0000} за да се телепортирате до базата", 0x08FF08FF, BusJob, 14, 0);
Create3DTextLabel("{FFFFFF}Сделка или не:\n{FF0000}Можете да влезете в сградата на шоуто, когато е отворена играта.\nЧрез {ffffff}F/ENTER", 0x08FF08FF, 1419.1746,-1615.1367,13.5395, 14, 0);
Create3DTextLabel("{B55900}Taxi Job\n{FF0000}Влез в таксито, след което качи пътник и ще му вземаш парите за литър бензин\n{FF0000}Достъпно само за VIP Gang\n{FF0000}Натиснете {FFFFFF}F/ENTER{FF0000} за да се телепортирате до базата", 0x08FF08FF, TaxiJob, 14, 0);
Create3DTextLabel("{B55900}Sweep Job\n{FF0000}Влез в превозното средство, след което почисти улиците\n{FF0000}Достъпно само за VIP Gang\n{FF0000}Натиснете {FFFFFF}F/ENTER{FF0000} за да се телепортирате до базата", 0x08FF08FF, SweeperJob, 14, 0);
Create3DTextLabel("{B55900}Pizza Job\n{FF0000}Влез в мотора, след което разнеси пица из къщите\n{FF0000}Достъпно само за VIP Gang\n{FF0000}Натиснете {FFFFFF}F/ENTER{FF0000} за да се телепортирате до базата", 0x08FF08FF, PizzaJob, 14, 0);
Create3DTextLabel("{B55900}Deliver Job\n{FF0000}Влез в превозното средство, след което разнеси пратките\n{FF0000}Достъпно само за VIP Gang\n{FF0000}Натиснете {FFFFFF}F/ENTER{FF0000} за да се телепортирате до базата", 0x08FF08FF, DeliverJob, 14, 0);
Create3DTextLabel("{B55900}Taxi Job\n{FF0000}Влез в таксито, след което качи пътник и ще му вземаш парите за литър бензин", 0x08FF08FF, TaxiJob2, 14, 0);
////  CreateDynamic3DTextLabel("{ff0000}[{00ff00}Компания{ff0000}]{00ff00}\nНа екрана на втория ред пише колко акции притежавате\nНа третия ред пише цена за акция\n\n{33aa33}Ако искате да купите акции, използвайте /buyshares\nАко искате да продадете акции, използвайте /sellsahres", 0xFFFFFFFF,CompanyInfo[companyid][coX],CompanyInfo[companyid][coY],CompanyInfo[companyid][coZ],15);
////////////// , GarageInfo[ala][gX],GarageInfo[ala][gY],GarageInfo[ala][gZ], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1, GarageInfo[ala][gInterior], GarageInfo[ala][gVirtualWorld], 15.0);
//CreateDynamic3DTextLabel("Използвайте Y за да поставите бомбата", 0xFFFFFFFF, 233.4423,1796.3499,51.9285, 35.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, 0, 1, 35.0);
sdelkaBoxText[0]=CreateDynamic3DTextLabel("{ff0000}Кутия 1\n{00ff00}Затворена", 0x00ff00FF, 1728.5927,-1659.4409,21.4581, 21.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 18, -1, 21.5);
sdelkaBoxText[1]=CreateDynamic3DTextLabel("{ff0000}Кутия 2\n{00ff00}Затворена", 0x00ff00FF, 1729.3635,-1651.9147,21.6453, 21.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 18, -1, 21.5);
sdelkaBoxText[2]=CreateDynamic3DTextLabel("{ff0000}Кутия 3\n{00ff00}Затворена", 0x00ff00FF, 1728.1317,-1645.5726,21.4581, 21.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 18, -1, 21.5);
sdelkaBoxText[3]=CreateDynamic3DTextLabel("{ff0000}Кутия 4\n{00ff00}Затворена", 0x00ff00FF, 1723.7224,-1645.2588,21.4581, 21.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 18, -1, 21.5);
sdelkaBoxText[4]=CreateDynamic3DTextLabel("{ff0000}Кутия 5\n{00ff00}Затворена", 0x00ff00FF, 1719.9578,-1645.5153,21.4581, 21.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 18, -1, 21.5);
sdelkaBoxText[5]=CreateDynamic3DTextLabel("{ff0000}Кутия 6\n{00ff00}Затворена", 0x00ff00FF, 1716.9658,-1646.0712,21.5982, 21.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 18, -1, 21.5);
sdelkaBoxText[6]=CreateDynamic3DTextLabel("{ff0000}Кутия 7\n{00ff00}Затворена", 0x00ff00FF, 1714.2740,-1652.0488,21.4581, 21.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 18, -1, 21.5);
sdelkaBoxText[7]=CreateDynamic3DTextLabel("{ff0000}Кутия 8\n{00ff00}Затворена", 0x00ff00FF, 1714.7432,-1657.9493,21.6380, 21.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 18, -1, 21.5);
sdelkaBoxText[8]=CreateDynamic3DTextLabel("{ff0000}Кутия 9\n{00ff00}Затворена", 0x00ff00FF, 1716.6510,-1664.0560,21.4581, 21.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 18, -1, 21.5);
CreateDynamicActor(23, 1729.4888,-1659.4185,20.239,118.4483, 1, 100.0, 1, 18,-1);
CreateDynamicActor(21, 1730.4758,-1651.8448,20.2341,87.6431, 1, 100.0, 1, 18,-1);
CreateDynamicActor(29, 1728.2152,-1644.6328,20.2269,179.1373, 1, 100.0, 1, 18,-1);
CreateDynamicActor(12, 1723.7167,-1643.8926,20.2259,180.3907, 1, 100.0, 1, 18,-1);
CreateDynamicActor(93, 1719.9346,-1644.0957,20.2260,180.3907, 1, 100.0, 1, 18,-1);
CreateDynamicActor(150, 1716.9802,-1644.9247,20.2270,180.3907, 1, 100.0, 1, 18,-1);
CreateDynamicActor(304, 1713.4293,-1652.1310,20.2223,275.9582, 1, 100.0, 1, 18,-1);
CreateDynamicActor(98, 1713.5272,-1657.9839,20.2224,274.3916, 1, 100.0, 1, 18,-1);
CreateDynamicActor(122, 1716.5115,-1664.8466,20.2273,359.9324, 1, 100.0, 1, 18,-1);
//info
LSPDPickup[0]=CreateDynamicPickup(1318, 1, 1555.2531,-1675.6143,16.1953,0);
LSPDPickup[5]=CreateDynamicPickup(1318, 1, 2287.1206,2432.2830,10.8203,0);
LSPDPickup[1]=CreateDynamicPickup(1318, 1, 246.7372,63.0483,1003.6406,1);
LSPDPickup[3]=CreateDynamicPickup(1318, 1, 246.3857,88.0075,1003.6406,1);
LSPDPickup[4]=CreateDynamicPickup(1318, 1, 242.9772,66.3348,1003.6406,1);
LSPDPickup[6]=CreateDynamicPickup(1318, 1, 238.0065,72.9034,1005.0391,1);
LSPDPickup[7]=CreateDynamicPickup(1318, 1, 1416.5184,3.6131,1000.9268,5); //lspddmbiz
LSPDPickup[8]=CreateDynamicPickup(1318, 1, -1605.5037,710.2720,13.8672,0); //sfpd
BloodPickup[0]=CreateDynamicPickup(1318,1, 1083.0112,-1226.7196,15.8203,0);
BloodPickup[1]=CreateDynamicPickup(1318, 1, 1416.6842,3.6414,1000.9269,3);
YakuzaPickup[0]=CreateDynamicPickup(1318,1, 2595.7300,2790.6204,10.8203,0);
YakuzaPickup[1]=CreateDynamicPickup(1318, 1, 1416.6842,3.6414,1000.9269,2);
ESPickup[0]=CreateDynamicPickup(1318, 1, 967.0475,2132.9785,10.8203,0);
ESPickup[1]=CreateDynamicPickup(1318, 1, 966.2453,2160.7446,10.8203,0);
ESPickup[2]=CreateDynamicPickup(1318, 1, 1416.6842,3.6414,1000.9269,1);
ESPickup[3]=CreateDynamicPickup(1318, 1, 1416.6842,3.6414,1000.9269,8);
ESPickup[4]=CreateDynamicPickup(1318, 1, 2467.6345,-1698.2460,1013.5078,1);
SyndicatePickup[0]=CreateDynamicPickup(1318, 1, 1733.4287,2814.9548,14.2735,0);
SyndicatePickup[1]=CreateDynamicPickup(1318, 1, 2496.049804,-1695.238159,1014.742187,2);
CripzPickup[0]=CreateDynamicPickup(1318, 1, 300.2113,-1154.4961,81.3665,0);
CripzPickup[1]=CreateDynamicPickup(1318, 1, 140.1744,1366.1003,1083.8594,1);
GSFPickup[0]=CreateDynamicPickup(1318, 1, 2490.5693,-1699.8517,1014.7422,1);
GSFPickup[1]=CreateDynamicPickup(1318, 1, 1416.5184,3.6131,1000.9268,7);
GSFPickup[2]=CreateDynamicPickup(1318, 1, 2491.7954,-1710.7678,1014.7422,1);
GSFPickup[3]=CreateDynamicPickup(1318, 1, 2818.5259,2140.8853,14.6615,0);
CripzPickup[2]=CreateDynamicPickup(1318, 1, 134.6400,1379.8944,1088.3672,1);
CripzPickup[3]=CreateDynamicPickup(1318, 1, 1416.5184,3.6131,1000.9268,6);
CripzPickup[4]=CreateDynamicPickup(1318, 1, 134.6402,1371.5256,1083.8650,1);
CripzPickup[5]=CreateDynamicPickup(1318, 1, -2396.5078,1132.7018,55.7333,0);
SoldierPickup[0]=CreateDynamicPickup(1318, 1, 2324.4341,-1149.4835,1050.7101,1);
SoldierPickup[1]=CreateDynamicPickup(1318, 1, -1754.2659,964.0753,24.8906,0);
BallasPickup[0]=CreateDynamicPickup(1318, 1, 2146.7976,-1470.4761,26.0426,0);
BallasPickup[1]=CreateDynamicPickup(1318, 1, 318.5974,1115.6239,1083.8828,1);
BountyPickup[0]=CreateDynamicPickup(1318, 1, 691.5796,-1275.8766,13.5607,0);
BountyPickup[1]=CreateDynamicPickup(1318, 1, 1261.3009,-785.4238,1091.9063,2);
BGMPickup[0]=CreateDynamicPickup(1318, 1, 1259.6387,-785.5069,92.0313,0);
BGMPickup[1]=CreateDynamicPickup(1318, 1, 1261.3009,-785.4238,1091.9063,1);
BGMPickup[2]=CreateDynamicPickup(1318, 1, 1260.7024,-781.2197,1091.9063,1);
BGMPickup[3]=CreateDynamicPickup(1318, 1, 1416.6842,3.6414,1000.9269,4);
CarShopPickup = CreateDynamicPickup(1318, 1, -1444.0856,1087.5129,1040.7969,-1);
TowerPickup[0] = CreateDynamicPickup(1318, 1, 1570.4105,-1337.3629,16.4844,0);
TowerPickup[1] = CreateDynamicPickup(1318, 1, 1548.6501,-1363.8597,326.2183,0);
BankPickup[5]=CreateDynamicPickup(1274, 1,-1492.1313,920.0684,7.1875);
BankPickup[0]=CreateDynamicPickup(1274, 1, 1481.0358,-1772.3138,18.7958);
BankPickup[1]=CreateDynamicPickup(1274, 1, 2412.5020,1123.8976,10.8203);
BankPickup[2]=CreateDynamicPickup(1274, 1, 2305.5884,-16.3410,26.7496,1);
BankPickup[3]=CreateDynamicPickup(1274, 1, 2305.5884,-16.3410,26.7496,2);
BankPickup[4]=CreateDynamicPickup(1274, 1, 2305.5884,-16.3410,26.7496,3);
BankCommandPickup[0]=CreateDynamicPickup(1274, 1, 2316.6213,-9.9516,26.7422, 1);
BankCommandPickup[1]=CreateDynamicPickup(1274, 1, 2316.6213,-9.9516,26.7422, 2);
BankCommandPickup[2]=CreateDynamicPickup(1274, 1, 2316.6213,-9.9516,26.7422, 3);
sapdhealarmour[0]=CreateDynamicPickup(1240, 1, 255.2748,67.5873,1003.6406,1);
sapdhealarmour[1]=CreateDynamicPickup(1242, 1, 255.2748,67.5873,1003.6406,1);
bountyhealarmour[0]=CreateDynamicPickup(1240, 1, 1264.1427,-778.0394,1091.9063,2);
bountyhealarmour[1]=CreateDynamicPickup(1242, 1, 1264.1427,-778.0394,1091.9063,2);
ms13healarmour[0]=CreateDynamicPickup(1240, 1, -39.4799,1077.1060,20.2422,0);
ms13healarmour[1]=CreateDynamicPickup(1242, 1, -39.4799,1077.1060,20.2422,0);
vagoshealarmour[0]=CreateDynamicPickup(1240, 1, 2552.0718,-1029.5801,69.5729,0);
vagoshealarmour[1]=CreateDynamicPickup(1242, 1, 2552.0718,-1029.5801,69.5729,0);
triadshealarmour[0]=CreateDynamicPickup(1240, 1, 1967.2881,953.4484,10.8203,0);
triadshealarmour[1]=CreateDynamicPickup(1242, 1, 1967.2881,953.4484,10.8203,0);
italianhealarmour[0]=CreateDynamicPickup(1240, 1, -684.9741,942.3038,13.6328,0);
italianhealarmour[1]=CreateDynamicPickup(1242, 1, -684.9741,942.3038,13.6328,0);
nanghealarmour[0]=CreateDynamicPickup(1240, 1, 2632.2979,1815.6191,11.0161,0);
nanghealarmour[1]=CreateDynamicPickup(1242, 1, 2632.2979,1815.6191,11.0161,0);
bloodhealarmour[0]=CreateDynamicPickup(1240, 1, 1083.0128,-1229.4845,15.8203,0);
bloodhealarmour[1]=CreateDynamicPickup(1242, 1, 1083.0128,-1229.4845,15.8203,0);
cripzhealarmour[0]=CreateDynamicPickup(1240, 1, 140.3037,1368.5403,1083.8630,1);
cripzhealarmour[1]=CreateDynamicPickup(1242, 1, 140.3037,1368.5403,1083.8630,1);
bgmhealarmour[0]=CreateDynamicPickup(1240, 1, 1267.1973,-787.3447,1091.9063,1);
bgmhealarmour[1]=CreateDynamicPickup(1242, 1, 1267.1973,-787.3447,1091.9063,1);
syndicatehealarmour[0]=CreateDynamicPickup(1240, 1, 1736.4424,2803.6094,11.3438,0);
syndicatehealarmour[1]=CreateDynamicPickup(1242, 1, 1736.4424,2803.6094,11.3438,0);
blackstreethealarmour[0]=CreateDynamicPickup(1240, 1, -818.2010,1551.0867,27.1172,0);
blackstreethealarmour[1]=CreateDynamicPickup(1242, 1, -818.2010,1551.0867,27.1172,0);
yakuzahealarmour[0]=CreateDynamicPickup(1240, 1, 2594.0845,2793.8118,10.8203,0);
yakuzahealarmour[1]=CreateDynamicPickup(1242, 1, 2594.0845,2793.8118,10.8203,0);
grovehealarmour[0] = CreateDynamicPickup(1240, 1, 2498.2009,-1705.7358,1014.7422,1);
grovehealarmour[1] = CreateDynamicPickup(1242, 1, 2498.2009,-1705.7358,1014.7422,1);
soldierhealarmour[0] = CreateDynamicPickup(1240, 1, 2324.3743,-1147.4288,1050.7101,1);
soldierhealarmour[1] = CreateDynamicPickup(1242, 1, 2324.3743,-1147.4288,1050.7101,1);
viphealarmour[0] = CreateDynamicPickup(1240, 1, 1262.4489,-2026.9534,59.3499,0);
viphealarmour[1] = CreateDynamicPickup(1242, 1, 1262.4489,-2026.9534,59.3499,0);
dfhealarmour[0] = CreateDynamicPickup(1240, 1, 213.4277,1809.0309,21.8672,0);
dfhealarmour[1] = CreateDynamicPickup(1242, 1, 213.4277,1809.0309,21.8672,0);
dfhealarmour2[0] = CreateDynamicPickup(1240, 1, 882.1015,-2255.8940,12.8527,0);
dfhealarmour2[1] = CreateDynamicPickup(1242, 1, 882.1015,-2255.8940,12.8527,0);
dfhealarmour3[0] = CreateDynamicPickup(1240, 1, -2447.1411,495.3655,30.1016,0);
dfhealarmour3[1] = CreateDynamicPickup(1242, 1, -2447.1411,495.3655,30.1016,0);
EShealarmour[0] = CreateDynamicPickup(1240, 1, 2451.2534,-1696.0654,1013.5078,1);
EShealarmour[1] = CreateDynamicPickup(1242, 1, 2451.2534,-1696.0654,1013.5078,1);
ElevatorPickup[0] = CreateDynamicPickup(1318, 1, 1806.0117,-1303.7578,125.7266,0);
ElevatorPickup[1] = CreateDynamicPickup(1318, 1, 1801.1755,-1303.1967,131.7344,0);
FISHING=CreateDynamicPickup(1239, 1, 2150.0171,-100.8072,2.8478, -1);
VILNAPICKUP=CreateDynamicPickup(1318, 1, 279.1491,1833.1394,18.0874, 0);
SDELKAPICKUP=CreateDynamicPickup(1318, 1, 1723.4492,-1665.6934,20.2293, 1);
//	BUYOFFICEPICKUP=CreateDynamicPickup(1318, 1, 1793.8055,-1304.5997,13.5989, 0);
ATMPICKUP[1]=CreateDynamicPickup(1274, 1, 1538.5005,-1614.0280,13.5469, 0);
ATMPICKUP[2]=CreateDynamicPickup(1274, 1, 386.5083,-1827.4729,7.8359, 0);
ATMPICKUP[3]=CreateDynamicPickup(1274, 1, 1239.6632,-2041.0039,59.9210, 0);
ATMPICKUP[4]=CreateDynamicPickup(1274, 1, 379.5750,-2060.4958,7.8359, 0);
ATMPICKUP[5]=CreateDynamicPickup(1274, 1, 672.7897,-503.1278,16.3359, 0);
ATMPICKUP[6]=CreateDynamicPickup(1274, 1, 2489.7417,923.2555,11.0234, 0);
ATMPICKUP[7]=CreateDynamicPickup(1274, 1, 2181.0786,2461.8982,10.8203, 0);
ATMPICKUP[8]=CreateDynamicPickup(1274, 1, -174.5244,1139.4585,19.7500, 0);
ATMPICKUP[9]=CreateDynamicPickup(1274, 1, -1487.1859,2583.0183,55.8359, 0);
ATMPICKUP[10]=CreateDynamicPickup(1274, 1, -2491.7312,2366.4600,10.2736, 0);
ATMPICKUP[11]=CreateDynamicPickup(1274, 1, 210.3036,1809.4667,21.8672, 0);
ATMPICKUP[12]=CreateDynamicPickup(1274, 1, 2194.2754,1986.2334,12.2969, 0);
ATMPICKUP[13]=CreateDynamicPickup(1274, 1, 398.4085,-1805.4634,7.8379, 0);
ATMPICKUP[14]=CreateDynamicPickup(1274, 1, 256.8828,70.2356,1003.5706, 1);
ATMPICKUP[15]=CreateDynamicPickup(1274, 1, 142.8215,1380.9327,1088.3672, 1);
ATMPICKUP[16]=CreateDynamicPickup(1274, 1, 2491.4697,-1697.2418,1014.7531, 1);
ATMPICKUP[17]=CreateDynamicPickup(1274, 1, 884.3392,-2255.4385,12.9527, 0);
ATMPICKUP[18]=CreateDynamicPickup(1274, 1, 2088.5652,1285.0544,10.9128, 0);
ATMPICKUP[19]=CreateDynamicPickup(1274, 1, 1940.9657,764.1401,10.9203, 0);
ATMPICKUP[20]=CreateDynamicPickup(1274, 1, 369.4242,-1352.7485,14.6682, 0);
ATMPICKUP[21]=CreateDynamicPickup(1274, 1, 512.8521,-1552.2284,16.5595, 0);
ATMPICKUP[22]=CreateDynamicPickup(1274, 1, 828.5903,-1386.0410,13.6804, 0);
ATMPICKUP[23]=CreateDynamicPickup(1274, 1, 646.4356,-1764.3721,13.0817, 0);
ATMPICKUP[24]=CreateDynamicPickup(1274, 1, 2498.6228,-1759.1406,13.6243, 0);
ATMPICKUP[25]=CreateDynamicPickup(1274, 1, 1832.2898,-1837.7346,13.6781, 0);
ATMPICKUP[26]=CreateDynamicPickup(1274, 1, 1346.1368,-1758.5430,13.6156, 0);
BIZPICKUP[0]=CreateDynamicPickup(1239, 1, 497.4557,-75.6231,998.7578, -1);
BIZPICKUP[1]=CreateDynamicPickup(1239, 1, 287.8558,-109.2027,1001.5156, -1);
BIZPICKUP[2]=CreateDynamicPickup(1581, 1,-2026.8839,-115.1081,1035.1719, -1);
BIZPICKUP[3]=CreateDynamicPickup(1239, 1, -30.9303,-28.3415,1003.557, -1);
BIZPICKUP[4]=CreateDynamicPickup(1239, 1, 206.9638,-129.8357,1003.5078, -1);
BIZPICKUP[5]=CreateDynamicPickup(1239, 1, 376.6553,-68.1552,1001.5151, -1);
BIZPICKUP[6]=CreateDynamicPickup(1239, 1, 822.8092,1.7616,1004.1797, -1);
BIZPICKUP[7]=CreateDynamicPickup(1239, 1, 203.8465,-44.4779,1001.8047, -1);
BIZPICKUP[8]=CreateDynamicPickup(1239, 1, 499.3484,-20.5936,1000.6797, -1);
BIZPICKUP[9]=CreateDynamicPickup(1239, 1, 755.7616,1440.6393,1102.7031, -1);
BIZPICKUP[10]=CreateDynamicPickup(1239, 1, 773.6641,-72.9778,1000.6484, -1);
BIZPICKUP[11]=CreateDynamicPickup(1239, 1, 1215.0492,-12.2688,1000.9219, -1);
BIZPICKUP[12]=CreateDynamicPickup(1239, 1, 369.5925,-6.7357,1001.8589, -1);
BIZPICKUP[13]=CreateDynamicPickup(1239, 1, 450.5178,-84.4856,999.5547, -1);
BIZPICKUP[14]=CreateDynamicPickup(1239, 1, 1720.5767,-1671.2698,20.2241, -1);
BIZPICKUP[15]=CreateDynamicPickup(1239, 1, -23.3775,-55.2958,1003.5469, -1);
BIZPICKUP[16]=CreateDynamicPickup(1239, 1, 773.0745,-39.3959,1000.6865, -1);
//BIZPICKUP[17]=CreateDynamicPickup(1239, 1, 2568.4888,-1296.4260,1037.7734, -1);
BIZPICKUP[18]=CreateDynamicPickup(1239, 1, 2548.3892,-1293.2520,1044.1250, -1);
BIZPICKUP[19]=CreateDynamicPickup(1239, 1, 2537.1509,-1286.3304,1054.6406, -1);
BIZPICKUP[20]=CreateDynamicPickup(1239, 1, -1395.4200,1245.6000,1039.8672, -1);
BIZPICKUP2[0]=CreateDynamicPickup(1275, 1, 755.0161,-40.4032,1000.5859, -1);
BIZPICKUP2[1]=CreateDynamicPickup(1275, 1, 754.6669,-26.1707,1000.5859, -1);
BIZPICKUP2[2]=CreateDynamicPickup(1275, 1, 770.9482,-77.6443,1000.6563, -1);
BIZPICKUP2[3]=CreateDynamicPickup(1275, 1, 758.3909,-78.0859,1000.6508, -1);
CreateDynamicPickup(347, 1, 252.6609,62.8114,1003.6406, 1);
CreateDynamicPickup(1240, 2, 2029.7926,1550.6443,13.1209, 0);
CreateDynamicPickup(1242, 2, 2028.0229,1540.1416,13.1209, 0);
CreateDynamicPickup(1240, 2, 1492.2445,-1639.6790,15.0469, 0);
CreateDynamicPickup(1242, 2, 1466.9248,-1638.8812,15.0469, 0);
CreateDynamicPickup(1318, 0, 1247.4926,-2047.3232,59.9830, -1);
CreateDynamicPickup(1318,0,1213.1379,-2004.4064,68.9335,-1);
CreateDynamicPickup(1318,0,1213.1505,-2068.9939,68.9775,-1);
//pickups - location - close
//vehicles - location - open
//SetVehicleVirtualWorld(lodka2[0], 1); SetVehicleVirtualWorld(lodka2[1], 1); SetVehicleVirtualWorld(lodka2[2], 1);
//SetVehicleVirtualWorld(lodka2[3], 1); SetVehicleVirtualWorld(lodka2[4], 1); SetVehicleVirtualWorld(lodka2[5], 1);
//ToggleEngine(lodka[0], VEHICLE_PARAMS_OFF); vehEngineStatusON[vehicleid]=0;
//ToggleEngine(lodka[1], VEHICLE_PARAMS_OFF); vehEngineStatusON[vehicleid]=0;
//ToggleEngine(lodka[2], VEHICLE_PARAMS_OFF); vehEngineStatusON[vehicleid]=0;
//ToggleEngine(lodka[3], VEHICLE_PARAMS_OFF); vehEngineStatusON[vehicleid]=0;
//ToggleEngine(lodka[4], VEHICLE_PARAMS_OFF); vehEngineStatusON[vehicleid]=0;
//ToggleEngine(lodka[5], VEHICLE_PARAMS_OFF); vehEngineStatusON[vehicleid]=0;
CreateDynamicObject(18850, 2295.93066, -681.73029, 123.43365,   0.00000, 0.00000, 0.00000); //ufo zone heli
ufoVehicle[0]= AddStaticVehicle(469,2299.4702,-672.0352,136.6915,194.3530,1,1); // ufo 1
ufoVehicle[1]= AddStaticVehicle(469,2305.8599,-692.8008,136.6866,17.7271,1,1); // ufo 2
ufoVehicle[2]= AddStaticVehicle(469,2283.6023,-694.1099,136.6915,313.4932,1,1); // ufo 3
//objectBalloon=CreateDynamicObject(19333, 237.08794, -1823.41284, 2.95767,   0.00000, 0.00000, 0.00000);
objectUfo = CreateDynamicObject(18846, 0, 0, 0,   0.00000, 0.00000, 0);
objectUfo2 = CreateDynamicObject(18846, 0, 0, 0,   0.00000, 0.00000, 0);
objectUfo3 = CreateDynamicObject(18846, 0, 0, 0,   0.00000, 0.00000, 0);
new objectsUfoEffect=CreateDynamicObject(18670, 0, 0, 0,   0.00000, 0.00000, 0);
new objectsUfoEffect2=CreateDynamicObject(18670, 0, 0, 0,   0.00000, 0.00000, 0);
new objectsUfo2Effect=CreateDynamicObject(18728, 0, 0, 0,   0.00000, 0.00000, 0);
new objectsUfo2Effect2=CreateDynamicObject(18728, 0, 0, 0,   0.00000, 0.00000, 0);
AttachDynamicObjectToVehicle(objectsUfoEffect, ufoVehicle[0],0, 0.7, 0.9, 0, 0, 0);
AttachDynamicObjectToVehicle(objectsUfoEffect2, ufoVehicle[0],0, 0, 0.9, 0, 0, 0);
AttachDynamicObjectToVehicle(objectsUfo2Effect, ufoVehicle[1],0, 0.7, 1, 0, 0, 0);
AttachDynamicObjectToVehicle(objectsUfo2Effect2, ufoVehicle[1],0, 0, 1, 0, 0, 0);
AttachDynamicObjectToVehicle(objectUfo, ufoVehicle[0],0, 0, 0, 1.4, 0, 0);
AttachDynamicObjectToVehicle(objectUfo2, ufoVehicle[1], 0, 0, 1.4, 0, 0, 0);
AttachDynamicObjectToVehicle(objectUfo3, ufoVehicle[2], 0, 0, 1.4, 0, 0, 0);
// SetVehicleVirtualWorld(ufoVehicle[0],43); SetVehicleVirtualWorld(ufoVehicle[1],43); SetVehicleVirtualWorld(ufoVehicle[2],43); 2407.9551, -657.5545, 129.9148
LinkVehicleToInterior(ufoVehicle[0],1); LinkVehicleToInterior(ufoVehicle[1],1); LinkVehicleToInterior(ufoVehicle[2],1);
carpilot[1] = AddStaticVehicle(511,382.7576,2536.0332,17.9922,176.6510,3,3); // pilot1
carpilot[2] = AddStaticVehicle(511,359.8245,2536.8083,18.0109,177.6166,3,3); // pilot2
carpilot[3] = AddStaticVehicle(511,268.3786,2535.4526,18.0536,180.3932,3,3); // pilot3
carpilot[4] = AddStaticVehicle(511,243.3229,2535.4875,18.0442,179.8697,3,3); // pilot4
carpilot[5] = AddStaticVehicle(511,363.8391,2470.6494,17.8039,359.7092,3,3); // pilot5
for(new i=1; i<=5; i++)
{
ToggleEngine(carpilot[i], VEHICLE_PARAMS_OFF);
vehEngineStatusON[carpilot[i]]=0;
lockedvehicle[carpilot[i]]=1;
isPilotJobVeh[carsweeper[i]]= true;
isJobVeh[carsweeper[i]] = true;
}
carsweeper[1] = AddStaticVehicle(574,1224.7444,-1531.4399,13.2720,90.7366,1,1); // car 1
carsweeper[2] = AddStaticVehicle(574,1224.7222,-1544.3811,13.2720,90.3748,1,1); // car 2
carsweeper[3] = AddStaticVehicle(574,1224.6268,-1559.1716,13.2739,90.3772,1,1); // car 3
carsweeper[4] = AddStaticVehicle(574,1224.7828,-1554.1384,13.2720,88.7648,1,1); // car 4
for(new i=1; i<=5; i++)
{
ToggleEngine(carsweeper[i], VEHICLE_PARAMS_OFF);
vehEngineStatusON[carsweeper[i]]=0;
lockedvehicle[carsweeper[i]]=1;
isSweepJobVeh[carsweeper[i]]= true;
isJobVeh[carsweeper[i]] = true;
}
carcoalmine[1] = AddStaticVehicleEx(406,858.2269,879.6721,14.7627,201.0449,1,1,5); //
carcoalmine[2] = AddStaticVehicleEx(406,850.8806,876.3572,14.9247,202.1210,1,1,5); //
carcoalmine[3] = AddStaticVehicleEx(406,843.9622,873.7372,14.7720,202.0721,1,1,5); //
carcoalmine[4] = AddStaticVehicleEx(406,837.6867,870.4841,14.7916,201.2635,1,1,5); //
for(new i=1; i<=5; i++)
{
ToggleEngine(carcoalmine[i], VEHICLE_PARAMS_OFF);
vehEngineStatusON[carcoalmine[i]]=0;
lockedvehicle[carcoalmine[i]]=1;
isCoalmineJobVeh[carcoalmine[i]]= true;
isJobVeh[carcoalmine[i]] = true;
}

lottoveh=AddStaticVehicle(506,2235.5432,1641.0342,1008.0864,0.0618,3,3); // veh1
LinkVehicleToInterior(lottoveh, 1);
SetVehicleVirtualWorld(lottoveh,1);

afterwork[0]=AddStaticVehicleEx(411,832.4344,837.6809,11.5070,20.8823,1,1,15); // veh1
afterwork[1]=AddStaticVehicleEx(560,835.9622,838.5618,11.8255,21.4923,229,229,15); // veh
afterwork[2]=AddStaticVehicleEx(565,839.2482,839.3900,12.1361,19.7798,3,3,15); // veh
afterwork[3]=AddStaticVehicleEx(522,841.9667,840.9456,12.2186,22.4552,1,0,15); // veh
afterwork[4]=AddStaticVehicleEx(522,843.3854,841.7632,12.3236,26.6766,1,1,15); // veh
afterwork[5]=AddStaticVehicleEx(522,845.2407,842.2749,12.5161,14.0011,7,7,15); // veh
afterwork[6]=AddStaticVehicleEx(411,615.0783,1227.1151,11.4458,118.5010,1,0,15); // veh
afterwork[7]=AddStaticVehicleEx(560,613.5852,1230.2531,11.4458,118.3363,229,229,15); // veh
afterwork[8]=AddStaticVehicleEx(565,611.6678,1232.9268,11.4458,118.2612,3,3,15); // veh
afterwork[9]=AddStaticVehicleEx(522,609.0194,1236.0812,11.2933,115.5268,1,0,15); // veh
afterwork[10]=AddStaticVehicleEx(522,608.2195,1237.7094,11.2850,108.2882,1,1,15); // veh
afterwork[11]=AddStaticVehicleEx(522,608.1815,1238.8450,11.2928,115.8031,7,7,15); // veh
afterwork[12]=AddStaticVehicleEx(411,425.6216,2529.6577,16.3437,184.5891,1,0,15); // veh
afterwork[13]=AddStaticVehicleEx(560,422.0308,2528.8699,16.3254,185.0556,229,229,15); // veh
afterwork[14]=AddStaticVehicleEx(565,418.9781,2528.9233,16.3172,179.7733,3,3,15); // veh
afterwork[15]=AddStaticVehicleEx(522,415.1333,2528.9492,16.1791,175.1624,1,0,15); // veh
afterwork[16]=AddStaticVehicleEx(522,414.0790,2528.9260,16.1763,166.9628,1,1,15); // veh
afterwork[17]=AddStaticVehicleEx(522,412.5888,2528.7742,16.1676,171.5464,7,7,15); // veh
afterwork[18]=AddStaticVehicle(411,2102.7363,-1774.3073,13.1204,266.9883,1,1); // dr veh
afterwork[19]=AddStaticVehicle(560,2121.1853,-1774.4231,13.1192,89.4078,229,229); // veh2
afterwork[20]=AddStaticVehicle(565,2121.2725,-1768.7245,13.1220,86.4405,3,3); // veh3
afterwork[21]=AddStaticVehicleEx(522,2119.4849,-1784.1099,12.9576,2.2808,1,1,15); // after work 4
afterwork[22]=AddStaticVehicleEx(522,2117.9539,-1784.2291,12.9628,0.0000,1,1,15); // after work 5
afterwork[23]=AddStaticVehicleEx(522,2115.9690,-1783.9036,12.9579,0.0000,7,7,15); // after work 6
afterwork[24]=AddStaticVehicleEx(411,-539.4708,2565.8433,53.1425,268.6549,0,0,15); // veh
afterwork[25]=AddStaticVehicleEx(411,-539.5480,2563.2871,53.1418,268.1252,1,1,15); // veh
afterwork[26]=AddStaticVehicleEx(411,-539.3613,2560.2180,53.1418,268.8858,7,7,15); // veh
afterwork[27]=AddStaticVehicleEx(522,-540.8374,2556.6814,52.9886,269.0560,0,0,15); // veh
afterwork[28]=AddStaticVehicleEx(522,-540.7065,2555.1716,52.9886,263.3294,1,1,15); // veh
afterwork[29]=AddStaticVehicleEx(522,-540.2985,2553.9404,52.9845,260.8280,7,7,15); // veh
afterwork[30]=AddStaticVehicleEx(411,0.4873,-333.9484,5.1568,93.2239,0,0,15); // veh
afterwork[31]=AddStaticVehicleEx(411,0.5126,-336.6106,5.1568,88.4291,1,1,15); // veh
afterwork[32]=AddStaticVehicleEx(411,-0.2487,-339.4753,5.1568,86.2355,7,7,15); // veh
afterwork[33]=AddStaticVehicleEx(522,-1.0375,-343.6505,5.0041,89.6106,0,0,15); // veh
afterwork[34]=AddStaticVehicleEx(522,-1.4598,-344.5724,5.0028,92.8479,1,1,15); // veh
afterwork[35]=AddStaticVehicleEx(522,-2.0090,-346.2775,5.0055,85.8586,7,7,15); // veh
afterwork[36]=AddStaticVehicle(411,296.2422,-1648.0835,17.5864,77.8654,1,1); // car1
afterwork[37]=AddStaticVehicle(411,296.5289,-1645.3439,17.5864,80.8470,7,7); // car2
afterwork[38]=AddStaticVehicle(411,296.6644,-1642.6450,17.5864,83.0085,3,3); // car3
afterwork[39]=AddStaticVehicle(522,293.8108,-1640.7561,17.4346,81.4339,1,1); // car4
afterwork[40]=AddStaticVehicle(522,293.4643,-1639.5294,17.4130,78.6617,7,7); // car5
afterwork[41]=AddStaticVehicle(522,292.8100,-1638.7036,17.4354,76.1694,3,3); // car67
for(new i=0;i<42;i++)
{
ToggleEngine(afterwork[i], VEHICLE_PARAMS_OFF);
vehEngineStatusON[afterwork[i]]=0;
lockedvehicle[afterwork[i]]=1;
isAfterJobVeh[afterwork[i]] = true;
}
carbus[1] = AddStaticVehicle(431,2647.9883,1165.1466,10.9219,90.0777,0,2); // bus job 1 FIX
carbus[2] = AddStaticVehicle(431,2626.4558,1165.1541,10.9175,89.7388,0,5); // bus job 2 FIX
carbus[3] = AddStaticVehicle(431,2624.7705,1178.3109,10.9281,88.7877,0,2); // bus job 3 FIX
carbus[4] = AddStaticVehicle(431,2624.1948,1183.4119,10.9192,86.0509,0,2); // bus job 4 FIX
carbus[5] = AddStaticVehicle(431,2637.5513,1178.0280,10.9187,88.5284,0,7); // bus job 5 FIX
carbus[6] = AddStaticVehicle(431,301.2326,-1613.9371,17.5864,258.2010,2,2); // bus job 1
carbus[7] = AddStaticVehicle(431,270.0709,-1633.6206,17.5864,80.3686,66,66); // bus job 2
carbus[8] = AddStaticVehicle(431,271.9068,-1625.5955,17.9561,80.7462,128,230); // bus job 3
carbus[9] = AddStaticVehicle(431,272.8251,-1617.7087,17.9649,79.7875,220,220); // bus job 4
for(new i=1;i<=9;i++)
{
ToggleEngine(carbus[i], VEHICLE_PARAMS_OFF);
vehEngineStatusON[carbus[i]]=0;
lockedvehicle[carbus[i]]=1;
isBusJobVeh[carbus[i]] = true;
isJobVeh[carbus[i]] = true;
}
carpizza[0]=AddStaticVehicle(448,1354.4657,238.2722,19.1671,65.7184,3,6); // pizzaveh1
carpizza[1]=AddStaticVehicle(448,1355.2198,240.0866,19.1668,64.9130,3,6); // pizzaveh2
carpizza[2]=AddStaticVehicle(448,1355.9218,241.6502,19.1675,66.0910,3,6); // pizzaveh3
carpizza[3]=AddStaticVehicle(448,1362.2090,257.1578,19.1659,66.2668,3,6); // pizzaveh4
carpizza[4]=AddStaticVehicle(448,1362.9819,258.7182,19.1661,65.0909,3,6); // pizzaveh5
carpizza[5]=AddStaticVehicle(448,1363.7780,260.4910,19.1675,67.7035,3,6); // pizzaveh
for(new i=0;i<=5;i++)
{
lockedvehicle[carpizza[i]]=1;
ToggleEngine(carpizza[i], VEHICLE_PARAMS_OFF);
vehEngineStatusON[carpizza[i]]=0;
isPizzaJobVeh[carpizza[i]] = true;
isJobVeh[carpizza[i]] = true;
}
cardeliver[1] = AddStaticVehicle(609,-2591.4973,666.7773,27.8816,269.2154,3,3); // deliver 1
cardeliver[2] = AddStaticVehicle(609,-2591.3330,661.5651,27.8854,270.9301,6,6); // deliver 2
cardeliver[3] = AddStaticVehicle(609,-2591.2168,655.8153,27.8842,271.7381,12,12); // deliver 3
cardeliver[4] = AddStaticVehicle(609,-2590.7949,645.9873,27.8794,270.5117,12,12); // deliver 4
cardeliver[5] = AddStaticVehicle(609,-2590.9695,650.5853,27.8791,269.8629,34,34); // deliver 5
for(new i=1;i<=5;i++)
{
lockedvehicle[cardeliver[i]]=1;
ToggleEngine(cardeliver[i], VEHICLE_PARAMS_OFF);
vehEngineStatusON[cardeliver[i]]=0;
isDeliverJobVeh[cardeliver[i]] = true;
isJobVeh[cardeliver[i]] = true;
}
//////////////////////////gang car shop vip ////////////////////////////
//otvun garages - location - open
new nobug2=0;
if(nobug2==0)
{
ordervehicles2[952][0]=AddStaticVehicle(randomex(506,510),350.3980,-1217.2004,76.1606,309.3730,randomex(128,255),randomex(128,255)); // veh1
ordervehicles2[952][1]=AddStaticVehicle(randomex(540,541),346.8579,-1212.4021,76.1640,306.2505,randomex(128,255),randomex(128,255)); // veh2
ordervehicles2[952][2]=AddStaticVehicle(randomex(558,561),343.9902,-1208.3662,76.1681,303.8282,randomex(128,255),randomex(128,255)); // veh3
ordervehicles2[952][3]=AddStaticVehicle(randomex(565,567),327.3556,-1231.6969,75.7435,129.0511,randomex(128,255),randomex(128,255)); // veh4
ordervehicles2[952][4]=AddStaticVehicle(randomex(579,581),336.0158,-1230.2646,75.8579,214.4056,randomex(128,255),randomex(128,255)); // veh5
ordervehicles2[952][5]=AddStaticVehicle(randomex(602,603),344.0627,-1223.7205,76.0203,42.1850,randomex(128,255),randomex(128,255)); // veh6
ordervehicles2[952][6]=AddStaticVehicle(randomex(410,413),317.3067,-1219.0442,75.7698,127.1861,randomex(128,255),randomex(128,255)); // veh7
ordervehicles2[952][7]=AddStaticVehicle(randomex(400,402),323.5687,-1214.4476,75.8594,39.0223,randomex(128,255),randomex(128,255)); // veh8
ordervehicle[ordervehicles2[952][0]]=1;
ordervehicle[ordervehicles2[952][1]]=1;
ordervehicle[ordervehicles2[952][2]]=1;
ordervehicle[ordervehicles2[952][3]]=1;
ordervehicle[ordervehicles2[952][4]]=1;
ordervehicle[ordervehicles2[952][5]]=1;
ordervehicle[ordervehicles2[952][6]]=1;
ordervehicle[ordervehicles2[952][7]]=1;
ordervehicles[ ordervehicles2[952][0] ]=952;
ordervehicles[ ordervehicles2[952][1] ]=952;
ordervehicles[ ordervehicles2[952][2] ]=952;
ordervehicles[ ordervehicles2[952][3] ]=952;
ordervehicles[ ordervehicles2[952][4] ]=952;
ordervehicles[ ordervehicles2[952][5] ]=952;
ordervehicles[ ordervehicles2[952][6] ]=952;
ordervehicles[ ordervehicles2[952][7] ]=952;
orderlevel[952][0]=randomex(1,5);
orderlevel[952][1]=randomex(1,5);
orderlevel[952][2]=randomex(5,15);
orderlevel[952][3]=randomex(15,25);
orderlevel[952][4]=randomex(25,35);
orderlevel[952][5]=randomex(35,40);
orderlevel[952][6]=randomex(1,50);
orderlevel[952][7]=randomex(1,65);
orderprice[952][0]=randomex(10000,100000);
orderprice[952][1]=randomex(10000,300000);
orderprice[952][2]=randomex(10000,400000);
orderprice[952][3]=randomex(100000,5000000);
orderprice[952][4]=randomex(300000,7000000);
orderprice[952][5]=randomex(50000,1000000);
orderprice[952][6]=randomex(50000,1000000);
orderprice[952][7]=randomex(70000,1000000);
new stringvehicle3[256];
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[952][0]),FormatNumber(orderprice[952][0]),orderlevel[952][0]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[952][0], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[952][1]),FormatNumber(orderprice[952][1]),orderlevel[952][1]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[952][1], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[952][2]),FormatNumber(orderprice[952][2]),orderlevel[952][2]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[952][2], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[952][3]),FormatNumber(orderprice[952][3]),orderlevel[952][3]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[952][3], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[952][4]),FormatNumber(orderprice[952][4]),orderlevel[952][4]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[952][4], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[952][5]),FormatNumber(orderprice[952][5]),orderlevel[952][5]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[952][5], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[952][6]),FormatNumber(orderprice[952][6]),orderlevel[952][6]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[952][6], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[952][7]),FormatNumber(orderprice[952][7]),orderlevel[952][7]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[952][7], 0, 0, 0, -1, 12.0);
}
if(nobug2==0)
{
ordervehicles2[951][0]=AddStaticVehicle(randomex(506,510),2453.4719,-1641.0934,13.3087,269.0769,randomex(128,255),randomex(128,255)); // veh1
ordervehicles2[951][1]=AddStaticVehicle(randomex(540,541),2452.6689,-1636.5135,13.3095,266.0028,randomex(128,255),randomex(128,255)); // veh2
ordervehicles2[951][2]=AddStaticVehicle(randomex(558,561),2446.5198,-1632.9688,13.3045,0.6859,randomex(128,255),randomex(128,255)); // veh3
ordervehicles2[951][3]=AddStaticVehicle(randomex(565,567),2443.9146,-1633.3344,13.3088,0.9329,randomex(128,255),randomex(128,255)); // veh4
ordervehicles2[951][4]=AddStaticVehicle(randomex(579,581),2428.3589,-1644.1643,13.2902,89.5434,randomex(128,255),randomex(128,255)); // veh5
ordervehicles2[951][5]=AddStaticVehicle(randomex(602,603),2439.6101,-1646.0852,13.2846,179.9485,randomex(128,255),randomex(128,255)); // veh6
ordervehicles2[951][6]=AddStaticVehicle(randomex(410,413),2440.9321,-1633.4487,13.3092,1.6014,randomex(128,255),randomex(128,255)); // veh7
ordervehicles2[951][7]=AddStaticVehicle(randomex(400,402),2453.3733,-1644.7886,13.3086,269.0056,randomex(128,255),randomex(128,255)); // veh8
ordervehicle[ordervehicles2[951][0]]=1;
ordervehicle[ordervehicles2[951][1]]=1;
ordervehicle[ordervehicles2[951][2]]=1;
ordervehicle[ordervehicles2[951][3]]=1;
ordervehicle[ordervehicles2[951][4]]=1;
ordervehicle[ordervehicles2[951][5]]=1;
ordervehicle[ordervehicles2[951][6]]=1;
ordervehicle[ordervehicles2[951][7]]=1;
ordervehicles[ ordervehicles2[951][0] ]=951;
ordervehicles[ ordervehicles2[951][1] ]=951;
ordervehicles[ ordervehicles2[951][2] ]=951;
ordervehicles[ ordervehicles2[951][3] ]=951;
ordervehicles[ ordervehicles2[951][4] ]=951;
ordervehicles[ ordervehicles2[951][5] ]=951;
ordervehicles[ ordervehicles2[951][6] ]=951;
ordervehicles[ ordervehicles2[951][7] ]=951;
orderlevel[951][0]=randomex(1,5);
orderlevel[951][1]=randomex(1,5);
orderlevel[951][2]=randomex(5,15);
orderlevel[951][3]=randomex(15,25);
orderlevel[951][4]=randomex(25,35);
orderlevel[951][5]=randomex(35,40);
orderlevel[951][6]=randomex(1,50);
orderlevel[951][7]=randomex(1,65);
orderprice[951][0]=randomex(10000,100000);
orderprice[951][1]=randomex(10000,300000);
orderprice[951][2]=randomex(10000,400000);
orderprice[951][3]=randomex(100000,5000000);
orderprice[951][4]=randomex(300000,7000000);
orderprice[951][5]=randomex(50000,1000000);
orderprice[951][6]=randomex(50000,1000000);
orderprice[951][7]=randomex(70000,1000000);
new stringvehicle3[256];
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[951][0]),FormatNumber(orderprice[951][0]),orderlevel[951][0]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[951][0], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[951][1]),FormatNumber(orderprice[951][1]),orderlevel[951][1]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[951][1], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[951][2]),FormatNumber(orderprice[951][2]),orderlevel[951][2]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[951][2], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[951][3]),FormatNumber(orderprice[951][3]),orderlevel[951][3]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[951][3], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[951][4]),FormatNumber(orderprice[951][4]),orderlevel[951][4]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[951][4], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[951][5]),FormatNumber(orderprice[951][5]),orderlevel[951][5]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[951][5], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[951][6]),FormatNumber(orderprice[951][6]),orderlevel[951][6]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[951][6], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[951][7]),FormatNumber(orderprice[951][7]),orderlevel[951][7]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[951][7], 0, 0, 0, -1, 12.0);
}
if(nobug2==0)
{
ordervehicles2[950][0]=AddStaticVehicle(randomex(506,510),1362.4768,-2027.6791,55.8462,97.9882,randomex(128,255),randomex(128,255)); // veh1
ordervehicles2[950][1]=AddStaticVehicle(randomex(540,541),1338.1989,-2030.4833,56.3592,277.1398,randomex(128,255),randomex(128,255)); // veh2
ordervehicles2[950][2]=AddStaticVehicle(randomex(558,561),1334.8594,-2011.5387,55.8831,277.7690,randomex(128,255),randomex(128,255)); // veh3
ordervehicles2[950][3]=AddStaticVehicle(randomex(565,567),1338.7208,-2036.9255,56.4455,277.2447,randomex(128,255),randomex(128,255)); // veh4
ordervehicles2[950][4]=AddStaticVehicle(randomex(579,581),1337.4778,-2024.1270,56.2719,277.3302,randomex(128,255),randomex(128,255)); // veh5
ordervehicles2[950][5]=AddStaticVehicle(randomex(602,603),1336.2843,-2017.8296,56.2955,277.1591,randomex(128,255),randomex(128,255)); // veh6
ordervehicles2[950][6]=AddStaticVehicle(randomex(410,413),1333.3939,-1998.8373,55.8379,277.9088,randomex(128,255),randomex(128,255)); // veh7
ordervehicles2[950][7]=AddStaticVehicle(randomex(400,402),1332.7531,-1992.5148,55.7612,278.0016,randomex(128,255),randomex(128,255)); // veh8
ordervehicle[ordervehicles2[950][0]]=1;
ordervehicle[ordervehicles2[950][1]]=1;
ordervehicle[ordervehicles2[950][2]]=1;
ordervehicle[ordervehicles2[950][3]]=1;
ordervehicle[ordervehicles2[950][4]]=1;
ordervehicle[ordervehicles2[950][5]]=1;
ordervehicle[ordervehicles2[950][6]]=1;
ordervehicle[ordervehicles2[950][7]]=1;
ordervehicles[ ordervehicles2[950][0] ]=950;
ordervehicles[ ordervehicles2[950][1] ]=950;
ordervehicles[ ordervehicles2[950][2] ]=950;
ordervehicles[ ordervehicles2[950][3] ]=950;
ordervehicles[ ordervehicles2[950][4] ]=950;
ordervehicles[ ordervehicles2[950][5] ]=950;
ordervehicles[ ordervehicles2[950][6] ]=950;
ordervehicles[ ordervehicles2[950][7] ]=950;
orderlevel[950][0]=randomex(1,5);
orderlevel[950][1]=randomex(1,5);
orderlevel[950][2]=randomex(5,15);
orderlevel[950][3]=randomex(15,25);
orderlevel[950][4]=randomex(25,35);
orderlevel[950][5]=randomex(35,40);
orderlevel[950][6]=randomex(1,50);
orderlevel[950][7]=randomex(1,65);
orderprice[950][0]=randomex(10000,100000);
orderprice[950][1]=randomex(10000,300000);
orderprice[950][2]=randomex(10000,400000);
orderprice[950][3]=randomex(100000,5000000);
orderprice[950][4]=randomex(300000,7000000);
orderprice[950][5]=randomex(50000,1000000);
orderprice[950][6]=randomex(50000,1000000);
orderprice[950][7]=randomex(70000,1000000);
new stringvehicle3[256];
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[950][0]),FormatNumber(orderprice[950][0]),orderlevel[950][0]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[950][0], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[950][1]),FormatNumber(orderprice[950][1]),orderlevel[950][1]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[950][1], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[950][2]),FormatNumber(orderprice[950][2]),orderlevel[950][2]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[950][2], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[950][3]),FormatNumber(orderprice[950][3]),orderlevel[950][3]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[950][3], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[950][4]),FormatNumber(orderprice[950][4]),orderlevel[950][4]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[950][4], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[950][5]),FormatNumber(orderprice[950][5]),orderlevel[950][5]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[950][5], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[950][6]),FormatNumber(orderprice[950][6]),orderlevel[950][6]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[950][6], 0, 0, 0, -1, 12.0);
format(stringvehicle3,256,"{00ff00}%s\nЦена: $%s\nРепутация: %d",GetVehicleName(ordervehicles2[950][7]),FormatNumber(orderprice[950][7]),orderlevel[950][7]);
CreateDynamic3DTextLabel(stringvehicle3, 0xFFFFFFFF, 0.0,0.0,0.0, 12.0, INVALID_PLAYER_ID, ordervehicles2[950][7], 0, 0, 0, -1, 12.0);
}
//otvun garages - location - close
/////////////////////////gang car shop vip /////////////////////////////
gangcars[1][1]=CreateVehicle(579,1140.7024,-2030.0927,68.9443,271.9881,181,181,900); gangcarsmax[1]+=1; // vipcar1
gangcars[1][2]=CreateVehicle(411,1255.6378,-2042.1813,59.3249,359.8566,181,181,900); gangcarsmax[1]+=1; // car1
gangcars[1][3]=CreateVehicle(560,1251.7574,-2042.4465,59.4194,0.4784,181,181,900); gangcarsmax[1]+=1; // car2
gangcars[1][4]=CreateVehicle(411,1271.4974,-2044.0261,58.8500,358.9579,181,181,900); gangcarsmax[1]+=1; // car3
gangcars[1][5]=CreateVehicle(560,1276.9476,-2020.6675,58.7760,90.2432,181,181,900); gangcarsmax[1]+=1; // car4
gangcars[1][6]=CreateVehicle(560,1276.9994,-2025.1597,58.7716,85.8770,181,181,900); gangcarsmax[1]+=1; // car5
gangcars[1][7]=CreateVehicle(522,1278.1010,-2062.0664,58.6463,359.6728,181,181,900); gangcarsmax[1]+=1; // car6
gangcars[1][8]=CreateVehicle(468,1276.6409,-2062.0776,58.8024,352.7481,181,181,900); gangcarsmax[1]+=1; // car7
gangcars[1][9]=CreateVehicle(468,1276.4377,-2049.3789,58.8788,182.2628,181,181,900); gangcarsmax[1]+=1; // car8
gangcars[1][10]=CreateVehicle(522,1277.4562,-2049.7666,58.7532,182.2534,181,181,900); gangcarsmax[1]+=1; // car9
gangcars[1][11]=CreateVehicle(409,1278.7852,-2033.7179,58.8042,358.9998,181,181,900); gangcarsmax[1]+=1; // car10
gangcars[1][12]=CreateVehicle(409,1243.1193,-2023.9547,59.8040,181.6419,181,181,900); gangcarsmax[1]+=1; // car11
gangcars[1][13]=CreateVehicle(522,1207.2748,-2040.2957,68.5738,268.0774,181,181,900); gangcarsmax[1]+=1; // car12
gangcars[1][14]=CreateVehicle(522,1207.3162,-2033.1997,68.5826,260.5836,181,181,900); gangcarsmax[1]+=1; // car13
gangcars[1][15]=CreateVehicle(559,1204.9845,-2036.9940,68.6641,269.6446,181,181,900); gangcarsmax[1]+=1; // car14
gangcars[1][16]=CreateVehicle(562,1198.2272,-2037.3168,68.6674,271.6273,181,181,900); gangcarsmax[1]+=1; // car15
gangcars[1][18]=CreateVehicle(579,1140.4452,-2041.7126,68.7708,270.5093,181,181,900); gangcarsmax[1]+=1; // car17
gangcars[1][19]=CreateVehicle(562,1138.6310,-2063.9929,68.6323,2.5411,181,181,900); gangcarsmax[1]+=1; // car18
gangcars[1][20]=CreateVehicle(559,1138.4088,-2010.0665,68.5695,181.0400,181,181,900); gangcarsmax[1]+=1; // car19
gangcars[1][21]=CreateVehicle(411,1263.9884,-2009.7825,59.0687,1.7343,181,181,900); gangcarsmax[1]+=1; // car19
gangcars[1][22]=CreateVehicle(411,1255.8369,-2010.4225,59.3190,0.0286,181,181,900); gangcarsmax[1]+=1; // car19
gangcars[16][1]=CreateVehicle(409, -1754.4410, 938.3846, 24.6129, 270.5095, 171, 171, 900); gangcarsmax[16]+=1; //Stretch
gangcars[16][2] = CreateVehicle(560, -1777.6790, 957.8425, 24.5874, 269.9056, 171, 171, 900); gangcarsmax[16]+=1; //Sultan
gangcars[16][3] = CreateVehicle(560, -1730.1558, 957.8041, 24.5873, 90.0371, 171, 171, 900); gangcarsmax[16]+=1; //Sultan
gangcars[16][4] = CreateVehicle(411, -1764.1466, 947.2263, 24.5391, 269.7079, 171, 171, 900); gangcarsmax[16]+=1; //Infernus
gangcars[16][5] = CreateVehicle(411, -1746.6165, 947.1942, 24.5377, 269.2019, 171, 171, 900); gangcarsmax[16]+=1; //Infernus
gangcars[16][6] = CreateVehicle(579, -1730.8681, 945.4312, 24.7422, 178.1536, 171, 171, 900); gangcarsmax[16]+=1; //Huntley
gangcars[16][7] = CreateVehicle(579, -1777.0849, 945.6668, 24.7440, 180.4462, 171, 171, 900); gangcarsmax[16]+=1; //Huntley
gangcars[16][8] = CreateVehicle(487, -1724.0946, 955.3264, 25.0706, 179.4173, 171, 171, 900); gangcarsmax[16]+=1; //Maverick
gangcars[16][9] = CreateVehicle(522, -1739.0638, 962.4121, 24.4531, 162.8123, 171, 171, 900); gangcarsmax[16]+=1; //NRG-500
gangcars[16][10] = CreateVehicle(522, -1737.6507, 962.4368, 24.4540, 160.2843, 171, 171, 900); gangcarsmax[16]+=1; //NRG-500
gangcars[17][1] = CreateVehicle(411, 2586.6418, 2780.4836, 10.5473, 89.7078, 251, 251, 900); gangcarsmax[17]+=1; //Infernus
gangcars[17][2] = CreateVehicle(411, 2570.3603, 2791.9453, 10.5473, 180.6495, 251, 251, 900); gangcarsmax[17]+=1; //Infernus
gangcars[17][3] = CreateVehicle(560, 2574.4729, 2768.8718, 10.5252, 359.9030, 251, 251, 900); gangcarsmax[17]+=1; //Sultan
gangcars[17][4] = CreateVehicle(579, 2566.2109, 2769.1118, 10.7518, 359.2712, 251, 251, 900); gangcarsmax[17]+=1; //Huntley
gangcars[17][5] = CreateVehicle(579, 2586.4331, 2772.6333, 10.7529, 89.5541, 251, 251, 900); gangcarsmax[17]+=1; //Huntley
gangcars[17][6] = CreateVehicle(560, 2562.0100, 2792.0656, 10.5255, 179.2442, 251, 251, 900); gangcarsmax[17]+=1; //Sultan
gangcars[17][7] = CreateVehicle(562, 2557.8300, 2768.9558, 10.4797, 359.6143, 251, 251, 900); gangcarsmax[17]+=1; //Elegy
gangcars[17][8] = CreateVehicle(487, 2541.2998, 2769.2536, 11.1501, 359.7666, 251, 251, 900); gangcarsmax[17]+=1; //Maverick
gangcars[17][9] = CreateVehicle(522, 2583.3645, 2794.2092, 10.3880, 128.7462, 251, 251, 900); gangcarsmax[17]+=1; //NRG-500
gangcars[17][10] = CreateVehicle(522, 2585.6254, 2794.2553, 10.3881, 127.4658, 251, 251, 900); gangcarsmax[17]+=1;//NRG-500
gangcars[18][1] = CreateVehicle(579, 1783.7011, 2821.2512, 10.7664, 343.0036, 79, 79, 900); gangcarsmax[18]+=1; //Huntley
gangcars[18][2] = CreateVehicle(579, 1749.5639, 2820.7910, 10.7672, 17.6556, 79, 79, 900); gangcarsmax[18]+=1; //Huntley
gangcars[18][3] = CreateVehicle(411, 1778.0570, 2801.7602, 10.5630, 344.4429, 79, 79, 900); gangcarsmax[18]+=1; //Infernus
gangcars[18][4] = CreateVehicle(560, 1755.2161, 2801.8525, 10.5383, 16.5927, 79, 79, 900); gangcarsmax[18]+=1; //Sultan
gangcars[18][5] = CreateVehicle(487, 1766.6214, 2767.2133, 10.9074, 0.0176, 79, 79, 900); gangcarsmax[18]+=1; //Maverick
gangcars[18][6] = CreateVehicle(451, 1766.5034, 2780.9904, 10.5423, 91.5007, 79, 79, 900); gangcarsmax[18]+=1; //Turismo
gangcars[18][7] = CreateVehicle(541, 1766.8874, 2853.9028, 10.4572, 271.1266, 79, 79, 900); gangcarsmax[18]+=1; //Bullet
gangcars[18][8] = CreateVehicle(522, 1779.9742, 2774.1992, 10.6723, 46.1928, 79, 79, 900); gangcarsmax[18]+=1; //NRG-500
gangcars[18][9] = CreateVehicle(522, 1779.6837, 2772.7128, 10.6914, 50.1116, 79, 79, 900); gangcarsmax[18]+=1; //NRG-500
gangcars[18][10] = AddStaticVehicle(481,1749.7095,2787.6172,10.3501,284.3008,155,155); gangcarsmax[18]+=1;// tsbmx1
gangcars[19][1] = CreateVehicle(487, 1131.1058, -1232.8121, 25.4786, 359.0727, 3, 3 , 900); gangcarsmax[19]+=1; //Maverick
gangcars[19][2] = CreateVehicle(560, 1092.8414, -1225.3471, 15.5251, 180.4128, 3, 3, 900); gangcarsmax[19]+=1; //Sultan
gangcars[19][3] = CreateVehicle(578, 1116.0975, -1247.3536, 16.4970, 0.4791, 3, 3, 900); gangcarsmax[19]+=1; //DFT-30
gangcars[19][4] = CreateVehicle(439, 1097.3837, -1225.5856, 15.7161, 181.0876, 3, 3, 900); gangcarsmax[19]+=1; //Stallion
gangcars[19][5] = CreateVehicle(541, 1102.0024, -1225.0908, 15.4486, 180.2831, 3, 3, 900); gangcarsmax[19]+=1; //Bullet
gangcars[19][6] = CreateVehicle(522, 1106.9692, -1224.3183, 15.3949, 183.6737, 3, 3, 900); gangcarsmax[19]+=1; //NRG-500
gangcars[19][7] = CreateVehicle(522, 1105.3911, -1224.3166, 15.3949, 181.0514, 3, 3, 900); gangcarsmax[19]+=1; //NRG-500
gangcars[19][8] = CreateVehicle(451, 1109.9226, -1225.4902, 15.5302, 179.8953, 3, 3, 900); gangcarsmax[19]+=1; //Turismo
gangcars[19][9] = CreateVehicle(579, 1085.8339, -1250.1539, 15.7590, 269.1950, 3, 3, 900); gangcarsmax[19]+=1; //Huntley
gangcars[19][10] = CreateVehicle(411, 1085.5162, -1241.4329, 15.5542, 269.3987, 3, 3, 900); gangcarsmax[19]+=1; //Infernus
gangcars[20][1] = CreateVehicle(522,-43.7467,1090.7900,19.3100,313.1989,98,98, 900); gangcarsmax[20]+=1; // mara car1
gangcars[20][2] = CreateVehicle(522,-41.3642,1090.5417,19.3100,312.1312,98,98, 900); gangcarsmax[20]+=1; // mara car2
gangcars[20][3] = CreateVehicle(566,-25.8431,1117.7206,19.5322,180.2623,98,98, 900); gangcarsmax[20]+=1; // mara car3
gangcars[20][4] = CreateVehicle(567,-9.1512,1113.1694,19.7791,180.2317,98,98, 900); gangcarsmax[20]+=1; // mara car4
gangcars[20][5] = CreateVehicle(411,4.9422,1083.8176,19.4745,90.6888,98,98, 900); gangcarsmax[20]+=1; // mara car5
gangcars[20][6] = CreateVehicle(411,-2.7396,1083.7994,19.4710,89.5072,98,98, 900); gangcarsmax[20]+=1; // mara car6
gangcars[20][7] = CreateVehicle(579,0.4540,1067.7860,19.8970,90.2868,98,98, 900); gangcarsmax[20]+=1; // mara car7
gangcars[20][8] = CreateVehicle(560,-30.3721,1066.7074,19.4498,359.9763,98,98, 900); gangcarsmax[20]+=1; // mara car8
gangcars[20][9] = CreateVehicle(560,-30.3590,1084.8069,19.4481,359.4691,98,98, 900); gangcarsmax[20]+=1; // mara car9
gangcars[20][10] = CreateVehicle(487,-43.7323,1083.2986,23.3676,269.2445,98,98, 900); gangcarsmax[20]+=1; // mara car10
gangcars[21][1] = CreateVehicle(487,1291.2058,-789.7775,96.6011,179.8307,0,0, 900); gangcarsmax[21]+=1; // BGM Car 1
gangcars[21][2] = CreateVehicle(560,1243.4724,-809.0154,87.8661,303.3171,0,0, 900); gangcarsmax[21]+=1; // BGM Car 2
gangcars[21][3] = CreateVehicle(560,1235.8627,-811.3358,87.5092,275.4814,0,0, 900); gangcarsmax[21]+=1; // BGM Car 3
gangcars[21][4] = CreateVehicle(560,1227.4371,-811.8135,87.2921,271.7863,0,0, 900); gangcarsmax[21]+=1; // BGM Car 4
gangcars[21][5] = CreateVehicle(579,1225.8682,-803.0211,88.5512,271.9268,0,0, 900); gangcarsmax[21]+=1; // BGM Car 5
gangcars[21][6] = CreateVehicle(579,1232.8867,-802.7137,88.6010,273.3310,0,0, 900); gangcarsmax[21]+=1; // BGM Car 6
gangcars[21][7] = CreateVehicle(562,1213.3787,-830.7581,84.7358,52.4480,0,0, 900); gangcarsmax[21]+=1; // BGM Car 7
gangcars[21][8] = CreateVehicle(559,1219.3944,-834.1917,84.2755,66.2540,0,0, 900); gangcarsmax[21]+=1; // BGM Car 8
gangcars[21][9] = CreateVehicle(411,1242.9226,-803.3868,83.8676,178.9484,0,0, 900); gangcarsmax[21]+=1; // BGM Car 9
gangcars[21][10] = AddStaticVehicle(522,1238.6616,-801.2802,88.4216,303.1710,0,0); // bgmbike1
gangcars[22][0] = CreateVehicle(560, -813.5150, 1566.0947, 26.7411, 180.0169, 0, 30, -1); gangcarsmax[22]+=1; //Sultan
gangcars[22][1] = CreateVehicle(567, -813.4089, 1555.0924, 26.9023, 359.1227, 0, 169, -1); gangcarsmax[22]+=1; //Savanna
gangcars[22][2] = CreateVehicle(541, -820.8497, 1542.1290, 26.7335, 308.8533, 0, 0, -1); gangcarsmax[22]+=1; //Bullet
gangcars[22][3] = CreateVehicle(451, -821.9215, 1577.9213, 26.7548, 228.5114, 0, 253, -1); gangcarsmax[22]+=1; //Turismo
gangcars[22][4] = CreateVehicle(579, -793.9832, 1542.1098, 26.9094, 88.5361, 0, 118, -1); gangcarsmax[22]+=1; //Huntley
gangcars[22][5] = CreateVehicle(411, -793.1918, 1572.3433, 26.7002, 91.5546, 0, 148, -1); gangcarsmax[22]+=1; //Infernus
gangcars[22][6] = CreateVehicle(487, -822.4821, 1568.9770, 30.4314, 270.8357, 0, 0, -1); gangcarsmax[22]+=1; //Maverick
gangcars[22][7] = CreateVehicle(487, -823.2189, 1555.6975, 30.8420, 270.8032, 0, 0, -1); gangcarsmax[22]+=1; //Maverick
gangcars[22][8] = CreateVehicle(522, -794.7127, 1564.0701, 26.6853, 125.8678, 0, 0, -1); gangcarsmax[22]+=1; //NRG-500
gangcars[22][9] = CreateVehicle(522, -795.6697, 1565.4379, 26.6849, 127.0733, 0, 0, -1); gangcarsmax[22]+=1; //NRG-500*
gangcars[2][1]=AddStaticVehicle(492,2516.7786,-1672.2242,13.7483,61.8494,86,86); gangcarsmax[2]+=1; // gscar1
gangcars[2][2]=AddStaticVehicle(567,2490.0518,-1682.5643,13.2062,89.7653,86,86); gangcarsmax[2]+=1; // gscar2
gangcars[2][3]=AddStaticVehicle(560,2473.3040,-1692.6130,13.2200,359.7604,86,86); gangcarsmax[2]+=1; // gscar3
gangcars[2][4]=AddStaticVehicle(560,2473.2583,-1700.1798,13.2250,359.9103,86,86); gangcarsmax[2]+=1; // gscar4
gangcars[2][5]=AddStaticVehicle(482,2459.0574,-1645.9893,13.5821,180.6712,86,86); gangcarsmax[2]+=1; // gscar5
gangcars[2][6]=AddStaticVehicle(579,2470.4009,-1670.1333,13.2870,11.2885,86,86); gangcarsmax[2]+=1; // gscar6
gangcars[2][7]=AddStaticVehicle(566,2497.9851,-1655.4429,13.1748,81.0761,86,86); gangcarsmax[2]+=1; // gscar7
gangcars[2][8]=AddStaticVehicle(522,2484.2207,-1652.3333,13.0341,146.1948,86,86); gangcarsmax[2]+=1; // gscar8
gangcars[2][9]=AddStaticVehicle(522,2482.3723,-1652.5018,13.0218,140.5111,86,86); gangcarsmax[2]+=1; // gscar9
gangcars[2][10]=AddStaticVehicle(487,2531.6670,-1677.9333,20.1069,88.2078,86,86); gangcarsmax[2]+=1; // gscar10
gangcars[2][11]=AddStaticVehicle(411,2821.5112,2153.7307,10.5474,88.0247,86,86); gangcarsmax[2]+=1; // gslvcar1-fix
gangcars[2][12]=AddStaticVehicle(560,2821.2866,2160.7302,10.5256,90.1592,86,86); gangcarsmax[2]+=1; // gslvcar2
gangcars[2][13]=AddStaticVehicle(562,2821.0684,2167.6587,10.4782,89.9657,86,86); gangcarsmax[2]+=1; // gslvcar3
gangcars[2][14]=AddStaticVehicle(560,2820.6294,2174.5652,10.5182,92.5033,86,86); gangcarsmax[2]+=1; // gslvcar4
gangcars[2][15]=AddStaticVehicle(411,2804.0994,2160.9690,10.5488,303.3521,86,86); gangcarsmax[2]+=1; // gslvcar5
gangcars[2][16]=AddStaticVehicle(566,2800.7881,2167.0522,10.6025,300.1077,86,86); gangcarsmax[2]+=1; // gslvcar6
gangcars[2][17]=AddStaticVehicle(487,2789.6921,2195.7981,10.9967,232.7429,86,86); gangcarsmax[2]+=1;  // gslvheli7
gangcars[2][18]=AddStaticVehicle(522,2811.4480,2150.4363,10.3920,1.9373,86,86); gangcarsmax[2]+=1; // gslvbike8
gangcars[2][19]=AddStaticVehicle(522,2809.8149,2150.4751,10.3912,0.6901,86,86); gangcarsmax[2]+=1; // gslvbike9
gangcars[2][20]=AddStaticVehicle(480,2820.3289,2181.5281,10.5862,91.6513,86,86); gangcarsmax[2]+=1; // gslvcar10
gangcars[3][1]=CreateVehicle(517,2142.6514,-1413.9413,24.6928,89.5360,242,0,900); gangcarsmax[3]+=1; // kola1 - ballas
gangcars[3][2]=CreateVehicle(522,2150.4158,-1412.9873,25.4909,181.1308,242,0,900); gangcarsmax[3]+=1; // motor - ballas
gangcars[3][3]=CreateVehicle(522,2150.4785,-1416.4919,25.4929,180.3405,242,0,900); gangcarsmax[3]+=1; // motor2 - ballas
gangcars[3][4]=CreateVehicle(560,2157.7717,-1423.7246,25.2054,89.1576,242,242,900); gangcarsmax[3]+=1; // sultan - ballas
gangcars[3][5]=CreateVehicle(536,2141.6545,-1429.4076,24.3500,89.7899,242,242,900); gangcarsmax[3]+=1; // kola2 - ballas
gangcars[3][6]=CreateVehicle(566,2155.0444,-1454.5491,25.3726,90.0047,242,242,900); gangcarsmax[3]+=1; // kola3 - ballas
gangcars[3][7]=CreateVehicle(576,2162.3745,-1454.5953,25.1046,90.2217,242,242,900); gangcarsmax[3]+=1; // kola4 - ballas
gangcars[3][8]=CreateVehicle(487,2163.9646,-1465.8907,25.7057,1.0011,242,0,900); gangcarsmax[3]+=1; // heli - ballas
gangcars[3][9]=CreateVehicle(411,2130.9939,-1491.8048,23.5404,359.6788,242,242,900); gangcarsmax[3]+=1; // infernus - ballas
gangcars[3][10]=CreateVehicle(508,2121.8989,-1495.8799,24.3548,323.1362,242,242,900); gangcarsmax[3]+=1; // kola za interior - ballas
ballascars10text = Create3DTextLabel("{C2A2DA}Достъпно само за Rolling Heights Ballas\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в караваната.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в нея.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
Attach3DTextLabelToVehicle(ballascars10text, gangcars[3][10], 0.0, 0.0, 0.0);
new Text3D: taxitext1 = Create3DTextLabel("Taxi\nАко желаете да пътувате до някъде се качете.", 0xB55900FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
new Text3D: taxitext2 = Create3DTextLabel("Taxi\nАко желаете да пътувате до някъде се качете.", 0xB55900FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
new Text3D: taxitext3 = Create3DTextLabel("Taxi\nАко желаете да пътувате до някъде се качете.", 0xB55900FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
new Text3D: taxitext4 = Create3DTextLabel("Taxi\nАко желаете да пътувате до някъде се качете.", 0xB55900FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
new Text3D: taxitext5 = Create3DTextLabel("Taxi\nАко желаете да пътувате до някъде се качете.", 0xB55900FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
new Text3D: taxitext6 = Create3DTextLabel("Taxi\nАко желаете да пътувате до някъде се качете.", 0xB55900FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
gangcars[3][11]=CreateVehicle(481,2128.7788,-1497.3928,23.4840,358.7587,242,242,900); gangcarsmax[3]+=1; // kolelo - ballas
gangcars[3][12]=CreateVehicle(481,2130.0701,-1497.3970,23.4555,1.2986,242,242,900); gangcarsmax[3]+=1; // kolelo2 - ballas
gangcars[4][1]=CreateVehicle(474,2528.6853,-1042.4950,69.2485,92.1955,6,6,900); gangcarsmax[4]+=1; // vagos 1
gangcars[4][2]=CreateVehicle(412,2516.7625,-1052.9630,69.3268,90.0616,6,6,900); gangcarsmax[4]+=1; // vagos 2
gangcars[4][3]=CreateVehicle(411,2514.3618,-1042.1929,69.2062,91.4415,6,6,900); gangcarsmax[4]+=1; // vagos 3
gangcars[4][4]=CreateVehicle(411,2536.9128,-1053.1140,69.2227,91.0605,6,6,900); gangcarsmax[4]+=1; // vagos 4
gangcars[4][5]=CreateVehicle(560,2567.9434,-1061.3292,69.1439,1.3811,6,6,900); gangcarsmax[4]+=1; // vagos 5
gangcars[4][6]=CreateVehicle(560,2557.6958,-1060.4110,69.0014,349.7084,6,6,900); gangcarsmax[4]+=1; // vagos 6
gangcars[4][7]=CreateVehicle(409,2551.2742,-1042.2609,69.2874,86.7152,6,6,900); gangcarsmax[4]+=1; // vagos 7
gangcars[4][8]=CreateVehicle(409,2499.9165,-1051.9506,68.6621,75.7004,6,6,900); gangcarsmax[4]+=1; // vagos 8
gangcars[4][9]=CreateVehicle(560,2499.3738,-1041.9567,68.4273,76.9908,6,6,900); gangcarsmax[4]+=1; // vagos 9
gangcars[4][10]=CreateVehicle(560,2492.9812,-1039.6666,67.6298,68.6085,6,6,900); gangcarsmax[4]+=1; // vagos 10
gangcars[7][1]=CreateVehicle(522,1947.9634,949.1880,10.3873,230.9314,0,0,900); gangcarsmax[7]+=1; // triads2
gangcars[7][2]=CreateVehicle(522,1949.7938,950.5921,10.3918,232.6649,0,0,900); gangcarsmax[7]+=1; // triads1
gangcars[7][3]=CreateVehicle(409,1964.9244,938.4307,10.5423,269.1901,0,0,900); gangcarsmax[7]+=1; // triads3
gangcars[7][4]=CreateVehicle(560,1957.6072,938.5424,10.4487,268.5377,0,0,900); gangcarsmax[7]+=1; // triads4
gangcars[7][5]=CreateVehicle(579,1951.4574,938.7516,10.6755,268.7814,0,0,900); gangcarsmax[7]+=1; // triads5
gangcars[7][6]=CreateVehicle(409,1882.8169,963.8494,10.6203,270.8264,0,0,900); gangcarsmax[7]+=1; // triads6
gangcars[7][7]=CreateVehicle(409,1882.9513,957.3453,10.6203,270.1068,0,0,900); gangcarsmax[7]+=1; // triads7
gangcars[7][8]=CreateVehicle(560,1911.7120,963.5993,10.5250,184.1433,0,0,900); gangcarsmax[7]+=1; // triads8
gangcars[7][9]=CreateVehicle(411,1916.3330,963.6063,10.5474,183.2727,0,0,900); gangcarsmax[7]+=1; // triads9
gangcars[7][10]=CreateVehicle(578,1930.8434,949.9053,11.4402,90.0164,0,0,900); gangcarsmax[7]+=1; // triads10
gangcars[5][1]=AddStaticVehicle(560,752.0253,-507.3543,16.7395,179.2458,2,2); gangcarsmax[5]+=1;// aztecascar1
gangcars[5][2]=AddStaticVehicle(560,752.3079,-495.7104,17.0201,179.1307,2,2); gangcarsmax[5]+=1;// aztecascar2
gangcars[5][3]=AddStaticVehicle(522,747.6068,-522.0007,15.8983,181.7530,2,2); gangcarsmax[5]+=1;// aztecasbike3
gangcars[5][4]=AddStaticVehicle(522,749.2606,-522.0457,15.9073,178.6653,2,2); gangcarsmax[5]+=1;// aztecasbike4
gangcars[5][5]=AddStaticVehicle(411,750.3712,-545.5820,16.4935,0.3441,2,2); gangcarsmax[5]+=1;// aztecascar5
gangcars[5][6]=AddStaticVehicle(579,762.8368,-514.3386,16.7391,180.0387,2,2); gangcarsmax[5]+=1;// aztecascar6
gangcars[5][7]=AddStaticVehicle(567,771.9313,-545.4671,16.6574,358.3362,2,2); gangcarsmax[5]+=1;// aztecascar7
gangcars[5][8]=AddStaticVehicle(562,760.8204,-535.5024,15.9217,270.6506,2,2); gangcarsmax[5]+=1;// aztecascar8
gangcars[5][9]=AddStaticVehicle(487,740.0173,-545.0878,16.8897,343.6688,2,2); gangcarsmax[5]+=1;// aztecascar9
gangcars[5][10]=AddStaticVehicle(573,726.5473,-516.5283,16.9103,179.7132,2,2); gangcarsmax[5]+=1; // interior - aztecas
aztecascars12text = Create3DTextLabel("{33CCFF}Достъпно само за Varrio Los Aztecas\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
Attach3DTextLabelToVehicle(aztecascars12text, gangcars[5][10], 0.0, 0.0, 0.0);
gangcars[11][1]= AddStaticVehicle(411,-703.5817,945.9019,12.1194,51.2357,0,0); gangcarsmax[11]+=1;// itcar1
gangcars[11][2]= AddStaticVehicle(522,-697.4638,945.2662,11.8683,44.7615,0,0); gangcarsmax[11]+=1;// itbike2
gangcars[11][3]= AddStaticVehicle(522,-695.5391,945.3777,11.8376,40.5580,0,0); gangcarsmax[11]+=1;// itbike3
gangcars[11][4]= AddStaticVehicle(545,-680.1176,946.6111,11.9439,24.4080,0,0); gangcarsmax[11]+=1;// itcar4
gangcars[11][5]= AddStaticVehicle(421,-675.7159,946.3531,12.0153,26.3247,0,0); gangcarsmax[11]+=1;// itcar5
gangcars[11][6]= AddStaticVehicle(487,-657.3326,953.2460,12.3100,90.6887,0,0); gangcarsmax[11]+=1;// itheli6
gangcars[11][7]= AddStaticVehicle(579,-679.4110,963.3021,12.0445,89.5325,0,0); gangcarsmax[11]+=1;// itcar7
gangcars[11][8]= AddStaticVehicle(579,-679.9274,968.8621,12.1007,92.4482,0,0); gangcarsmax[11]+=1;// itcar8
gangcars[11][9]= AddStaticVehicle(445,-688.9557,963.5060,12.0251,88.5057,0,0); gangcarsmax[11]+=1;// itcar9
gangcars[11][10]= AddStaticVehicle(533,-689.1617,968.2948,11.8935,93.4248,0,0); gangcarsmax[11]+=1;// itcar10
gangcars[10][1]=CreateVehicle(487,2622.4138,1879.6233,10.9970,178.6253,21,21,900); gangcarsmax[10]+=1; // nang1
gangcars[10][2]=CreateVehicle(409,2619.7512,1833.4093,10.7184,178.8567,21,21,900);gangcarsmax[10]+=1; // nang2
gangcars[10][3]=CreateVehicle(409,2619.5876,1816.2043,10.7149,179.8992,21,21,900);gangcarsmax[10]+=1; // nang3
gangcars[10][4]=CreateVehicle(522,2633.1260,1837.3751,10.4041,92.0362,21,21,900);gangcarsmax[10]+=1; // nang4
gangcars[10][5]=CreateVehicle(522,2633.3562,1838.3010,10.4482,85.0043,21,21,900);gangcarsmax[10]+=1; // nang5
gangcars[10][6]=CreateVehicle(518,2631.2344,1808.0491,10.4913,92.0208,21,21,900);gangcarsmax[10]+=1; // nang6
gangcars[10][7]=CreateVehicle(560,2630.7720,1858.4489,10.5257,88.0735,21,21,900);gangcarsmax[10]+=1; // nang7
gangcars[10][8]=CreateVehicle(562,2630.7546,1855.1859,10.4795,91.5200,21,21,900);gangcarsmax[10]+=1; // nang8
gangcars[10][9]=CreateVehicle(559,2631.0073,1852.1052,10.4766,86.3341,21,21,900);gangcarsmax[10]+=1; // nang9
gangcars[10][10]=CreateVehicle(567,2602.9399,1802.3368,10.6974,88.6509,21,21,900);gangcarsmax[10]+=1; // nang10
gangcars[9][1]=CreateVehicle(463,2607.5100,2328.5344,10.3606,209.8055,0,0,900); gangcarsmax[9]+=1; // soa1
gangcars[9][2]=CreateVehicle(463,2609.4705,2328.9753,10.3566,208.2699,0,0,900); gangcarsmax[9]+=1; // soa2
gangcars[9][3]=CreateVehicle(463,2610.9456,2329.4771,10.3568,209.6774,0,0,900); gangcarsmax[9]+=1; // soa3
gangcars[9][4]=CreateVehicle(463,2612.0383,2329.6987,10.3569,209.8093,0,0,900); gangcarsmax[9]+=1; // soa4
gangcars[9][5]=CreateVehicle(463,2613.3054,2330.0266,10.3569,206.1571,0,0,900); gangcarsmax[9]+=1; // soa5
gangcars[9][6]=CreateVehicle(463,2614.3750,2330.3340,10.3566,206.5669,0,0,900); gangcarsmax[9]+=1; // soa6
gangcars[9][7]=CreateVehicle(461,2619.5137,2330.8586,10.4088,188.5789,0,0,900); gangcarsmax[9]+=1; // soa7
gangcars[9][8]=CreateVehicle(554,2624.4563,2343.3042,10.8312,39.4545,79,0,900); gangcarsmax[9]+=1; // soa8
gangcars[9][9]=CreateVehicle(554,2640.7495,2349.6467,10.7933,220.9568,79,0,900); gangcarsmax[9]+=1; // soa9
gangcars[9][10]=CreateVehicle(434,2632.3479,2350.0049,10.7170,118.1949,0,0,900); gangcarsmax[9]+=1; // soa10
gangcars[8][1]=AddStaticVehicle(429,994.1279,2175.6045,10.5000,91.0552,11,11); gangcarsmax[8]+=1;//
gangcars[8][2]=AddStaticVehicle(413,970.8246,2138.6804,10.9063,270.8365,11,11); gangcarsmax[8]+=1;// bboyscar1
gangcars[8][3]=AddStaticVehicle(413,970.8051,2143.4331,10.9000,268.7303,11,11); gangcarsmax[8]+=1;// bboyscar2
gangcars[8][4]=AddStaticVehicle(429,970.5161,2149.9302,10.5000,270.0847,11,11); gangcarsmax[8]+=1;// bboyscar3
gangcars[8][5]=AddStaticVehicle(560,970.1982,2154.3652,10.5253,271.2138,11,11); gangcarsmax[8]+=1;// bboyscar4
gangcars[8][6]=AddStaticVehicle(560,969.5092,2164.7014,10.5255,271.1415,11,11); gangcarsmax[8]+=1;// bboyscar5
gangcars[8][7]=AddStaticVehicle(487,980.9496,2168.5271,10.9979,215.2132,11,11); gangcarsmax[8]+=1;// bboysheli6
gangcars[8][8]=AddStaticVehicle(411,970.8657,2128.5872,10.5474,268.5629,11,11); gangcarsmax[8]+=1;// bboyscar7
gangcars[8][9]=AddStaticVehicle(522,970.5427,2124.5361,10.3924,265.9281,11,11); gangcarsmax[8]+=1;// bboysbike8
gangcars[8][10]=AddStaticVehicle(522,970.3748,2123.0732,10.3889,264.9976,11,11); gangcarsmax[8]+=1;// bboysbike9
gangcars[15][1] = CreateVehicle(470,174.6902,1823.6055,17.6359,179.3837,0,0,900); gangcarsmax[15]+=1; // df1
gangcars[15][2] = CreateVehicle(470,184.7799,1823.7397,17.6334,182.9867,0,0,900); gangcarsmax[15]+=1; // df2
gangcars[15][3] = CreateVehicle(470,193.6554,1823.9792,17.6331,179.1090,0,0,900); gangcarsmax[15]+=1; // df3
gangcars[15][4] = CreateVehicle(470,202.2596,1823.7877,17.6307,182.0231,0,0,900); gangcarsmax[15]+=1; // df4
gangcars[15][5] = CreateVehicle(470,217.1758,1823.3910,17.6391,180.2234,0,0,900); gangcarsmax[15]+=1; // df5
gangcars[15][6] = CreateVehicle(470,225.8352,1823.6820,17.6350,176.7340,0,0,900); gangcarsmax[15]+=1; // df6
gangcars[15][7] = CreateVehicle(470,234.9217,1823.3407,17.6447,175.0246,0,0,900); gangcarsmax[15]+=1; // df7
gangcars[15][8] = CreateVehicle(470,243.6241,1823.6116,17.6327,178.1475,0,0,900); gangcarsmax[15]+=1; // df8
gangcars[15][9] = CreateVehicle(548,332.0512,1970.0282,19.2044,107.2690,0,0,900); gangcarsmax[15]+=1; // hili bez sf
gangcars[15][10] = CreateVehicle(548,341.7886,1952.6494,19.1965,121.6352,0,0,900); gangcarsmax[15]+=1; // hili bez sf
gangcars[15][11] = CreateVehicle(548,360.6813,1978.6136,19.2036,105.4584,0,0,900); gangcarsmax[15]+=1; // hili bez sf
gangcars[15][12] = CreateVehicle(548,363.7833,1960.3016,19.3252,135.2507,0,0,900); gangcarsmax[15]+=1; // hili bez sf
gangcars[15][13] = CreateVehicle(470,220.4568,1920.5354,17.6340,359.9070,0,0,900); gangcarsmax[15]+=1; // dfkola
gangcars[15][14] = CreateVehicle(470,211.7383,1919.9647,17.6315,359.4653,0,0,900); gangcarsmax[15]+=1; // dfkola
gangcars[15][15] = CreateVehicle(470,193.3184,1919.8345,17.6346,358.2539,0,0,900); gangcarsmax[15]+=1; // dfkola
gangcars[15][16] = CreateVehicle(470,202.4863,1920.1973,17.6314,0.4122,0,0,900); gangcarsmax[15]+=1; // dfkola
//
sfcars[1] = CreateVehicle(520,330.1985,1823.2595,18.5732,100.4614,0,0,900); sfcarsmax+=1; // hidra1
sfcars[2] = CreateVehicle(520,330.5229,1842.0887,18.3642,86.0958,0,0,900); sfcarsmax+=1; // hidra
gangcars[15][3] = CreateVehicle(470,294.5775,1814.6425,17.6358,277.0992,0,0,900); gangcarsmax[15]+=1; // djip1
gangcars[15][4] = CreateVehicle(470,294.8195,1809.5286,17.6345,268.6466,0,0,900); gangcarsmax[15]+=1; // djip2
gangcars[15][5] = CreateVehicle(470,295.2057,1803.5889,17.6396,274.0068,0,0,900); gangcarsmax[15]+=1; // djip2
gangcars[15][6] = CreateVehicle(470,294.9793,1798.5293,17.6356,269.2413,0,0,900); gangcarsmax[15]+=1; // djip3
gangcars[15][7] = CreateVehicle(470,294.7609,1793.6522,17.6335,270.4687,0,0,900); gangcarsmax[15]+=1; // djip4
sfcars[3] = CreateVehicle(520,330.1041,1862.6323,18.4510,93.0016,1,1,900); sfcarsmax+=1; // hidra--
sfcars[4] = CreateVehicle(425,326.8470,1878.5598,18.1873,100.2761,0,0,900); sfcarsmax+=1; // heli 1
sfcars[5] = CreateVehicle(425,328.2083,1896.0977,18.1806,101.7742,1,1,900); sfcarsmax+=1; // heli 2
sfcars[6] = CreateVehicle(425,330.6170,1919.6134,18.2126,101.5579,1,1,900); sfcarsmax+=1; // hili3
sfcars[7] =  CreateVehicle(432,385.1636,1927.8258,17.6523,84.4203,0,0,900); sfcarsmax+=1; // tank1
sfcars[8] =  CreateVehicle(432,385.4187,1916.1744,17.6621,90.8079,1,1,900); sfcarsmax+=1; // tank2
sfcars[9] =  CreateVehicle(432,385.4432,1907.8527,17.6093,89.9892,0,0,900); sfcarsmax+=1; // tank3
sfcars[10] =  CreateVehicle(432,385.4331,1937.3391,17.6412,89.2096,0,0,900); sfcarsmax+=1; // tank4
sfcars[11] =  CreateVehicle(432,385.4144,1944.0114,17.6338,87.6963,0,0,900); sfcarsmax+=1; // tank5
sfcars[12] =  CreateVehicle(432,385.2762,1950.0592,17.6205,81.2982,0,0,900); sfcarsmax+=1; // tank6
gangcars[15][18] = CreateVehicle(447,358.8727,1968.4592,17.6600,89.3739,0,0,900); gangcarsmax[15]+=1; // hili1
gangcars[15][19] = CreateVehicle(447,357.9221,1979.4791,17.6745,81.7223,0,0,900); gangcarsmax[15]+=1; // hili2
gangcars[15][20] = CreateVehicle(447,359.0941,1987.4917,18.3275,88.5564,0,0,900); gangcarsmax[15]+=1; // hili2
gangcars[15][21] = CreateVehicle(455,283.4998,1961.1588,18.0763,269.0667,120,120,900); gangcarsmax[15]+=1; // kamion1
gangcars[15][22] = CreateVehicle(455,285.3535,1949.4858,18.0773,272.5787,120,120,900); gangcarsmax[15]+=1; // kamion2
gangcars[15][23] = CreateVehicle(455,285.4825,1954.6948,18.0773,272.8464,120,120,900); gangcarsmax[15]+=1; // kamion3
gangcars[15][24] = CreateVehicle(487,325.8565,1970.4243,17.8173,95.3850,120,120,900); gangcarsmax[15]+=1; // hili1
gangcars[15][25] = CreateVehicle(487,322.2999,1978.7515,17.8172,96.1665,120,120,900); gangcarsmax[15]+=1; // hili1
gangcars[15][26] = CreateVehicle(487,321.0127,1989.1082,17.7841,91.9413,120,120,900); gangcarsmax[15]+=1; // hili
gangcars[15][28] = CreateVehicle(601,285.6362,2016.9946,17.3994,275.0342,120,120,900); gangcarsmax[15]+=1; // swat1
gangcars[15][29] = CreateVehicle(601,284.4478,2021.6348,17.3994,268.2248,120,120,900); gangcarsmax[15]+=1; // swat2
gangcars[15][30] = CreateVehicle(601,284.7347,2025.6781,17.3994,266.3577,120,120,900); gangcarsmax[15]+=1; // swat3
gangcars[15][31] = CreateVehicle(609,284.8653,2029.7720,17.7093,271.6387,120,120,900); gangcarsmax[15]+=1; // kamion
gangcars[15][32] = CreateVehicle(593,292.6227,1850.5432,18.1002,278.3638,120,120,900); gangcarsmax[15]+=1; // samoletdf1
gangcars[15][33] = CreateVehicle(593,292.3923,1863.6865,18.1043,269.1595,120,120,900); gangcarsmax[15]+=1; // samoletdf2
gangcars[15][34] = CreateVehicle(586,287.2446,1874.3721,17.1609,261.1524,120,120,900); gangcarsmax[15]+=1; // motor1
gangcars[15][35] = CreateVehicle(586,287.7965,1876.4424,17.1605,276.5327,120,120,900); gangcarsmax[15]+=1; // motor2
gangcars[15][36] = CreateVehicle(586,287.0294,1878.3141,17.1608,279.3047,120,120,900); gangcarsmax[15]+=1; // motor3
gangcars[15][37] = CreateVehicle(530,287.2961,1888.5565,17.4062,276.4915,120,120,900); gangcarsmax[15]+=1; // kola
gangcars[15][38] = CreateVehicle(530,287.1822,1891.7783,17.4047,269.3364,120,120,900); gangcarsmax[15]+=1; // kola
gangcars[15][39] = CreateVehicle(530,286.9659,1895.1188,17.4103,267.9124,120,120,900); gangcarsmax[15]+=1; // kola
gangcars[15][40] = CreateVehicle(505,288.5142,1900.4742,17.7823,268.5080,120,120,900); gangcarsmax[15]+=1; // kola
gangcars[15][41] = CreateVehicle(505,289.0280,1909.2083,17.7839,273.7659,120,120,900); gangcarsmax[15]+=1; // kola
gangcars[15][42] = CreateVehicle(505,288.5133,1904.4833,17.7828,267.7601,120,120,900); gangcarsmax[15]+=1; // kola
gangcars[15][43] = CreateVehicle(548,299.3055,2046.1487,19.2917,185.5962,0,0,600,900); gangcarsmax[15]+=1;
gangcars[15][43] = CreateVehicle(430,808.3689,-2306.0146,-0.1026,154.1122,1,1,900); gangcarsmax[15]+=1; // sforce1
gangcars[15][43] = CreateVehicle(430,784.4291,-2325.0977,-0.0137,65.8529,1,1,900); gangcarsmax[15]+=1; // sforce2
gangcars[15][43] = CreateVehicle(430,785.1269,-2315.0447,-0.4699,67.2432,1,1,900); gangcarsmax[15]+=1; // sforce3
sfcars[13] =  CreateVehicle(432,882.1873,-2248.5005,12.8664,94.4960,0,0,900); sfcarsmax+=1; // sforce4
sfcars[14] =  CreateVehicle(432,882.2750,-2242.9099,12.8656,95.9650,0,0,900); sfcarsmax+=1; // sforce5
sfcars[15] =  CreateVehicle(432,892.8770,-2248.5293,12.8427,91.6792,0,0,900); sfcarsmax+=1; // sforce6
sfcars[16] =  CreateVehicle(432,892.4963,-2241.7083,12.8589,92.8191,0,0,900); gangcarsmax[15]+=1; // sforce7
sfcars[17] = CreateVehicle(520,878.3239,-2297.6335,13.3822,87.3091,0,0,900); sfcarsmax+=1; // sforce8
sfcars[18] = CreateVehicle(520,878.9005,-2317.0137,13.3822,79.9242,0,0,900); sfcarsmax+=1; // sforce9
sfcars[19] = CreateVehicle(520,880.2167,-2329.3601,13.3822,89.8608,0,0,900); sfcarsmax+=1; // sforce10
sfcars[20] = CreateVehicle(520,878.2840,-2342.0686,13.3822,86.5012,0,0,900); sfcarsmax+=1; // sforce11
sfcars[21] =  CreateVehicle(520,878.0682,-2357.1230,13.3821,81.1244,0,0,900); sfcarsmax+=1; // sforce12
sfcars[22] =  CreateVehicle(520,878.8068,-2370.3452,13.3822,90.4048,0,0,900); sfcarsmax+=1; // sforce13
sfcars[23] = CreateVehicle(425,854.8376,-2374.7275,13.2311,280.4905,0,0,900); sfcarsmax+=1; // sforce14
sfcars[24] = CreateVehicle(425,854.7662,-2359.4111,13.2310,263.6804,0,0,900); sfcarsmax+=1; // sforce15
sfcars[25] = CreateVehicle(425,852.2786,-2346.5659,13.2152,272.1270,0,0,900); sfcarsmax+=1; // sforce16
sfcars[26] = CreateVehicle(425,852.2847,-2328.1987,13.2146,270.5380,0,0,900); sfcarsmax+=1; // sforce17
sfcars[27] = CreateVehicle(425,852.2910,-2315.2180,13.2133,268.6584,0,0,900); sfcarsmax+=1; // sforce18
sfcars[28] = CreateVehicle(425,852.2875,-2297.5378,13.2046,266.1672,0,0,900); sfcarsmax+=1; // sforce19
gangcars[15][43] = CreateVehicle(548,817.0307,-2245.9573,14.4755,179.0173,0,0,900); gangcarsmax[15]+=1; // dfcar
gangcars[15][43] = CreateVehicle(548,770.9144,-2241.8374,14.5284,178.7060,0,0,900); gangcarsmax[15]+=1; // dfcar2
gangcars[15][43] = CreateVehicle(470,824.8119,-2157.0513,12.8390,269.5110,0,0,900); gangcarsmax[15]+=1; // dfcar3
gangcars[15][43] = CreateVehicle(470,824.8430,-2147.7466,12.8430,268.2695,0,0,900); gangcarsmax[15]+=1; // dfcar4
gangcars[15][43] = CreateVehicle(470,824.8992,-2141.6255,12.8437,265.4050,0,0,900); gangcarsmax[15]+=1; // dfcar5
gangcars[15][43] = CreateVehicle(470,824.8854,-2131.8750,12.8442,269.2822,0,0,900); gangcarsmax[15]+=1; // dfcar6
gangcars[15][43] = CreateVehicle(470,824.9623,-2125.6196,12.8456,269.8185,0,0,900); gangcarsmax[15]+=1; // dfcar7
gangcars[15][43] = CreateVehicle(470,825.0194,-2116.0430,12.8429,264.3820,0,0,900); gangcarsmax[15]+=1; // dfcar8
gangcars[15][43] = CreateVehicle(470,825.0418,-2107.2092,12.8426,265.8801,0,0,900); gangcarsmax[15]+=1; // dfcar9
gangcars[15][43] = CreateVehicle(470,825.0038,-2100.4587,12.8480,269.3357,0,0,900); gangcarsmax[15]+=1; // dfcar10
gangcars[15][43] = CreateVehicle(470,825.0626,-2090.7229,12.8441,268.4541,0,0,900); gangcarsmax[15]+=1; // dfcar11
gangcars[15][43] = CreateVehicle(470,825.1733,-2084.6230,12.8837,266.3433,0,0,900); gangcarsmax[15]+=1; // dfcar12
gangcars[15][44] = CreateVehicle(470,-2414.4893,532.1008,29.9238,249.9282,0,0,900); gangcarsmax[15]+=1;// veh df 1
gangcars[15][45] = CreateVehicle(470,-2412.7944,536.0372,29.9224,261.9731,0,0,900); gangcarsmax[15]+=1;// veh df 2
gangcars[15][46] = CreateVehicle(455,-2424.5798,517.2811,30.3868,223.1169,120,120,900); gangcarsmax[15]+=1;// veh df 3
gangcars[15][47] = CreateVehicle(455,-2421.4524,520.3936,30.3744,227.0622,120,120,900); gangcarsmax[15]+=1;// veh df 4
gangcars[15][48] = CreateVehicle(601,-2417.6274,523.4047,29.6884,54.7959,120,120,900); gangcarsmax[15]+=1;// veh df 5
gangcars[15][49] = CreateVehicle(601,-2414.9319,527.7857,29.6884,54.6979,120,120,900); gangcarsmax[15]+=1;// veh df 6
gangcars[15][50] = CreateVehicle(526,-2444.0547,517.2150,29.7223,91.9417,120,120,900); gangcarsmax[15]+=1;// veh df 7
gangcars[15][51] = CreateVehicle(415,-2444.0471,519.5637,29.7777,90.5378,120,120,900); gangcarsmax[15]+=1;// veh df 8
gangcars[15][52] = CreateVehicle(411,-2443.9978,523.4847,29.7458,91.0976,120,120,900); gangcarsmax[15]+=1;// veh df 9
gangcars[15][53] = CreateVehicle(560,-2443.7207,527.2004,29.6222,88.4680,120,120,900); gangcarsmax[15]+=1;// veh df 10
//
// sfcars[1] = CreateVehicle(425,371.5724,1911.5908,18.2128,102.5378,0,0,900); sfcarsmax+=1; // heli1 SF
gangcars[14][1]=CreateVehicle(490,983.2156,1720.3684,8.7824,269.7520,0,0,900);gangcarsmax[14]+=1; // fbi1
gangcars[14][2]=CreateVehicle(490,982.3680,1746.5150,8.7758,268.6022,0,0,900); gangcarsmax[14]+=1;// fbi2
gangcars[14][3]=CreateVehicle(528,984.1475,1731.5820,8.7009,270.4151,0,0,900); gangcarsmax[14]+=1; // fbi3
gangcars[14][4]=CreateVehicle(528,984.2443,1737.5723,8.6959,270.5541,0,0,900); gangcarsmax[14]+=1; // fbi4
gangcars[14][5]=CreateVehicle(487,958.0810,1789.0931,15.9727,186.9537,0,0,900); gangcarsmax[14]+=1; // heli1
gangcars[14][6]=CreateVehicle(487,945.7866,1785.6156,15.9717,183.5617,0,0,900); gangcarsmax[14]+=1; // heli2
gangcars[14][7]=CreateVehicle(522,955.5999,1758.4607,8.2210,4.8403,0,0,900); gangcarsmax[14]+=1; // motor1
gangcars[14][8]=CreateVehicle(522,956.6800,1758.5085,8.2083,357.9242,0,0,900); gangcarsmax[14]+=1; // motor2
gangcars[14][9]=CreateVehicle(522,957.8089,1758.0717,8.2251,359.5601,0,0,900); gangcarsmax[14]+=1; // motor3
gangcars[14][10]=CreateVehicle(411,965.3553,1708.8563,8.3755,177.9148,0,0,900); gangcarsmax[14]+=1; // infernus1
gangcars[14][11]=CreateVehicle(411,954.1483,1710.1687,8.3755,181.4124,0,0,900); gangcarsmax[14]+=1; // infernus2
gangcars[14][12]=CreateVehicle(415,960.2543,1709.3341,8.4195,179.9362,0,0,900); gangcarsmax[14]+=1;
gangcars[13][57]=CreateVehicle(428,2252.2651,2478.2832,10.9433,359.9992,0,0,900); // k amion
gangcars[13][58]=CreateVehicle(428,2260.3203,2477.6348,10.9435,359.9997,0,0,900); // k amion
gangcars[13][59]=CreateVehicle(428,2256.3845,2478.6558,10.9440,359.3629,0,0,900); // k amion
gangcars[13][56]=CreateVehicle(428,1603.8275,-1613.6677,13.6976,270.3741,0,0,900); // k amion
gangcars[13][55]=CreateVehicle(428,1580.5745,-1607.8711,13.5075,2.8530,0,0,900); // kamion
gangcars[13][54]=CreateVehicle(428,1572.6620,-1607.9324,13.5066,359.9998,0,0,900); // kamion2
gangcars[13][53]=CreateVehicle(428,1566.4377,-1607.9838,13.5080,0.0001,0,0,900); // kamion3
gangcars[13][52]=CreateVehicle(428,-1576.8063,673.8251,7.3094,0.0107,0,0,900); // s interior
gangcars[13][51]=CreateVehicle(428,-1575.6748,651.9207,7.3134,0.4322,0,0,900); // s interior
gangcars[13][52]=CreateVehicle(428,-1583.5892,651.8456,7.3155,360.0000,0,0,900); // s interior
gangcarstexts[13][56] = Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
gangcarstexts[13][57] = Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
gangcarstexts[13][58] = Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
gangcarstexts[13][59] = Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
gangcarstexts[13][50] = Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
gangcarstexts[13][51] = Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
gangcarstexts[13][52] = Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
gangcarstexts[13][53] = Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
gangcarstexts[13][54] = Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
gangcarstexts[13][55] = Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
gangcarstexts[13][58] = Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
gangcarstexts[13][59] = Create3DTextLabel("{0040FF}Достъпно само за San Andreas Police Department\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
Attach3DTextLabelToVehicle(gangcarstexts[13][50], gangcars[13][50], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(gangcarstexts[13][51], gangcars[13][51], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(gangcarstexts[13][52], gangcars[13][52], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(gangcarstexts[13][53], gangcars[13][53], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(gangcarstexts[13][54], gangcars[13][54], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(gangcarstexts[13][55], gangcars[13][55], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(gangcarstexts[13][56], gangcars[13][56], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(gangcarstexts[13][57], gangcars[13][57], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(gangcarstexts[13][58], gangcars[13][58], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(gangcarstexts[13][59], gangcars[13][59], 0.0, 0.0, 0.0);
gangcars[13][48]=CreateVehicle(411,-1602.8589,723.5639,11.1457,270.0789,0,0,900); gangcarsmax[13]+=1; // heli 1
gangcars[13][49]=CreateVehicle(411,-1609.1545,723.7385,12.2860,270.2191,0,0,900); gangcarsmax[13]+=1; // heli 1
gangcars[13][47]=CreateVehicle(497,-1673.6982,697.5632,30.7748,87.0447,2,1,900); gangcarsmax[13]+=1; // heli 1
gangcars[13][46]=CreateVehicle(497,-1672.6749,711.7892,30.7710,90.9230,2,1,900); gangcarsmax[13]+=1; // heli 2
gangcars[13][45]=CreateVehicle(497,-1688.7531,704.7490,30.8516,0.0001,2,1,900); gangcarsmax[13]+=1; // heli 3
gangcars[13][44]=CreateVehicle(597,-1589.5455,673.4875,6.9573,357.5952,2,1,900); gangcarsmax[13]+=1; // sfp1
gangcars[13][43]=CreateVehicle(597,-1594.3623,673.0530,6.9556,357.5556,2,1,900); gangcarsmax[13]+=1; // sfp2
gangcars[13][42]=CreateVehicle(597,-1600.7976,672.3998,6.9558,356.8631,2,1,900); gangcarsmax[13]+=1; // sfp3
gangcars[13][41]=CreateVehicle(601,-1616.9824,651.7155,6.9463,179.8854,0,0,900); gangcarsmax[13]+=1; // sfp4
gangcars[13][40]=CreateVehicle(601,-1592.9884,651.9330,6.9463,180.6861,0,0,900); gangcarsmax[13]+=1; // sfp5
gangcars[13][39]=CreateVehicle(581,-1581.0945,674.6801,6.7885,358.0248,0,0,900); gangcarsmax[13]+=1; // sfp6
gangcars[13][38]=CreateVehicle(581,-1580.0282,674.6340,6.7739,0.0020,0,0,900); gangcarsmax[13]+=1; // sfp7
gangcars[13][37]=CreateVehicle(581,-1582.3605,674.4676,6.7772,7.3160,0,0,900); gangcarsmax[13]+=1; // sfp8
gangcars[13][36]=CreateVehicle(528,-1612.8768,731.7792,-5.1970,179.8327,0,0,900); gangcarsmax[13]+=1; // sfp9
gangcars[13][35]=CreateVehicle(528,-1600.6814,750.5339,-5.1983,359.3145,0,0,900); gangcarsmax[13]+=1; // sfp10
gangcars[13][34]=CreateVehicle(528,-1604.6685,750.1108,-5.1990,0.7827,0,0,900); gangcarsmax[13]+=1; // sfp11
gangcars[13][33]=CreateVehicle(411,-1573.7810,710.2883,-5.5151,268.2603,0,0,900); gangcarsmax[13]+=1;// sfp12
gangcars[13][32]=CreateVehicle(411,-1608.4790,692.5464,-5.5151,180.8416,0,0,900); gangcarsmax[13]+=1; // sfp13
gangcars[13][31]=CreateVehicle(411,-1616.5317,691.5095,-5.5151,179.1578,0,0,900); gangcarsmax[13]+=1;
gangcars[13][30]=CreateVehicle(522,-1625.6361,692.4774,-5.6904,0.0000,0,0,900); gangcarsmax[13]+=1;
gangcars[13][29]=CreateVehicle(522,-1627.1006,691.9947,-5.6656,6.8663,0,0,900); gangcarsmax[13]+=1;
gangcars[13][28]=CreateVehicle(522,-1628.2644,692.0035,-5.6862,11.3340,0,0,900); gangcarsmax[13]+=1;
gangcars[13][24]=CreateVehicle(560,2294.8218,2418.4224,10.4658,90.3843,0,0,900); gangcarsmax[13]+=1;
gangcars[13][25]=CreateVehicle(560,2287.3413,2418.2878,10.4668,91.5691,0,0,900); gangcarsmax[13]+=1;
gangcars[13][26]=CreateVehicle(560,2279.9746,2418.1211,10.4656,88.7879,0,0,900); gangcarsmax[13]+=1;
gangcars[13][27]=CreateVehicle(560,2273.6748,2418.1306,10.4486,90.6060,0,0,900); gangcarsmax[13]+=1;
gangcars[13][13]=CreateVehicle(598,2251.6960,2461.1604,10.5647,0.7289,0,1,900); gangcarsmax[13]+=1; // policecar1
gangcars[13][14]=CreateVehicle(598,2281.7688,2477.1084,10.5665,359.6116,0,1,900); gangcarsmax[13]+=1; // policecar2
gangcars[13][15]=CreateVehicle(599,2278.2905,2443.0581,11.0037,359.6354,0,1,900); gangcarsmax[13]+=1; // policecar3
gangcars[13][16]=CreateVehicle(599,2269.5115,2442.8984,11.0052,0.0001,0,1,900); gangcarsmax[13]+=1; // policecar4
gangcars[13][17]=CreateVehicle(427,2313.4092,2490.0430,3.4570,89.8919,0,1,900); gangcarsmax[13]+=1; // policecar5
gangcars[13][18]=CreateVehicle(427,2300.4929,2456.4758,3.4689,270.9489,0,1,900); gangcarsmax[13]+=1; // policecar6
gangcars[13][19]=CreateVehicle(601,2315.9565,2470.5745,3.0322,89.3433,0,1,900); gangcarsmax[13]+=1; // policecar7
gangcars[13][20]=CreateVehicle(598,2241.8032,2437.7478,3.0233,270.0572,0,1,900); gangcarsmax[13]+=1; // policecar8
gangcars[13][21]=CreateVehicle(523,2277.7908,2476.9065,10.3955,3.4096,0,1,900); gangcarsmax[13]+=1; // bike1
gangcars[13][22]=CreateVehicle(523,2251.6497,2441.2209,10.3816,181.8576,0,1,900); gangcarsmax[13]+=1; // bike2
gangcars[13][23]=CreateVehicle(497,2312.0928,2452.2563,10.9972,179.6904,0,1,900); gangcarsmax[13]+=1; // hili
gangcars[13][1]=CreateVehicle(497,1560.0056,-1611.9402,13.5597,0.0283,1,130,900); gangcarsmax[13]+=1; // lspd3
gangcars[13][2]=CreateVehicle(596,1591.3870,-1709.9634,5.6102,178.5953,1,130,900); gangcarsmax[13]+=1; // lspd4
gangcars[13][3]=CreateVehicle(596,1601.7644,-1704.0433,5.6105,90.0638,1,130,900); gangcarsmax[13]+=1; // lspd5
gangcars[13][4]=CreateVehicle(599,1586.3292,-1671.7924,6.0801,270.3832,1,130,900); gangcarsmax[13]+=1; // lspd6
gangcars[13][5]=CreateVehicle(601,1561.9191,-1693.7473,5.6510,180.8680,1,130,900); gangcarsmax[13]+=1; // lspd7
gangcars[13][6]=CreateVehicle(427,1578.7659,-1711.7460,6.0328,0.4362,1,130,900); gangcarsmax[13]+=1; // lspd8
gangcars[13][7]=CreateVehicle(523,1584.7627,-1668.9755,5.4647,88.8122,1,130,900); gangcarsmax[13]+=1; // lspd9
gangcars[13][8]=CreateVehicle(523,1584.9321,-1666.3895,5.4579,91.6474,1,130,900); gangcarsmax[13]+=1; // lspd10
gangcars[13][9]=CreateVehicle(411,1536.1041,-1668.7701,13.1099,0.6715,0,1,900); gangcarsmax[13]+=1; // lspd10
gangcars[13][10]=CreateVehicle(411,1535.7971,-1678.0953,13.1042,0.7673,0,1,900); gangcarsmax[13]+=1; // lspd10
gangcars[13][11]=CreateVehicle(560,1534.6431,-1655.0360,13.1891,0.5602,0,1,900); gangcarsmax[13]+=1; // lspd10
gangcars[13][12]=CreateVehicle(560,1534.8180,-1688.5358,13.1670,355.5221,0,1,900); gangcarsmax[13]+=1; // lspd10
gangcars[12][1]=CreateVehicle(411,660.6033,-1283.4000,13.2719,180.1347,154,154,900); gangcarsmax[12]+=1; // bhunters1
gangcars[12][2]=CreateVehicle(579,660.3755,-1276.7418,13.4738,183.3500,154,154,900); gangcarsmax[12]+=1; // bhunters2
gangcars[12][3]=CreateVehicle(562,660.0196,-1270.5104,13.2035,181.9810,154,154,900); gangcarsmax[12]+=1; // bhunters3
gangcars[12][4]=CreateVehicle(560,669.5075,-1282.5005,13.2498,180.0450,154,154,900); gangcarsmax[12]+=1; // bhunters4
gangcars[12][5]=CreateVehicle(409,669.4095,-1274.9530,13.3426,179.6351,154,154,900); gangcarsmax[12]+=1; // bhunters5
gangcars[12][6]=CreateVehicle(560,669.6331,-1266.8650,13.2453,178.6060,154,154,900); gangcarsmax[12]+=1; // bhunters6
gangcars[12][7]=CreateVehicle(481,688.2662,-1286.6830,13.0898,117.8503,154,154,900); gangcarsmax[12]+=1; // bhunters7
gangcars[12][8]=CreateVehicle(481,688.2577,-1287.6053,13.0891,125.6551,154,154,900); gangcarsmax[12]+=1; // bhunters8
gangcars[12][9]=CreateVehicle(487,742.4998,-1259.4336,13.7324,269.1596,154,154,900); gangcarsmax[12]+=1; // bhunters9
gangcars[12][10]=CreateVehicle(487,765.3352,-1259.5431,13.7472,266.0747,154,154,900); gangcarsmax[12]+=1; // bhunters10
gangcars[6][13]=AddStaticVehicle(541,274.9631,-1171.9569,80.2645,285.1748,53,53); gangcarsmax[6]+=1;// czcar1
gangcars[6][14]=AddStaticVehicle(560,-2381.2109,1123.9932,55.4322,163.0257,53,53); gangcarsmax[6]+=1;// czsfcar1
gangcars[6][15]=AddStaticVehicle(411,-2390.8440,1127.8109,55.4604,162.5336,53,53); gangcarsmax[6]+=1;// czsfcar2
gangcars[6][16]=AddStaticVehicle(411,-2404.6140,1132.7152,55.4617,160.9771,53,53); gangcarsmax[6]+=1;// czsfcar3
gangcars[6][17]=AddStaticVehicle(451,-2410.8145,1134.4039,55.4270,169.3356,53,53); gangcarsmax[6]+=1;// czsfcar4-fix
gangcars[6][18]=AddStaticVehicle(562,-2409.3345,1118.1252,55.2765,78.7958,53,53); gangcarsmax[6]+=1;// czsfcar5
gangcars[6][19]=AddStaticVehicle(480,-2399.4321,1114.9440,55.4231,250.0389,53,53); gangcarsmax[6]+=1;// czsfcar6
gangcars[6][20]=AddStaticVehicle(560,-2417.2620,1135.2832,55.4316,169.2079,53,53); gangcarsmax[6]+=1;// czsfcar7
gangcars[6][21]=AddStaticVehicle(522,-2401.1582,1132.6741,55.3082,166.4393,53,53); gangcarsmax[6]+=1;// czsfbike8
gangcars[6][22]=AddStaticVehicle(522,-2399.8682,1132.1991,55.2980,165.9545,53,53); gangcarsmax[6]+=1;// czsfbike9
gangcars[6][23]=AddStaticVehicle(487,-2385.8831,1119.9551,55.9275,135.9910,53,53); gangcarsmax[6]+=1;// czsfheli10
gangcars[6][1]=CreateVehicle(411,282.6102,-1160.0824,80.6411,225.3297,53,53,900); gangcarsmax[6]+=1; // infernus - vcripz
gangcars[6][2]=CreateVehicle(411,286.7418,-1156.0349,80.6380,225.1132,53,53,900); gangcarsmax[6]+=1; // infernus2 - vcripz
gangcars[6][3]=CreateVehicle(487,263.3456,-1171.7356,79.6268,278.1578,53,53,900); gangcarsmax[6]+=1; // heli - cripz
gangcars[6][4]=CreateVehicle(560,278.0644,-1174.9341,80.4535,288.3980,53,53,900); gangcarsmax[6]+=1; // sultan - vcripz
gangcars[6][5]=CreateVehicle(560,280.8209,-1177.5951,80.5118,290.0709,53,53,900); gangcarsmax[6]+=1; // sultan2 - vcripz
gangcars[6][6]=CreateVehicle(562,286.8073,-1183.2435,80.5736,290.7241,53,53,900); gangcarsmax[6]+=1; // elegy - cripz
gangcars[6][7]=CreateVehicle(562,283.8889,-1180.3596,80.5570,292.7408,53,53,900); gangcarsmax[6]+=1; // elegy2 - cripz
gangcars[6][8]=CreateVehicle(541,273.3555,-1159.8564,80.5399,224.3608,53,53,900); gangcarsmax[6]+=1; // kola - vcripz
gangcars[6][9]=CreateVehicle(573,288.1286,-1147.2111,81.5615,222.8329,53,53,900); gangcarsmax[6]+=1; // interior - vcripz
cripzcars9text = Create3DTextLabel("{000099}Достъпно само за Vinewood Cripz\n\n\n\n{00FF00}Натисни {FF0000}G {00FF00}за да влезеш в камиона.\nНатисни {FF0000}ENTER {00FF00}за да излезеш, когато си в него.", 0x00FF00FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
Attach3DTextLabelToVehicle(cripzcars9text, gangcars[6][9], 0.0, 0.0, 0.0);
gangcars[6][10]=CreateVehicle(522,305.4707,-1159.1051,80.4810,131.6496,53,53,900); gangcarsmax[6]+=1; // motor - vcripz
gangcars[6][11]=CreateVehicle(522,304.4301,-1157.9576,80.4809,136.7975,53,53,900); gangcarsmax[6]+=1; // motor2 - vcripz
gangcars[6][12]=CreateVehicle(579,317.2428,-1166.5176,80.8455,133.5803,53,53,900); gangcarsmax[6]+=1; // djip - vcripz
for( new i=1; i<MAX_TEAMS; i++)
{
for( new i2=1; i2<=gangcarsmax[i]; i2++)
{
if(IsValidVehicle(gangcars[i][i2]))
{
gangvehicle[gangcars[i][i2]]=i;
}
}
}
AddStaticVehicleEx(537,602.2946,1285.0413,13.3495,300.1335,1,1,900); // veh
AddStaticVehicleEx(538,2864.7500,1343.2275,12.1256,0.0000,1,1,900); // vlak
AddStaticVehicleEx(449,1449.6514,2632.2500,11.2473,270.0000,1,74,900); // 2
AddStaticVehicleEx(449,1417.1182,2632.2500,11.2473,90.0000,1,74,900); // 1
CreateVehicle(492,771.5253,-1334.1238,13.2469,359.8254,64,0,900);
CreateVehicle(467,1376.2993,-993.1086,29.0882,354.3479,48,0,900); // car1
CreateVehicle(420,2200.8689,1277.5786,10.6284,90.6522,6,6,900); // car1
CreateVehicle(559,2201.0156,1285.6396,10.4998,90.2617,11,11,900); // car2
CreateVehicle(420,2200.7776,1293.7927,10.6284,89.2013,6,6,900); // car3
CreateVehicle(416,1177.6736,-1308.3738,13.9052,269.5979,1,3,900); // car
CreateVehicle(463,1419.7723,-1323.8895,13.0992,85.9360,46,0,900); // car
CreateVehicle(471,1250.3735,-1229.2214,13.0730,183.1282,51,51,900); // car
CreateVehicle(522,2099.8950,943.9579,10.3912,268.7346,5,85,900); // car
CreateVehicle(521,1994.6298,1075.9277,10.3904,354.3320,5,6,900); // car
CreateVehicle(603,1866.7584,1179.1772,10.5856,179.8083,0,1,900); // car
CreateVehicle(471,1707.7780,1253.3064,10.1819,1.6518,1,3,900); // car
CreateVehicle(445,1685.8378,1316.6997,10.6322,179.6370,66,66,900); // car
CreateVehicle(541,1640.8036,1296.2123,10.3646,269.7993,16,0,900); // car
CreateVehicle(438,1701.2408,1406.9891,10.5765,322.9780,6,6,900); // car
CreateVehicle(420,1698.8855,1420.6882,10.5292,312.4913,6,6,900); // car
CreateVehicle(587,1698.1412,1471.9504,10.4319,262.1092,98,98,900); // car
CreateVehicle(522,1698.4799,1482.5646,10.3257,257.0431,3,1,900); // car
CreateVehicle(560,1704.2808,1498.6833,10.4875,245.7231,80,80,900); // car
CreateVehicle(416,1624.0270,1822.6215,10.8584,1.9184,1,3,900); // car
CreateVehicle(416,1591.6675,1821.1727,11.0130,359.5998,3,1,900); // car
CreateVehicle(468,1609.7186,1851.3127,10.4882,182.6533,6,6,900); // car
CreateVehicle(411,1673.1298,1834.5892,10.4783,179.0714,61,61,900); // car
CreateVehicle(451,1685.2889,1851.3425,10.4465,89.9739,114,114,900); // car
CreateVehicle(506,1742.8035,1912.5298,10.4819,271.3684,3,3,900); // car
CreateVehicle(544,1763.7312,2074.6404,10.9848,181.4266,3,3,900); // car
CreateVehicle(407,1757.2053,2075.1086,10.9696,180.9546,3,3,900); // car
CreateVehicle(522,1527.8496,2204.9924,10.3920,181.4801,0,0,900); // car
CreateVehicle(541,1386.1497,2249.2932,10.4589,89.6190,3,4,900); // car
CreateVehicle(506,442.9023,-1802.7012,5.2099,354.2754,72,0,900);
CreateVehicle(562,1465.7566,2352.7119,10.4478,357.7283,3,4,900); // car
CreateVehicle(471,1806.2070,2623.6116,10.2252,178.7413,6,0,900); // car
CreateVehicle(481,959.9683,-1522.0959,13.0149,359.8105,57,0,900);
CreateVehicle(418,1849.3011,2578.9045,10.8492,0.3017,7,7,900); // car
CreateVehicle(521,367.5635,-1340.2676,14.1076,119.6715,80,0,900);
CreateVehicle(477,1110.8416,-1630.7823,13.2713,90.0069,53,0,900);
CreateVehicle(507,343.8066,-1808.6891,4.2620,179.5384,73,0,900);
CreateVehicle(522,361.6628,-2029.4879,7.3878,307.3224,43,43,900); //
CreateVehicle(462,361.6710,-2033.1227,7.4226,310.4334,33,33,900); //
CreateVehicle(510,183.8260,-1581.6919,13.1857,48.3526,76,0,900);
CreateVehicle(411,374.7554,-2024.4861,7.4067,357.6782,50,50,900); //
CreateVehicle(560,375.0436,-2015.5992,7.3990,359.3605,3,3,900); //
CreateVehicle(462,1422.0930,2842.7683,10.4136,243.2839,44,44,900); // car
CreateVehicle(518,437.6488,-1295.2046,14.8682,32.1277,79,0,900);
CreateVehicle(533,1470.1700,2839.4609,10.5652,180.2008,12,12,900); // car
CreateVehicle(415,1529.5582,2827.1646,10.5410,89.7498,6,6,900); // car
CreateVehicle(603,1527.8746,2858.9084,10.6582,265.3276,125,0,900); // car
CreateVehicle(439,1682.0747,2762.7502,10.6553,179.5395,65,65,900); // car
CreateVehicle(549,2531.2766,2511.3635,10.4234,91.4351,2,4,900); // car
CreateVehicle(535,2460.6541,2528.2312,10.4951,1.5184,3,3,900); // car
CreateVehicle(477,2402.5583,2557.0559,10.6130,270.3061,1,1,900); // car
CreateVehicle(562,2239.6018,2235.8860,10.4459,269.6897,3,0,900); // car
CreateVehicle(560,2503.9712,2238.2419,10.3764,89.0506,0,5,900); // car
CreateVehicle(522,2441.2786,2013.2446,10.3922,268.6646,66,66,900); // car
CreateVehicle(536,2486.2520,1991.3601,10.6100,359.6808,6,7,900); // car
CreateVehicle(559,2363.2822,2089.0911,10.4186,1.2506,254,2,900); // car
CreateVehicle(521,2236.4492,2130.2256,10.3938,271.5005,3,4,900); // car
CreateVehicle(510,2100.4424,2169.3293,10.4026,2.0098,3,0,900); // car
CreateVehicle(475,2102.9392,2082.5645,10.6711,89.0067,0,0,900); // car
CreateVehicle(411,2186.5762,1974.9695,10.4760,89.0564,158,158,900); // car
CreateVehicle(579,2203.2639,1788.1034,10.6066,1.9540,17,17,900); // car
CreateVehicle(461,2156.2139,1788.2894,10.4033,0.1878,12,12,900); // car
CreateVehicle(542,2174.2043,1821.9380,10.5990,179.8946,22,22,900); // car
CreateVehicle(422,2604.6572,1378.2987,10.7430,89.8924,56,4,900); // car
CreateVehicle(578,2647.7517,813.0166,6.0297,90.5862,4,4,900); // car
CreateVehicle(551,2647.5747,744.8439,10.6319,181.4257,67,67,900); // car
CreateVehicle(424,981.2684,-1332.2112,13.2060,273.1884,22,22,900); // car
CreateVehicle(434,1016.4972,-1360.9585,13.2592,90.3659,100,100,900); // car2
CreateVehicle(461,2540.3374,741.3383,10.4002,272.2441,25,25,900); // car
CreateVehicle(461,1553.9242,-1785.0142,13.1305,90.0535,43,0,900); // car
CreateVehicle(475,974.3016,-1305.6052,13.2307,179.8655,131,131,900);
CreateVehicle(570,1749.2616,-1953.7760,14.9954,269.9383,1,1,900); // train LS
//job taxi - location - open
jobtaxivehs[0]=CreateVehicle(438,1681.6617,1759.1095,10.8338,269.7117,6,6,900); // taxi 1
jobtaxivehs[1]=CreateVehicle(438,1681.2621,1748.4315,10.8295,267.8895,6,6,900); // taxi 2
jobtaxivehs[2]=CreateVehicle(438,1681.7197,1753.8615,10.8298,270.6116,6,6,900); // taxi 3
jobtaxivehs[3]=CreateVehicle(438,338.8017,-1349.7435,14.5129,120.2675,6,6,900); // taxi 1
jobtaxivehs[4]=CreateVehicle(438,347.8474,-1357.3937,14.5151,296.8755,6,6,900); // taxi 2
jobtaxivehs[5]=CreateVehicle(438,338.7006,-1340.1078,14.5165,298.7840,6,6,900); // taxi 3
Attach3DTextLabelToVehicle(taxitext1, jobtaxivehs[0], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(taxitext2, jobtaxivehs[1], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(taxitext3, jobtaxivehs[2], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(taxitext4, jobtaxivehs[3], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(taxitext5, jobtaxivehs[4], 0.0, 0.0, 0.0);
Attach3DTextLabelToVehicle(taxitext6, jobtaxivehs[5], 0.0, 0.0, 0.0);
for(new i=0;i<=5;i++)
{
lockedvehicle[jobtaxivehs[i]]=1;
isTaxiJobVeh[jobtaxivehs[i]]= true;
ToggleEngine(jobtaxivehs[i], VEHICLE_PARAMS_OFF);
vehEngineStatusON[jobtaxivehs[i]]=0;
isJobVeh[jobtaxivehs[i]] = true;
}
//job taxi - location - close
//vehicles taxi - location - open
taxivehs[0]=CreateVehicle(420,1707.7329,1437.5698,10.4599,358.1308,6,6,60);
taxivehs[1]=CreateVehicle(420,1709.7860,1450.1704,10.5499,343.9991,6,6,60);
taxivehs[2]=CreateVehicle(420,2271.1602,2408.9248,10.5208,90.2054,6,6,60); // GO TO LSPD
taxivehs[3]=CreateVehicle(420,1524.3113,-1669.9652,13.1670,1.0262,6,6,60); // GO TO LVPD
for(new i; i<=3; i++)
{
ToggleEngine(taxivehs[0], VEHICLE_PARAMS_OFF); vehEngineStatusON[taxivehs[0]]=0;
}
//vehicles taxi - location - close
//vehicles - location - close
//disco - location - open
CreateDynamicObject(19799, 479.225524, -20.957792, 1001.509704, 0.000000, 0.000000, 0.000000);
//disco - location - close
//objects - location - open
CreateDynamicObject(1536, 259.008575, 90.704925, 1001.138366, 0.000000, 0.000000, -91.499938);
lspdd1 = CreateDynamicObject(1536, 259.046081, 92.134429, 1001.138366, 0.000000, 0.000000, -90.699882);
lspdk1 = CreateDynamicObject(19302, 266.352783, 83.219932, 1001.280395, 0.000000, 0.000000, -91.799995);
lspdk2 = CreateDynamicObject(19302, 266.486785, 87.487892, 1001.280395, 0.000000, 0.000000, -91.799995);
//tune garage - location - open
CreateDynamicObject(17950, 2405.544189, 1023.192443, 12.076158, 0.000000, 0.000000, 91.600059);
CreateDynamicObject(17950, 2405.352294, 1029.979125, 12.076158, 0.000000, 0.000000, 91.600059);
CreateDynamicObject(19121, 2408.763671, 1020.295471, 9.667904, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19121, 2408.763671, 1026.327514, 9.737903, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19121, 2408.763671, 1027.126708, 9.737903, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19121, 2408.763671, 1033.117431, 9.737903, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19304, 2400.780273, 1034.938232, 10.429325, 0.000000, 0.000000, 92.899993);
CreateDynamicObject(19121, 2400.675292, 1036.858398, 10.307898, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19304, 2400.425292, 1041.928955, 10.429325, 0.000000, 0.000000, 92.899993);
CreateDynamicObject(19121, 2400.515136, 1039.968872, 10.367891, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1280, 2404.259277, 1042.232421, 10.225398, 0.000000, 0.000000, 92.300064);
CreateDynamicObject(1280, 2407.677734, 1042.369628, 10.225398, 0.000000, 0.000000, 92.300064);
CreateDynamicObject(3507, 2401.594726, 1041.901977, 9.639088, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3507, 2410.294677, 1041.901977, 9.639088, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19314, 2401.015380, 1026.503417, 13.641248, 89.599952, 0.000000, 0.000000);
//tune garage - location - close
//derby objects - location - open
CreateDynamicObject(3458, 2173.510986, -2900.546630, 11.643287, 0.000000, 0.000000, 0.000000, 1);
CreateDynamicObject(3458, 2173.329101, -2923.291992, 11.643287, 0.000000, 0.000000, -89.500045, 1);
CreateDynamicObject(3458, 2173.510986, -2945.992675, 11.643287, 0.000000, 0.000000, 0.000000, 1);
CreateDynamicObject(3458, 2150.559326, -2922.056640, 11.643287, 0.000000, 0.000000, 0.000000, 1);
CreateDynamicObject(3458, 2150.559326, -2935.237304, 11.643287, 0.000000, 0.000000, 0.000000, 1);
CreateDynamicObject(3458, 2196.198242, -2935.237304, 11.643287, 0.000000, 0.000000, 0.000000, 1);
CreateDynamicObject(3458, 2196.198242, -2914.613281, 11.643287, 0.000000, 0.000000, 0.000000, 1);
CreateDynamicObject(3458, 2189.629882, -2968.604003, 11.643287, 0.000000, 0.000000, -89.500045, 1);
CreateDynamicObject(3458, 2138.242675, -2957.997558, 11.643287, 0.000000, 0.000000, -89.500045, 1);
CreateDynamicObject(3458, 2139.033203, -2980.684326, 11.643287, 0.000000, 0.000000, 0.499966, 1);
CreateDynamicObject(1634, 2159.888916, -2946.051025, 14.092194, 0.000000, 0.000000, 90.500183, 1);
CreateDynamicObject(1634, 2152.661865, -2980.586669, 14.092194, 0.000000, 0.000000, -90.499801, 1);
CreateDynamicObject(3458, 2166.914794, -2965.958740, 11.643287, 0.000000, 0.000000, 0.000000, 1);
CreateDynamicObject(3458, 2212.334472, -2965.958740, 11.643287, 0.000000, 0.000000, 0.000000, 1);
CreateDynamicObject(3458, 2219.067138, -2932.316650, 11.643287, 0.000000, 0.000000, -89.500045, 1);
CreateDynamicObject(3458, 2219.560791, -2988.661865, 11.643287, 0.000000, 0.000000, -89.500045, 1);
CreateDynamicObject(3458, 2202.958740, -2988.667236, 11.643287, 0.000000, 0.000000, -89.500045, 1);
CreateDynamicObject(3458, 2167.604492, -2988.702636, 11.643287, 0.000000, 0.000000, -89.500045, 1);
CreateDynamicObject(3458, 2174.073242, -3011.421386, 11.643287, 0.000000, 0.000000, -179.80007, 1);
//derby objects - location - close
//vip gang objects - location - open
CreateDynamicObject(3437, 1326.764160, -2114.194091, 152.223861, -0.199999, 0.000000, 0.000000);
CreateDynamicObject(2942, 1239.006103, -2041.014038, 59.432590, -1.099997, -0.799997, 90.199966);
CreateDynamicObject(3279, 1183.862060, -2009.009277, 68.095352, 0.000000, 0.000000, -88.300079);
CreateDynamicObject(3279, 1182.549072, -2065.147460, 68.095352, 0.000000, 0.000000, 89.399948);
CreateDynamicObject(3437, 1326.764160, -2114.153808, 163.643829, -0.199999, 0.000000, 0.000000);
CreateDynamicObject(3437, 1321.949096, -2114.135986, 168.360702, -0.199999, -89.800003, 0.000000);
CreateObject(8040, 1349.863281, -2007.726562, 55.741912, -0.899999, -0.800000, -82.600036);
CreateDynamicObject(3437, 1311.258911, -2114.135986, 168.397994, -0.199999, -89.800003, 0.000000);
CreateDynamicObject(3437, 1311.187866, -2114.207519, 148.008316, -0.199999, -89.800003, 0.000000);
CreateDynamicObject(3437, 1321.967163, -2114.207519, 147.970748, -0.199999, -89.800003, 0.000000);
CreateDynamicObject(3437, 1305.357543, -2114.207519, 148.028945, -0.199999, -89.800003, 0.000000);
CreateDynamicObject(3437, 1300.834716, -2114.187500, 153.751586, -0.199999, -0.099998, 0.000000);
CreateDynamicObject(3437, 1305.394287, -2114.172607, 158.568786, -0.199999, -89.800003, 0.000000);
CreateDynamicObject(3437, 1287.141479, -2114.135742, 169.302566, -0.199999, 90.899971, 0.000000);
CreateDynamicObject(3437, 1276.982421, -2114.135742, 169.479873, -0.199999, -89.000022, 0.000000);
CreateDynamicObject(3437, 1281.737792, -2114.153320, 163.960647, -0.199999, 1.299987, 0.000000);
CreateDynamicObject(3437, 1281.490234, -2114.191894, 153.033523, -0.199999, 1.299987, 0.000000);
CreateDynamicObject(3437, 1261.005859, -2114.191894, 153.498352, -0.199999, -15.100001, 0.000000);
CreateDynamicObject(3437, 1258.647705, -2114.161865, 162.235794, -0.199999, -15.100001, 0.000000);
CreateDynamicObject(3437, 1257.600097, -2114.148925, 166.116912, -0.199999, -15.100001, 0.000000);
CreateDynamicObject(3437, 1253.657958, -2114.149169, 166.531021, -0.199999, 31.399999, 0.000000);
CreateDynamicObject(3437, 1248.014892, -2114.182128, 157.287124, -0.199999, 31.399999, 0.000000);
CreateDynamicObject(3437, 1246.269165, -2114.192871, 154.427795, -0.199999, 31.399999, 0.000000);
CreateDynamicObject(3437, 1254.385131, -2114.097656, 159.339172, -2.099999, 90.099967, 0.000000);
CreateDynamicObject(3437, 1228.272705, -2113.770019, 167.938507, -1.699999, -0.300055, 0.000000);
CreateDynamicObject(3437, 1228.330688, -2114.097167, 156.933578, -1.699999, -0.300055, 0.000000);
CreateDynamicObject(3437, 1228.335205, -2114.118896, 156.173858, -1.699999, -0.300055, 0.000000);
CreateDynamicObject(3437, 1215.354858, -2114.119384, 156.105957, -1.699999, -0.300055, 0.000000);
CreateDynamicObject(3437, 1215.298950, -2113.802246, 166.821075, -1.699999, -0.300055, 0.000000);
CreateDynamicObject(3437, 1215.282348, -2113.707763, 169.999603, -1.699999, -0.300055, 0.000000);
CreateDynamicObject(3437, 1211.777832, -2113.697509, 170.327133, -1.699999, 38.399940, 0.000000);
CreateDynamicObject(3437, 1205.317626, -2113.940917, 162.180252, -1.699999, 38.399940, 0.000000);
CreateDynamicObject(3437, 1201.572265, -2114.079345, 157.456680, -1.699999, 38.399940, 0.000000);
CreateDynamicObject(3437, 1198.765869, -2114.074951, 157.598785, -1.699999, 2.899943, 0.000000);
CreateDynamicObject(3437, 1199.335815, -2113.741210, 168.839447, -1.699999, 2.899943, 0.000000);
CreateDynamicObject(3437, 1199.445678, -2113.678222, 171.005630, -1.699999, 2.899943, 0.000000);
CreateDynamicObject(3437, 1180.519042, -2113.652099, 171.963958, -1.699999, 2.899943, 0.000000);
CreateDynamicObject(3437, 1179.946655, -2113.989013, 160.663360, -1.699999, 2.899943, 0.000000);
CreateDynamicObject(3437, 1179.815795, -2114.064208, 158.067947, -1.699999, 2.899943, 0.000000);
CreateDynamicObject(3437, 1185.996582, -2113.511718, 176.694396, -1.699999, 91.199966, 0.000000);
CreateDynamicObject(3437, 1175.328857, -2113.504882, 176.880432, -1.699999, -89.000038, 0.000000);
//vip gang objects - location - close
//gunmachines - location - open
CreateDynamicObject(18885, 2497.7666,-1703.1995,1014.7422, 0.000000, 0.000000, 269.7191, 2);
CreateDynamicObject(18885, 2497.7666,-1703.1995,1014.7422, 0.000000, 0.000000, 269.7191, 1);
CreateDynamicObject(18885, 1229.758789, -2005.632934, 60.969139, 0.000000, 0.000000, 94.200027, 0);
CreateDynamicObject(18885, 213.2412,1806.7898,17.6406,0,0,0, 0);
CreateDynamicObject(18885, 2449.6282,-1696.3843,1013.5078,0,0,180.0, 0);
CreateDynamicObject(18885, -39.4808,1078.9188,20.2422,0,0,86.8247, 0);
CreateDynamicObject(18885, 1969.2216,953.4484,10.8203,0,0,356.8830, 0);
CreateDynamicObject(18885, -692.3365,935.6404,13.6328,0,0,93.0680, 0);
CreateDynamicObject(18885, 1267.8367,-784.8399,1091.9063,0,0,267.2830, 1);
CreateDynamicObject(18885, 2449.6523,-1696.3839,1013.5078,0,0,179.3034, 1);
CreateDynamicObject(18885, 254.7288,62.7026,1003.6406,0,0,176.9118, 1);
CreateDynamicObject(18885, 137.8699,1381.5940,1088.3672,0,0,357.8863, 1);
CreateDynamicObject(18885, 1083.3113,-1231.9309,15.8203,0,0,92.1280, 0);//blood mafia
//gunmachines - location - close
//atm objects - location - open
CreateDynamicObject(2942, 1539.162475, -1613.974609, 13.134112, 0.000000, 0.000000, -89.500000);
CreateDynamicObject(2942, 387.170196, -1827.512084, 7.415833, 0.000000, 0.000000, -91.399955);
CreateDynamicObject(2942, 378.918457, -2060.627929, 7.453046, 0.000000, 0.000000, 92.900016);
CreateDynamicObject(2942, 672.134521, -503.247589, 15.964093, 0.000000, 0.000000, 94.699989);
CreateDynamicObject(2942, 2490.404541, 923.318664, 10.840134, 0.000000, 0.000000, -90.099914);
CreateDynamicObject(2942, 2181.033691, 2462.734130, 10.424777, 0.000000, 0.000000, -0.599999);
CreateDynamicObject(2942, -174.470657, 1138.796386, 19.313276, 0.000000, 0.000000, -179.500106);
CreateDynamicObject(2942, -1486.528686, 2583.155517, 55.317409, 0.000000, 0.000000, -86.799980);
CreateDynamicObject(2942, -2492.394775, 2366.457519, 9.587511, 0.000000, 0.000000, 89.600021);
CreateDynamicObject(2942, 1239.006103, -2041.014038, 59.432590, -1.099999, -0.799999, 90.199966);
CreateDynamicObject(2942, 210.3416,1808.8025,21.4672, 0,0,180);
CreateDynamicObject(2942, 2194.9380,1986.2362,11.9, 0,0,270);
CreateDynamicObject(2942, 398.4207,-1806.1260,7.5381, 0,0,179.8874);
CreateDynamicObject(2942, 257.5467,70.2417,1003.3706, 0,0,266.8394);
CreateDynamicObject(2942, 142.7404,1381.5952,1087.8672, 0,0,0.0655);
CreateDynamicObject(2942, 2490.8076,-1697.2205,1014.3422, 0,0,88.9241,1);
//atm - objects - location - close
//bus - objects - location - open
CreateDynamicObject(2631, 2022.0, 2236.7, 2102.9, 0.0, 0.0, 90.0);
CreateDynamicObject(2631, 2022.0, 2240.6, 2102.9, 0.0, 0.0, 90.0);
CreateDynamicObject(2631, 2022.0, 2244.5, 2102.9, 0.0, 0.0, 90.0);
CreateDynamicObject(2631, 2022.0, 2248.4, 2102.9, 0.0, 0.0, 90.0);
CreateDynamicObject(16501, 2022.1, 2238.3, 2102.8, 0.0, 90.0, 0.0);
CreateDynamicObject(16501, 2022.1, 2245.3, 2102.8, 0.0, 90.0, 0.0);
CreateDynamicObject(16000, 2024.2, 2240.1, 2101.2, 0.0, 0.0, 90.0);
CreateDynamicObject(16000, 2019.8, 2240.6, 2101.2, 0.0, 0.0, -90.0);
CreateDynamicObject(16000, 2022.2, 2248.7, 2101.2, 0.0, 0.0, 180.0);
CreateDynamicObject(16501, 2021.8, 2246.5, 2107.3, 0.0, 270.0, 90.0);
CreateDynamicObject(16501, 2022.0, 2240.8, 2107.3, 0.0, 270.0, 0.0);
CreateDynamicObject(16501, 2022.0, 2233.7, 2107.3, 0.0, 270.0, 0.0);
CreateDynamicObject(18098, 2024.3, 2239.6, 2104.8, 0.0, 0.0, 90.0);
CreateDynamicObject(18098, 2024.3, 2239.7, 2104.7, 0.0, 0.0, 450.0);
CreateDynamicObject(18098, 2020.1, 2239.6, 2104.8, 0.0, 0.0, 90.0);
CreateDynamicObject(18098, 2020.0, 2239.6, 2104.7, 0.0, 0.0, 90.0);
CreateDynamicObject(2180, 2023.6, 2236.1, 2106.7, 0.0, 180.0, 90.0);
CreateDynamicObject(2180, 2023.6, 2238.1, 2106.7, 0.0, 180.0, 90.0);
CreateDynamicObject(2180, 2023.6, 2240.1, 2106.7, 0.0, 180.0, 90.0);
CreateDynamicObject(2180, 2023.6, 2242.1, 2106.7, 0.0, 180.0, 90.0);
CreateDynamicObject(2180, 2023.6, 2244.1, 2106.7, 0.0, 180.0, 90.0);
CreateDynamicObject(2180, 2023.6, 2246.1, 2106.7, 0.0, 180.0, 90.0);
CreateDynamicObject(2180, 2023.6, 2248.1, 2106.7, 0.0, 180.0, 90.0);
CreateDynamicObject(2180, 2020.3, 2235.1, 2106.7, 0.0, 180.0, 270.0);
CreateDynamicObject(2180, 2020.3, 2237.1, 2106.7, 0.0, 180.0, 270.0);
CreateDynamicObject(2180, 2020.3, 2239.1, 2106.7, 0.0, 180.0, 270.0);
CreateDynamicObject(2180, 2020.3, 2241.1, 2106.7, 0.0, 180.0, 270.0);
CreateDynamicObject(2180, 2020.3, 2243.1, 2106.7, 0.0, 180.0, 270.0);
CreateDynamicObject(2180, 2020.3, 2245.1, 2106.7, 0.0, 180.0, 270.0);
CreateDynamicObject(2674, 2023.4, 2238.3, 2102.9, 0.0, 0.0, 600.0);
CreateDynamicObject(2674, 2020.4, 2242.3, 2102.9, 0.0, 0.0, 600.0);
CreateDynamicObject(2674, 2023.4, 2246.3, 2102.9, 0.0, 0.0, 600.0);
CreateDynamicObject(14405, 2022.0, 2242.1, 2103.5, 0.0, 0.0, 540.0);
CreateDynamicObject(14405, 2022.0, 2243.6, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2022.0, 2245.1, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2022.0, 2246.6, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2022.0, 2248.1, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2022.0, 2249.6, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2022.0, 2251.1, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2024.6, 2242.1, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2024.6, 2243.6, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2024.6, 2245.1, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2024.6, 2246.6, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2024.6, 2248.1, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2024.6, 2249.6, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2024.6, 2251.1, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2019.4, 2242.1, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2019.4, 2243.6, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2019.4, 2245.1, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2019.4, 2246.6, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2019.4, 2248.1, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2019.4, 2249.6, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2019.4, 2251.1, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(14405, 2022.0, 2253.6, 2104.0, -6.0, 0.0, 180.0);
CreateDynamicObject(14405, 2021.1, 2253.6, 2104.0, -6.0, 0.0, 180.0);
CreateDynamicObject(14405, 2024.6, 2253.6, 2103.5, 0.0, 0.0, 180.0);
CreateDynamicObject(2674, 2020.4, 2235.7, 2102.9, 0.0, 0.0, 52.0);
CreateDynamicObject(2673, 2020.4, 2246.7, 2102.9, 0.0, 0.0, 270.0);
CreateDynamicObject(2700, 2023.5, 2235.1, 2105.5, 180.0, -4.0, 90.0);
CreateDynamicObject(2700, 2020.4, 2235.1, 2105.5, 180.0, 0.0, 90.0);
CreateDynamicObject(2700, 2023.5, 2242.1, 2105.5, 180.0, -4.0, 90.0);
CreateDynamicObject(2700, 2020.4, 2242.1, 2105.5, 180.0, 0.0, 90.0);
CreateDynamicObject(1799, 2023.1, 2234.2, 2105.7, 270.0, 0.0, 360.0);
CreateDynamicObject(1799, 2019.8, 2234.2, 2105.7, 270.0, 0.0, 0.0);
CreateDynamicObject(1538, 2022.7, 2234.7, 2102.8, 0.0, 0.0, 180.0);
CreateDynamicObject(1799, 2022.1, 2234.2, 2106.1, 720.0, 90.0, 450.0);
CreateDynamicObject(1799, 2021.8, 2234.2, 2105.1, 0.0, 270.0, 270.0);
CreateDynamicObject(1799, 2022.1, 2234.2, 2107.3, 0.0, 90.0, 90.0);
CreateDynamicObject(1799, 2021.6, 2234.2, 2106.3, 0.0, 270.0, 270.0);
CreateDynamicObject(1799, 2022.3, 2234.2, 2104.3, 90.0, 0.0, 180.0);
CreateDynamicObject(11737, 1555.454833, -1675.643798, 15.184510, 0.000000, 0.000000, -89.599983);
CreateDynamicObject(1518, 1554.107666, -1671.367431, 19.822765, 0.000000, 0.000000, -96.300018);
CreateDynamicObject(1518, 1554.330688, -1679.641235, 19.822765, 0.000000, 0.000000, -96.300018);
CreateDynamicObject(3472, 1521.447021, -1663.080932, 12.539978, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3472, 1521.447021, -1678.651123, 12.539978, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3472, 1521.447021, -1692.241333, 12.539978, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3472, 1521.447021, -1705.212402, 12.539978, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3472, 1521.447021, -1715.644042, 12.539978, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1214, 1537.261108, -1664.060791, 12.232079, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1214, 1537.261108, -1681.200683, 12.232079, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1364, 1518.810913, -1704.614379, 13.220018, 0.000000, 0.000000, 88.499923);
CreateDynamicObject(1364, 1518.961303, -1698.896362, 13.220018, 0.000000, 0.000000, 88.499923);
CreateDynamicObject(1364, 1520.290161, -1648.113769, 13.220018, 0.000000, 0.000000, 88.499923);
CreateDynamicObject(1364, 1520.449096, -1642.045898, 13.220018, 0.000000, 0.000000, 88.499923);
CreateDynamicObject(3511, 1512.928466, -1599.713134, 12.540534, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3511, 1485.548095, -1599.713134, 12.540534, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3511, 1460.298339, -1599.713134, 12.540534, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3511, 1444.128295, -1599.713134, 12.540534, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(9132, 1478.826904, -1584.110473, 31.604421, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(9132, 1515.968505, -1584.110473, 31.604421, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19122, 1495.148071, -1586.894042, 13.010266, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19122, 1495.148071, -1585.703857, 13.010266, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19122, 1495.148071, -1584.003784, 13.010266, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19122, 1501.368408, -1584.003784, 13.010266, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19122, 1501.368408, -1585.004272, 13.010266, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19122, 1501.368408, -1586.385131, 13.010266, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1231, 1194.470458, -2070.940185, 70.610519, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1231, 1188.810180, -2070.940185, 70.610519, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1231, 1182.860107, -2070.940185, 70.610519, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1231, 1178.450439, -2070.940185, 70.610519, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1231, 1178.450439, -2001.942138, 70.610519, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1231, 1182.690307, -2001.931396, 70.610519, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1231, 1189.293090, -2002.090820, 70.610519, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1231, 1192.664916, -2002.090820, 70.610519, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1722.754394, 1396.652221, 10.092012, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1721.743652, 1400.602905, 10.092012, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1720.512695, 1405.283325, 10.092012, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1719.582153, 1409.662719, 10.092012, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1718.231079, 1416.132812, 10.092012, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1717.450683, 1421.913085, 10.092012, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1706.989624, 1421.422607, 10.092012, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1707.600097, 1417.631958, 10.092012, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(19124, 1707.461914, 1419.510986, 10.092012, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(8132, 1691.470336, 1435.104125, 12.048764, 0.000000, 0.000000, 101.199989);
CreateDynamicObject(645, 1727.191650, 1438.254882, 8.764432, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(645, 1736.112182, 1470.105102, 8.764432, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(645, 1747.041870, 1470.105102, 8.764432, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(645, 1747.041870, 1435.815063, 8.764432, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(1364, 1698.839721, 1437.827758, 10.645811, 0.000000, 0.000000, 178.699966);
CreateDynamicObject(1364, 1685.432739, 1438.132934, 10.645811, 0.000000, 0.000000, 178.699966);
CreateDynamicObject(3472, 1742.685546, 1347.780639, 9.693796, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3472, 1742.685546, 1328.770385, 9.693796, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3472, 1742.685546, 1302.430541, 9.693796, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3472, 1742.685546, 1266.106323, 9.693796, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3472, 1742.685546, 1281.819580, 9.693796, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3472, 1772.969604, 871.902587, 9.185457, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3472, 1772.969604, 881.902587, 9.185457, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3472, 1818.189575, 881.902587, 9.185457, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(3472, 1817.918579, 873.962097, 9.015452, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(6965, 1858.800048, 1383.463256, 19.630161, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(6965, 1858.800048, 1404.493530, 19.630161, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(6965, 1853.349975, 1426.184082, 19.630161, 0.000000, 0.000000, 0.000000);
CreateDynamicObject(8168, 2031.751342, 1332.824707, 11.543118, 0.000000, 0.000000, 102.800025);
CreateDynamicObject(8168, 2081.345214, 940.962524, 10.611484, 0.000000, 0.000000, -74.700164);
CreateDynamicObject(8168, 2247.717041, 2405.651611, 11.596463, 0.000000, 0.000000, -165.299942);
CreateDynamicObject(8168, 1538.904541, -1720.109863, 14.268122, 0.000000, 0.000000, -72.499992);
CreateDynamicObject(4141, 1397.29077, -1626.03467, 23.40892,   0.00000, 0.00000, -178.00000);
CreateDynamicObject(14819, 1418.35205, -1615.43713, 13.72610,   0.00000, 0.00000, 94.00000);
CreateDynamicObject(14819, 1418.25952, -1612.83240, 13.72610,   0.00000, 0.00000, 94.00000);
CreateDynamicObject(14819, 1418.30554, -1614.15552, 13.72610,   0.00000, 0.00000, 94.00000);
CreateDynamicObject(14819, 1392.65234, -1646.45874, 13.55342,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14819, 1394.63159, -1646.42273, 13.55342,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14819, 1393.94910, -1646.38232, 13.55342,   0.00000, 0.00000, 0.00000);
new obj1; new obj2;
obj1=CreateObject(1268, 1423.491455, -1628.154907, 26.573862, 0.000000, 0.000000, -179.099990);
obj2=CreateObject(8292, 1422.923095, -1626.492187, 32.606628, 0.000000, 0.000000, -33.900028);
SetObjectMaterialText(obj1, "{FFFFFF}", 0, OBJECT_MATERIAL_SIZE_256x128,"Arial", 28, 0, 0xFFFF8200, 0xFF000000, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
SetObjectMaterialText(obj2, "{FFFFFF}Сделка или не", 0, OBJECT_MATERIAL_SIZE_256x128,"Arial", 28, 0, 0xFFFF8200, 0xFF000000, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
CreateDynamicActor(93, 1537.0028,-1722.1549,13.5469,91.5117);
CreateDynamicActor(98, 2245.7480,2407.6499,10.8203,0.6442);
CreateDynamicActor(169, 2079.3628,938.8993,9.8557,80.8583);
CreateDynamicActor(93, 2033.8187,1334.7651,10.8203,270.7167);
CreateDynamicActor(21,303.1454,-1156.6954,80.9099,135.7167); // cripz npc
//ATM, Other mini details with construction Offices telnet 1
CreateDynamicObject(19526, 2089.64331, 1285.05725, 10.08130,   20.00000, 0.00000, -91.00000);
CreateDynamicObject(19526, 1940.98206, 763.11218, 10.22581,   20.00000, 0.00000, 182.00000);
CreateDynamicObject(19526, 368.91620, -1351.74109, 14.10957,   20.00000, 0.00000, 28.00000);
CreateDynamicObject(19526, 512.26062, -1551.26831, 16.19243,   20.00000, 0.00000, 32.00000);
CreateDynamicObject(19526, 828.55225, -1385.03723, 13.25203,   20.00000, 0.00000, 0.00000);
CreateDynamicObject(19526, 645.37549, -1764.18201, 12.35246,   20.00000, 0.00000, 79.00000);
CreateDynamicObject(19526, 2498.63525, -1760.53882, 13.05984,   27.00000, 0.00000, 181.00000);
CreateDynamicObject(19526, 1833.91602, -1837.75842, 12.97980,   33.00000, 0.00000, -93.00000);
CreateDynamicObject(19526, 1346.17297, -1759.58667, 13.12308,   21.00000, 0.00000, 181.00000);
CreateDynamicObject(1383, 1898.78552, -1302.33081, 44.58461,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1388, 1896.12329, -1314.96729, 71.70432,   0.00000, 0.00000, 167.00000);
//COPS
CreateDynamicActor(71,1543.8268,-1631.9441,13.3828,92.3298); // LSPD 1
CreateDynamicActor(71,1546.4470,-1670.4344,13.5673,86.4370); // LSPD 2
CreateDynamicActor(71,1545.9292,-1680.5165,13.5613,91.4504); // LSPD 3
CreateDynamicActor(308,2284.3652,2431.0391,10.8203,177.0995); // actor LV
CreateDynamicActor(308,2238.2156,2449.5244,11.0372,95.2952); // actor LV 2
CreateDynamicActor(308,-1601.5638,713.6342,13.3653,352.3193); // actor SF 1
CreateDynamicActor(71,-1609.7241,713.1808,13.6122,358.8994); // SF 2
//COPS
Create3DTextLabel("Анджелина\n{00e600}Добър ден, господине, ако желаете си закупете билет чрез {00FF00}Y", 0xFFFFFFFF,1537.0028,-1722.1549,13.5469,10,0,0);
Create3DTextLabel("Георги\n{00e600}Здравейте, господине, ако желаете си закупете билет чрез {00FF00}Y", 0xFFFFFFFF,2245.7480,2407.6499,10.8203,10,0,0);
Create3DTextLabel("Александра\n{00e600}Как си? Можеш да си купиш билет чрез {00FF00}Y", 0xFFFFFFFF,2079.3628,938.8993,9.8557,10,0,0);
Create3DTextLabel("Ивана\n{00e600}Здравейте, купете си билетче за вечерта или за момента чрез {00FF00}Y", 0xFFFFFFFF,2033.8187,1334.7651,10.8203,10,0,0);
//bus - objects - location - close
CreateDynamicObject(2886, 266.349578, 84.394371, 1001.709106,  0.000000,0.000000,89.1308);
CreateDynamicObject(2886, 266.372955, 88.574554,1001.709106,  0.000000,0.000000,89.1308);
//CreateDynamicObject(16773, 2335.417236, 2484.029785, 6.957778,  0.000000,0.000000,89.1308);
//CreateDynamicObject(16773, 2335.417236, 2484.029785, 0.557772,  0.000000,0.000000,89.1308);
//objects - location - close
for(new alv=0;alv<MAX_VEHICLES;alv++)
{
format(stringloadvehs,64, "/Vehicles/%d.ini", alv);
if(dini_Exists(stringloadvehs))
{
LoadPrivateVehicle(alv);
maximumPrivateVehsID=alv;
}
}
for(new alh=0; alh<MAX_HOUSES; alh++)
{
HouseInfo[alh][hLevel]=-1;
format(stringloadhouse, 180, "/Houses/%d.ini", alh);//stringloadbizz
if(dini_Exists(stringloadhouse))
{
if(HouseInfo[alh][hLoaded]==0)
{
maxhouses++;
LoadHouse(alh);
}
}
}
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
SetVehicleToRespawn(cars);
}
for(new i=0; i<MAX_VEHICLES; i++)
{
if(vehEngineStatusON[i]==0)
{
ToggleEngine(i, VEHICLE_PARAMS_OFF);
}
}
return 1;
}
public OnGameModeExit()
{
return 1;
}
public GeneralTimer1s()
{
if(minutes==0 && seconds==0)
{
for(new i=0; i<500; i++)
{
if(IsPlayerConnected(i))
{
GivePayDayPlayer(i);
}
}
}
for(new i=0; i<MAX_VEHICLES; i++)
{
if(VehOtherInfo[i][vPrivateSetAngle]>0)
{
if(VehOtherInfo[i][vPrivateSetAngle]>0)
{
VehOtherInfo[i][vPrivateSetAngle]--;
}
if(VehOtherInfo[i][vPrivateSetAngle]==0)
{
SetVehicleZAngle(i,privatecarA[i]);
}
}
if(VehOtherInfo[i][vRespawn]>0)
{
if(VehOtherInfo[i][vRespawn]>0)
{
VehOtherInfo[i][vRespawn]--;
}
if(VehOtherInfo[i][vRespawn]==0)
{
SetVehicleToRespawn(i);
}
}
}
if(antijoinspamtime>0)
{
antijoinspamtime--;
}
if(IPRemove>0)
{
if(IPRemove>0)
{
IPRemove--;
}
if(IPRemove<=0)
{
IPRemove--;
lastIPJoin="0.23.0.0";
}
}
if(racetimer>0)
{
if(racetimer>0)
{
racetimer--;
}
if(racetimer==3)
{
if(racestarted==0)
{
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(joinedrace[i]==1)
{
GameTextForPlayer(i, "~b~3", 2000, 3);
}
}
}
}
}
///////////////////////////////////////////////
if(racetimer==2)
{
if(racestarted==0)
{
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(joinedrace[i]==1)
{
GameTextForPlayer(i, "~b~2", 2000, 3);
}
}
}
}
}
/////////////////////////////////////////////////
if(racetimer==1)
{
if(racestarted==0)
{
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(joinedrace[i]==1)
{
GameTextForPlayer(i, "~b~1", 2000, 3);
}
}
}
}
}
/////////////////////////////////////////////////
////////////////////////////////////////////////////
if(racetimer==0)
{
if(racestarted==1)
{
//
SendClientMessageToAll(0x0092ffFF,"Street Race: Състезанието приключи !");
racestarted=0;
joinedinrace=0;
for(new i=0; i<MAX_PLAYERS;i++)
{
if(IsPlayerConnected(i))
{
if(joinedrace[i]==1)
{
if(PlayerInfo[i][pMission]==4)
{
enteredInMissionCP[i]=0;
PlayerInfo[i][pMission]+=1;
PlayerInfo[i][pMPMission]=0;
SendClientMessage(i,	0xFF3737FF,"[Мисия 5] Твоята мисия свърши.");
GameTextForPlayer(i, "~w~Mission~n~~b~completed", 2000, 1);
}
joinedrace[i]=0;
SetPlayerHealth(i,0);
}
}
}
//
}
if(racestarted==0)
{
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(joinedrace[i]==1)
{
TogglePlayerControllable(i, 1);
GameTextForPlayer(i, "~b~GO GO GO", 2000, 3);
SetPlayerRaceCheckpoint(i,2 ,1025.1523,-955.8716,42.3311,
1025.1523,-955.8716,42.3311, 3.0);
}
}
racetimer=5*60;
SendClientMessageToAll(0x0092ffFF,"Street Race: Състезанието започва, успех на всички, имате 5 минути да финиширате или иначе състезанието ще бъде анулирано!");
}
}
}
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam]>0)
{
if(turfmember[i]==2)
{
if (turfattack[PlayerInfo[i][pTeam]]>0 && !IsPlayerInTurf(i, TurfInfo[TeamInfo[PlayerInfo[i][pTeam]][tWar]][zMinX], TurfInfo[TeamInfo[PlayerInfo[i][pTeam]][tWar]][zMinY], TurfInfo[TeamInfo[PlayerInfo[i][pTeam]][tWar]][zMaxX], TurfInfo[TeamInfo[PlayerInfo[i][pTeam]][tWar]][zMaxY]))
{
new Float:Health; GetPlayerHealth(i,Health);
new string256[256];
if(Health>0.0)
{
turfmember[i]=0;
inturfmembers[PlayerInfo[i][pTeam]]-=1;
format(string256, 256, "[TURF INFO] {FF0000}%s{008cff} напусна очертанията и отпадна от атаката на %s!",pname[i],TeamInfo[TurfInfo[TeamInfo[PlayerInfo[i][pTeam]][tWar]][TurfOwner]][tName]);
SendFactionMessage(PlayerInfo[i][pTeam],0x008cffFF,string256); //turf da doida tuk
if(inturfmembers[PlayerInfo[i][pTeam]]<1)
{
format(string256, 256, "Turf War: {FF0000}%s{008cff} не успя да превземе %s територията на %s!",TeamInfo[PlayerInfo[i][pTeam]][tName],TurfInfo[TeamInfo[PlayerInfo[i][pTeam]][tWar]][TurfName],
TeamInfo[TurfInfo[TeamInfo[PlayerInfo[i][pTeam]][tWar]][TurfOwner]][tName]);
SendClientMessageToAll(0x008cffFF, string256);
if(inturfmembers[PlayerInfo[i][pTeam]]<1)
{
TurfInfo[TeamInfo[PlayerInfo[i][pTeam]][tWar]][TurfWarGang]=0;
turfwargang[TeamInfo[PlayerInfo[i][pTeam]][tWar]]=0;
}
GangZoneStopFlashForAll(TeamInfo[PlayerInfo[i][pTeam]][tWar]);
TeamInfo[PlayerInfo[i][pTeam]][tWar]=0;
turfattack[PlayerInfo[i][pTeam]]=0;
}
}
}
}
}
}

if(minutes==26 && seconds==11)
{
new randomWhetherChange=randomex(0,23);
if(randomWhetherChange>21)
{
ChangeHoursInGame();
}
}
if(minutes==59 && seconds==24)
{
ChangeHoursInGame();
ReloadATMSBank();
}
if(hours==18 && minutes==54 && seconds==0 )
{
SendClientMessageToAll(0xFF80C0FF,"[Национална лотария] Все още нямате фиш за предстоящата лотария ? Купете си го от най-близката до вас лафка.");
}
if(hours==18 && minutes==44 && seconds==0 )
{
SendClientMessageToAll(0xFF80C0FF,"[Национална лотария] Предстои да бъдат изтеглени 6 печеливши числа след 10 минути.");
}
if(hours==18 && minutes==57 && seconds==0 )
{
SendClientMessageToAll(0xFF80C0FF,"[Национална лотария] 6 печеливши числа ще бъдат изтеглени на случаен принцип много скоро.");
}
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(hours==18 && minutes==59 && seconds==0 )
{
new lottornd;
lottornd=randomex(1,100);
new lottornd2;
lottornd2=randomex(1,100);
new lottornd3;
lottornd3=randomex(1,100);
new lottornd4;
lottornd4=randomex(1,100);
new lottornd5;
lottornd5=randomex(1,100);
new lottornd6;
lottornd6=randomex(1,100);
new lotostring[115];
format(lotostring, 115, "[Национална лотария] Печелившите числа, избрани на случаен принцип са %d, %d, %d, %d, %d.", lottornd,lottornd2,lottornd3,lottornd4,lottornd5,lottornd6);
SendClientMessage(i, 0xFF00FFFF, lotostring);
SendClientMessage(i, 0xFF00FFFF, "[Национална лотария] Печелившите ще получат наградата си по банков акаунт.");
lottowin += 5000;
if(lottonumber[i]!=0)
{
if(lottonumber6[i] == lottornd || lottonumber5[i] == lottornd ||
lottonumber4[i] == lottornd || lottonumber3[i] == lottornd ||
lottonumber2[i] == lottornd || lottonumber[i] == lottornd)
{
PlayerInfo[i][pAccount]+=10500;
SendClientMessage(i,0xFF00FFFF, "Познахте първото число, награда $10500.");
}
if(lottonumber6[i] == lottornd2 || lottonumber5[i] == lottornd2 ||
lottonumber4[i] == lottornd2 || lottonumber3[i] == lottornd2 ||
lottonumber2[i] == lottornd2 || lottonumber[i] == lottornd2)
{
PlayerInfo[i][pAccount]+=6500;
SendClientMessage(i,0xFF00FFFF, "Познахте второто число, награда $6500.");
}
if(lottonumber6[i] == lottornd3 || lottonumber5[i] == lottornd3 ||
lottonumber4[i] == lottornd3 || lottonumber3[i] == lottornd3 ||
lottonumber2[i] == lottornd3 || lottonumber[i] == lottornd3)
{
PlayerInfo[i][pAccount]+=45000;
SendClientMessage(i,0xFF00FFFF, "Познахте третото число, награда $45000.");
}
if(lottonumber6[i] == lottornd4 || lottonumber5[i] == lottornd4 ||
lottonumber4[i] == lottornd4 || lottonumber3[i] == lottornd4 ||
lottonumber2[i] == lottornd4 || lottonumber[i] == lottornd4)
{
PlayerInfo[i][pAccount]+=3500;
SendClientMessage(i,0xFF00FFFF, "Познахте четвъртото число, награда $3500.");
}
if(lottonumber6[i] == lottornd5 || lottonumber5[i] == lottornd5 ||
lottonumber4[i] == lottornd5 || lottonumber3[i] == lottornd5 ||
lottonumber2[i] == lottornd5 || lottonumber[i] == lottornd5)
{
PlayerInfo[i][pAccount]+=25000;
SendClientMessage(i,0xFF00FFFF, "Познахте петото число, награда $25000.");
}
if(lottonumber6[i] == lottornd6 || lottonumber5[i] == lottornd6 ||
lottonumber4[i] == lottornd6 || lottonumber3[i] == lottornd6 ||
lottonumber2[i] == lottornd6 || lottonumber[i] == lottornd6)
{
SendClientMessage(i,0xFF00FFFF, "Познахте шестото число, награда $500.");
PlayerInfo[i][pAccount]+=500;
}
}
}
if(minutes==2 && seconds==0 )
{
SendClientMessage(i,0x00C5FFFF,"[Message] {FFFFFF}Можете да видите всичко ново, чрез {33AA33}/news{FFFFFF} и всичо относно сървъра чрез {33AA33}/help");
}
if(minutes==4 && seconds==0 )
{
SendClientMessage(i,0x00C5FFFF,"[Message] {FFFFFF}Можете да видите как да спечелите VIP права чрез {33AA33}/viphelp");
}
if(minutes==47 && seconds==0 )
{
SendClientMessage(i,0x00C5FFFF,"[Message] {FFFFFF}За да гледате официалния трейлър, посетете адрес:  {33AA33}Скоро");
}
if(minutes==9 && seconds==0 )
{
SendClientMessage(i,0x00C5FFFF,"[Message] {FFFFFF}Можете да видите сайта и форума на адрес:  {33AA33}Скоро  ,  Скоро/forum"); //e60000
}
if(minutes==14 && seconds==0 )
{
SendClientMessage(i,0x00C5FFFF,"[Message] {FFFFFF}Можете да видите сайта и форума на адрес:  {33AA33}Скоро  ,  Скоро/forum");
}
if(minutes==23 && seconds==0 )
{
SendClientMessage(i,0x00C5FFFF,"[Message] {FFFFFF}Можете да пуснете кандидатура за полицията във форума - {33AA33}Скоро/forum");
}
if(minutes==33 && seconds==0 )
{
SendClientMessage(i,0x00C5FFFF,"[Message] {FFFFFF}Можете да пуснете кандидатура за полицията във форума - {33AA33}Скоро/forum");
}
if(minutes==42 && seconds==0 )
{
SendClientMessage(i,0x00C5FFFF,"[Message] {FFFFFF}Можете да видите сайта и форума на адрес:  {33AA33}Скоро  ,  Скоро/forum");
}
if(minutes==44 && seconds==0 )
{
SendClientMessage(i,0x00C5FFFF,"[Message] {FFFFFF}Можете да видите информация как да станете лидер и статистика на вашата банда/мафия - {33AA33}/ganginfo  ,  /gangstats");
}
if(minutes==11 && seconds==0 )
{
SendClientMessage(i,0x00C5FFFF,"[Message] {FFFFFF}Можете да видите информация как да станете лидер и статистика на вашата банда/мафия - {33AA33}/ganginfo  ,  /gangstats");
}
if(minutes==8 && seconds==0 )
{
SendClientMessage(i,0x00C5FFFF,"[Message] {FFFFFF}Можете да видите как да спечелите VIP права чрез {33aa33}/viphelp");
}
if(minutes==45 && seconds==0 )
{
SendClientMessage(i,0x00C5FFFF,"[Message] {FFFFFF}Лесни и бързи пари? Готини коли? Използвайте {33aa33}/drift {FFFFFF}и печелете точки");
}
}
}
public GeneralTimer()
{
getdate(year, month, day);
gettime(hours, minutes, seconds);
if(GeneralTimer1ms==false)
GeneralTimer1ms=true;
else
GeneralTimer1ms=false;
for(new vehicleid=0; vehicleid<MAX_VEHICLES; vehicleid++)
{
if(VehicleInfo[vehicleid][vRadioChange]>0)
{
if(VehicleInfo[vehicleid][vRadioChange]>0)
{
VehicleInfo[vehicleid][vRadioChange]--;
}
if(VehicleInfo[vehicleid][vRadioChange]==0)
{
//>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<
new stringRadio[50];
format(stringRadio,50,"~b~~h~RADIO %s",radioAudioStreamNames[radioveh[vehicleid]]);
for(new allPlayersInVeh=0; allPlayersInVeh<MAX_PLAYERS; allPlayersInVeh++)
{
if (IsPlayerInVehicle(allPlayersInVeh,vehicleid))
{
GameTextForPlayer(allPlayersInVeh, stringRadio, 650, 1);
if(radioveh[vehicleid]>0)
{
PlayAudioStreamForPlayer(allPlayersInVeh, radioAudioStream[radioveh[vehicleid]]);
}
else if(radioveh[vehicleid]==0)
{
StopAudioStreamForPlayer(allPlayersInVeh);
}
if(radioveh[vehicleid]>0)
{
if(radion[allPlayersInVeh]>0)
{
radion[allPlayersInVeh]=0;
SendClientMessage(allPlayersInVeh,0xccccffFF,"• Докато сте в това ПС ще слушате музиката, която е пусната в него •");
}
}
}
}
}
//>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<
}
}
if(timermoveufo>0)
{
if(timermoveufo>0)
{
timermoveufo--;
}
if(timermoveufo==0)
{
MoveDynamicObject(mysteries[0], 2560.639404+random(7), -642.661926+random(7), 184.977172+random(7), 5.0);
MoveDynamicObject(mysteries[1], 2585.541015+random(7), -614.862182+random(7), 184.977172+random(7), 5.0);
MoveDynamicObject(mysteries[2], 2563.627441+random(7), -611.625854+random(7), 184.977172+random(7), 5.0);
MoveDynamicObject(mysteries[3], 2569.757568+random(7), -626.789733+random(7), 135.518127+random(7), 5.0);
MoveDynamicObject(mysteries[4], 12986, 2583.441894+random(7), -626.873107+random(7), 134.873596+random(7), 5.0);
MoveDynamicObject(mysteries[5], 16340, 2571.539794+random(7), -624.770263+random(7), 196.286468+random(7), 5.0);
MoveDynamicObject(mysteries[6], 18656, 2569.495849+random(7), -627.374206+random(7), 195.194854+random(7), 5.0);
MoveDynamicObject(mysteries[7], 2567.1294+random(7),-631.7607+random(3),135.9508+random(7), 5.0);
timermoveufo=5;
}
}
if(bombgurmi>0)
{
if(bombgurmi>0)
{
bombgurmi--;
}
if(bombgurmi==0)
{
if(csgamestarted==1)
{
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Бомбата гръмна и спечелиха терористите!");
twin++;
csroundtimer=120*2;
CreateExplosion(bombataX,bombataY,bombataZ, 3, 6.0);
for(new i=0; i<MAX_PLAYERS ;i++)
{
if(IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
SpawnPlayer(i);
PlayerPlaySound(i,1057,0.0,0.0,0.0);
if(policecs[i]==1)
{
GameTextForPlayer(i, "~r~LOSE", 3000, 1);
}
else
{
GameTextForPlayer(i, "~g~WIN", 3000, 1);
}
}
}
}
if(ctwin>3 || twin>3)
{
if(ctwin>twin)
{
for(new i=0; i<MAX_PLAYERS ;i++)
{
if(IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
if(policecs[i]==1)
{
GivePlayerEP(i,5);
GivePlayerCash(i,5000);
}
}
}
}
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши, победител Counter Terrorists!");
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Награда за победата: 5 EP и $5000!");
}
else if(twin>ctwin)
{
for(new i=0; i<MAX_PLAYERS ;i++)
{
if(IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
if(policecs[i]==0)
{
GivePlayerEP(i,5);
GivePlayerCash(i,5000);
}
}
}
}
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши, победител Terrorists!");
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Награда за победата: 5 EP и $5000!");
}
else if(twin==ctwin)
{
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши с равенство между CT и T!");
}
for(new i=0; i<MAX_PLAYERS ;i++)
{
if(IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
SetPlayerHealth(i,0);
}
}
}
}
//
}
}
}
if(csroundtimer>0)
{
if(csroundtimer>0)
{
csroundtimer--;
}
if(csroundtimer==0)
{
if(csgamestarted==1)
{
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Counter Terrorists печелят, защото времето свърши!");
ctwin++;
if(ctwin>3 || twin>3)
{
if(ctwin>twin)
{
for(new i=0; i<MAX_PLAYERS ;i++)
{
if(IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
if(policecs[i]==1)
{
GivePlayerEP(i,5);
GivePlayerCash(i,5000);
}
}
}
}
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши, победител Counter Terrorists!");
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Награда за победата: 5 EP и $5000!");
}
else if(twin>ctwin)
{
for(new i=0; i<MAX_PLAYERS ;i++)
{
if(IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
if(policecs[i]==0)
{
GivePlayerEP(i,5);
GivePlayerCash(i,5000);
}
}
}
}
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши, победител Terrorists!");
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Награда за победата: 5 EP и $5000!");
}
else if(twin==ctwin)
{
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши с равенство между CT и T!");
}
for(new i=0; i<MAX_PLAYERS ;i++)
{
if(IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
SetPlayerHealth(i,0);
}
}
}
}
}
}
}
if(csroundtimer>0)
{
if(csroundtimer>0)
{
csroundtimer--;
}
if(csroundtimer==3*2)
{
if(csgamestarted==1)
{
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Рундът започва след 3 секунди!");
}
}
if(csroundtimer==0)
{
if(csgamestarted==1)
{
isvalidbomb=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Рундът започна, терористите имат 3 минути да заложат бомбата!");
for(new i=0; i<MAX_PLAYERS ;i++)
{
if(IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
PlayerPlaySound(i,1057,0.0,0.0,0.0);
TogglePlayerControllable(i, 1);
aliveincs[0]=joinedterrorists;
aliveincs[1]=joinedcops;
if(policecs[i]==1)
{
GameTextForPlayer(i, "~g~GO, GO, GO~n~~b~DEFEND A AND B", 3000, 1);
}
else
{
PlayerInfo[i][pGiveBomb]=1*random(6);
GameTextForPlayer(i, "~g~GO, GO, GO~n~~r~PLANT THE BOMB", 3000, 1);
}
}
}
}
}
}
}
if(rpgGamewaittimer>0)
{
if(rpgGamewaittimer>0)
{
rpgGamewaittimer--;
}
if(rpgGamewaittimer==0)
{
SendClientMessageToAll(0xFFBF00FF,"RPG Royale Mini Game: Вече отново може да се организира RPG Royale, използвайте {ffff00}/joinrproyale !");
}
}
if(racewaittimer>0)
{
if(racewaittimer>0)
{
racewaittimer--;
}
if(racewaittimer==0)
{
SendClientMessageToAll(0x0092ffFF,"Street Race: Вече отново може да се организира състезание, използвайте {ffff00}/joinrace !");
}
}
//------------possible error/bug---------------------
if(seconds==31 && novehspam==1)
{
novehspam=0;
}
if(seconds==30 && novehspam==0)
{
SetVehicleToRespawn(taxivehs[0]);
SetVehicleToRespawn(taxivehs[1]);
SetVehicleToRespawn(taxivehs[2]);
SetVehicleToRespawn(taxivehs[3]);
SetVehicleToRespawn(taxivehs[4]);
SetVehicleToRespawn(taxivehs[5]);
SetVehicleToRespawn(taxivehs[6]);
SetVehicleToRespawn(taxivehs[7]);
novehspam=1;
if(drive[jobtaxivehs[0]]==0)
{
SetVehicleToRespawn(jobtaxivehs[0]);
ToggleEngine(jobtaxivehs[0], VEHICLE_PARAMS_OFF); vehEngineStatusON[jobtaxivehs[0]]=0;
}
if(drive[jobtaxivehs[1]]==0)
{
SetVehicleToRespawn(jobtaxivehs[1]);
ToggleEngine(jobtaxivehs[1], VEHICLE_PARAMS_OFF); vehEngineStatusON[jobtaxivehs[1]]=0;
}
if(drive[jobtaxivehs[2]]==0)
{
SetVehicleToRespawn(jobtaxivehs[2]);
ToggleEngine(jobtaxivehs[2], VEHICLE_PARAMS_OFF); vehEngineStatusON[jobtaxivehs[2]]=0;
}
if(drive[jobtaxivehs[3]]==0)
{
SetVehicleToRespawn(jobtaxivehs[0]);
ToggleEngine(jobtaxivehs[3], VEHICLE_PARAMS_OFF); vehEngineStatusON[jobtaxivehs[3]]=0;
}
if(drive[jobtaxivehs[4]]==0)
{
SetVehicleToRespawn(jobtaxivehs[0]);
ToggleEngine(jobtaxivehs[4], VEHICLE_PARAMS_OFF); vehEngineStatusON[jobtaxivehs[4]]=0;
}
if(drive[jobtaxivehs[5]]==0)
{
SetVehicleToRespawn(jobtaxivehs[0]);
ToggleEngine(jobtaxivehs[5], VEHICLE_PARAMS_OFF); vehEngineStatusON[jobtaxivehs[5]]=0;
}
if(drive[carpizza[1]]==0)
{
SetVehicleToRespawn(carpizza[1]);
ToggleEngine(carpizza[1], VEHICLE_PARAMS_OFF); vehEngineStatusON[jobtaxivehs[1]]=0;
}
if(drive[carpizza[2]]==0)
{
SetVehicleToRespawn(carpizza[2]);
ToggleEngine(carpizza[2], VEHICLE_PARAMS_OFF); vehEngineStatusON[jobtaxivehs[2]]=0;
}
if(drive[carpizza[3]]==0)
{
SetVehicleToRespawn(carpizza[3]);
ToggleEngine(carpizza[3], VEHICLE_PARAMS_OFF); vehEngineStatusON[jobtaxivehs[3]]=0;
}
if(drive[carpizza[4]]==0)
{
SetVehicleToRespawn(carpizza[4]);
ToggleEngine(carpizza[4], VEHICLE_PARAMS_OFF); vehEngineStatusON[jobtaxivehs[4]]=0;
}
if(drive[carpizza[5]]==0)
{
SetVehicleToRespawn(carpizza[4]);
ToggleEngine(carpizza[4], VEHICLE_PARAMS_OFF); vehEngineStatusON[jobtaxivehs[4]]=0;
}
}
for(new i=0; i<=calls;i++)
{
if(premahwanemarker[i]>0)
{
if(premahwanemarker[i]>0)
{
premahwanemarker[i]--;
}
if(premahwanemarker[i] <= 0)
{
if(IsValidDynamicMapIcon(callsmarker[i]))
{
DestroyDynamicMapIcon(callsmarker[i]);
}
calls--;
}
}
}
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(GetPlayerWeapon(i) == 0 && joinedincounter[i]==1)
{
GivePlayerWeapon(i, 4, 1);
}
if(PlayerInfo[i][pInvisible]==0)
{
if(joinedincounter[i]==1 && policecs[i]==0)
{
SetPlayerColor(i,0xC81717FF);
}
else if(joinedincounter[i]==1 && policecs[i]==1)
{
SetPlayerColor(i,COLOR_RLSPD);
}
if(PlayerInfo[i][pTeam]!=13 && dutypolice[i]==1)
{
dutypolice[i]=0;
}
}
//
if(IsPlayerInRangeOfPoint(i,45.0,2567.1294,-631.7607,135.9508))
{
SetPlayerPos(i,X[i]+random(3),Y[i]+random(3),Z[i]+13);
pointotvlichane[i]++;
if(pointotvlichane[i]==14)
{
otvlichane[i]=3;
SendClientMessage(i,COLOR_RLVPD,"[UFO] Ти си отвлечен!");
TextDrawShowForPlayer(i, Intro[1]);
alienseffect[i]=-1;
}
if(joinedincounter[i]==1)
{
if(policecs[i]==0)
{
SetPlayerColor(i,0xC81717FF);
}
else
{
SetPlayerColor(i,0xC81717FF);
}
}
}
}
if(serverrestarttimer>0)
{
if(serverrestarttimer>0)
{
serverrestarttimer--;
}
if(serverrestarttimer/2==0)
{
ingmx=1;
gmxsaved=1;
GMXStart1();
}
}
for(new i3=0; i3<MAX_TEAMS; i3++)
{
if(TeamInfo[i3][tTime]>0)
{
if(TeamInfo[i3][tTime]>0)
{
TeamInfo[i3][tTime]--;
}
if(TeamInfo[i3][tTime]==0)
{
TeamInfo[i3][tWar]=0;
SendFactionMessage(13,0x008cffFF,"[FACTION CHAT] Изтече нужното време за да се стартира нова атака на територия!");
}
}
if(turfattack[i3]>0)
{
if(turfattack[i3]>0)
{
turfattack[i3]--;
}
if(turfattack[i3]==0)
{
new once=0;
new string2561[256];
format(string2561, 256, "[TURF INFO] Твоята банда/мафия превзе територията %s, която беше на {FF0000}%s{008cff} и спечели 5 EP и $15000",TurfInfo[TeamInfo[i3][tID]][TurfName],
TeamInfo[TurfInfo[TeamInfo[i3][tWar]][TurfOwner]][tName]);
for(new i2=0; i2<MAX_PLAYERS; i2++ && IsPlayerConnected(i2))
{
if(turfmember[i2]==2)
{
if(PlayerInfo[i2][pTeam]==i3)
{
if(once==0)
{
GiveTeamEP(i2,5);
TeamInfo[PlayerInfo[i2][pTeam]][tCash]+=15000;
once=1;
}
if(PlayerInfo[i2][pAchievement][3]==0)
{
PlayerInfo[i2][pAchievement][3]=1;
SendClientMessage(i2, 0x00FF00FF, "Achievement: Вие спечелихте постижението 'Разширение' и получавате 2 EP и $1300!");
PlayerInfo[i2][pHideAchievement]=10*2;
PlayerInfo[i2][pEP]+=2;
GivePlayerCash(i2,1300);
TextDrawShowForPlayer(i2, AchievementText);
PlayerPlaySound(i2, 1056, 0.0, 0.0, 0.0);
}
SendClientMessage(i2, 0x008cffFF, string2561);
SendClientMessage(i2,0x008cffFF,"Turf War: Ти получи 5 EP и $10,000 за успешна атака на територия!");
GivePlayerEP(i2,5);
turfmember[i2]=0;
GivePlayerCash(i2,10000);
}
}
}
new string256[256];
format(string256, 256, "Turf War: {FF0000}%s{008cff} превзе успешно %s територията на %s!",TeamInfo[i3][tName],
TeamInfo[TurfInfo[TeamInfo[i3][tWar]][TurfOwner]][tName] ,TurfInfo[TeamInfo[i3][tID]][TurfName]);
SendClientMessageToAll(0x008cffFF,string256);
TurfInfo[TeamInfo[i3][tWar]][TurfWarGang]=0;
turfwargang[TeamInfo[i3][tWar]]=0;
//-------------------------------------------
for(new i4=0; i4<MAX_TEAMS; i4++)
{
if(TurfInfo[TeamInfo[i3][tWar]][TurfOwner]==i4)
{
TeamInfo[i4][tTurfs]-=1;
}
}
//-------------------------------------------
GangZoneStopFlashForAll(TeamInfo[i3][tWar]);
GangZoneShowForAll(TeamInfo[i3][tWar], TeamInfo[i3][tColor]);
TeamInfo[i3][tTurfs]+=1;
TurfInfo[TeamInfo[i3][tWar]][TurfOwner]=i3;
if(TeamInfo[i3][tWar]==0 && TeamInfo[0][tTurfs]>=300)
{
TeamInfo[0][tTurfs]=-299;
}
TeamInfo[TeamInfo[i3][tWar]][tTurfs]-=1;
inturfmembers[i3]=0;
//-------------------------------------------------
//new string2561[256];
//-------------------------------------------------
for(new i2=0; i2<MAX_PLAYERS; i2++ && IsPlayerConnected(i2))
{
if(turfmember[i2]==2)
{
if(PlayerInfo[i2][pTeam]==i3)
{
turfmember[i2]=0;
}
}
}
}
}
}
if(ecounttime0>0)
{
if(ecounttime0>0)
{
ecounttime0-=1;
}
if(ecounttime0==0)
{
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-~b~ 2 ~r~-", 2500, 3);
ecounttime1 = 3;
}
}
if(ecounttime1>0)
{
if(ecounttime1>0)
{
ecounttime1-=1;
}
if(ecounttime1==0)
{
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-~b~ 1 ~r~-", 2500, 3);
ecounttime2 = 3;
}
}
if(ecounttime2>0)
{
if(ecounttime2>0)
{
ecounttime2-=1;
}
if(ecounttime2 == 0)
{
eactivecount=0;
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-]-~b~START~r~-]-",2000, 3);
for(new i33 = 0; i33 <= MAX_PLAYERS; i33++ && IsPlayerConnected(i33))
{
if(inevent[i33]==1)
{
TogglePlayerControllable(i33, 1);
}
}
}
}
if(counttime0>0)
{
if(counttime0>0)
{
counttime0-=1;
}
if(counttime0==0)
{
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-~y~ 2 ~g~-", 2500, 3);
counttime1 = 3;
}
}
if(counttime1>0)
{
if(counttime1>0)
{
counttime1-=1;
}
if(counttime1==0)
{
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-~y~ 1 ~g~-", 2500, 3);
counttime2 = 3;
}
}
if(counttime2>0)
{
if(counttime2>0)
{
counttime2-=1;
}
if(counttime2 == 0)
{
activecount=0;
for(new allplayers=0; allplayers<MAX_PLAYERS; allplayers++ && IsPlayerConnected(allplayers)) PlayerPlaySound(allplayers, 1056, 0.0, 0.0, 0.0);
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-]-~y~START~g~-]-",2000, 3);
}
}
if(lvpd2timer>0)
{
if(lvpd2timer>0)
{
lvpd2timer-=1;
}
if(lvpd2timer==0)
{
MoveDynamicObject(lvpd2,2335.417236, 2444.029785, 6.957778,5.00, 0.000000, 0.000000, 59.200016);
}
}
if(dfp3timer>0)
{
if(dfp3timer>0)
{
dfp3timer-=1;
}
if(dfp3timer==0)
{
MoveDynamicObject(dfp3,836.487792, -2069.757812, 14.618954,5.00, 0,0,0);
}
}
if(dfp4timer>0)
{
if(dfp4timer>0)
{
dfp4timer-=1;
}
if(dfp4timer==0)
{
MoveDynamicObject(dfp4,836.365417, -2027.369750, 14.646684,5.00, 0,0,0);
}
}
if(dfp2timer>0)
{
if(dfp2timer>0)
{
dfp2timer-=1;
}
if(dfp2timer==0)
{
MoveDynamicObject(dfp2,285.723236, 1820.534057, 19.915033,5.00, 0,0,89.800071);
}
}
if(dfp1timer>0)
{
if(dfp1timer>0)
{
dfp1timer-=1;
}
if(dfp1timer==0)
{
MoveDynamicObject(dfp1,135.142593, 1941.479492, 21.597537,5.00, 0,0,0);
}
}
if(groveb1timer>0)
{
if(groveb1timer>0)
{
groveb1timer-=1;
}
if(groveb1timer==0)
{
MoveDynamicObject(groveb1,2451.77979, -1648.77783, 13.54980, 2,    0.00000, -92.00000, 0.00000);
}
}
if(vipp1timer>0)
{
if(vipp1timer>0)
{
vipp1timer-=1;
}
if(vipp1timer==0)
{
MoveDynamicObject(vipp1,1350.60486, -2048.07642, 59.41744,16,   0.00000, 0.00000, 4.00000);
}
}
if(vipp2timer>0)
{
if(vipp2timer>0)
{
vipp2timer-=1;
}
if(vipp2timer==0)
{
MoveDynamicObject(vipp2,1360.36194, -2046.93872, 59.11782,16,   0.00000, 0.00000, 9.00000);
}
}
if(lspdp2timer>0)
{
if(lspdp2timer>0)
{
lspdp2timer-=1;
}
if(lspdp2timer==0)
{
MoveDynamicObject(lspdp2,1581.937133, -1637.983764, 13.921833,3.0, 0.000000, 0.000000, -87.099975);
}
}
if(lspdp1timer>0)
{
if(lspdp1timer>0)
{
lspdp1timer-=1;
}
if(lspdp1timer==0)
{
MoveDynamicObject(lspdp1,1588.668334, -1638.399414, 14.457103,3.0, 0.000000, 0.000000, -90.600067);
}
}
if(sfpdp1timer>0)
{
if(sfpdp1timer>0)
{
sfpdp1timer-=1;
}
if(sfpdp1timer==0)
{
MoveDynamicObject(sfpdp1, -1627.72546, 688.88586, 1.68471,3);
}
}
if(lspdb1timer>0)
{
if(lspdb1timer>0)
{
lspdb1timer-=1;
}
if(lspdb1timer==0)
{
MoveDynamicObject(lspdb1,1544.746337, -1630.744995, 13.016739,2.0, 1.000004, -89.500076, -89.200096);
}
}
if(cripzp1timer>0)
{
if(cripzp1timer>0)
{
cripzp1timer-=1;
}
if(cripzp1timer==0)
{
MoveDynamicObject(cripzp1,321.13589, -1188.31604, 75.33490,5, 0.00000, 0.00000, 39.00000);
}
}
if(lvpd1timer>0)
{
if(lvpd1timer>0)
{
lvpd1timer-=1;
}
if(lvpd1timer==0)
{
MoveDynamicObject(lvpd1,2238.197509, 2450.464599, 10.341962,2.00, -4.799997, -89.000000, -89.499954);
}
}
if(respawncarsvote>0)
{
if(respawncarsvote>0)
{
respawncarsvote-=1;
}
if(respawncarsvote == 0)
{
restartedvehs=1;
SendClientMessageToAll(COLOR_RED,"All vehicles were Respawned");
for(new cars=0; cars<MAX_VEHICLES; cars++)
{
if(drive[cars]==0)
{
SetVehicleToRespawn(cars);
}
}
restartedvehs=0;
}
}
if(respawncarsvote2>0)
{
if(respawncarsvote2>0)
{
respawncarsvote2-=1;
}
if(respawncarsvote2 == 0)
{
if(voteyes<voteno)
{
new stringvote[256];
format(stringvote, 256, "[ВОТ] Резултат от гласуването - %d ДА срещу %d НЕ", voteyes ,voteno);
SendClientMessageToAll(0x61E0FFFF, stringvote);
format(stringvote, 256, "[ВОТ] Превозните средства няма да бъдат RESPAWN-нати !");
SendClientMessageToAll(0x61E0FFFF, stringvote);
}
if(voteyes>voteno)
{
new stringvote[256];
format(stringvote, 256, "[ВОТ] Резултат от гласуването - %d ДА срещу %d НЕ", voteyes ,voteno);
SendClientMessageToAll(0x61E0FFFF, stringvote);
format(stringvote, 256, "[ВОТ] Превозните средства ще се RESPAWN-нат след 10 секунди!");
SendClientMessageToAll(0x61E0FFFF, stringvote);
//for(new cars=0; cars<MAX_VEHICLES; cars++)
//{
//if(drive[cars]==0)
//{
//SetVehicleToRespawn(cars);
//}
//}
//format(string256, 256, "ADMIN: All vehicles will be respawned after 10 secounds");
//SendClientMessageToAll(0x33CC00FF, string256);
respawncarsvote=20;
}
voteno=0;
voteyes=0;
respawncarsvote2=0;
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
PlayerInfo[i][pYes]=0;
PlayerInfo[i][pNo]=0;
}}
}
if(votetime>0)
{
if(votetime>0)
{
votetime-=1;
}
if(votetime == 0)
{
new stringvote[256];
format(stringvote, 256, "Резултатите от гласуванията на последния въпрос - %s са %d ДА %d НЕ",votetext, voteyes ,voteno);
SendClientMessageToAll(0x33CC00FF, stringvote);
voteno=0;
voteyes=0;
votetime=0;
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
PlayerInfo[i][pYes]=0;
PlayerInfo[i][pNo]=0;
}}
}
if(updatedseconds != seconds)
{
new string115n2[656];
if(serverrestarttimer>2)
{
format(string115n2, sizeof string115n2, "~b~~h~%s~n~~g~~h~New Update ~b~~h~-- ~g~~h~Restart after %d seconds",updatereason,serverrestarttimer/2);
TextDrawSetString(RESTART, string115n2);
}
else if(serverrestarttimer>0 && serverrestarttimer<=2)
{
format(string115n2, sizeof string115n2, "~b~~h~%s~n~~g~~h~New Update ~b~~h~-- ~g~~h~Restarting",updatereason);
TextDrawSetString(RESTART, string115n2);
}
format(string115n2, sizeof string115n2, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~~h~%s%d:~g~~h~%s%d:~r~~h~%s%d~y~~h~/~w~~h~%d.~g~~h~%s%d.~r~~h~%s%d", (hours<10) ? ("0") : (""), hours, (minutes<10) ? ("0") : (""), minutes, (seconds<10) ? ("0") : (""), seconds, day, ((month<10) ? ("0") : ("")), month, (year<10) ? ("0") : (""), year);
TextDrawSetString(ClockDate, string115n2);
updatedseconds=seconds;
}
if(hours==0 && minutes==0 && seconds==0) { yesrefuel=0; }
///////////////////////////////////////////////
////////////////////////////////////////////////
/*if(minutes==15 && seconds==0 && GeneralTimer1ms==true)
{
new nospam3=0;
if(dmarena==1 && nospam3==0)
{
nospam3=1;
dmarena=2;
}
if(dmarena==2 && nospam3==0)
{
nospam3=1;
dmarena=1;
}
nospam3=0;
SendClientMessageToAll(0x01E5A7FF, "Deathmatch поле: Полето се смени, екшън!");
new spawnpos=randomex(1,5);
for(new a22i2=0; a22i2<MAX_PLAYERS; a22i2++ && IsPlayerConnected(a22i2))
{
if(PlayerInfo[a22i2][pTestDMON]==0)
{
if(indmon[a22i2]==1)
{
if(spawnpos<3)
{
SetPlayerPos(a22i2, 1411.2889,1.3799,1000.9237);SetPlayerInterior(a22i2,1);
}
if(spawnpos>2)
{
SetPlayerPos(a22i2, 1360.4244,-39.4643,1007.8828);SetPlayerInterior(a22i2,1);
}
if(dmarena==2)
{
if(spawnpos<3)
{
SetPlayerPos(a22i2, -1426.4996,1054.9972,1038.4913);SetPlayerInterior(a22i2,15);
}
if(spawnpos>2)
{
SetPlayerPos(a22i2, -1473.7843,948.4413,1036.7908);SetPlayerInterior(a22i2,15);
}
}
}
}
}
}
if(minutes==35 && seconds==0 && GeneralTimer1ms==true)
{
new nospam3=0;
if(dmarena==1 && nospam3==0)
{
nospam3=1;
dmarena=2;
}
if(dmarena==2 && nospam3==0)
{
nospam3=1;
dmarena=1;
}
nospam3=0;
new spawnpos=randomex(1,5);
for(new a22i2=0; a22i2<MAX_PLAYERS; a22i2++ && IsPlayerConnected(a22i2))
{
if(PlayerInfo[a22i2][pTestDMON]==0)
{
if(indmon[a22i2]==1)
{
if(spawnpos<3)
{
SetPlayerPos(a22i2, 1411.2889,1.3799,1000.9237);SetPlayerInterior(a22i2,1);
}
if(spawnpos>2)
{
SetPlayerPos(a22i2, 1360.4244,-39.4643,1007.8828);SetPlayerInterior(a22i2,1);
}
if(dmarena==2)
{
if(spawnpos<3)
{
SetPlayerPos(a22i2, -1426.4996,1054.9972,1038.4913);SetPlayerInterior(a22i2,15);
}
if(spawnpos>2)
{
SetPlayerPos(a22i2, -1473.7843,948.4413,1036.7908);SetPlayerInterior(a22i2,15);
}
}
}
}
}
SendClientMessageToAll(0x01E5A7FF, "Deathmatch поле: Полето се смени, започвайте със стрелбата!");
}
if(minutes==50 && seconds==0 && GeneralTimer1ms==true)
{
new spawnpos=randomex(1,5);
weaponsdm2=randomex(1,30);
checkpointarena=randomex(1,30);
dmstarted=0;
new nospam3=0;
if(dmarena==1 && nospam3==0)
{
nospam3=1;
dmarena=2;
}
if(dmarena==2 && nospam3==0)
{
nospam3=1;
dmarena=1;
}
nospam3=0;
for(new a22i2=0; a22i2<MAX_PLAYERS; a22i2++ && IsPlayerConnected(a22i2))
{//1
if(PlayerInfo[a22i2][pTestDMON]==0)
{//2
if(indmon[a22i2]==1)
{//3
if(spawnpos<3)
{
SetPlayerPos(a22i2, 1411.2889,1.3799,1000.9237);SetPlayerInterior(a22i2,1);
}
if(spawnpos>2)
{
SetPlayerPos(a22i2, 1360.4244,-39.4643,1007.8828);SetPlayerInterior(a22i2,1);
}
if(dmarena==2)
{//4
if(spawnpos<3)
{
SetPlayerPos(a22i2, -1426.4996,1054.9972,1038.4913);SetPlayerInterior(a22i2,15);
}
if(spawnpos>2)
{
SetPlayerPos(a22i2, -1473.7843,948.4413,1036.7908);SetPlayerInterior(a22i2,15);
}
}//1
}//2
}//3
}//4
SendClientMessageToAll(0x01E5A7FF, "Deathmatch поле: Полето се смени отново, екшън!");
if(weaponsdm2<5){ format(weaponsdm,25,"UZI");}
if(weaponsdm2>=5 && weaponsdm2<10)
{
format(weaponsdm,25,"MP5");
}
if(weaponsdm2>=10 && weaponsdm2<15)
{
format(weaponsdm,25,"AK-47");
}
if(weaponsdm2>=15 && weaponsdm2<20){
format(weaponsdm,25,"Shotgun");
}
if(weaponsdm2>=20 && weaponsdm2<25){
format(weaponsdm,25,"Molotov");
}
if(weaponsdm2>=25)
{
format(weaponsdm,25,"Sawnoff");
}
for(new i21=0; i21<MAX_PLAYERS; i21++ && IsPlayerConnected(i21))
{
if(indmon[i21]==1)
{
DisablePlayerRaceCheckpoint(i21);
DisablePlayerCheckpoint(i21);
}
}
}
*/
//PlayerInfo timers - location - open
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
GetPlayerPos(i,X[i],Y[i],Z[i]);
if(PlayerInfo[i][pHealT2][0]>0)
{
if(PlayerInfo[i][pHealT2][0]>0)
{
PlayerInfo[i][pHealT2][0]--;
}
if(PlayerInfo[i][pHealT2][0] <= 0)
{
GetPlayerHealth(i,PlayerInfo[i][pHeal3][0]);
GetPlayerArmour(i,PlayerInfo[i][pArmour3][0]);
PlayerInfo[i][pHeal3][1]=0;
PlayerInfo[i][pHeal3][2]=0;
PlayerInfo[i][pArmour3][1]=0;
PlayerInfo[i][pArmour3][2]=0;
PlayerInfo[i][pHealT2][0]=0;
PlayerInfo[i][pHealT2][1]=1;
PlayerInfo[i][pHealT2][2]=0;
}
}
//
if(PlayerInfo[i][pHealT2][1]>0)
{
if(PlayerInfo[i][pHealT2][1]>0)
{
PlayerInfo[i][pHealT2][1]--;
}
if(PlayerInfo[i][pHealT2][1] <= 0)
{
GetPlayerHealth(i,PlayerInfo[i][pHeal3][1]);
GetPlayerArmour(i,PlayerInfo[i][pArmour3][1]);
PlayerInfo[i][pHeal3][0]=0;
PlayerInfo[i][pHeal3][2]=0;
PlayerInfo[i][pArmour3][0]=0;
PlayerInfo[i][pArmour3][2]=0;
PlayerInfo[i][pHealT2][0]=0;
PlayerInfo[i][pHealT2][1]=0;
PlayerInfo[i][pHealT2][2]=1;
}
}
//
if(PlayerInfo[i][pHealT2][2]>0)
{
if(PlayerInfo[i][pHealT2][2]>0)
{
PlayerInfo[i][pHealT2][2]--;
}
if(PlayerInfo[i][pHealT2][2] <= 0)
{
GetPlayerHealth(i,PlayerInfo[i][pHeal3][2]);
GetPlayerArmour(i,PlayerInfo[i][pArmour3][2]);
PlayerInfo[i][pHeal3][0]=0;
PlayerInfo[i][pHeal3][1]=0;
PlayerInfo[i][pArmour3][0]=0;
PlayerInfo[i][pArmour3][1]=0;
PlayerInfo[i][pHealT2][0]=1;
PlayerInfo[i][pHealT2][1]=0;
PlayerInfo[i][pHealT2][2]=0;
}
}
if(updatedseconds==seconds)
{
if(PlayerInfo[i][pWanted]>6)
{
if(PlayerInfo[i][pAchievement][4]==0)
{
PlayerInfo[i][pAchievement][4]=1;
SendClientMessage(i, 0x00FF00FF, "Achievement: Вие спечелихте постижението 'Над закона' и получавате 2 EP и $1300!");
PlayerInfo[i][pHideAchievement]=10*2;
PlayerInfo[i][pEP]+=2;
GivePlayerCash(i,1300);
TextDrawShowForPlayer(i, AchievementText);
PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
}
PlayerInfo[i][pWanted]=6;
}
if(PlayerInfo[i][pActiveCheckInSec]>0)
{
if(PlayerInfo[i][pActiveCheckInSec]>0)
{
PlayerInfo[i][pActiveCheckInSec]--;
}
if(PlayerInfo[i][pActiveCheckInSec] <= 0)
{
PlayerInfo[i][pActiveCheckInSec]=2; //2ms = 1second
PlayerInfo[i][pWhenPlayed][hours]+=1;
}
}
if(PlayerInfo[i][pActiveCheck]>0)
{
if(PlayerInfo[i][pActiveCheck]>0)
{
PlayerInfo[i][pActiveCheck]--;
}
if(PlayerInfo[i][pActiveCheck] <= 0)
{
//active[i]+=1;
if(PlayerInfo[i][pAFK]>0)
{
PlayerInfo[i][pAFK]+=1;
}
PlayerInfo[i][pLastPayday]+=1;
PlayerInfo[i][pActiveCheck]=120;
}
}
}
if(PlayerInfo[i][pDeliverTimer1]>0)
{
if(PlayerInfo[i][pDeliverTimer1]>0)
{
PlayerInfo[i][pDeliverTimer1]--;
}
if(PlayerInfo[i][pDeliverTimer1] <= 0)
{
SendClientMessage(i, COLOR_JOB, "Вече можеш да работиш Deliver отново!");
}
}
if(PlayerInfo[i][pBusTimer1]>0)
{
if(PlayerInfo[i][pBusTimer1]>0)
{
PlayerInfo[i][pBusTimer1]--;
}
if(PlayerInfo[i][pBusTimer1] <= 0)
{
SendClientMessage(i, COLOR_JOB, "Вече можеш да работиш Bus отново!");
}
}
if(PlayerInfo[i][pPizzaTimer1]>0)
{
if(PlayerInfo[i][pPizzaTimer1]>0)
{
PlayerInfo[i][pPizzaTimer1]--;
}
if(PlayerInfo[i][pPizzaTimer1] <= 0)
{
SendClientMessage(i, COLOR_JOB, "Вече можеш да работиш Pizza отново!");
}
}
if(PlayerInfo[i][pBurgerShotTimer1]>0)
{
if(PlayerInfo[i][pBurgerShotTimer1]>0)
{
PlayerInfo[i][pBurgerShotTimer1]--;
}
if(PlayerInfo[i][pBurgerShotTimer1] <= 0)
{
SendClientMessage(i, COLOR_JOB, "Вече можеш да работиш в Burger Shot отново!");
}
}
if(PlayerInfo[i][pCoalmineTimer1]>0)
{
if(PlayerInfo[i][pCoalmineTimer1]>0)
{
PlayerInfo[i][pCoalmineTimer1]--;
}
if(PlayerInfo[i][pCoalmineTimer1] <= 0)
{
SendClientMessage(i, COLOR_JOB, "Вече можеш да работиш Coalmine отново!");
}
}
if(PlayerInfo[i][pPilotTimer1]>0)
{
if(PlayerInfo[i][pPilotTimer1]>0)
{
PlayerInfo[i][pPilotTimer1]--;
}
if(PlayerInfo[i][pPilotTimer1] <= 0)
{
SendClientMessage(i, COLOR_JOB, "Вече можеш да работиш Pilot отново!");
}
}
if(PlayerInfo[i][pSweeperTimer1]>0)
{
if(PlayerInfo[i][pSweeperTimer1]>0)
{
PlayerInfo[i][pSweeperTimer1]--;
}
if(PlayerInfo[i][pSweeperTimer1] <= 0)
{
SendClientMessage(i, COLOR_JOB, "Вече можеш да работиш Sweeper отново!");
}
}
if(PlayerInfo[i][pShowMission]>0)
{
if(PlayerInfo[i][pShowMission]>0)
{
PlayerInfo[i][pShowMission]--;
}
if(PlayerInfo[i][pShowMission] <= 0)
{
if(PlayerInfo[i][pMission]==0)
{
GameTextForPlayer(i, "~w~Mission~n~~g~back home", 3100, 1);
}
if(PlayerInfo[i][pMission]==1)
{
GameTextForPlayer(i, "~w~Mission~n~~b~connections", 3100, 1);
}
if(PlayerInfo[i][pMission]==2)
{
GameTextForPlayer(i, "~w~Mission~n~~r~robbery", 3100, 1);
}
if(PlayerInfo[i][pMission]==3)
{
GameTextForPlayer(i, "~w~Mission~n~~g~pizza", 3100, 1);
}
if(PlayerInfo[i][pMission]==4)
{
GameTextForPlayer(i, "~w~Mission~n~~b~street race", 3100, 1);
}
if(PlayerInfo[i][pMission]==5)
{
GameTextForPlayer(i, "~w~Mission~n~~g~clothes", 3100, 1);
}
if(PlayerInfo[i][pMission]==6)
{
GameTextForPlayer(i, "~w~Mission~n~~p~fbi", 3100, 1);
}
}
}
if(PlayerInfo[i][pPrezimqvaneSamolet]>0)
{
if(PlayerInfo[i][pPrezimqvaneSamolet]>0)
{
PlayerInfo[i][pPrezimqvaneSamolet]--;
}
if(PlayerInfo[i][pPrezimqvaneSamolet] <= 0)
{
TogglePlayerSpectating(i, false);
}
}
if(PlayerInfo[i][pLSTaxi]>0)
{
if(PlayerInfo[i][pLSTaxi]>0)
{
PlayerInfo[i][pLSTaxi]--;
}
if(PlayerInfo[i][pLSTaxi] <= 0)
{
TogglePlayerControllable(i, 1);
SetCameraBehindPlayer(i);
GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~YOU PAID ~g~$350", 2300, 3);
}
}
//
if(PlayerInfo[i][pMissionMessage]>0)
{
if(PlayerInfo[i][pMissionMessage]>0)
{
PlayerInfo[i][pMissionMessage]--;
}
if(PlayerInfo[i][pMissionMessage] <= 0)
{
if(PlayerInfo[i][pMission]==6)
{
if(missionchat[i][6][0]==1)
{
SendClientMessage(i,0x92E4F4FF,"Андей: Виж, момче в света не сме само ние.");
PlayerInfo[i][pMissionMessage]=6;
missionchat[i][6][0]=0;
missionchat[i][6][1]=1;
return 1;
}
if(missionchat[i][6][1]==1)
{
SendClientMessage(i,0x92E4F4FF,"Андей: FBI крият много тайни в следващите няколко дни ще ги разучиш");
PlayerInfo[i][pMissionMessage]=9;
missionchat[i][6][1]=0;
missionchat[i][6][2]=1;
DisablePlayerCheckpoint(i);
return 1;
}
if(missionchat[i][6][2]==1)
{
SendClientMessage(i,0x92E4F4FF,"Андей: Сега отиди до планината и се оглеждай за необичайни неща");
missionchat[i][6][2]=0;
SetPlayerCheckpoint(i, 2416.8391,-670.5904,127.1158, 3);
HideWholePhone(i);
ClearAnimations(i);
TogglePlayerControllable(i,true);
ClearAnimations(i);
SetCameraBehindPlayer(i);
ClearAnimations(i);
inselfie[i]=0;
HideWholePhone(i);
PhoneShow[i] = false;
PhoneLocked[i] = 0;
TogglePlayerControllable(i, 1);
CancelSelectTextDraw(i);
}
}
else if(PlayerInfo[i][pMission]==5)
{
if(missionchat[i][4][0]==1)
{
SendClientMessage(i,0x92E4F4FF,"Андрей: Вече се състезава, имам един съвет към теб");
PlayerInfo[i][pMissionMessage]=6;
missionchat[i][4][0]=0;
missionchat[i][4][1]=1;
return 1;
}
if(missionchat[i][4][1]==1)
{
SendClientMessage(i,0x92E4F4FF,"Аз: Какъв?");
PlayerInfo[i][pMissionMessage]=6;
missionchat[i][4][1]=0;
missionchat[i][4][2]=1;
return 1;
}
if(missionchat[i][4][2]==1)
{
SendClientMessage(i,0x92E4F4FF,"Андрей: Вземи си бандана, трябва да си личи че не си случаен");
PlayerInfo[i][pMissionMessage]=9;
missionchat[i][4][2]=0;
missionchat[i][4][3]=1;
return 1;
}
if(missionchat[i][4][3]==1)
{
SendClientMessage(i,0x92E4F4FF,"Аз: Ще се насоча към магазина в Los Santos");
SendClientMessage(i,0xFF3737FF,"[Мисия 6] Ще ви излезе местоположението на магазина за дрехи.");
missionchat[i][4][3]=0;
HideWholePhone(i);
ClearAnimations(i);
TogglePlayerControllable(i,true);
ClearAnimations(i);
SetCameraBehindPlayer(i);
ClearAnimations(i);
inselfie[i]=0;
HideWholePhone(i);
PhoneShow[i] = false;
PhoneLocked[i] = 0;
TogglePlayerControllable(i, 1);
CancelSelectTextDraw(i);
ClearAnimations(i);
SetPlayerCheckpoint(i, 595.8715,-1251.4767,18.3255, 3.0);
}
}
else if(PlayerInfo[i][pMission]==4)
{
if(missionchat[i][3][0]==1)
{
SendClientMessage(i,0x92E4F4FF,"Андрей: Искаш ли да се състезаваш точно сега ?");
PlayerInfo[i][pMissionMessage]=6;
missionchat[i][3][0]=0;
missionchat[i][3][1]=1;
return 1;
}
if(missionchat[i][3][1]==1)
{
SendClientMessage(i,0x92E4F4FF,"Аз: Разбира се");
PlayerInfo[i][pMissionMessage]=6;
missionchat[i][3][1]=0;
missionchat[i][3][2]=1;
return 1;
}
if(missionchat[i][3][2]==1)
{
SendClientMessage(i,0x92E4F4FF,"Аз: Ще си взема колата");
PlayerInfo[i][pMissionMessage]=9;
missionchat[i][3][2]=0;
missionchat[i][3][3]=1;
return 1;
}
if(missionchat[i][3][3]==1)
{
SendClientMessage(i,0x92E4F4FF,"Андрей: Окей, обаче изчакай да дойдат и останалите");
SendClientMessage(i,0xFF3737FF,"[Мисия 5] Ще ви излезе местоположението на мястото, където ще се състезавате");
missionchat[i][3][3]=0;
HideWholePhone(i);
ClearAnimations(i);
TogglePlayerControllable(i,true);
ClearAnimations(i);
SetCameraBehindPlayer(i);
ClearAnimations(i);
inselfie[i]=0;
HideWholePhone(i);
PhoneShow[i] = false;
PhoneLocked[i] = 0;
TogglePlayerControllable(i, 1);
CancelSelectTextDraw(i);
ClearAnimations(i);
SetPlayerCheckpoint(i, 2404.8286,-1730.0004,13.1282, 3.0);
}
}
else if(PlayerInfo[i][pMission]==3)
{
if(missionchat[i][2][0]==1)
{
SendClientMessage(i,0x92E4F4FF,"Алекс: Вече си част от нас.");
PlayerInfo[i][pMissionMessage]=6;
missionchat[i][2][0]=0;
missionchat[i][2][1]=1;
return 1;
}
if(missionchat[i][2][1]==1)
{
SendClientMessage(i,0x92E4F4FF,"Алекс: Отиди да работиш малко, не става само с кражби, както се беше научил в Liberty City");
PlayerInfo[i][pMissionMessage]=6;
missionchat[i][2][1]=0;
missionchat[i][2][2]=1;
return 1;
}
if(missionchat[i][2][2]==1)
{
SendClientMessage(i,0x92E4F4FF,"Аз: Вярно е, ще работя малко като разносвач на пица.");
PlayerInfo[i][pMissionMessage]=9;
missionchat[i][2][2]=0;
missionchat[i][2][3]=1;
return 1;
}
if(missionchat[i][2][3]==1)
{
SendClientMessage(i,0x92E4F4FF,"Алекс: Гледай да разнесеш пица на големите къщи, понеже там плащат по-добре");
SendClientMessage(i,0xFF3737FF,"[Мисия 4] Ще ви излезе местоположението на мястото за започване на работа");
missionchat[i][2][3]=0;
HideWholePhone(i);
ClearAnimations(i);
TogglePlayerControllable(i,true);
ClearAnimations(i);
SetCameraBehindPlayer(i);
ClearAnimations(i);
inselfie[i]=0;
HideWholePhone(i);
PhoneShow[i] = false;
PhoneLocked[i] = 0;
TogglePlayerControllable(i, 1);
CancelSelectTextDraw(i);
ClearAnimations(i);
SetPlayerCheckpoint(i, 2081.0134,-1804.7849,13.3828, 3.0);
}
}
else if(PlayerInfo[i][pMission]==2)
{
if(missionchat[i][1][0]==1)
{
SendClientMessage(i,0x92E4F4FF,"Алекс: Взе си телефон, а ?");
PlayerInfo[i][pMissionMessage]=6;
missionchat[i][1][0]=0;
missionchat[i][1][1]=1;
return 1;
}
if(missionchat[i][1][1]==1)
{
SendClientMessage(i,0x92E4F4FF,"Алекс: Ще ти поставя задача, отиди до един банкомат в Las Venturas и го ограби.");
PlayerInfo[i][pMissionMessage]=6;
missionchat[i][1][1]=0;
missionchat[i][1][2]=1;
return 1;
}
if(missionchat[i][1][2]==1)
{
SendClientMessage(i,0x92E4F4FF,"Алекс: Трябва да се задържиш 5 минути на него, след което избягай.");
PlayerInfo[i][pMissionMessage]=9;
missionchat[i][1][2]=0;
missionchat[i][1][3]=1;
return 1;
}
if(missionchat[i][1][3]==1)
{
SendClientMessage(i,0x92E4F4FF,"Алекс: Преди това обаче отиди пак до магазина и си купи чанта за обир.");
SendClientMessage(i,0xFF3737FF,"[Мисия 3] Ще ви излезе местоположението на банкомата, който трябва да оберете в Las Venturas");
SendClientMessage(i,0xFF3737FF,"[Мисия 3] Използвайте, безплатната бомба, която получихте и стойте на обира поне 5 минути, след което задължително избягайте");
missionchat[i][1][3]=0;
HideWholePhone(i);
ClearAnimations(i);
TogglePlayerControllable(i,true);
ClearAnimations(i);
SetCameraBehindPlayer(i);
ClearAnimations(i);
inselfie[i]=0;
HideWholePhone(i);
PhoneShow[i] = false;
PhoneLocked[i] = 0;
TogglePlayerControllable(i, 1);
CancelSelectTextDraw(i);
ClearAnimations(i);
SetPlayerCheckpoint(i, 2194.2742,1986.2155,12.2969, 3.0);
}
}
else if(PlayerInfo[i][pMission]==1)
{
if(missionchat[i][0][0]==1)
{
missionnpcID[i][0]=CreateDynamicActor(6,1083.6667,-2041.7009,69.0078,92.7438);
SetDynamicActorVirtualWorld(missionnpcID[i][0],1+i);
DisablePlayerCheckpoint(i);
SetPlayerFacingAngle(i,100.1929);
SetPlayerPos(i,1082.5488,-2038.1836,69.0078);
SetPlayerVirtualWorld(i,i+1);
TogglePlayerControllable(i, 0);
SetPlayerCameraPos(i, 1268.5825, -1918.1564, 106.7497);
SetPlayerCameraLookAt(i, 1267.8250, -1918.8148, 106.6046);
PlayerInfo[i][pMissionMessage]=9;
missionchat[i][0][0]=0;
missionchat[i][0][1]=1;
return 1;
}
if(missionchat[i][0][1]==1)
{
SetPlayerCameraPos(i, 1072.6465, -2044.7920, 70.1113);
SetPlayerCameraLookAt(i, 1073.5952, -2044.4609, 70.1010);
SendClientMessage(i,0x92E4F4FF,"Алекс: Здрасти, как си ?");
missionchat[i][0][1]=0;
missionchat[i][0][2]=1;
PlayerInfo[i][pMissionMessage]=6;
return 1;
}
if(missionchat[i][0][2]==1)
{
missionchat[i][0][2]=0;
missionchat[i][0][3]=1;
PlayerInfo[i][pMissionMessage]=7;
SendClientMessage(i,0x92E4F4FF,"Аз: Добре съм, ти ?");
return 1;
}
if(missionchat[i][0][3]==1)
{
missionchat[i][0][3]=0;
missionchat[i][0][4]=1;
PlayerInfo[i][pMissionMessage]=8;
SendClientMessage(i,0x92E4F4FF,"Алекс: Отново си в San Andreas, ще ти възлагам задачи");
return 1;
}
if(missionchat[i][0][4]==1)
{
missionchat[i][0][4]=0;
missionchat[i][0][5]=1;
PlayerInfo[i][pMissionMessage]=7;
SendClientMessage(i,0x92E4F4FF,"Аз: Добре");
return 1;
}
if(missionchat[i][0][5]==1)
{
missionchat[i][0][5]=0;
missionchat[i][0][6]=1;
PlayerInfo[i][pMissionMessage]=6;
SendClientMessage(i,0x92E4F4FF,"Алекс: Само трябва да можем да се свързваме");
return 1;
}
if(missionchat[i][0][6]==1)
{
SetCameraBehindPlayer(i);
PlayerInfo[i][pMissionActorFollow]=1;
TogglePlayerControllable(i, 1);
SetPlayerVirtualWorld(i,0);
DestroyDynamicActor(missionnpcID[i][0]);
SendClientMessage(i,0x92E4F4FF,"Алекс: Отиди до 24/7 магазин и си купи телефон");
SendClientMessage(i,0xFF3737FF,"[Мисия 2] Ще се появи червен квадрат на картата ви, следвайте го за да отидете до магазина");
SetPlayerRaceCheckpoint(i,2 ,1352.1747,-1757.5778,13.5078,
1352.1747,-1757.5778,13.5078, 3.0);
return 1;
}
}
}
}
if(PlayerInfo[i][pFreezed2]>0)
{
if(PlayerInfo[i][pFreezed2]>0)
{
PlayerInfo[i][pFreezed2]--;
}
if(PlayerInfo[i][pFreezed2] <= 0)
{
}
}
if(PlayerInfo[i][pTimerBizPickups2]>0)
{
PlayerInfo[i][pTimerBizPickups2]-=1;
}
if(PlayerInfo[i][pTimerLeaveMiniGame]>0)
{
PlayerInfo[i][pTimerLeaveMiniGame]--;
}
//pSelectCarMission1
if(PlayerInfo[i][pSelectCarMission1]>0)
{
if(PlayerInfo[i][pSelectCarMission1]>0)
{
PlayerInfo[i][pSelectCarMission1]--;
}
if(PlayerInfo[i][pSelectCarMission1] <= 0)
{
//SetVehicleVirtualWorld(missionprivate[i][1],1);
SendClientMessage(i,COLOR_GREEN,"Понеже в рамките на 40 секунди не се качи в една от колите, то сървърът избра, вместо теб");
PutPlayerInVehicle(i,missionprivate[i][1], 0);
}
}
if(PlayerInfo[i][pTimerATM]>0)
{
if(PlayerInfo[i][pTimerATM]>0)
{
PlayerInfo[i][pTimerATM]--;
}
if(PlayerInfo[i][pTimerATM] <= 0)
{
ShowPlayerPhone(i);
enteredInMissionCP[i]=0;
PhoneShow[i] = true;
PhoneLocked[i] = 1;
enteredInMissionCP[i]=0;
PlayerInfo[i][pMission]+=1;
PlayerInfo[i][pMPMission]=0;
SendClientMessage(i,	0xFF3737FF,"[Мисия 3] Твоята мисия свърши.");
GameTextForPlayer(i, "~w~Mission~n~~r~completed", 2000, 1);
SendClientMessage(i,0x92E4F4FF,"Алекс: Готов си, събра достатъчно пари.");
SendClientMessage(i,0x92E4F4FF,"Алекс: Браво, разтресе цялата полиция, сега избягай за да не те хванат.");
}
}
if(PlayerInfo[i][pClearAnimation]>0)
{
if(PlayerInfo[i][pClearAnimation]>0)
{
PlayerInfo[i][pClearAnimation]--;
}
if(PlayerInfo[i][pClearAnimation] <= 0)
{
TogglePlayerControllable(i, 1);
SetPlayerSpecialAction(i, SPECIAL_ACTION_NONE);
ClearAnimations(i);
ClearAnimations(i);
ClearAnimations(i);
ClearAnimations(i);
ClearAnimations(i);
ClearAnimations(i);
ClearAnimations(i);
ClearAnimations(i);
}
}
if(PlayerInfo[i][pFreezed]>0)
{
if(PlayerInfo[i][pFreezed]>0)
{
PlayerInfo[i][pFreezed]--;
}
if(PlayerInfo[i][pFreezed] <= 0)
{
ApplyAnimation(i,"CRACK", "crckdeth2", 4.1, 1, 1, 1, 1, 1, 1);
}
}
if(PlayerInfo[i][pFollowPolice]>0)
{
if(PlayerInfo[i][pFollowPolice]>0)
{
PlayerInfo[i][pFollowPolice]--;
}
if(PlayerInfo[i][pFollowPolice] <= 0)
{
if(cuffedby[i]!=-1)
{
PlayerInfo[i][pFollowPolice]=1;
}
if(IsPlayerInRangeOfPoint(i,50,246.6557,65.1160,1003.6406))
{
if(GetPlayerInterior(i)==6)
{
if(GetPlayerVirtualWorld(i)==1)
{
SetPlayerPos(i,263.6435,86.2383,1001.0391);
SendClientMessage(cuffedby[i],0xB8860BFF,"Вие вкарахте престъпника в затвора!");
SendClientMessage(i,0xB8860BFF,"Вие бяхте закаран в полицейския затвор!");
PlayerInfo[i][pFollowPolice]=0;
cuffedwho[cuffedby[i]]=-1;
cuffedby[i]=-1;
TogglePlayerControllable(i, 1);
return 1;
}
}
}
SetPlayerInterior(i,GetPlayerInterior(cuffedby[i]));
SetPlayerVirtualWorld(i,GetPlayerVirtualWorld(cuffedby[i]));
if(!IsPlayerInAnyVehicle(cuffedby[i]))
{
GetPlayerPos(cuffedby[i],X[cuffedby[i]],Y[cuffedby[i]],Z[cuffedby[i]]);
SetPlayerPos(i,X[cuffedby[i]]-1,Y[cuffedby[i]]-2,Z[cuffedby[i]]);
}
else
{
PutPlayerInVehicle(i,GetPlayerVehicleID(cuffedby[i]),1);
}
}
}
if(PlayerInfo[i][pRegisteredTimer]>0)
{
if(PlayerInfo[i][pRegisteredTimer]>0)
{
PlayerInfo[i][pRegisteredTimer]--;
}
if(PlayerInfo[i][pRegisteredTimer] <= 0)
{
TogglePlayerSpectating(i, false);
}
}
/*CreateDynamicObject(18880, 2037.37463, 1225.68372, 9.64497,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 1793.00061, 745.21344, 12.27700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 1841.18750, -1374.76685, 12.31981,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 1464.23010, -1597.90088, 12.35268,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 674.75470, -1580.89050, 13.03473,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 320.00360, -1384.27588, 13.18036,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 1513.29456, 1094.11792, 9.59839,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18880, 2157.72510, 1948.96619, 9.79085,   0.00000, 0.00000, 0.00000);*/
if(IsPlayerInAnyVehicle(i))
{
if(dutypolice[i]==0)
{
CheckForSpeed(i,190,2037.37463, 1225.68372, 9.64497);
CheckForSpeed(i,180,1793.00061, 745.21344, 12.27700);
CheckForSpeed(i,170,1841.18750, -1374.76685, 12.31981);
CheckForSpeed(i,180,1464.23010, -1597.90088, 12.35268);
CheckForSpeed(i,190,674.75470, -1580.89050, 13.03473);
CheckForSpeed(i,210,320.00360, -1384.27588, 13.18036);
CheckForSpeed(i,195,2157.72510, 1948.96619, 9.79085);
CheckForSpeed(i,180,1513.29456, 1094.11792, 9.59839);
}
}
if(PlayerInfo[i][pWantedSeconds]>0)
{
if(PlayerInfo[i][pWantedSeconds]>0)
{
PlayerInfo[i][pWantedSeconds]--;
}
if(PlayerInfo[i][pWantedSeconds] <= 0)
{
}
}
if(PlayerInfo[i][pHideAchievement]>0)
{
if(PlayerInfo[i][pHideAchievement]>0)
{
PlayerInfo[i][pHideAchievement]--;
}
if(PlayerInfo[i][pHideAchievement] <= 0)
{
TextDrawHideForPlayer(i, AchievementText);
}
}
if(PlayerInfo[i][pUvedomiChengeta]>0)
{
if(PlayerInfo[i][pUvedomiChengeta]>0)
{
PlayerInfo[i][pUvedomiChengeta]--;
}
if(PlayerInfo[i][pUvedomiChengeta] <= 0)
{
PlayerInfo[i][pWanted]+=3;
if(PlayerInfo[i][pWanted]>6) PlayerInfo[i][pWanted]=6;
new stringmoneybox[115];
if(StartATMRob==1)
{
SendClientMessageToAll(COLOR_RTRIADS,"Robbery ATM: Взривен е банкомат от престъпник, отидете и го спрете!");
}
else
{
PlayerInfo[i][pTimerATM]=0;
enteredInMissionCP[i]=0;
GameTextForPlayer(i, "~w~Mission~n~~r~failed", 2000, 1);
SendClientMessageToAll(COLOR_RTRIADS,"Robbery ATM: Направен е неуспешен обир на банкомат с взрив!");
SendClientMessage(i,COLOR_RTRIADS,"Robbery ATM: Ти не взриви банкомата навреме и заради това обирът е провален!");
ClearAnimations(i);
PlayerInfo[i][pRobberyATM]=0;
StartedRobbery=0;
PlayerInfo[i][pRobberyATM2]=0;
}
SetPlayerWantedLevel(i,PlayerInfo[i][pWanted]);
format(stringmoneybox,115,"[SUSPECT]{0040FF} Ти си заподозрян в престъпление: Обир, ниво на издирване: %d",PlayerInfo[i][pWanted]);
SendClientMessage(i,0xFF0000FF,stringmoneybox);
new stringsuspect[256];
if(PlayerInfo[i][pWanted]==6)
{
PlayerInfo[i][pWanted]+=1;
format(stringmoneybox,115,"{ff0000}[DELTA FORCE]{A4A400} Ти ще бъдеш издирван от Delta Force, понеже имаш 6 звезди",PlayerInfo[i][pWanted]);
SendClientMessage(i,0xFF0000FF,stringmoneybox);
format(stringsuspect,256,"[WARNING]{A4A400} %s е заподозрян с 6 звезди, който го убие ще спечели $3000 и 5 EP",pname[i],PlayerInfo[i][pWanted]);
SendFactionMessage(15,0xFF0000FF,stringsuspect);
}///moje bi tuk
format(stringsuspect,256,"[SUSPECT]{0040FF} %s е заподозрян в престъпление: Обир, ниво на издирване: %d",pname[i],PlayerInfo[i][pWanted]);
SendFactionMessage(13,0xFF0000FF,stringsuspect);
}
}
if(PlayerInfo[i][pRobberyATM2]>0)
{
if(PlayerInfo[i][pRobberyATM2]>0)
{
PlayerInfo[i][pRobberyATM2]--;
}
if(PlayerInfo[i][pRobberyATM2] <= 0)
{
//
ClearAnimations(i);
DestroyDynamicObject(CASHBAG[0]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[0]);
DestroyDynamicObject(CASHBAG[1]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[1]);
DestroyDynamicObject(CASHBAG[2]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[2]);
PlayerInfo[i][pRobberyATM]=0;
RemovePlayerAttachedObject(i,7);
StartedRobbery=0;
SendClientMessageToAll(COLOR_RTRIADS,"Robbery ATM: Крадецът избяга от банкомата и заграби успешно част от парите му!");
//
}
}
if(PlayerInfo[i][pRobberyATM]>0)
{
if(PlayerInfo[i][pRobberyATM]>0)
{
PlayerInfo[i][pRobberyATM]--;
}
if(PlayerInfo[i][pRobberyATM] <= 0)
{
PlayerInfo[i][pRobberyATM]=3;
GetPlayerPos(i,X[i],Y[i],Z[i]);
new moneybagstr[256];
if(IsPlayerInRangeOfPoint(i, 7, XBOM, YBOM, ZBOM))
{
if(CASHMONEY[0]>0)
{
PlayerInfo[i][pRobberyATM2]=0;
ApplyAnimation(i,"BOMBER","BOM_Plant", 4.1, 1, 1, 1, 1, 1, 1);
format(moneybagstr,256,"[Чанта]\nОставаща сума до изпразване: $%d",CASHMONEY[0]);
UpdateDynamic3DTextLabelText(CASHBAGTEXT[0], COLOR_RGROVE, moneybagstr);
GivePlayerCash(i,35);
CASHMONEY[0]-=500;
if(CASHMONEY[0]<=0)
{
DestroyDynamicObject(CASHBAG[0]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[0]);
}
return 1;
}
}
//////////////////
if(IsPlayerInRangeOfPoint(i, 7, XBOM, YBOM, ZBOM))
{
if(CASHMONEY[1]>0)
{
PlayerInfo[i][pRobberyATM2]=0;
ApplyAnimation(i,"BOMBER","BOM_Plant", 4.1, 1, 1, 1, 1, 1, 1);
format(moneybagstr,256,"[Чанта]\nОставаща сума до изпразване: $%d",CASHMONEY[1]);
UpdateDynamic3DTextLabelText(CASHBAGTEXT[1], COLOR_RGROVE, moneybagstr);
GivePlayerCash(i,200);
CASHMONEY[1]-=500;
if(CASHMONEY[1]<=0)
{
DestroyDynamicObject(CASHBAG[1]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[1]);
}
return 1;
}
}
/////////////////
if(IsPlayerInRangeOfPoint(i, 7, XBOM, YBOM, ZBOM))
{
if(CASHMONEY[2]>0)
{
PlayerInfo[i][pRobberyATM2]=0;
ApplyAnimation(i,"BOMBER","BOM_Plant", 4.1, 1, 1, 1, 1, 1, 1);
format(moneybagstr,256,"[Чанта]\nОставаща сума до изпразване: $%d",CASHMONEY[2]);
UpdateDynamic3DTextLabelText(CASHBAGTEXT[2], COLOR_RGROVE, moneybagstr);
GivePlayerCash(i,280);
CASHMONEY[2]-=500;
if(CASHMONEY[2]<=0)
{
DestroyDynamicObject(CASHBAG[2]);
StartedRobbery=0;
DestroyDynamic3DTextLabel(CASHBAGTEXT[2]);
}
return 1;
}
//////////////////
////////////////////
}
if(CASHMONEY[2]<=0 && CASHMONEY[1]<=0 && CASHMONEY[0]<=0)
{
PlayerInfo[i][pRobberyATM2]=0;
ClearAnimations(i);
DestroyDynamicObject(CASHBAG[0]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[0]);
DestroyDynamicObject(CASHBAG[1]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[1]);
DestroyDynamicObject(CASHBAG[2]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[2]);
PlayerInfo[i][pRobberyATM]=0;
StartedRobbery=0;
RemovePlayerAttachedObject(i,7);
SendClientMessageToAll(COLOR_RTRIADS,"Robbery ATM: Обирът е напълно успешен, около една втора от парите в банкомата бяха откраднати!");
return 1;
}
if(PlayerInfo[i][pRobberyATM2]==0)
{
PlayerInfo[i][pRobberyATM2]=2*120;
SendClientMessage(i,COLOR_RTRIADS,"Robbery ATM: Ако не се върнеш до 2 минути, обирът ще бъде прекратен и ше получиш заграбените пари!");
}
/////////////////
}
}
if(PlayerInfo[i][pPizzaTimer]>0)
{
if(PlayerInfo[i][pPizzaTimer]>0)
{
PlayerInfo[i][pPizzaTimer]--;
}
if(PlayerInfo[i][pPizzaTimer] == 600)
{
SendClientMessage(i,0xB55900FF,"Имате още 5 минути да работите като доставчик на пица, отидете към връщане мотора.");
}
if(PlayerInfo[i][pPizzaTimer] <= 0)
{
PlayerInfo[i][pAfterWork]=30*120;
SendClientMessage(i,0xB55900FF,"Вашето време за работа като разносвач на пица приключи.");
RemovePlayerFromVehicle(i);
SetVehicleToRespawn(i);
if(deliverpizza[i]>=6)
{
SendClientMessage(i,0xB55900FF,"Заради доставените пици получаваш още 5 EP и $1500");
GivePlayerCash(i,1500);
GivePlayerEP(i,5);
}
//////////////////////
if(PlayerInfo[i][pPizzaTimer]<=600*2)
{
SendClientMessage(i,0xB55900FF,"Pizza Job: Времето ви до започване на нова работа е 25 минути.");
PlayerInfo[i][pPizzaTimer1]=25*120;
}
//////////////////////
}
}
if(dueltimer[i]>0)
{
if(dueltimer[i]>0)
{
dueltimer[i]--;
}
if(dueltimer[i] <= 0)
{
//
if(induel[i]==1)
{
RestartPlayerColor(duelprotivnik[i]);
RestartPlayerColor(i);
new stringduel[256];
new formatrank[256];
if(dueltype[i]==1 && dueltype[duelprotivnik[i]]==1)
{
format(formatrank,256,"~g~RANK: %d",rankformula[duelprotivnik[i]]);
GameTextForPlayer(duelprotivnik[i], formatrank, 5000, 3);
format(formatrank,256,"~g~RANK: %d",rankformula[i]);
GameTextForPlayer(i, formatrank, 5000, 3);
induel[i]=0;
induel[duelprotivnik[i]]=0;
format(stringduel, 256, "Ти спечели дуела срещу %s и заслужаваш Rank %d", pname[i],rankformula[duelprotivnik[i]]);
SendClientMessage(duelprotivnik[i], 0xFFE400FF, stringduel);
format(stringduel, 256, "Ти загуби дуела срещу %s и заслужаваш  Rank %d", pname[duelprotivnik[i]],rankformula[i]);
SendClientMessage(i, 0xFFE400FF, stringduel);
new stringdueltest[256];
dueltype[i]=0;
dueltype[duelprotivnik[i]]=0;
new stringdueltest2[256];
dueltimer[i]=0;
format(stringdueltest,256,"[Duel Test] %s победи в дуела срещу %s и заслужава Rank %d",pname[duelprotivnik[i]],pname[i],rankformula[duelprotivnik[i]]);
format(stringdueltest2,256,"[Duel Test] %s изгуби в дуела срещу %s и заслужава Rank %d",pname[i],pname[duelprotivnik[i]],rankformula[i]);
for(new i2=0; i2<MAX_PLAYERS;i2++ && IsPlayerConnected(i2))
{
if(PlayerInfo[i2][pTeam]==PlayerInfo[i2][pTeam])
{
SendClientMessage(i2,0x33CCFFFF,stringdueltest);
SendClientMessage(i2,0x33CCFFFF,stringdueltest2);
}
}
}
duelzalog[i]=0;
PlayerInfo[duelprotivnik[i]][pDuelTimer]=0;
PlayerInfo[duelprotivnik[i]][pDuelTimer2]=0;
PlayerInfo[duelprotivnik[i]][pDuelTimer3]=0;
PlayerInfo[duelprotivnik[i]][pDuelTimer4]=0;
PlayerInfo[i][pDuelTimer]=0;
PlayerInfo[i][pDuelTimer2]=0;
PlayerInfo[i][pDuelTimer3]=0;
PlayerInfo[duelprotivnik[i]][pDuelTimer4]=0;
duelzalog[duelprotivnik[i]]=0;
AfterDuel(duelprotivnik[i]);
////
AfterDuel(i);
///
duelsend[i]=-1; duelsend[duelprotivnik[i]]=-1;
induel[duelprotivnik[i]]=0;
induel[i]=0;
duelsender[i]=-1; duelsender[duelprotivnik[i]]=-1;
duelprotivnik[duelprotivnik[i]]=-1;
duelprotivnik[i]=-1;
}
}
}
if(PlayerInfo[i][pGiveBomb]>0)
{
if(PlayerInfo[i][pGiveBomb]>0)
{
PlayerInfo[i][pGiveBomb]--;
}
if(PlayerInfo[i][pGiveBomb] <= 0)
{
bomber=i;
isvalidbomb=0;
SendClientMessage(i,0xFF0000,"Bomb: Ти получи бомбата, трябва да я заложиш на A или B");
SetPlayerAttachedObject(i, 7,1252,1, -0.027000, -0.251999, 0.095000 , 1.000000, 90.000000, 1.000000 );
for(new i2=0; i2<MAX_PLAYERS;i2++ && IsPlayerConnected(i2))
{
if(joinedincounter[i2]==1)
{
PlayerInfo[i2][pGiveBomb]=0;
}
}
}
}
if(PlayerInfo[i][pDefuse]>0)
{
if(PlayerInfo[i][pDefuse]>0)
{
PlayerInfo[i][pDefuse]--;
}
if(PlayerInfo[i][pDefuse] <= 0)
{
if(csgamestarted==1)
{
isvalidbomb=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Бомбата беше обезвредена!");
bombgurmi=0;
ctwin++;
csroundtimer=120*2;
for(new i2=0; i2<MAX_PLAYERS ;i2++ && IsPlayerConnected(i2))
{
if(joinedincounter[i2]==1)
{
SpawnPlayer(i2);
PlayerPlaySound(i,1057,0.0,0.0,0.0);
if(policecs[i2]==1)
{
GameTextForPlayer(i2, "~r~LOSE", 3000, 1);
}
else
{
GameTextForPlayer(i2, "~g~WIN", 3000, 1);
}
}
}
if(ctwin>3 || twin>3)
{
if(ctwin>twin)
{
for(new i2=0; i2<MAX_PLAYERS ;i2++ && IsPlayerConnected(i2))
{
if(joinedincounter[i2]==1)
{
if(policecs[i2]==1)
{
GivePlayerEP(i2,5);
GivePlayerCash(i2,5000);
}
}
}
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши, победител Counter Terrorists!");
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Награда за победата: 5 EP и $5000!");
}
else if(twin>ctwin)
{
for(new i2=0; i2<MAX_PLAYERS ;i2++ && IsPlayerConnected(i2))
{
if(joinedincounter[i2]==1)
{
if(policecs[i2]==0)
{
GivePlayerEP(i2,5);
GivePlayerCash(i2,5000);
}
}
}
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши, победител Terrorists!");
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Награда за победата: 5 EP и $5000!");
}
else if(twin==ctwin)
{
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши с равенство между CT и T!");
}
for(new i2=0; i2<MAX_PLAYERS ;i2++ && IsPlayerConnected(i2))
{
if(joinedincounter[i2]==1)
{
SetPlayerHealth(i2,0);
}
}
}
//
}
}
}
//
//
if(otvlichane[i]>0)
{
if(otvlichane[i]>0)
{
otvlichane[i]--;
}
if(otvlichane[i] <= 0)
{
if(alienseffect[i]==-1)
{
pointotvlichane[i]=0;
GameTextForPlayer(i, "~g~ 24 hours later..", 2300, 3);
TextDrawHideForPlayer(i, Intro[1]);
alienseffect[i]=12*2;
SetPlayerPos(i,2149.4741,-1266.0149,859.6039);
GivePlayerWeapon(i,46,1);
if(PlayerInfo[i][pMission]==6 && enteredInMissionCP[i]==1)
{
enteredInMissionCP[i]=0;
PlayerInfo[i][pMission]+=1;
PlayerInfo[i][pMPMission]=0;
SendClientMessage(i,	0xFF3737FF,"[Мисия 7] FBI крие своите таини и те не са само извънземни, разучете FBI.");
SendClientMessage(i,	0xFF3737FF,"[Мисия 7] Твоята мисия свърши.");
GameTextForPlayer(i, "~w~Mission~n~~b~completed", 2000, 1);
}
}
}
}
if(PlayerInfo[i][pTestDMTimer]>0)
{
PlayerInfo[i][pTestDMTimer]--;
if(PlayerInfo[i][pTestDMTimer]>0)
{
PlayerInfo[i][pTestDMTimer]--;
}
new Float: Health;
new Float: Armour;
GetPlayerHealth(i,Health);
GetPlayerArmour(i,Armour);
if(Health>10)
{
if(Armour>0)
{
GivePlayerArmour(i,-0.5);
}
else
{
if(Health>10)
{
GivePlayerHealth(i,-0.5);
}
}
}
if(PlayerInfo[i][pTestDMTimer] <= 0 || Health<=10)
{
SetPlayerHealth(i,100);
SetPlayerArmour(i,100);
PlayerInfo[i][pTestDMTimer]=380*2;
SendClientMessage(i,0xFF0000FF,"Вие не успяхте да направите достатъчно Damage, заради което нямате оценка.");
PlayerInfo[i][pTestDamage]=0;
new stringtext[115];
TextDrawHideForPlayer(i, DMON[i]);
PlayerInfo[i][pDMONKills]=0;
format(stringtext, 115, " ~r~Kills: ~w~%d/~g~20",PlayerInfo[i][pDMONKills]);
TextDrawSetString(DMON[i], stringtext);
TextDrawShowForPlayer(i, DMON[i]);
}
}
if(PlayerInfo[i][pHidePickup]>0)
{
if(PlayerInfo[i][pHidePickup]>0)
{
PlayerInfo[i][pHidePickup]--;
}
if(PlayerInfo[i][pHidePickup] <= 0)
{
specialpickupenter[i][0]=0;
specialpickupenter[i][1]=0;
specialpickupenter[i][2]=0;
specialpickupenter[i][3]=0;
specialpickupenter[i][4]=0;
specialpickupenter[i][5]=0;
}
}
if(PlayerInfo[i][pHideIntro2]>0)
{
if(PlayerInfo[i][pHideIntro2]>0)
{
PlayerInfo[i][pHideIntro2]--;
}
if(PlayerInfo[i][pHideIntro2] <= 0)
{
TextDrawHideForPlayer(i, Intro[0]);
}
}
if(PlayerInfo[i][pHideIntro]>0)
{
if(PlayerInfo[i][pHideIntro]>0)
{
PlayerInfo[i][pHideIntro]--;
}
if(PlayerInfo[i][pHideIntro] <= 0)
{
TextDrawHideForPlayer(i, Intro[1]);
new stringutt[256];
PlayerPlaySound(i, 6401, 0.0, 0.0, 0.0);
format(stringutt,256,"[%s] Вие се качихте на %d етаж.",ApartmentInfo[enteredap[i]][aName],selectedfloor[i]);
SendClientMessage(i,0x00FF00FF,stringutt);
TogglePlayerControllable(i, 1);
}
}
if(PlayerInfo[i][pIntro][0]>0)
{
if(PlayerInfo[i][pIntro][0]>0)
{
PlayerInfo[i][pIntro][0]--;
}
if(PlayerInfo[i][pIntro][0] <= 0)
{
MovingScreen(i);
TextDrawShowForPlayer(i, Box[0]);
TextDrawShowForPlayer(i, Box[1]);
TextDrawShowForPlayer(i, IntroEnter[0]);
PlayerInfo[i][pIntro][1]=8;
}}
if(PlayerInfo[i][pIntro][1]>0)
{
if(PlayerInfo[i][pIntro][1]>0)
{
PlayerInfo[i][pIntro][1]--;
}
if(PlayerInfo[i][pIntro][1] <= 0)
{
TextDrawShowForPlayer(i, IntroEnter[1]);
PlayerInfo[i][pIntro][2]=8;
}}
if(PlayerInfo[i][pIntro][2]>0)
{
if(PlayerInfo[i][pIntro][2]>0)
{
PlayerInfo[i][pIntro][2]--;
}
if(PlayerInfo[i][pIntro][2] <= 0)
{
TextDrawShowForPlayer(i, IntroEnter[2]);
PlayerInfo[i][pEndIntro]=14;
}}
if(PlayerInfo[i][pEndIntro]>0)
{
if(PlayerInfo[i][pEndIntro]>0)
{
PlayerInfo[i][pEndIntro]--;
}
if(PlayerInfo[i][pEndIntro] <= 0)
{
for(new i2=0; i2<16; i2++)
{
SendClientMessage(i, 0xFFFFFFFF, "");
}
TextDrawHideForPlayer(i, Box[0]);
TextDrawHideForPlayer(i, Box[1]);
for(new allIntros; allIntros<3; allIntros++)
{
TextDrawHideForPlayer(i, IntroEnter[allIntros]);
}
new rndcamera=random(5);
if(rndcamera<=1)
{
SetPlayerCameraPos(i, 1673.1995, 613.4037, 119.9633);
SetPlayerCameraLookAt(i, 1673.8428, 614.1669, 119.9141);
}
else if(rndcamera>=2 && rndcamera<=3)
{
InterpolateCameraPos(i,2053.0974, 2155.5535, 37.9158, 2596.8679, 819.5750, 105.6545,21000,CAMERA_MOVE);
InterpolateCameraLookAt(i,2053.1174, 2154.5469, 37.9757,2597.6218, 818.9048, 105.7244,21000,CAMERA_MOVE);
}
else if(rndcamera>=4 && rndcamera<=5)
{
InterpolateCameraPos(i,2565.0544, 581.3987, 108.5653, 912.8865, -1718.2683, 136.2593,21000,CAMERA_MOVE);
InterpolateCameraLookAt(i,2564.4661, 580.5797, 108.5751,912.2981, -1719.0873, 136.2692,21000,CAMERA_MOVE);
}
TextDrawShowForPlayer(i, intensetext);
TextDrawShowForPlayer(i, Intro[0]);
TextDrawShowForPlayer(i,ClockDate);
format(accountfiles[i], 28, "%s.ini", pname[i]);
if(!dini_Exists(accountfiles[i]))
{
new string2230[512]; new string2230result[2230];
format(string2230,512,"{FFFFFF}В сървъра може да откриете много разнообразни дейности, като например\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}- Single Player и Multi Player мисии\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}- Безплатни лични превозни средства и колекции (като в NFS)\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}- Гаражи за тунинг\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}- Банди и превземане на територии\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}- Single Player и Multi Player работа\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}- Лотариина система с покупка на билетчета, като в истинския живот\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}- Прогноза за времето\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFF00}- Участие в игри като Национална Лотария и др.\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}            и още много\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}            ---Прогрес на мода: 100/100---\n\n\n\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Задължително е да прочетете правилата, които можете да видите, чрез /rules\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Натиснете Добре, ако ще прочетете /rules");
strcat(string2230result, string2230);
ShowPlayerDialog(i,2,DIALOG_STYLE_MSGBOX,"{00FF00}ОПЪТВАНЕ",string2230result,"{ffffff}Добре","Няма");
}
else
{
new string256[256];
format(string256,256,"{ebebeb}Добре дошли {33aa33}%s{ebebeb}, Вашият профил е регистриран.\nМоля, въведете вашата парола отдолу",pname[i]);
ShowPlayerDialog(i,1,DIALOG_STYLE_PASSWORD,"Login:",string256,"Влез","Излез");
}
}
}
if(PlayerInfo[i][pAfterWork]>0)
{
if(PlayerInfo[i][pAfterWork]>0)
{
PlayerInfo[i][pAfterWork]--;
}
}
if(PlayerInfo[i][pFishTimer]>0)
{
if(PlayerInfo[i][pFishTimer]>0)
{
PlayerInfo[i][pFishTimer]--;
}
if(PlayerInfo[i][pFishTimer] <= 0)
{
new fishID=random(5);
if(fishID==0)
{
SendClientMessage(i,COLOR_FISH,"Вие не хванахте нищо! На въдицата ви се закачи боклук.");
}
if(fishID==1)
{
new fishWeight=randomex(5,15);
new string256[256];
new freeSlot=GetPlayerFreeFishSlot(i);
PlayerInfo[i][pFishSlot][freeSlot] = fishID;
PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
format(string256,256,"На въдицата ти се закачи Шаран %d Kg. Рибата беше вкарана в слот %d",fishWeight,freeSlot);
SendClientMessage(i,COLOR_FISH,string256);
SendClientMessage(i,COLOR_FISH,"За достъп до твоите риби, използвай /myfish");
}
if(fishID==2)
{
new fishWeight=randomex(5,15);
new string256[256];
new freeSlot=GetPlayerFreeFishSlot(i);
PlayerInfo[i][pFishSlot][freeSlot] = fishID;
PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
format(string256,256,"На въдицата ти се закачи Скумрия %d Kg. Рибата беше вкарана в слот %d",fishWeight,freeSlot);
SendClientMessage(i,COLOR_FISH,string256);
SendClientMessage(i,COLOR_FISH,"За достъп до твоите риби, използвай /myfish");
}
if(fishID==3)
{
new fishWeight=randomex(5,15);
new string256[256];
new freeSlot=GetPlayerFreeFishSlot(i);
PlayerInfo[i][pFishSlot][freeSlot] = fishID;
PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
format(string256,256,"На въдицата ти се закачи Цаца %d Kg. Рибата беше вкарана в слот %d",fishWeight,freeSlot);
SendClientMessage(i,COLOR_FISH,string256);
SendClientMessage(i,COLOR_FISH,"За достъп до твоите риби, използвай /myfish");
}
if(fishID==4)
{
new fishWeight=randomex(15,44);
new string256[256];
new freeSlot=GetPlayerFreeFishSlot(i);
PlayerInfo[i][pFishSlot][freeSlot] = fishID;
PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
format(string256,256,"На въдицата ти се закачи Скат %d Kg. Рибата беше вкарана в слот %d",fishWeight,freeSlot);
SendClientMessage(i,COLOR_FISH,string256);
SendClientMessage(i,COLOR_FISH,"За достъп до твоите риби, използвай /myfish");
}
if(fishID==5)
{
new fishWeight=randomex(5,15);
new string256[256];
new freeSlot=GetPlayerFreeFishSlot(i);
PlayerInfo[i][pFishSlot][freeSlot] = fishID;
PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
format(string256,256,"На въдицата ти се закачи Омар %d Kg. Рибата беше вкарана в слот %d",fishWeight,freeSlot);
SendClientMessage(i,COLOR_FISH,string256);
SendClientMessage(i,COLOR_FISH,"За достъп до твоите риби, използвай /myfish");
}
TogglePlayerControllable(i, 1);
ClearAnimations(i);
RemovePlayerAttachedObject(i,2);
}
}
//
if(PlayerInfo[i][pBombsS1T][0]>0)
{
if(PlayerInfo[i][pBombsS1T][0]>0)
{
PlayerInfo[i][pBombsS1T][0]--;
}
if(PlayerInfo[i][pBombsS1T][0] <= 0)
{
CreateExplosion(BombX[i][0]+2, BombY[i][0], BombZ[i][0], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS1T][1]>0)
{
if(PlayerInfo[i][pBombsS1T][1]>0)
{
PlayerInfo[i][pBombsS1T][1]--;
}
if(PlayerInfo[i][pBombsS1T][1] <= 0)
{
CreateExplosion(BombX[i][0], BombY[i][0]+2, BombZ[i][0], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS1T][2]>0)
{
if(PlayerInfo[i][pBombsS1T][2]>0)
{
PlayerInfo[i][pBombsS1T][2]--;
}
if(PlayerInfo[i][pBombsS1T][2] <= 0)
{
CreateExplosion(BombX[i][0]+4, BombY[i][0]+2, BombZ[i][0], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS1T][3]>0)
{
if(PlayerInfo[i][pBombsS1T][3]>0)
{
PlayerInfo[i][pBombsS1T][3]--;
}
if(PlayerInfo[i][pBombsS1T][3] <= 0)
{
CreateExplosion(BombX[i][0]+1, BombY[i][0]+4, BombZ[i][0], 3, 6.0);
}
}
//
//
if(PlayerInfo[i][pBombsS2T][0]>0)
{
if(PlayerInfo[i][pBombsS2T][0]>0)
{
PlayerInfo[i][pBombsS2T][0]--;
}
if(PlayerInfo[i][pBombsS2T][0] <= 0)
{
CreateExplosion(BombX[i][1]+2, BombY[i][1], BombZ[i][1], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS2T][1]>0)
{
if(PlayerInfo[i][pBombsS2T][1]>0)
{
PlayerInfo[i][pBombsS2T][1]--;
}
if(PlayerInfo[i][pBombsS2T][1] <= 0)
{
CreateExplosion(BombX[i][1], BombY[i][1]+2, BombZ[i][1], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS2T][2]>0)
{
if(PlayerInfo[i][pBombsS2T][2]>0)
{
PlayerInfo[i][pBombsS2T][2]--;
}
if(PlayerInfo[i][pBombsS2T][2] <= 0)
{
CreateExplosion(BombX[i][1]+4, BombY[i][1]+2, BombZ[i][1], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS2T][3]>0)
{
if(PlayerInfo[i][pBombsS2T][3]>0)
{
PlayerInfo[i][pBombsS2T][3]--;
}
if(PlayerInfo[i][pBombsS2T][3] <= 0)
{
CreateExplosion(BombX[i][1]+1, BombY[i][1]+4, BombZ[i][1], 3, 6.0);
}
}
//
//
if(PlayerInfo[i][pBombsS3T][0]>0)
{
if(PlayerInfo[i][pBombsS3T][0]>0)
{
PlayerInfo[i][pBombsS3T][0]--;
}
if(PlayerInfo[i][pBombsS3T][0] <= 0)
{
CreateExplosion(BombX[i][2]+2, BombY[i][2], BombZ[i][2], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS3T][1]>0)
{
if(PlayerInfo[i][pBombsS3T][1]>0)
{
PlayerInfo[i][pBombsS3T][1]--;
}
if(PlayerInfo[i][pBombsS3T][1] <= 0)
{
CreateExplosion(BombX[i][2], BombY[i][2]+2, BombZ[i][2], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS3T][2]>0)
{
if(PlayerInfo[i][pBombsS3T][2]>0)
{
PlayerInfo[i][pBombsS3T][2]--;
}
if(PlayerInfo[i][pBombsS3T][2] <= 0)
{
CreateExplosion(BombX[i][2]+4, BombY[i][2]+2, BombZ[i][2], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS3T][3]>0)
{
if(PlayerInfo[i][pBombsS3T][3]>0)
{
PlayerInfo[i][pBombsS3T][3]--;
}
if(PlayerInfo[i][pBombsS3T][3] <= 0)
{
CreateExplosion(BombX[i][2]+1, BombY[i][2]+4, BombZ[i][2], 3, 6.0);
}
}
//
//
if(PlayerInfo[i][pBombsS4T][0]>0)
{
if(PlayerInfo[i][pBombsS4T][0]>0)
{
PlayerInfo[i][pBombsS4T][0]--;
}
if(PlayerInfo[i][pBombsS4T][0] <= 0)
{
CreateExplosion(BombX[i][3]+2, BombY[i][3], BombZ[i][3], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS4T][1]>0)
{
if(PlayerInfo[i][pBombsS4T][1]>0)
{
PlayerInfo[i][pBombsS4T][1]--;
}
if(PlayerInfo[i][pBombsS4T][1] <= 0)
{
CreateExplosion(BombX[i][3], BombY[i][3]+2, BombZ[i][3], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS4T][2]>0)
{
if(PlayerInfo[i][pBombsS4T][2]>0)
{
PlayerInfo[i][pBombsS4T][2]--;
}
if(PlayerInfo[i][pBombsS4T][2] <= 0)
{
CreateExplosion(BombX[i][3]+4, BombY[i][3]+2, BombZ[i][3], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS4T][3]>0)
{
if(PlayerInfo[i][pBombsS4T][3]>0)
{
PlayerInfo[i][pBombsS4T][3]--;
}
if(PlayerInfo[i][pBombsS4T][3] <= 0)
{
CreateExplosion(BombX[i][3]+1, BombY[i][3]+4, BombZ[i][3], 3, 6.0);
}
}
//
//
if(PlayerInfo[i][pBombsS5T][0]>0)
{
if(PlayerInfo[i][pBombsS5T][0]>0)
{
PlayerInfo[i][pBombsS5T][0]--;
}
if(PlayerInfo[i][pBombsS5T][0] <= 0)
{
CreateExplosion(BombX[i][4]+2, BombY[i][4], BombZ[i][4], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS5T][1]>0)
{
if(PlayerInfo[i][pBombsS5T][1]>0)
{
PlayerInfo[i][pBombsS5T][1]--;
}
if(PlayerInfo[i][pBombsS5T][1] <= 0)
{
CreateExplosion(BombX[i][4], BombY[i][4]+2, BombZ[i][4], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS5T][2]>0)
{
if(PlayerInfo[i][pBombsS5T][2]>0)
{
PlayerInfo[i][pBombsS5T][2]--;
}
if(PlayerInfo[i][pBombsS5T][2] <= 0)
{
CreateExplosion(BombX[i][4]+4, BombY[i][4]+2, BombZ[i][4], 3, 6.0);
}
}
if(PlayerInfo[i][pBombsS5T][3]>0)
{
if(PlayerInfo[i][pBombsS5T][3]>0)
{
PlayerInfo[i][pBombsS5T][3]--;
}
if(PlayerInfo[i][pBombsS5T][3] <= 0)
{
CreateExplosion(BombX[i][4]+1, BombY[i][4]+4, BombZ[i][4], 3, 6.0);
}
}
//
if(PlayerInfo[i][pAdvertT]>0)
{
if(PlayerInfo[i][pAdvertT]>0)
{
PlayerInfo[i][pAdvertT]--;
}
if(PlayerInfo[i][pAdvertT] <= 0)
{
SendClientMessage(i, 0xFAF305FF, "Вече отново можеш да пуснеш обява!");
}
}
if(PlayerInfo[i][pPlaceBomb]>0)
{
if(PlayerInfo[i][pPlaceBomb]>0)
{
PlayerInfo[i][pPlaceBomb]--;
}
if(PlayerInfo[i][pPlaceBomb] <= 0)
{
GetPlayerPos(i,X[i],Y[i],Z[i]);
ClearAnimations(i);
isvalidbomb=0;
SendClientMessage(i, 0x29C9D6FF, "Bomb: Ти постави бомба, използвай /bomb за да я взривиш!");
GameTextForPlayer(i, "  ", 1000, 3);
TogglePlayerControllable(i, 1);
if(PlayerInfo[i][pBombsS1]==0)
{
PlayerInfo[i][pActiveBomb][0]=1;
BombX[i][0] = X[i];
BombY[i][0] = Y[i];
BombZ[i][0] = Z[i]-1;
BombO[i][0]=CreateDynamicObject(1252,BombX[i][0],BombY[i][0],BombZ[i][0],0.0,0.0,0.0);
return PlayerInfo[i][pBombsS1]=1;
}
if(PlayerInfo[i][pBombsS2]==0)
{
PlayerInfo[i][pActiveBomb][1]=1;
BombX[i][1] = X[i];
BombY[i][1] = Y[i];
BombZ[i][1] = Z[i]-1;
BombO[i][1]=CreateDynamicObject(1252,BombX[i][1],BombY[i][1],BombZ[i][1],0.0,0.0,0.0);
return PlayerInfo[i][pBombsS2]=1;
}
if(PlayerInfo[i][pBombsS3]==0)
{
PlayerInfo[i][pActiveBomb][2]=1;
BombX[i][2] = X[i];
BombY[i][2] = Y[i];
BombZ[i][2] = Z[i]-1;
BombO[i][2]=CreateDynamicObject(1252,BombX[i][2],BombY[i][2],BombZ[i][2],0.0,0.0,0.0);
return PlayerInfo[i][pBombsS3]=1;
}
if(PlayerInfo[i][pBombsS4]==0)
{
PlayerInfo[i][pActiveBomb][3]=1;
BombX[i][3] = X[i];
BombY[i][3] = Y[i];
BombZ[i][3] = Z[i]-1;
BombO[i][3]=CreateDynamicObject(1252,BombX[i][3],BombY[i][3],BombZ[i][3],0.0,0.0,0.0);
return PlayerInfo[i][pBombsS4]=1;
}
if(PlayerInfo[i][pBombsS5]==0)
{
PlayerInfo[i][pActiveBomb][4]=1;
BombX[i][4] = X[i];
BombY[i][4] = Y[i];
BombZ[i][4] = Z[i]-1;
BombO[i][4]=CreateDynamicObject(1252,BombX[i][4],BombY[i][4],BombZ[i][4],0.0,0.0,0.0);
return PlayerInfo[i][pBombsS5]=1;
}
}
}
if(PlayerInfo[i][pRefuelCan]>0)
{
if(PlayerInfo[i][pRefuelCan]>0)
{
PlayerInfo[i][pRefuelCan]--;
}
if(PlayerInfo[i][pRefuelCan] <= 0)
{
new string156[156];
GameTextForPlayer(i, "  ", 1000, 3);
TogglePlayerControllable(i, 1);
vehfuel[GetPlayerVehicleID(i)]+=refuelcan[i];
format(string156, 156, "Превозното средство е заредено със {C14124}%d L.",refuelcan[i]);
SendClientMessage(i, 0xFFFFFFFF, string156);
}
}
if(PlayerInfo[i][pRefuelCan2]>0)
{
if(PlayerInfo[i][pRefuelCan2]>0)
{
PlayerInfo[i][pRefuelCan2]--;
}
if(PlayerInfo[i][pRefuelCan2] <= 0)
{
new string156[156];
TogglePlayerControllable(i, 1);
GameTextForPlayer(i, "  ", 1000, 3);
PlayerInfo[i][pFuelcase]+=refuelcan[i];
format(string156, 156, "Тубата е заредена със {C14124}%d L{FFFFFF} за {00BF00}$%d.",refuelcan[i],refuelcan[i]*5);
SendClientMessage(i, 0xFFFFFFFF, string156);
}
}
if(PlayerInfo[i][pDuelTimer]>0)
{
if(PlayerInfo[i][pDuelTimer]>0)
{
PlayerInfo[i][pDuelTimer]--;
}
if(PlayerInfo[i][pDuelTimer] <= 0)
{
GameTextForPlayer(i, "~w~3", 3000, 3);
GameTextForPlayer(duelsend[i], "~w~3", 3000, 3);
PlayerInfo[i][pDuelTimer2]=4;
}
}
if(PlayerInfo[i][pDuelTimer2]>0)
{
if(PlayerInfo[i][pDuelTimer2]>0)
{
PlayerInfo[i][pDuelTimer2]--;
}
if(PlayerInfo[i][pDuelTimer2] <= 0)
{
GameTextForPlayer(i, "~w~2", 3000, 3);
GameTextForPlayer(duelsend[i], "~w~2", 3000, 3);
PlayerInfo[i][pDuelTimer3]=4;
}
}
if(PlayerInfo[i][pDuelTimer3]>0)
{
if(PlayerInfo[i][pDuelTimer3]>0)
{
PlayerInfo[i][pDuelTimer3]--;
}
if(PlayerInfo[i][pDuelTimer3] <= 0)
{
GameTextForPlayer(i, "~w~1", 3000, 3);
GameTextForPlayer(duelsend[i], "~w~1", 3000, 3);
PlayerInfo[i][pDuelTimer4]=4;
}
}
if(PlayerInfo[i][pDuelTimer4]>0)
{
if(PlayerInfo[i][pDuelTimer4]>0)
{
PlayerInfo[i][pDuelTimer4]--;
}
if(PlayerInfo[i][pDuelTimer4] <= 0)
{
GameTextForPlayer(i, "~r~FIGHT", 3000, 3);
GameTextForPlayer(duelsend[i], "~r~FIGHT", 3000, 3);
TogglePlayerControllable(i,1);
TogglePlayerControllable(duelsend[i],1);
}
}
if(PlayerInfo[i][pHideDMON2]>0)
{
if(PlayerInfo[i][pHideDMON2]>0)
{
PlayerInfo[i][pHideDMON2]--;
}
if(PlayerInfo[i][pHideDMON2] <= 0)
{
TextDrawHideForPlayer(i, DMON2);
}
}
if(PlayerInfo[i][pNo20S]>0)
{
if(PlayerInfo[i][pNo20S]>0)
{
PlayerInfo[i][pNo20S]--;
}
}
if(alienseffect[i]==1)
{
alienseffect[i]=0;
SetPlayerWeather(i, serverWeather);
}
if(PlayerInfo[i][pMoonshine2]>0)
{
if(PlayerInfo[i][pMoonshine2]>0)
{
PlayerInfo[i][pMoonshine2]--;
}
if(PlayerInfo[i][pMoonshine2] <= 0)
{
if(rezachka[i]==0) RemovePlayerWeapon(i,9);
SetPlayerWeather(i, serverWeather);
SendClientMessage(i, 0xFF2D2DFF, "Действието на спиртното питие премина!");
}
}
if(PlayerInfo[i][pWeed2]>0)
{
if(PlayerInfo[i][pWeed2]>0)
{
PlayerInfo[i][pWeed2]--;
}
if(PlayerInfo[i][pWeed2] <= 0)
{
if(rezachka[i]==0) RemovePlayerWeapon(i,9);
SetPlayerWeather(i, serverWeather);
SendClientMessage(i, 0xFF2D2DFF, "Действието на тревата премина!");
}
}
if(PlayerInfo[i][pCocaine2]>0)
{
if(PlayerInfo[i][pCocaine2]>0)
{
PlayerInfo[i][pCocaine2]--;
}
if(PlayerInfo[i][pCocaine2] <= 0)
{
if(rezachka[i]==0) RemovePlayerWeapon(i,9);
SetPlayerWeather(i, serverWeather);
SendClientMessage(i, 0xFF2D2DFF, "Действието на кокаина премина!");
}
}
if(PlayerInfo[i][pHeroin2]>0)
{
if(PlayerInfo[i][pHeroin2]>0)
{
PlayerInfo[i][pHeroin2]--;
}
if(PlayerInfo[i][pHeroin2] <= 0)
{
if(rezachka[i]==0) RemovePlayerWeapon(i,9);
SetPlayerWeather(i, serverWeather);
SendClientMessage(i, 0xFF2D2DFF, "Действието на хероина премина!");
}
}
if(PlayerInfo[i][pFMuted]>0 && PlayerInfo[i][pFMuted]<2000)
{
if(PlayerInfo[i][pFMuted]>0)
{
PlayerInfo[i][pFMuted]--;
}
if(PlayerInfo[i][pFMuted] <= 0)
{
new strgin2562[256];
format(strgin2562, 256, "[FACTION CHAT] %s was FACTION unmuted by THE SERVER. [Reason: Timed Out]",pname[i]);
SendFactionMessage(PlayerInfo[i][pTeam],0x33CCFFFF,strgin2562);
}
}
/*
if(IPRemove>0)
{
if(IPRemove>0)
{
IPRemove--;
}
if(IPRemove<=0)
{
IPRemove--;
}
}
*/
if(PlayerInfo[i][pMuted]>0)
{
if(PlayerInfo[i][pMuteReason]<6)
{
if(PlayerInfo[i][pMuted]>0)
{
PlayerInfo[i][pMuted]--;
}
if(PlayerInfo[i][pMuted] <= 0)
{
PlayerInfo[i][pMuteReason]=0;
new string100[100];
format(string100,100,"%s has been unmuted by THE SERVER",pname[i]);
SendClientMessageToAll(COLOR_GREEN, string100);
}
}
}
if(PlayerInfo[i][pAMuted]>0)
{
if(PlayerInfo[i][pAMuted]>0)
{
PlayerInfo[i][pAMuted]--;
}
if(PlayerInfo[i][pAMuted] <= 0)
{
SendClientMessage(i, COLOR_GREEN, "Ти беше отглушен от админ чата, защото ти изтече наказанието!");
}
}
if(PlayerInfo[i][pPJail]>0)
{
if(PlayerInfo[i][pPJail]>0)
{
PlayerInfo[i][pPJail]--;
new pjail[256];
format(pjail,256,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~        JAIL: %d seconds",PlayerInfo[i][pPJail]);
GameTextForPlayer(i, pjail, 2300, 3);
}
if(PlayerInfo[i][pPJail] <= 0)
{
SetPlayerHealth(i,0);
SendClientMessage(i, 0x0040FFFF, "SAPD: Излизаш, внимавай да не попаднеш тук отново!");
}
}
if(PlayerInfo[i][pJail]>0)
{
if(PlayerInfo[i][pJail]>0)
{
PlayerInfo[i][pJail]--;
}
if(PlayerInfo[i][pJail] <= 0)
{
SetPlayerHealth(i,0);
for(new i222;i222<MAX_PLAYERS;i222++ && IsPlayerConnected(i222))
{
SendClientMessage(i222, COLOR_GREEN, "%s has been unjailed by THE SERVER");
}
}
}
if(PlayerInfo[i][pTextSpam]>0)
{
if(PlayerInfo[i][pTextSpam]>0)
{
PlayerInfo[i][pTextSpam]--;
}
if(PlayerInfo[i][pTextSpam] <= 0)
{
textspam[i]=0;
}
}
if(PlayerInfo[i][pCreditTime]>0)
{
if(PlayerInfo[i][pCreditTime]>0)
{
PlayerInfo[i][pCreditTime]--;
}
if(PlayerInfo[i][pCreditTime] <= 0)
{
SendClientMessage(i,0xccccffFF, "Понеже не върнахте заема си към банката, то вие сте заподозрян в кражба на пари.");
PlayerInfo[i][pWanted]+=3;
if(PlayerInfo[i][pWanted]>6) PlayerInfo[i][pWanted]=6;
PlayerInfo[i][pCreditMoney]=0;
new stringmoneybox[256];
SetPlayerWantedLevel(i,PlayerInfo[i][pWanted]);
format(stringmoneybox,256,"[SUSPECT]{0040FF} Ти си заподозрян в престъпление: Кражба на пари, ниво на издирване: %d",PlayerInfo[i][pWanted]);
SendClientMessage(i,0xFF0000FF,stringmoneybox);
if(PlayerInfo[i][pWanted]>=6)
{
format(stringmoneybox,115,"{ff0000}[DELTA FORCE]{A4A400} Ти ще бъдеш издирван от Delta Force, понеже имаш 6 звезди",PlayerInfo[i][pWanted]);
SendClientMessage(i,0xFF0000FF,stringmoneybox);
new stringsuspect[256];
format(stringsuspect,256,"[WARNING]{A4A400} %s е заподозрян с 6 звезди, който го убие ще спечели $3000 и 5 EP",pname[i],PlayerInfo[i][pWanted]);
SendFactionMessage(15,0xFF0000FF,stringsuspect);
}
new stringsuspect[256];
format(stringsuspect,256,"[SUSPECT]{0040FF} %s е заподозрян в престъпление: Кражба на пари, ниво на изидрване: %d",pname[i],PlayerInfo[i][pWanted]);
SendFactionMessage(13,0xFF0000FF,stringsuspect);
}
}
if(PlayerInfo[i][pARefuel]>0)
{
if(PlayerInfo[i][pARefuel]>0)
{
PlayerInfo[i][pARefuel]--;
}
}
if(PlayerInfo[i][pCNos2]>0)
{
if(PlayerInfo[i][pCNos2]>0)
{
PlayerInfo[i][pCNos2]--;
}
if(PlayerInfo[i][pCNos2] <= 0)
{
if(PlayerInfo[i][pCNos]==1)
{
PlayerInfo[i][pCNos2]=4;
if(IsPlayerInAnyVehicle(i))
{
AddVehicleComponent(GetPlayerVehicleID(i),1010);
}
}
}
}
if(PlayerInfo[i][pCommandSpam]>0)
{
if(PlayerInfo[i][pCommandSpam]>0)
{
PlayerInfo[i][pCommandSpam]--;
}
if(PlayerInfo[i][pCommandSpam] <= 0)
{
commandspam[i]=0;
}
}
if(PlayerInfo[i][pAFKBack]>0)
{
if(PlayerInfo[i][pAFKBack]>0)
{
PlayerInfo[i][pAFKBack]--;
}
if(PlayerInfo[i][pAFKBack] <= 0)
{
}
}
if(PlayerInfo[i][pTimeFreeze]>0)
{
if(PlayerInfo[i][pTimeFreeze]>0)
{
PlayerInfo[i][pTimeFreeze]--;
}
if(PlayerInfo[i][pTimeFreeze] <= 0)
{
TogglePlayerControllable(i,1);
}
}
if(PlayerInfo[i][pHealT]>0)
{
if(PlayerInfo[i][pHealT]>0)
{
PlayerInfo[i][pHealT]--;
}
if(PlayerInfo[i][pHealT] <= 0)
{
SendClientMessage(i,0xFFFF00FF, "Вече можеш да се да използваш /healme и /extraarmour отново!");
}
}
if(PlayerInfo[i][pVehT]>0)
{
if(PlayerInfo[i][pVehT]>0)
{
PlayerInfo[i][pVehT]--;
}
if(PlayerInfo[i][pVehT] <= 0)
{
PlayerInfo[i][pVehT]=0;
SendClientMessage(i,0xFFFF00FF, "Вече можете да използвате /myveh отново!");
}
}
if(PlayerInfo[i][pFixT]>0)
{
if(PlayerInfo[i][pFixT]>0)
{
PlayerInfo[i][pFixT]--;
}
if(PlayerInfo[i][pFixT] <= 0)
{
PlayerInfo[i][pFixT]=0;
SendClientMessage(i,0xFFFF00FF, "Вече можеш да използваш /fix и /tires отново!");
}
}
if(PlayerInfo[i][pVGuns]>0)
{
if(PlayerInfo[i][pVGuns]>0)
{
PlayerInfo[i][pVGuns]--;
}
if(PlayerInfo[i][pVGuns] <= 0)
{
PlayerInfo[i][pVGuns]=0;
SendClientMessage(i,0xFFFF00FF, "Вече можеш да използваш /vguns отново!");
}
}
if(PlayerInfo[i][pVRefuel]>0)
{
if(PlayerInfo[i][pVRefuel]>0)
{
PlayerInfo[i][pVRefuel]--;
}
if(PlayerInfo[i][pVRefuel] <= 0)
{
PlayerInfo[i][pVRefuel]=0;
SendClientMessage(i,0xFFFF00FF, "Вече можеш да презаредиш отново!");
}
}
if(PlayerInfo[i][pKick]>0)
{
if(PlayerInfo[i][pKick]>0)
{
PlayerInfo[i][pKick]--;
}
if(PlayerInfo[i][pKick] <= 0)
{
hideexitserver[i]=1;
PlayerInfo[i][pKick]=0;
Kick(i);
}
}
if(PlayerInfo[i][pReSpawn]>0)
{
if(PlayerInfo[i][pReSpawn]>0)
{
PlayerInfo[i][pReSpawn]--;
}
if(PlayerInfo[i][pReSpawn] <= 0)
{
SpawnPlayer(i);
}
}
if(PlayerInfo[i][pSongOn]>0)
{
if(PlayerInfo[i][pSongOn]>0)
{
PlayerInfo[i][pSongOn]--;
}
if(PlayerInfo[i][pSongOn] <= 0)
{
PlayerInfo[i][pSongOn]=0;
songon[i]=0;
}
}
if(IsValidDynamicMapIcon(predalmarker[i]))
{
if(PlayerInfo[i][pWanted]==0)
{
DestroyDynamicMapIcon(predalmarker[i]);
}
}
if(spawned[i]==1)
{
if(PlayerInfo[i][pRobberyATM]>0 && PlayerInfo[i][pPJail]>0)
{
if(CASHMONEY[2]>0 && CASHMONEY[1]>0 && CASHMONEY[0]>0)
{
ClearAnimations(i);
DestroyDynamicObject(CASHBAG[0]);
CASHMONEY[2]=0;
CASHMONEY[1]=0;
RemovePlayerAttachedObject(i,7);
CASHMONEY[0]=0;
DestroyDynamic3DTextLabel(CASHBAGTEXT[0]);
DestroyDynamicObject(CASHBAG[1]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[1]);
DestroyDynamicObject(CASHBAG[2]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[2]);
PlayerInfo[i][pRobberyATM]=0;
StartedRobbery=0;
PlayerInfo[i][pRobberyATM2]=0;
SendClientMessageToAll(COLOR_RTRIADS,"Robbery ATM: Обирът е неуспешен, но въпреки това крадецът успя да открадне пари!");
}
}
if(PlayerInfo[i][pWanted]<7 && PlayerInfo[i][pWanted]>0)
{
SetPlayerWantedLevel(i,PlayerInfo[i][pWanted]);
new formatsuspect[256];
format(formatsuspect,256,"{FF0000}ЗАПОДОЗРЯН: {0040FF}[%d]",PlayerInfo[i][pWanted]);
UpdateDynamic3DTextLabelText(PlayerLabel[i],COLOR_WHITE,formatsuspect);
SetPlayerWantedLevel(i,PlayerInfo[i][pWanted]);
}
else if(PlayerInfo[i][pWanted]>7)
{
PlayerInfo[i][pWanted]=6;
}
}
if(TeamInfo[PlayerInfo[i][pTeam]][tKills]>=13 && TeamInfo[PlayerInfo[i][pTeam]][tLevel]==1 && PlayerInfo[i][pGLeader]==1)
{
GiveTeamLevel(i,1);
SendFactionMessage(PlayerInfo[i][pTeam],0xb67bedFF,"SERVER: Нивото на вашата банда/мафия беше автоматично вдигнато на 2!");
SendFactionMessage(PlayerInfo[i][pTeam],0xb67bedFF,"SERVER: Ако желаете, нивото на банда/мафията да бъде вдигнато, трябва да напишете /buyganglevel(за лидери)!");
}
if(PlayerInfo[i][pEP]>=5 && PlayerInfo[i][pLevel]==2 && PlayerInfo[i][pWeaponS]==1)
{
SendClientMessage(i,0xb67bedFF,"SERVER: Вашето ниво на Weapon Skill беше автоматично вдигнато, понеже сте нов.");
SendClientMessage(i,0xb67bedFF,"SERVER: Ако желаете да си купите още Weapon Skills, използвайте /buyws.");
PlayerInfo[i][pWeaponS]+=1;
GivePlayerEP(i,-5);
}
if(PlayerInfo[i][pEP]>=PlayerInfo[i][pLevel]+6 && PlayerInfo[i][pLevel]==1)
{
PlayerInfo[i][pEP]-=6;
GivePlayerLevel(i,1);
if(PlayerInfo[i][pEP]<=PlayerInfo[i][pLevel]+6)
{
SendClientMessage(i,0xb67bedFF,"SERVER: Вашето ниво на репутация беше автоматично вдигнато, понеже сте нов.");
SendClientMessage(i,0xb67bedFF,"SERVER: Ако желаете да си купите още Level, използвайте /buylevel.");
}
}
if(PlayerInfo[i][pFuel]>0)
{
if(PlayerInfo[i][pFuel]>0)
{
PlayerInfo[i][pFuel]--;
}
if(PlayerInfo[i][pFuel] <= 0)
{
if(IsPlayerInAnyVehicle(i) && driver[i]==1)
{
if(vehfuel[GetPlayerVehicleID(i)]<2)
{
ToggleEngine(GetPlayerVehicleID(i), VEHICLE_PARAMS_OFF); vehEngineStatusON[GetPlayerVehicleID(i)]=0;
SendClientMessage(i, 0xE60000FF, "Превозното средство няма бензин, зареди го на бензиностанция");
PlayerInfo[i][pFuel] = 2*120;
}
if(vehfuel[GetPlayerVehicleID(i)]>0)
{
vehfuel[GetPlayerVehicleID(i)] -= 1;
PlayerInfo[i][pFuel] = 2*120;
}
InTaxi(i);
if(speedo[i]==0)
{
if(invehicletype[i]==0)
{
UpdateVehicleStatus2(i);
}
else if(invehicletype[i]==1)
{
UpdateVehicleStatus(i);
}
}
}
///
//
}
}
if(PlayerInfo[i][pRemoveHousePick]>0)
{
if(PlayerInfo[i][pRemoveHousePick]>0)
{
PlayerInfo[i][pRemoveHousePick]--;
}
if(PlayerInfo[i][pRemoveHousePick] <= 0)
{
PlayerInfo[i][pRemoveHousePick]=0;
isinhousepickup[i]=0;
}}
if(PlayerInfo[i][pBan]>0)
{
if(PlayerInfo[i][pBan]>0)
{
PlayerInfo[i][pBan]--;
}
if(PlayerInfo[i][pBan] <= 0)
{
hideexitserver[i]=1;
PlayerInfo[i][pBan]=0;
PlayerInfo[i][pBlock]=1;
Ban(i);
}
}
}
//PlayerInfo timers - location - close
return 1;
}
public OnPlayerRequestClass(playerid, classid)
{
spawnednew[playerid]=0;
selectedplace[playerid]=randomex(1,4);
SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
SetPlayerCameraPos(playerid,2179.9398,1284.6965,43.4799);
SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
SetPlayerFacingAngle(playerid,88.68);
if(classid==0 && registered[playerid]==1)
{
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~~h~~h~~h~SELECT YOUR SKIN", 2300, 3);
}
firstskin[playerid]=classid;
spawned[playerid]=0;
/*
requestspawn[playerid]=1;
if(requestspawn2[playerid]==1)
{
SetTimerEx("ReSpawnTimer", 250, false, "i", playerid);
}*/
SetPVarInt(playerid, "color", 0);
if(nospawnselect[playerid]==1)
{
SpawnPlayer(playerid);
SpawnPlayer(playerid);
nospawnselect[playerid]=2;
}
return 1;
}
public ReSpawnTimer(playerid)
{
requestspawn2[playerid]=0;
SpawnPlayer(playerid);
return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
if(clickedid == Text:INVALID_TEXT_DRAW) {
DestroySelectionMenu(playerid);
SetPVarInt(playerid, "dutyskin_active", 0);
PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
return 1;
}
/*if(clickedid == Text:INVALID_TEXT_DRAW)// ESC
{
if(PhoneShow[playerid] == true)
{
HideWholePhone(playerid);
PhoneLocked[playerid] = 0;
PhoneShow[playerid] = false;
TogglePlayerControllable(playerid, 1);
CancelSelectTextDraw(playerid);
ClearAnimations(playerid);
}
}*/
if(GetPVarInt(playerid, "skinc_active") == 0) return 0;
if(clickedid == Text:INVALID_TEXT_DRAW) {
DestroySelectionMenu(playerid);
SetPVarInt(playerid, "skinc_active", 0);
PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
return 1;
}
return 0;
}
public OnPlayerUpdate(playerid)
{
if(PlayerInfo[playerid][pLaser]==1)
{
if(PlayerInfo[playerid][pVip]>3 || freevip==1)
{
UpdateLaser(playerid);
}
}
if(IsPlayerInAnyVehicle(playerid))
{
if(speedo[playerid]==0)
{
if(invehicletype[playerid]==0)
{
UpdateVehicleStatus2(playerid);
}
else if(invehicletype[playerid]==1)
{
UpdateVehicleStatus(playerid);
}
}
}
if(IsPlayerInAnyVehicle(playerid))
{
for(new i=0; i<maxspikes;i++)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, XSpike[i], YSpike[i], ZSpike[i]))
{
UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), 0, 0, 0, encode_tires(1, 1, 1, 1));
}
}
}
//if - location - close
new drunknew;
drunknew = GetPlayerDrunkLevel(playerid);
if (drunknew < 100)
{
SetPlayerDrunkLevel(playerid, 2000);
}
else
{
if (pDrunkLevelLast[playerid] != drunknew)
{
new wfps = pDrunkLevelLast[playerid] - drunknew;
if ((wfps > 0) && (wfps < 200))
pFPS[playerid] = wfps;
pDrunkLevelLast[playerid] = drunknew;
if(pFPS[playerid]<23)
{
if(PlayerInfo[playerid][pFirstWays3]==7)
{
SendClientMessage(playerid,0x4fff52FF,"[FPS Проблем] Понеже сървърът засече, че си под 30 FPS ви препоръчваме да нагласите в настройките {ff0000}FPS LIMIT = OFF");
SendClientMessage(playerid,0x4fff52FF,"[FPS Проблем] Това съобщение няма да ви излиза вече, понеже научихте как се поправя FPS в повечето случаи.");
PlayerInfo[playerid][pFirstWays3]=1;
}
else if(PlayerInfo[playerid][pFirstWays3]<7)
{
PlayerInfo[playerid][pFirstWays3]=1;
}
}
}
}
return 1;
}
stock ResetPlayerStats(playerid)
{
//reststats - location - open
PlayerInfo[playerid][pRobberLead]=0;
PlayerInfo[playerid][pRobber]=0;
PlayerInfo[playerid][pBan]=0;
PlayerInfo[playerid][pBlock]=0;
PlayerInfo[playerid][pKick]=0;
PlayerInfo[playerid][pEndIntro]=0;
PlayerInfo[playerid][pIntro][0]=0;
PlayerInfo[playerid][pIntro][1]=0;
PlayerInfo[playerid][pIntro][2]=0;
PlayerInfo[playerid][pShowMission]=0;
PlayerInfo[playerid][pVRefuel]=0;
PlayerInfo[playerid][pFixT]=0;
PlayerInfo[playerid][pHealT]=0;
PlayerInfo[playerid][pInvisible]=0;
PlayerInfo[playerid][pFuel]=0;
PlayerInfo[playerid][pActiveBomb][0]=1;
PlayerInfo[playerid][pTogFaction]=0;
PlayerInfo[playerid][pTogLeader]=0;
for(new i=0; i<MAX_TEAMS; i++)
{
PlayerInfo[playerid][ptTurfs][i]=TeamInfo[i][tTurfs];
}
PlayerInfo[playerid][pHealT2][0]=1;
PlayerInfo[playerid][pFirstWays]=0; PlayerInfo[playerid][pFirstWays2]=0; PlayerInfo[playerid][pFirstWays3]=0;  PlayerInfo[playerid][pFirstWays4]=0; PlayerInfo[playerid][pFirstWays5]=0; PlayerInfo[playerid][pFirstWays6]=0;
PlayerInfo[playerid][pCrashedFromGTA]=0;
PlayerInfo[playerid][pObjectAdmin]=0; PlayerInfo[playerid][pJailType]=0;
PlayerInfo[playerid][pGender]=0;
PlayerInfo[playerid][pPhone]=0;
PlayerInfo[playerid][pTazed]=0;
PlayerInfo[playerid][pTimerBizPickups2]=0;
PlayerInfo[playerid][pActiveBomb][1]=1;
PlayerInfo[playerid][pActiveBomb][2]=1;
PlayerInfo[playerid][pActiveBomb][3]=1;
PlayerInfo[playerid][pActiveBomb][4]=1;
PlayerInfo[playerid][pReSpawn]=0;
PlayerInfo[playerid][pRobberyATM2]=0;
PlayerInfo[playerid][pBombsS1T][0]=0;
PlayerInfo[playerid][pUvedomiChengeta]=0;
PlayerInfo[playerid][pBombsS1T][1]=0;
PlayerInfo[playerid][pBombsS1T][2]=0;
PlayerInfo[playerid][pVehT]=0;
PlayerInfo[playerid][pBombsS1T][3]=0;
PlayerInfo[playerid][pBombsS1T][4]=0;
PlayerInfo[playerid][pCompany]=0;
PlayerInfo[playerid][pSongOn]=0;
PlayerInfo[playerid][pDMONKills]=0;
PlayerInfo[playerid][pHideIntro2]=0;
PlayerInfo[playerid][pMissionMessage]=0;
PlayerInfo[playerid][pMissionActorFollow]=0;
PlayerInfo[playerid][pMissionActorFollow2]=0;
PlayerInfo[playerid][pBombsS2T][0]=0;
PlayerInfo[playerid][pBombsS2T][1]=0;
PlayerInfo[playerid][pClearAnimation]=0;
PlayerInfo[playerid][pBombsS2T][2]=0;
PlayerInfo[playerid][pTimerATM]=0;
PlayerInfo[playerid][pSelectCarMission1]=0;
PlayerInfo[playerid][pTimerLeaveMiniGame]=0;
PlayerInfo[playerid][pBombsS2T][3]=0;
PlayerInfo[playerid][pBombsS2T][4]=0;
PlayerInfo[playerid][pBombsS3T][0]=0;
PlayerInfo[playerid][pRobberyATM]=0;
PlayerInfo[playerid][pBombsS3T][1]=0;
PlayerInfo[playerid][pBombsS3T][2]=0;
PlayerInfo[playerid][pBombsS3T][3]=0;
PlayerInfo[playerid][pBombsS3T][4]=0;
PlayerInfo[playerid][pTestDMON]=0;
PlayerInfo[playerid][pBombsS4T][0]=0;
PlayerInfo[playerid][pBombsS4T][1]=0;
PlayerInfo[playerid][pBombsS4T][2]=0;
PlayerInfo[playerid][pBombsS4T][3]=0;
PlayerInfo[playerid][pBombsS4T][4]=0;
PlayerInfo[playerid][pBombsS5T][0]=0;
PlayerInfo[playerid][pBombsS5T][1]=0;
PlayerInfo[playerid][pBombsS5T][2]=0;
PlayerInfo[playerid][pBombsS5T][3]=0;
PlayerInfo[playerid][pHideIntro]=0;
PlayerInfo[playerid][pBombsS5T][4]=0;
PlayerInfo[playerid][pIFCDuty]=0;
PlayerInfo[playerid][pFreezed2]=0;
PlayerInfo[playerid][pTogCB]=0;
PlayerInfo[playerid][pRegistred]=0;
PlayerInfo[playerid][pEndIntro]=0;
PlayerInfo[playerid][pIntro][0]=0;
PlayerInfo[playerid][pIntro][1]=0;
PlayerInfo[playerid][pIntro][2]=0;
PlayerInfo[playerid][pAdmin]=0; PlayerInfo[playerid][pPlaceBomb]=0;
PlayerInfo[playerid][pBombs]=0; PlayerInfo[playerid][pBombsS1]=0; PlayerInfo[playerid][pBombsS2]=0; PlayerInfo[playerid][pBombsS3]=0; PlayerInfo[playerid][pBombsS4]=0; PlayerInfo[playerid][pBombsS5]=0;
PlayerInfo[playerid][pADMINMute]=0;
for(new i=0; i<50; i++)
{
PlayerInfo[playerid][pAchievement][i]=0;
}
for(new i=0; i<35; i++)
{
PlayerInfo[playerid][pClothes][i]=0;
}
for(new i=1; i<16; i++)
{
PlayerInfo[playerid][pPrivateVeh][i]=0;
}
for(new i=1; i<11; i++)
{
PlayerInfo[playerid][pFishSlot][i]=0;
PlayerInfo[playerid][pFishWeight][i]=0;
}
PlayerInfo[playerid][pFreezed]=0;
PlayerInfo[playerid][pReadTA]=0;
PlayerInfo[playerid][pPrezimqvaneSamolet]=0;
PlayerInfo[playerid][pArmour2]=0;
PlayerInfo[playerid][pLSTaxi]=0;
PlayerInfo[playerid][pRegisteredTimer]=0;
PlayerInfo[playerid][pHealth2]=0;
PlayerInfo[playerid][pMoonshine2]=0;
PlayerInfo[playerid][pSaveVeh]=1;
PlayerInfo[playerid][pRadio]=0;
PlayerInfo[playerid][pInDM]=0;
PlayerInfo[playerid][pDice]=0;
PlayerInfo[playerid][pCigarettes]=0;
PlayerInfo[playerid][pBriefcase]=0;
PlayerInfo[playerid][pChantichki]=0;
PlayerInfo[playerid][pDMONKills2]=0;
PlayerInfo[playerid][pMission]=0;
PlayerInfo[playerid][pMPMission]=0;
PlayerInfo[playerid][pClanRank]=1;
PlayerInfo[playerid][pClan]=0;
PlayerInfo[playerid][pDFDuty]=0;
PlayerInfo[playerid][pFuelcase]=-1;
PlayerInfo[playerid][pChervei]=0;
PlayerInfo[playerid][pBizEP]=0; PlayerInfo[playerid][pBizCash]=0;
PlayerInfo[playerid][pJob]=0;
PlayerInfo[playerid][pNone]=0;
PlayerInfo[playerid][pNo]=0;
PlayerInfo[playerid][pYes]=0;
PlayerInfo[playerid][pPizzaTimer1]=0;
PlayerInfo[playerid][pBoatTimer1]=0;
PlayerInfo[playerid][pOrganisator]=0;
PlayerInfo[playerid][pBurgerShotTimer1]=0;
PlayerInfo[playerid][pCoalmineTimer1]=0;
PlayerInfo[playerid][pSweeperTimer1]=0;
PlayerInfo[playerid][pPilotTimer1]=0;
PlayerInfo[playerid][pDeliverTimer1]=0;
PlayerInfo[playerid][pBusTimer1]=0;
PlayerInfo[playerid][pOffice]=0;
PlayerInfo[playerid][pValcher]=0;
PlayerInfo[playerid][pStyle2]=2;
PlayerInfo[playerid][pChanta]=0;
PlayerInfo[playerid][pBombs]=0;
PlayerInfo[playerid][pCMN1]=0;
PlayerInfo[playerid][pAdvertT]=0;
PlayerInfo[playerid][pIFC]=0;
PlayerInfo[playerid][pSpecialForce]=0;
PlayerInfo[playerid][pEvent]=0; PlayerInfo[playerid][pManage]=0;
PlayerInfo[playerid][pRNMute]=0; PlayerInfo[playerid][pAWarns]=0;
PlayerInfo[playerid][pLodka]=0; PlayerInfo[playerid][pVlak]=0; PlayerInfo[playerid][pSamolet]=0; PlayerInfo[playerid][pHelikopter]=0;
PlayerInfo[playerid][pADuty]=0;
PlayerInfo[playerid][pMoonshine]=0;
PlayerInfo[playerid][pMoonshine1]=0; PlayerInfo[playerid][pWeed1]=0; PlayerInfo[playerid][pHeroin1]=0; PlayerInfo[playerid][pCocaine1]=0;
PlayerInfo[playerid][pWeed]=0;
PlayerInfo[playerid][pCocaine]=0;
PlayerInfo[playerid][pDMONKills]=0;
PlayerInfo[playerid][pHeroin]=0;
PlayerInfo[playerid][pHook]=0;PlayerInfo[playerid][pStyle]=0;
PlayerInfo[playerid][pGLeader]=0;
new randomskin=random(3);
if(randomskin==0)
{
PlayerInfo[playerid][pNSkin]=303;
}
else if(randomskin==1)
{
PlayerInfo[playerid][pNSkin]=304;
}
else if(randomskin==2)
{
PlayerInfo[playerid][pNSkin]=305;
}
else if(randomskin==3)
{
PlayerInfo[playerid][pNSkin]=302;
}
PlayerInfo[playerid][pASkin]=0;
PlayerInfo[playerid][pParrot]=0;
PlayerInfo[playerid][pTest]=0;
PlayerInfo[playerid][pVip]=0;
PlayerInfo[playerid][pARefuel]=0;
PlayerInfo[playerid][pVIPLabel]=0;
PlayerInfo[playerid][pWarns]=0;
PlayerInfo[playerid][pCreditMoney]=0;
PlayerInfo[playerid][pCreditTime]=0;
PlayerInfo[playerid][pTGoto]=0;
PlayerInfo[playerid][pTSpec]=0;
PlayerInfo[playerid][pTimeJail]=0;
PlayerInfo[playerid][pTimeMute]=0;
PlayerInfo[playerid][pTeam]=0;
PlayerInfo[playerid][pRank]=1;
PlayerInfo[playerid][pLevel]=0;
PlayerInfo[playerid][pEP]=0;
PlayerInfo[playerid][pMS]=0;
PlayerInfo[playerid][pEPS]=0;
PlayerInfo[playerid][pCash]=0;
PlayerInfo[playerid][pRealCash]=0;
PlayerInfo[playerid][pBSpec]=0;
PlayerInfo[playerid][pJail]=0;
PlayerInfo[playerid][pComingBan]=0;
PlayerInfo[playerid][pLastPayday]=0;
for(new i=0; i<24; i++)
{
PlayerInfo[playerid][pWhenPlayed][i]=0;
}
PlayerInfo[playerid][pAHide]=0;
PlayerInfo[playerid][pWeaponS]=0;
PlayerInfo[playerid][pHouseO]=-1;
PlayerInfo[playerid][pSpawnO]=1;
PlayerInfo[playerid][pSpawnP]=0;
PlayerInfo[playerid][pBizO]=-1;
PlayerInfo[playerid][pMuted]=0;
PlayerInfo[playerid][pKills]=0; PlayerInfo[playerid][pDeaths]=0;
PlayerInfo[playerid][pJailReason]=0;
PlayerInfo[playerid][pMuteReason]=0;
PlayerInfo[playerid][pLMuted]=0;
PlayerInfo[playerid][pAMuted]=0;
PlayerInfo[playerid][pFMuted]=0;
PlayerInfo[playerid][pFWarns]=0;
PlayerInfo[playerid][pYear]=0;
PlayerInfo[playerid][pMonth]=0;
PlayerInfo[playerid][pDay]=0;
PlayerInfo[playerid][pHours]=0;
PlayerInfo[playerid][pMinutes]=0;
PlayerInfo[playerid][pSeconds]=0;
PlayerInfo[playerid][pAFK]=0;
PlayerInfo[playerid][pActiveCheckInSec]=0;
PlayerInfo[playerid][pActiveCheck]=0;
PlayerInfo[playerid][pAccount]=0;
PlayerInfo[playerid][pLaser]=0;
PlayerInfo[playerid][pWanted]=0;
PlayerInfo[playerid][pPJail]=0;
PlayerInfo[playerid][pTogPM]=0;
PlayerInfo[playerid][pIgnorePM]=0;
PlayerInfo[playerid][pRefuelCan]=0;
PlayerInfo[playerid][pRefuelCan2]=0;
PlayerInfo[playerid][pCNos]=0;
PlayerInfo[playerid][pLastPM]=-1;
format(adminprefix[playerid],35,"");
format(stringstatistic[playerid],115,"");
format(adminprefix[playerid],35,"");
format(vipstring[playerid],30,"");
format(VipText3D[playerid],26,"");
format(viptextformat[playerid],35,"");
format(stringvehicle[playerid],501,"");
format(mypassword[playerid],21,"");
logged[playerid]=0;
registered[playerid]=0;
attachedviptext[playerid]=0;
enteredap[playerid]=-1;
oldvehid[playerid]=-1;
rezachka[playerid]=0;
cuffedwho[playerid]=-1;
cuffedby[playerid]=-1;
selectedfloor[playerid]=0;
dueltype[playerid]=0;
indrift[playerid]=0;
indrift[playerid]=0;
for(new i=0; i<3; i++)
{
duelpoints[playerid][i]=-1;
}
infloor[playerid]=0;
selectedvehid[playerid]=0;
turfmember[playerid]=0;
joinedincounter[playerid]=0;
shield[playerid]=0;
aclothes[playerid]=0;
takingselfie[playerid]=0;
alienseffect[playerid]=0;
otvlichane[playerid]=0;
songon[playerid]=0;
pointotvlichane[playerid]=0;
deliverpizza[playerid]=0;
spawned[playerid]=0;
withbandana[playerid]=0;
sdelkaSelected[playerid]=0;
markersuspect[playerid]=0;
dutypolice[playerid]=0;
inselfie[playerid]=0;
withgps[playerid]=0;
freezed[playerid]=0;
electro[playerid]=0;
spikes[playerid]=0;
spikes2[playerid]=0;
zaplatakinti[playerid]=0;
for(new i=0; i<35; i++)
{
takenclothes[playerid][i]=0;
casetoys[playerid][i]=-1;
}
esc[playerid]=0;
PhoneModeInit(playerid);
PhoneShow[playerid] = false;
joinedrace[playerid]=0;
startdmon[playerid]=0;
anticamera[playerid]=0;
enteredgarage[playerid]=-5;
InRobbery[playerid]=0;
PhoneLocked[playerid] = 0;
myfloor[playerid]=1;
enteredInMissionCP[playerid]=0;
induel[playerid]=0;
ClanInvite[playerid]=-1;
indmon[playerid]=0;
hidename[playerid]=0;
adutyskinchanged[playerid]=0;
lastpaydaykinti[playerid]=0;
selectedplace[playerid]=0;
extraarmour[playerid]=0;
dmkills[playerid]=0;
firstskin[playerid]=0;
logged[playerid]=0;
kandidaturadadena[playerid]=0;
spawnednew[playerid]=0;
lastkey[playerid]=-1; oldkey[playerid]=-1;
radioff[playerid]=0;
enabledcar[playerid]=0;
cmn1[playerid]=0;
cbchat[playerid]=0;
typedpm[playerid]=0;
policepursuit[playerid]=0;
cameras[playerid]=0;
enabledramp[playerid]=0;
nospam2[playerid]=0;
godmode[playerid]=0;
WhatCar[playerid]=0;
missionrepeat[playerid]=0;
g_bump[playerid] = false;
g_veh[playerid] = -1;
acuffed[playerid]=0;
testmode[playerid]=0;
specing[playerid]=0;
onwork[playerid]=0;
onfootwork[playerid]=0;
radion[playerid]=0;
duelsender[playerid]=-1;
rampobject[playerid]=-1;
Act[playerid]=0;
duelsend[playerid]=-1;
refuelcisterna[playerid]=0;
enteredbiz[playerid]=0;
enteredhouse[playerid]=0;
hitmanby[playerid]=-1;
hitmanprice[playerid]=0;
refuelcan[playerid]=0;
nameon[playerid]=1;
introon[playerid]=0;
inevent[playerid]=0;
firstspawn[playerid]=1;
pDrunkLevelLast[playerid]=0;
timec[playerid]=0;
sitec[playerid]=0;
pFPS[playerid]=30;
fly[playerid]=0;
Speed[playerid]=0;
kmh[playerid]=0;
Jump[playerid]=0;
duelzalog[playerid]=0;
afterjobcheckpoint[playerid]=0;
dmplace[playerid]=0;
disabledcheckpoint[playerid]=0;
hideexitserver[playerid]=0;
driver[playerid]=0;
requestspawn2[playerid]=0;
indmon[playerid]=0;
induel[playerid]=0;
hitmaner[playerid]=-1;
marked[playerid]=0;
togchat[playerid]=0;
isinhousepickup[playerid]=0;
passenger[playerid]=0;
nospawnselect[playerid]=0;
BigEar[playerid]=0;
nohit[playerid]=0;
requestspawn[playerid]=0;
speedo[playerid]=0;
//active[playerid]=0;
lottonumber[playerid]=0;
lottonumber2[playerid]=0;
lottonumber3[playerid]=0;
lottonumber4[playerid]=0;
lottonumber5[playerid]=0;
lottonumber6[playerid]=0;
X[playerid]=0.0; Y[playerid]=0.0; Z[playerid]=0.0;
AX[playerid]=0.0; AY[playerid]=0.0; AZ[playerid]=0.0; AZA[playerid]=0.0;
AINT[playerid]=0; AVW[playerid]=0;
blockedgoto[playerid]=0;
para1[playerid]=-1;
spawnselectedskin[playerid]=0;
commandspam[playerid]=0; textspam[playerid]=0;
wrongpassword[playerid]=0;
TeamInvite[playerid]=-1;
attachedviptext[playerid]=0;
spec[playerid] = 0;
objectright[playerid]=0;
vehhealth[playerid]=0.0;
fishToDrop[playerid]=0;
for(new allids; allids<MAX_PLAYERS; allids++)
{
if(IsPlayerConnected(allids))
{
ignore[playerid][allids] = 0;
ignore[allids][playerid] = 0;
}
}
format(VipText3D[playerid],26,"");
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
gHeaderTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gBackgroundTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gCurrentPageTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gNextButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
gPrevButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
for(new x=0; x < SELECTION_ITEMS; x++) gSelectionItems[playerid][x] = PlayerText:INVALID_TEXT_DRAW;
gItemAt[playerid] = 0;
//reststats - location - close
}
public OnPlayerConnect(playerid)
{
playerIDStatusOnline[playerid]=true;
SetPlayerColor(playerid,COLOR_WHITE);
//audiostream location
GetPlayerName(playerid, pname[playerid], 25);
format(accountfiles[playerid], 28, "%s.ini", pname[playerid]);
if(!dini_Exists(accountfiles[playerid]))
{
PlayAudioStreamForPlayer(playerid, "https://od.lk/s/ODNfMjAzNDU4Mjdf/23223register.mp3");
if (strfind(pname[playerid], "[",true) != -1 && strfind(pname[playerid], "]",true) != -1)
{
SendClientMessage(playerid,0x009BCEFF,"[Clan Info] Няма нужда да си правите профил с клан, понеже в сървъра ни има система за клановете");
}
}
else
{
new audiostream[][]={
{"google.com"}
}; //rdy
new christmasAudiostream[][]={
{"https://od.lk/s/ODNfMjQ4NzczNjNf/koleda_kiuchek.mp3"}, //djordjano
{"https://od.lk/s/ODNfMjQ4NzczNjNf/koleda_kiuchek.mp3"}, //djordjano
{"https://od.lk/s/ODNfMjQ4NzczNjVf/koleda_pesen.mp3"}, //
{"https://od.lk/s/ODNfMjQ4NzczNjVf/koleda_pesen.mp3"}}; //
if(christmas==0)
{
PlayAudioStreamForPlayer(playerid, audiostream[random(sizeof(audiostream))]);
}
else
{
PlayAudioStreamForPlayer(playerid, christmasAudiostream[random(sizeof(christmasAudiostream))]);
}
}
SendClientMessage(playerid,COLOR_YELLOW,"Welcome to {FFFFFF}Bulgarian {33AA33}Intense {FF0000}Server. {FFFFFF}[Version: 1.0 © Daniel Andreev - site: soon]");
LoadTextDraws(playerid);
Drifting[playerid][CurrentPoints] = 0;
Drifting[playerid][DriftBonus] = 1;
Drifting[playerid][DriftMode] = false;
Drifting[playerid][FixMode] = false;
TimerInfo[playerid][AngleTimer] = SetTimerEx("AngleUpdate", 200, true, "i", playerid);
//audiostream location
//TogglePlayerSpectating(playerid, false);
ResetPlayerStats(playerid);
//resttexts - location - open
//
vehstatus[playerid]=TextDrawCreate(432.5190,363.0,""); //369
TextDrawBackgroundColor(vehstatus[playerid], 250);
TextDrawFont(vehstatus[playerid], 1);
TextDrawLetterSize(vehstatus[playerid], 0.2499,1.5599);
TextDrawColor(vehstatus[playerid], -1);
TextDrawSetOutline(vehstatus[playerid], 2);
TextDrawSetShadow(vehstatus[playerid] , 1);
TextDrawSetProportional(vehstatus[playerid], 1);
TextDrawUseBox(vehstatus[playerid], 1);
TextDrawBoxColor(vehstatus[playerid], 0x000000CC);
TextDrawTextSize(vehstatus[playerid], -2.0, 0.0);
//
TextDrawHideForPlayer(playerid, Intro[0]);
TextDrawHideForPlayer(playerid, Intro[1]);
TextDrawHideForPlayer(playerid, statistic[playerid]);
//resttexts - location - close
//resttimers - location - openp
PlayerInfo[playerid][pFuel]=0;
PlayerInfo[playerid][pDuelTimer]=0;
PlayerInfo[playerid][pDuelTimer2]=0;
PlayerInfo[playerid][pDuelTimer3]=0;
PlayerInfo[playerid][pDuelTimer4]=0;
PlayerInfo[playerid][pKick]=0;
PlayerInfo[playerid][pFixT]=0;
PlayerInfo[playerid][pHealT]=0;
PlayerInfo[playerid][pHideDMON2]=0;
PlayerInfo[playerid][pVGuns]=0;
PlayerInfo[playerid][pVRefuel]=0;
PlayerInfo[playerid][pCNos2]=0;
PlayerInfo[playerid][pTimeFreeze]=0;
PlayerInfo[playerid][pRemoveHousePick]=0;
PlayerInfo[playerid][pFishTimer]=0;
PlayerInfo[playerid][pAfterWork]=0;
PlayerInfo[playerid][pCMN1T1]=0;
PlayerInfo[playerid][pCMN1T2]=0;
PlayerInfo[playerid][pCMN1T3]=0;
//resttimers - location - close
cash[playerid]=TextDrawCreate(557.000000,357.500000, "~g~$500");
TextDrawAlignment(cash[playerid],0);
TextDrawBackgroundColor(cash[playerid],0x000000ff);
TextDrawFont(cash[playerid],1);
TextDrawSetOutline(cash[playerid], 1);
TextDrawLetterSize(cash[playerid], 0.2400,1.2500);
TextDrawSetProportional(cash[playerid],1);
GetPlayerName(playerid, pname[playerid], 25);
vehstatus[playerid]=TextDrawCreate(442.5190,363.0,""); //369
TextDrawBackgroundColor(vehstatus[playerid], 250);
TextDrawFont(vehstatus[playerid], 1);
TextDrawLetterSize(vehstatus[playerid], 0.2499,1.5599);
TextDrawColor(vehstatus[playerid], -1);
TextDrawSetOutline(vehstatus[playerid], 1);
TextDrawSetProportional(vehstatus[playerid], 1);
GetPlayerName(playerid, pname[playerid], 25);
format(accountfiles[playerid], 28, "%s.ini", pname[playerid]);
PlayerInfo[playerid][pWarns]= dini_Int(accountfiles[playerid],"pWarns");
PlayerInfo[playerid][pBlock]= dini_Int(accountfiles[playerid],"pBlock");
if(serverrestarttimer>0)
{
TextDrawShowForPlayer(playerid, RESTART);
}
new viktorIP[]="87.118.159.237";
new ip[32];
GetPlayerIp(playerid,ip,32);
if(!strcmp(ip, viktorIP, true))
{
ForceClassSelection(playerid);
SendClientMessage(playerid,0xffffffFF,"SA:MP Exception 0b2343e23x23.");
SetPlayerWeather(playerid, 600); SetPlayerWeather(playerid, 600);
SetPlayerWeather(playerid, 4354);SetPlayerWeather(playerid, 123123);
SetPlayerWeather(playerid, 12312312);SetPlayerWeather(playerid, 43534534);
SetPlayerWeather(playerid, 123123);SetPlayerWeather(playerid, 60534234230);
SetPlayerWeather(playerid, 43);
PlayerInfo[playerid][pKick]=1; ForceClassSelection(playerid);
GameTextForPlayer(playerid, "~b~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~EXCEPTION ERROR", 5000, 3);
GameTextForPlayer(playerid, "~b~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~EXCEPTION ERROR", 5000, 5);
GameTextForPlayer(playerid, "~b~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~EXCEPTION ERROR", 5000, 2);
GameTextForPlayer(playerid, "~b~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~EXCEPTION ERROR", 5000, 333);
GameTextForPlayer(playerid, "~b~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~EXCEPTION ERROR", 5000, 23);
GameTextForPlayer(playerid, "~b~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~EXCEPTION ERROR", 5000, 1);
GameTextForPlayer(playerid, "~b~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~EXCEPTION ERROR", 5000, 43);
GameTextForPlayer(playerid, "~b~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~EXCEPTION ERROR", 5000, 4);
GameTextForPlayer(playerid, "~b~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~~h~EXCEPTION ERROR", 5000, 6);
return 1;
}
if(PlayerInfo[playerid][pWarns]>4 || PlayerInfo[playerid][pBlock]==1)
{
ForceClassSelection(playerid);
SendClientMessage(playerid,0xE60000FF,"Този Nickname е блокиран за повече информация потърсете главния администратор.");
SendClientMessage(playerid,0xE60000FF,"Discords: danielandreevofficial#1084 (sTrIx)");
PlayerInfo[playerid][pKick]=1; ForceClassSelection(playerid);
return 1;
}
new checkIP[35];
GetPlayerIp(playerid,checkIP,35);
//TimerInfo
IPRemove=1;
if(strcmp(checkIP,lastIPJoin)== 0)
{
printf("%s ?=? %s    T/N: ",checkIP,lastIPJoin,strcmp(checkIP,lastIPJoin));
ForceClassSelection(playerid);
SendClientMessage(playerid,0xE60000FF,"Поради възможност от Bot Connection, вие бяхте KICKED, влезте след малко пак.");
SendClientMessage(playerid,0xE60000FF,"При проблеми пишете на Discords: danielandreevofficial#1084 (sTrIx)");
PlayerInfo[playerid][pKick]=1; ForceClassSelection(playerid);
return 1;
}
GetPlayerIp(playerid,lastIPJoin,35);
new stringaaaa[256];
if(antijoinspamtime<=0)
{
format(stringaaaa, 115, "%s {FFFFFF}влезе в сървъра !", pname[playerid]);
if(ingmx==0){
//SendClientMessageToAll(0x00e600FF, stringaaaa);
}
}
antijoinspamtime=7;
//for(new i; i<MAX_PLAYERS; i++)
//{
//if(i != playerid)
//{
//}
//}
//format(noerrorstring2[playerid], 115, "%d/500", MAX_PLAYERS);
//SendClientMessageToAll(0x00e600FF, noerrorstring2[playerid]);
ForceClassSelection(playerid);
TogglePlayerSpectating(playerid, true);
PlayerInfo[playerid][pIntro][0] = 12;
//Los Santos Park 1 - open
RemoveBuildingForPlayer(playerid, 4025, 1777.8359, -1773.9063, 12.5234, 0.25);
RemoveBuildingForPlayer(playerid, 4215, 1777.5547, -1775.0391, 36.7500, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1791.1797, -1816.6328, 14.6250, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1788.5078, -1816.5703, 13.3516, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1796.9609, -1817.3906, 14.6250, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1801.8828, -1817.3047, 13.3516, 0.25);
RemoveBuildingForPlayer(playerid, 4019, 1777.8359, -1773.9063, 12.5234, 0.25);
//Los Santos Park 1 - close
//kolelo ls beach
RemoveBuildingForPlayer(playerid, 4007, 1421.38, -1477.6, 42.2031, 250.0); 	// Building
RemoveBuildingForPlayer(playerid, 4009, 1421.38, -1477.6, 42.2031, 250.0); 	// LOD
//mall
RemoveBuildingsForMall(playerid);
//construction do office telnet 1
RemoveBuildingForPlayer(playerid, 5466, 1881.7969, -1315.5391, 37.9453, 0.25);
RemoveBuildingForPlayer(playerid, 5463, 1881.7969, -1315.5391, 37.9453, 0.25);
RemoveBuildingForPlayer(playerid, 5644, 1881.8203, -1315.9219, 30.8359, 0.25);
//sapd
RemoveBuildingForPlayer(playerid, 1266, 1565.4141, -1722.3125, 25.0391, 0.25);
RemoveBuildingForPlayer(playerid, 4229, 1597.9063, -1699.7500, 30.2109, 0.25);
RemoveBuildingForPlayer(playerid, 4230, 1597.9063, -1699.7500, 30.2109, 0.25);
RemoveBuildingForPlayer(playerid, 1260, 1565.4141, -1722.3125, 25.0391, 0.25);
RemoveBuildingForPlayer(playerid, 646, 1545.5234, -1678.8438, 14.0000, 0.25);
RemoveBuildingForPlayer(playerid, 646, 1545.5625, -1672.2188, 14.0000, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1541.4766, -1648.4531, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1541.4531, -1642.0313, 13.0469, 0.25);
//vip gang
RemoveBuildingForPlayer(playerid, 691, 1290.8750, -2042.6094, 55.7891, 0.25);
RemoveBuildingForPlayer(playerid, 762, 1290.9766, -2025.9375, 60.1875, 0.25);
RemoveBuildingForPlayer(playerid, 661, 1284.9844, -2020.2500, 57.1563, 0.25);
RemoveBuildingForPlayer(playerid, 1290, 1242.7266, -2007.3828, 64.6094, 0.25);
RemoveBuildingForPlayer(playerid, 1290, 1280.2031, -2007.3828, 63.7734, 0.25);
RemoveBuildingForPlayer(playerid, 661, 1270.8984, -2000.6563, 57.0469, 0.25);
RemoveBuildingForPlayer(playerid, 618, 1279.4141, -1998.4766, 56.8125, 0.25);
RemoveBuildingForPlayer(playerid, 691, 1260.0781, -1995.7813, 55.4609, 0.25);
RemoveBuildingForPlayer(playerid, 661, 1280.4453, -1992.7422, 54.7188, 0.25);
RemoveBuildingForPlayer(playerid, 691, 1291.0469, -2007.0703, 54.8828, 0.25);
RemoveBuildingForPlayer(playerid, 618, 1286.0000, -2000.3984, 55.9766, 0.25);
RemoveBuildingForPlayer(playerid, 618, 1291.0938, -1997.9922, 53.9453, 0.25);
RemoveBuildingForPlayer(playerid, 691, 1407.8438, -2020.5234, 50.5938, 0.25);
//vip gang
//grove 2
RemoveBuildingForPlayer(playerid, 620, 1429.5313, -1748.4219, 12.9063, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1447.9063, -1748.2266, 12.9063, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1516.0000, -1748.6016, 13.0078, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1533.2656, -1749.0234, 12.8047, 0.25);
RemoveBuildingForPlayer(playerid, 1410, 2487.3984, -1688.1016, 13.2813, 0.25);
RemoveBuildingForPlayer(playerid, 1265, 2488.8047, -1684.7891, 12.8125, 0.25);
RemoveBuildingForPlayer(playerid, 1410, 2491.8984, -1688.1016, 13.2813, 0.25);
RemoveBuildingForPlayer(playerid, 1410, 2498.6719, -1688.2344, 13.2813, 0.25);
RemoveBuildingForPlayer(playerid, 3594, 2532.9844, -1719.4297, 13.1797, 0.25);
RemoveBuildingForPlayer(playerid, 3594, 2537.9688, -1700.7109, 13.1797, 0.25);
RemoveBuildingForPlayer(playerid, 1265, 2491.2344, -1653.9609, 12.9219, 0.25);
RemoveBuildingForPlayer(playerid, 1230, 2492.2656, -1653.9922, 12.8984, 0.25);
RemoveBuildingForPlayer(playerid, 1265, 2505.6719, -1658.9063, 12.8125, 0.25);
RemoveBuildingForPlayer(playerid, 1265, 2510.9219, -1656.1328, 12.8125, 0.25);
RemoveBuildingForPlayer(playerid, 1230, 2501.9297, -1650.5078, 12.9141, 0.25);
RemoveBuildingForPlayer(playerid, 3594, 2514.3906, -1658.6016, 13.1406, 0.25);
RemoveBuildingForPlayer(playerid, 762, 2446.5547, -1681.0703, 12.3828, 0.25);
RemoveBuildingForPlayer(playerid, 3593, 2457.8672, -1679.6719, 12.9453, 0.25);
RemoveBuildingForPlayer(playerid, 1230, 2475.0000, -1653.6094, 12.7891, 0.25);
//grove 2
//cripz
RemoveBuildingForPlayer(playerid, 3728, 319.1719, -1226.4922, 76.0234, 0.25);
RemoveBuildingForPlayer(playerid, 3730, 356.9844, -1201.4531, 67.0313, 0.25);
RemoveBuildingForPlayer(playerid, 13878, 370.0156, -1236.7813, 61.7891, 0.25);
RemoveBuildingForPlayer(playerid, 3613, 319.1719, -1226.4922, 76.0234, 0.25);
RemoveBuildingForPlayer(playerid, 1690, 322.1328, -1225.2031, 84.3984, 0.25);
RemoveBuildingForPlayer(playerid, 1688, 314.6016, -1225.1406, 84.7266, 0.25);
RemoveBuildingForPlayer(playerid, 700, 322.5234, -1215.1641, 75.1953, 0.25);
RemoveBuildingForPlayer(playerid, 700, 327.6094, -1211.1953, 74.5859, 0.25);
RemoveBuildingForPlayer(playerid, 1308, 321.6875, -1211.4766, 75.3438, 0.25);
RemoveBuildingForPlayer(playerid, 700, 333.3594, -1206.5938, 74.8906, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 327.2188, -1208.0703, 85.9531, 0.25);
RemoveBuildingForPlayer(playerid, 615, 341.2813, -1221.3438, 64.0078, 0.25);
RemoveBuildingForPlayer(playerid, 13748, 370.0156, -1236.7813, 61.7891, 0.25);
RemoveBuildingForPlayer(playerid, 700, 338.6094, -1203.1563, 73.8594, 0.25);
RemoveBuildingForPlayer(playerid, 3608, 356.9844, -1201.4531, 67.0313, 0.25);
RemoveBuildingForPlayer(playerid, 1691, 352.4688, -1202.1563, 80.6719, 0.25);
RemoveBuildingForPlayer(playerid, 1687, 359.4219, -1194.1016, 81.0781, 0.25);
RemoveBuildingForPlayer(playerid, 762, 373.9688, -1191.9609, 66.2109, 0.25);
RemoveBuildingForPlayer(playerid, 762, 374.2031, -1178.3594, 72.7813, 0.25);
//cripz
//grove
RemoveBuildingForPlayer(playerid, 3592, 2451.7344, -1637.4844, 15.1328, 0.25);
RemoveBuildingForPlayer(playerid, 17879, 2484.5313, -1667.6094, 21.4375, 0.25);
RemoveBuildingForPlayer(playerid, 1410, 2448.9141, -1648.8516, 13.2813, 0.25);
RemoveBuildingForPlayer(playerid, 1410, 2446.7734, -1646.4219, 13.1563, 0.25);
RemoveBuildingForPlayer(playerid, 1230, 2453.9609, -1653.6953, 12.6797, 0.25);
RemoveBuildingForPlayer(playerid, 1410, 2455.9063, -1648.8047, 13.2813, 0.25);
RemoveBuildingForPlayer(playerid, 3593, 2437.4844, -1644.1172, 12.9844, 0.25);
RemoveBuildingForPlayer(playerid, 645, 2460.5859, -1642.4922, 12.2109, 0.25);
RemoveBuildingForPlayer(playerid, 17514, 2449.1563, -1639.0234, 13.1484, 0.25);
RemoveBuildingForPlayer(playerid, 3589, 2451.7344, -1637.4844, 15.1328, 0.25);
//grove
//police
RemoveBuildingForPlayer(playerid, 1266, 1538.5234, -1609.8047, 19.8438, 0.25);
RemoveBuildingForPlayer(playerid, 4229, 1597.9063, -1699.7500, 30.2109, 0.25);
RemoveBuildingForPlayer(playerid, 4230, 1597.9063, -1699.7500, 30.2109, 0.25);
RemoveBuildingForPlayer(playerid, 4192, 1591.6953, -1674.8516, 20.4922, 0.25);
RemoveBuildingForPlayer(playerid, 1260, 1538.5234, -1609.8047, 19.8438, 0.25);
RemoveBuildingForPlayer(playerid, 1530, 1118.9063, -2008.2422, 75.0234, 0.25);
//police
//removebuilding - location - open
//
RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
RemoveBuildingForPlayer(playerid, 1283, 1430.1719, -1719.4688, 15.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1451.6250, -1727.6719, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1467.9844, -1727.6719, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1485.1719, -1727.6719, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1713.5078, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1505.1797, -1727.6719, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1704.7656, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1702.3594, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1676.6875, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1692.2344, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1656.2500, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1636.2344, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1619.0547, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1283, 1443.2031, -1592.9453, 15.6250, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1704.6406, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1694.0469, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1682.7188, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1477.9375, -1652.7266, 15.6328, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1479.6094, -1653.2500, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1467.8516, -1646.5938, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1472.8984, -1651.5078, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1465.9375, -1639.8203, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1467.7109, -1632.8906, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1472.6641, -1627.8828, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1479.4688, -1626.0234, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
RemoveBuildingForPlayer(playerid, 1229, 1466.4844, -1598.0938, 14.1094, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1451.3359, -1596.7031, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1471.3516, -1596.7031, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1486.4063, -1651.3906, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1491.3672, -1646.3828, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1493.1328, -1639.4531, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1486.1797, -1627.7656, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1491.2188, -1632.6797, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1488.5313, -1596.7031, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1229, 1498.0547, -1598.0938, 14.1094, 0.25);
RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
RemoveBuildingForPlayer(playerid, 1287, 1504.7500, -1704.4688, 13.5938, 0.25);
RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
RemoveBuildingForPlayer(playerid, 1285, 1504.7500, -1694.0391, 13.5938, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1504.8906, -1596.7031, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1721.6328, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1705.2734, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1693.9688, 14.1094, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1546.6016, -1693.3906, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1688.0859, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1546.8672, -1687.1016, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1673.7109, 14.1094, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1668.0781, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1546.6016, -1664.6250, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1546.8672, -1658.3438, 14.4375, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1647.6406, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1621.9609, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1226, 1525.3828, -1611.1563, 16.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1283, 1528.9531, -1605.8594, 15.6250, 0.25);
//
RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
RemoveBuildingForPlayer(playerid, 4055, 1394.3594, -1620.6641, 32.1484, 0.25);
RemoveBuildingForPlayer(playerid, 4220, 1370.6406, -1643.4453, 33.1797, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1378.8125, -1623.3828, 14.4609, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1379.2422, -1622.4531, 12.8672, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1375.6406, -1621.8672, 14.5859, 0.25);
RemoveBuildingForPlayer(playerid, 647, 1382.0469, -1621.8672, 14.4844, 0.25);
RemoveBuildingForPlayer(playerid, 4006, 1394.3594, -1620.6641, 32.1484, 0.25);
RemoveBuildingForPlayer(playerid, 4196, 1361.2188, -1604.5938, 14.9375, 0.25);
//removebuilding - location - close
return 1;
}
public OnPlayerDisconnect(playerid, reason)
{
if(lotariqselected==playerid)
{
lotariqselected=-1;
}
if(sdelkaselected==playerid)
{
sdelkaselected=-1;
}
playerIDStatusOnline[playerid]=false;
if(IsValidVehicle(missionprivate[playerid][0]) || IsValidVehicle(missionprivate[playerid][1]))
{
availableStore--;
}
if(IsValidVehicle(missionprivate[playerid][0]))
{
privatecars[missionprivate[playerid][0]]=0; DestroyVehicle(missionprivate[playerid][0]);
}
if(IsValidVehicle(missionprivate[playerid][1]))
{
privatecars[missionprivate[playerid][1]]=0; DestroyVehicle(missionprivate[playerid][1]);
}
if(gmxsaved==0)
{
if(PlayerInfo[playerid][pRegistred]==1 && logged[playerid]==1)
{
SaveAccount(playerid);
}
}
if(IsPlayerInAnyVehicle(playerid))
{
if(driver[playerid]==1)
{
drive[GetPlayerVehicleID(playerid)]=0;
}
}
if(csgamestarted==1)
{
//counter strike
if(joinedincounter[playerid]==1)
{
if(policecs[playerid]==1)
{
joinedcops-=1;
alivecounter[0]++;
}
else
{
joinedterrorists-=1;
alivecounter[1]++;
}
if(alivecounter[1]<=0)
{
csroundtimer=120*2;
bombgurmi=0;
for(new i=0; i<MAX_PLAYERS ;i++ && IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
SpawnPlayer(i);
PlayerPlaySound(i,1057,0.0,0.0,0.0);
if(policecs[i]==1)
{
GameTextForPlayer(i, "~r~LOSE", 3000, 1);
}
else
{
GameTextForPlayer(i, "~g~WIN", 3000, 1);
}
}
}
ctwin++;
}
else if(alivecounter[0]<=0)
{
csroundtimer=120*2;
bombgurmi=0;
for(new i=0; i<MAX_PLAYERS ;i++ && IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
SpawnPlayer(i);
PlayerPlaySound(i,1057,0.0,0.0,0.0);
if(policecs[i]==0)
{
GameTextForPlayer(i, "~r~LOSE", 3000, 1);
}
else
{
GameTextForPlayer(i, "~g~WIN", 3000, 1);
}
}
}
twin++;
}
if(ctwin>3 || twin>3)
{
if(ctwin>twin)
{
for(new i=0; i<MAX_PLAYERS ;i++ && IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
if(policecs[i]==1)
{
GivePlayerEP(i,5);
GivePlayerCash(i,5000);
}
}
}
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши, победител Counter Terrorists!");
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Награда за победата: 5 EP и $5000!");
}
else if(twin>ctwin)
{
for(new i=0; i<MAX_PLAYERS ;i++ && IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
if(policecs[i]==0)
{
GivePlayerEP(i,5);
GivePlayerCash(i,5000);
}
}
}
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши, победител Terrorists!");
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Награда за победата: 5 EP и $5000!");
}
else if(twin==ctwin)
{
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши с равенство между CT и T!");
}
for(new i=0; i<MAX_PLAYERS ;i++ && IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
SetPlayerHealth(i,0);
}
}
//
}
}
}
//counter strike
if(GetPlayerVehicleID(playerid)==carpizza[1]
|| GetPlayerVehicleID(playerid)==carpizza[2]
|| GetPlayerVehicleID(playerid)==carpizza[3]
|| GetPlayerVehicleID(playerid)==carpizza[4]
|| GetPlayerVehicleID(playerid)==carpizza[5])
{
if(deliverpizza[playerid]>=6)
{
GivePlayerCash(playerid,1500);
GivePlayerEP(playerid,5);
}
SetVehicleToRespawn(playerid);
for(new i=1; i<=5; i++ && IsPlayerConnected(i))
{
if(GetPlayerVehicleID(playerid)==carpizza[i])
{
ToggleEngine(carpizza[i], VEHICLE_PARAMS_OFF); vehEngineStatusON[carpizza[i]]=0;
}
}
if(PlayerInfo[playerid][pPizzaTimer]<=600*2)
{
PlayerInfo[playerid][pPizzaTimer1]=20*120;
RestartPlayerColor(playerid);
}
}
if(CASHMONEY[2]>0 && CASHMONEY[1]>0 && CASHMONEY[0]>0)
{
if(PlayerInfo[playerid][pRobberyATM]>0)
{
ClearAnimations(playerid);
DestroyDynamicObject(CASHBAG[0]);
CASHMONEY[2]=0;
CASHMONEY[1]=0;
CASHMONEY[0]=0;
DestroyDynamic3DTextLabel(CASHBAGTEXT[0]);
DestroyDynamicObject(CASHBAG[1]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[1]);
DestroyDynamicObject(CASHBAG[2]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[2]);
PlayerInfo[playerid][pRobberyATM]=0;
StartedRobbery=0;
PlayerInfo[playerid][pRobberyATM2]=0;
SendClientMessageToAll(COLOR_RTRIADS,"Robbery ATM: Обирът е неуспешен, но въпреки това крадецът успя да открадне пари!");
}
}
for(new i = 0; i < 44; i++ && IsPlayerConnected(i))
{
PlayerTextDrawDestroy(playerid, PhoneGUI[playerid][i]);
}
PhoneShow[playerid] = false;
PhoneLocked[playerid] = 0;
if(locker[playerid]!=-1)
{
for(new i=0; i < MAX_PLAYERS; i++)
{
SetVehicleParamsForPlayer(locker[playerid],i,0,0);
}
}
else
locker[playerid]=-1;
//saveaccs - location - open
//saveaccs - location - close
format(adminprefix[playerid],35,"");
format(stringstatistic[playerid],115,"");
format(adminprefix[playerid],35,"");
format(vipstring[playerid],30,"");
format(viptextformat[playerid],35,"");
format(stringvehicle[playerid],501,"");
if(PlayerInfo[playerid][pBombsS1]== 1)
{
DestroyDynamicObject(BombO[playerid][0]);
//return SendClientMessage(playerid, 0x29C9D6FF, "Bomb: Ти гръмна всички активирани бомби, които постави!");
}
if(PlayerInfo[playerid][pBombsS2]== 1)
{
DestroyDynamicObject(BombO[playerid][1]);
//return SendClientMessage(playerid, 0x29C9D6FF, "Bomb: Ти гръмна всички активирани бомби, които постави!");
}
if(PlayerInfo[playerid][pBombsS3]== 1)
{
DestroyDynamicObject(BombO[playerid][2]);
//return SendClientMessage(playerid, 0x29C9D6FF, "Bomb: Ти гръмна всички активирани бомби, които постави!");
}
if(PlayerInfo[playerid][pBombsS4]== 1)
{
DestroyDynamicObject(BombO[playerid][3]);
//return SendClientMessage(playerid, 0x29C9D6FF, "Bomb: Ти гръмна всички активирани бомби, които постави!");
}
if(PlayerInfo[playerid][pBombsS5]== 1)
{
DestroyDynamicObject(BombO[playerid][4]);
}
if(turfmember[playerid]== 2 && turfattack[PlayerInfo[playerid][pTeam]]>0 && PlayerInfo[playerid][pTeam]>0)
{
new string256[256];
inturfmembers[PlayerInfo[playerid][pTeam]]-=1;
format(string256, 256, "[TURF INFO] {FF0000}%s{008cff} излезе от сървъра и отпадна от атаката на %s!",pname[playerid],
TeamInfo[TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfOwner]][tName]);
turfmember[playerid]=0;
SendFactionMessage(PlayerInfo[playerid][pTeam],0x008cffFF,string256);
if(inturfmembers[PlayerInfo[playerid][pTeam]]<1)
{
new gangb[32];
if(PlayerInfo[playerid][pTeam] == 2) { gangb = "Grove Street Families"; }
else if(PlayerInfo[playerid][pTeam] == 3) { gangb = "Rolling Heights Ballas"; }
else if(PlayerInfo[playerid][pTeam] == 4) { gangb = "Los Santos Vagos"; }
else if(PlayerInfo[playerid][pTeam] == 5) { gangb = "Varrios Los Aztecas"; }
else if(PlayerInfo[playerid][pTeam] == 6) { gangb = "Vinewood Cripz"; }
else if(PlayerInfo[playerid][pTeam] == 7) { gangb = "San Fierro Triads"; }
else if(PlayerInfo[playerid][pTeam] == 8) { gangb = "Eastern Boys"; }
else if(PlayerInfo[playerid][pTeam] == 9) { gangb = "Sons Of Anarchy"; }
else if(PlayerInfo[playerid][pTeam] == 10) { gangb = "Da Nang Boys"; }
else if(PlayerInfo[playerid][pTeam] == 11) { gangb = "Italian Mafia"; }
else if(PlayerInfo[playerid][pTeam] == 12) { gangb = "Bounty Hunters"; }
format(string256, 256, "Turf War: {FF0000}%s{008cff} не успя да превземе %s територията на %s!",TeamInfo[PlayerInfo[playerid][pTeam]][tName],TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfName],
TeamInfo[TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfOwner]][tName]);
SendClientMessageToAll(0x008cffFF, string256);
turfattack[PlayerInfo[playerid][pTeam]]=0;
if(inturfmembers[PlayerInfo[playerid][pTeam]]<1)
{
TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfWarGang]=0;
turfwargang[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]]=0;
}
GangZoneStopFlashForAll(TeamInfo[PlayerInfo[playerid][pTeam]][tWar]);
TeamInfo[PlayerInfo[playerid][pTeam]][tWar]=0;
}
}
if(GetPlayerVehicleID(playerid)>-1)
{
if(driver[playerid]==1)
{
drive[GetPlayerVehicleID(playerid)]=0;
}
}
if(induel[playerid]==1)
{
RestartPlayerColor(duelprotivnik[playerid]);
new stringduel[256];
GivePlayerCash(playerid,-duelzalog[playerid]);
GivePlayerCash(duelprotivnik[playerid],duelzalog[playerid]);
PlayerInfo[duelprotivnik[playerid]][pDuelTimer]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelTimer2]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelTimer3]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelTimer4]=0;
dueltimer[playerid]=0;
format(stringduel, 256, "Duel: Ти победи служебно, защото %s излезе от сървъра и получаваш $%d от залога", pname[playerid],duelzalog[playerid]);
SendClientMessage(duelprotivnik[playerid], 0xFFE400FF, stringduel);
duelzalog[duelprotivnik[playerid]]=0;
AfterDuel(duelprotivnik[playerid]);
duelsend[duelprotivnik[playerid]]=-1;
duelsender[duelprotivnik[playerid]]=-1;
duelprotivnik[duelprotivnik[playerid]]=-1;
}
if(duelsend[playerid]>-1)
{
new string[256];
format(string, 256, "Duel: %s излезе от сървъра и поканата за дуел е отменена", pname[duelsender[duelsend[playerid]]]);
SendClientMessage(duelsender[playerid], 0xFFE400FF,string);
duelsend[playerid]=-1;
induel[duelsend[playerid]]=0;
duelsender[duelsend[playerid]]=-1;
}
if(duelsender[playerid]>-1)
{
new string[256];
format(string, 256, "Duel: %s излезе от сървъра и поканата за дуел е отменена", pname[playerid]);
SendClientMessage(duelsender[playerid], 0xFFE400FF,string);
duelsender[playerid]=-1;
induel[duelsender[playerid]]=0;
duelsend[duelsender[playerid]]=-1;
}
//if(..)
//{
//}
if(hitmanby[playerid]!=-1)
{
new string170[170];
format(string170, 170, "Hitman: %s излезе от сървъра и цената за главата му е отменена", pname[playerid]);
SendClientMessageToAll(0xA4A400FF, string170);
GivePlayerCash(hitmanby[playerid],hitmanprice[playerid]);
hitmaner[hitmanby[playerid]]=-1;
}
if(hitmaner[playerid]!=-1)
{
new string170[170];
format(string170, 170, "Hitman: %s излезе от сървъра и цената за главата на %s е отменена", pname[playerid],pname[hitmaner[playerid]]);
SendClientMessageToAll(0xA4A400FF, string170);
GivePlayerCash(hitmaner[playerid],hitmanprice[para1[playerid]]);
hitmanby[hitmaner[playerid]]=-1;
}
if(antijoinspamtime<=0)
{
if(ingmx==0)
{
if(hideexitserver[playerid]==0)
{
new noerrorstring2[115];
if(reason==0)
{
PlayerInfo[playerid][pCrashedFromGTA]=1;
if(antijoinspamtime<=0)
{
format(noerrorstring2, 115, "%s {FFFFFF}излезе от сървъра, заради {FF1400}Crash !", pname[playerid]);
}
}
else
{
format(noerrorstring2, 115, "%s {FFFFFF}излезе от сървъра !", pname[playerid]);
}
//SendClientMessageToAll(0xFF1400FF, noerrorstring2);
antijoinspamtime=7;
}
}
}
//resttimers - location - openp
PlayerInfo[playerid][pFuel]=0;
PlayerInfo[playerid][pKick]=0;
PlayerInfo[playerid][pFixT]=0;
PlayerInfo[playerid][pHealT]=0;
PlayerInfo[playerid][pVGuns]=0;
PlayerInfo[playerid][pVRefuel]=0;
PlayerInfo[playerid][pCNos2]=0;
//resttimers - location - close
PlayerInfo[playerid][pAdmin]=0; PlayerInfo[playerid][pEvent]=0; PlayerInfo[playerid][pManage]=0; PlayerInfo[playerid][pTest]=0; //admin remove
PlayerInfo[playerid][pRank]=0; PlayerInfo[playerid][pTeam]=0;
if(PlayerInfo[playerid][pADuty]==1)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
}
if(PlayerInfo[playerid][pVIPLabel]==1)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
}
return 1;
}
public OnPlayerSpawn(playerid)
{
spawnednew[playerid]=1;
if(joinedincounter[playerid]==1)
{
if(csroundtimer==0)
{
SetPlayerCameraPos(playerid, 366.1500, 1762.8300, 158.9100);
SetPlayerCameraLookAt(playerid, 365.1930, 1762.5275, 158.7751);
}
else
{
SetPlayerVirtualWorld(playerid,1);
TextDrawShowForPlayer(playerid,cash[playerid]);
GivePlayerCashCS(playerid,1500);
//}
//else
//{
new skinselect=random(4);
if(policecs[playerid]==0)
{
GivePlayerWeapon(playerid, 23, 50);
GivePlayerWeapon(playerid, 4, 1);
if(skinselect==0)
{
SetPlayerSkin(playerid,285);
}
else if(skinselect==1)
{
SetPlayerSkin(playerid,286);
}
else if(skinselect==2)
{
SetPlayerSkin(playerid,287);
}
else if(skinselect==3)
{
SetPlayerSkin(playerid,164);
}
else if(skinselect==4)
{
SetPlayerSkin(playerid,166);
}
if(policescs==0)
{
SetPlayerPos(playerid,202.7665,1788.9313,42.6270);
}
else if(policescs==1)
{
SetPlayerPos(playerid,196.8925,1787.9962,42.6203);
}
else if(policescs==2)
{
SetPlayerPos(playerid,191.0323,1787.9128,42.6203);
}
else if(policescs==3){
SetPlayerPos(playerid,186.3190,1786.9668,42.6203);
}
else if(policescs==4){
SetPlayerPos(playerid,178.6650,1785.9484,42.6203);
}
}
else
{
GivePlayerWeapon(playerid, 22, 50);
GivePlayerWeapon(playerid, 4, 1);
if(skinselect==0)
{
SetPlayerSkin(playerid,100);
}
else if(skinselect==1)
{
SetPlayerSkin(playerid,104);
}
else if(skinselect==2)
{
SetPlayerSkin(playerid,112);
}
else if(skinselect==3)
{
SetPlayerSkin(playerid,124);
}
else if(skinselect==4)
{
SetPlayerSkin(playerid,179);
}
if(terroristscs==0)
{
SetPlayerPos(playerid,157.6512,1590.7850,46.3187);
}
else if(terroristscs==1)
{
SetPlayerPos(playerid,148.9623,1591.2360,49.4795);
}
else if(terroristscs==2)
{
SetPlayerPos(playerid,145.6304,1587.2062,50.1578);
}
else if(terroristscs==3){
SetPlayerPos(playerid,152.7453,1587.7211,48.1034);
}
else if(terroristscs==4){
SetPlayerPos(playerid,137.1287,1587.6866,50.1578);
}
}
}
}
cameras[playerid]=0;
if(firstspawn[playerid]==1 && registered[playerid]==1)
{
for(new i=0; i<15; i++)
{
SendClientMessage(playerid,0xFFFFFFFF,"");
}
new string256[256];
format(string256, 256, "Вие успешно регистирахте своя профил {FFFF00}%s {FFFFFF}с което започва вашето приключение.",pname[playerid]);
SendClientMessage(playerid, 0xFFFFFFFF, string256);
SendClientMessage(playerid, 0xFFFFFFFF, "За да бъдете сигурен, че не сте въвели погрешно своите данни, то отдолу ще изпише какво сте въвели.");
SendClientMessage(playerid, 0xFFFFFFFF, "{00e600}[+] Съгласие с правилата на сървъра и прочит на {FFFF00}/rules");
format(string256, 256, "{00e600}[+] Парола: {FFFF00}%s",mypassword[playerid]);
SendClientMessage(playerid, 0xFFFFFFFF, string256);
SendClientMessage(playerid, 0xFFFFFFFF, "Добре дошли в {FFFF00}Intense{FFFFFF}, надяваме се тук да си прекарате повече от чудесно.");
SendClientMessage(playerid, 0xFFFFFFFF, "");
SendClientMessage(playerid, 0xFFFF00FF, "За да изпълниш първата си мисия, отиди до VIP Gang, като натиснеш G до таксито със стрелка и ще се телепортираш");
}
spawned[playerid]=1;
LoadMission(playerid);
SetPlayerVirtualWorld(playerid,0);
for (new t=0; t<MAX_TURFS; t++)
{
if(turfwargang[t]>0)
{
GangZoneCreate(TurfInfo[t][zMinX],TurfInfo[t][zMinY],TurfInfo[t][zMaxX], TurfInfo[t][zMaxY] );
GangZoneShowForPlayer(playerid, t,TeamInfo[TurfInfo[t][TurfOwner]][tColor]);
GangZoneFlashForPlayer(playerid, t,TeamInfo[turfwargang[t]][tColor]);
}
if(turfwargang[t]==0)
{
GangZoneCreate(TurfInfo[t][zMinX],TurfInfo[t][zMinY],TurfInfo[t][zMaxX], TurfInfo[t][zMaxY] );
GangZoneShowForPlayer(playerid, t,TeamInfo[TurfInfo[t][TurfOwner]][tColor]);
}
}
if(PlayerInfo[playerid][pStyle]==0)
{
SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
}
if(PlayerInfo[playerid][pStyle]==1)
{
SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
}
if(PlayerInfo[playerid][pStyle]==2)
{
SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
}
if(PlayerInfo[playerid][pStyle]==3)
{
SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
}
if(PlayerInfo[playerid][pStyle]==4)
{
SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
}
if(PlayerInfo[playerid][pStyle]==5)
{
SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
}
if(PlayerInfo[playerid][pTeam]==1)
{
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==2)
{
SetPVarInt(playerid, "color", 19083);
}
if(PlayerInfo[playerid][pTeam]==13 || PlayerInfo[playerid][pTeam]==14 || PlayerInfo[playerid][pTeam]==6)
{
SetPVarInt(playerid, "color", 19080);
}
if(PlayerInfo[playerid][pTeam]==8)
{
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==15)
{
SetPVarInt(playerid, "color", 19084);
}
if(PlayerInfo[playerid][pLaser]==1)
{
if(objectright[playerid]==0)
{
objectright[playerid]=1;
}
}
if(PlayerInfo[playerid][pWeaponS]==1)
{
GivePlayerWeapon(playerid, 23, 30);
GivePlayerWeapon(playerid, 25, 50);
GivePlayerWeapon(playerid, 29, 100);
GivePlayerWeapon(playerid, 30, 60);
}
if(PlayerInfo[playerid][pWeaponS]==2)
{
GivePlayerWeapon(playerid, 23, 50);
GivePlayerWeapon(playerid, 25, 70);
GivePlayerWeapon(playerid, 29, 200);
GivePlayerWeapon(playerid, 30, 100);
}
if(PlayerInfo[playerid][pWeaponS]==3)
{
GivePlayerWeapon(playerid, 23, 80);
GivePlayerWeapon(playerid, 25, 80);
GivePlayerWeapon(playerid, 29, 250);
GivePlayerWeapon(playerid, 30, 150);
}
if(PlayerInfo[playerid][pWeaponS]==4)
{
GivePlayerWeapon(playerid, 23, 100);
GivePlayerWeapon(playerid, 25, 100);
GivePlayerWeapon(playerid, 29, 300);
GivePlayerWeapon(playerid, 30, 200);
}
if(PlayerInfo[playerid][pWeaponS]==5)
{
GivePlayerWeapon(playerid, 22, 80);
GivePlayerWeapon(playerid, 27, 50);
GivePlayerWeapon(playerid, 28, 200);
GivePlayerWeapon(playerid, 31, 70);
GivePlayerWeapon(playerid, 5, 1);
}
if(PlayerInfo[playerid][pWeaponS]==6)
{
GivePlayerWeapon(playerid, 22, 80);
GivePlayerWeapon(playerid, 27, 70);
GivePlayerWeapon(playerid, 28, 300);
GivePlayerWeapon(playerid, 31, 100);
GivePlayerWeapon(playerid, 33, 20);
GivePlayerWeapon(playerid, 5, 1);
}
if(PlayerInfo[playerid][pWeaponS]==7)
{
GivePlayerWeapon(playerid, 22, 100);
GivePlayerWeapon(playerid, 27, 100);
GivePlayerWeapon(playerid, 28, 500);
GivePlayerWeapon(playerid, 31, 200);
GivePlayerWeapon(playerid, 33, 40);
GivePlayerWeapon(playerid, 5, 1);
}
if(PlayerInfo[playerid][pWeaponS]==8)
{
GivePlayerWeapon(playerid, 24, 30);
GivePlayerWeapon(playerid, 26, 50);
GivePlayerWeapon(playerid, 32, 200);
GivePlayerWeapon(playerid, 31, 100);
GivePlayerWeapon(playerid, 34, 30);
GivePlayerWeapon(playerid, 5, 1);
}
if(PlayerInfo[playerid][pWeaponS]==9)
{
GivePlayerWeapon(playerid, 24, 50);
GivePlayerWeapon(playerid, 26, 80);
GivePlayerWeapon(playerid, 32, 300);
GivePlayerWeapon(playerid, 31, 200);
GivePlayerWeapon(playerid, 34, 40);
GivePlayerWeapon(playerid, 5, 1);
}
if(PlayerInfo[playerid][pWeaponS]==10)
{
GivePlayerWeapon(playerid, 24, 100);
GivePlayerWeapon(playerid, 26, 100);
GivePlayerWeapon(playerid, 32, 500);
GivePlayerWeapon(playerid, 31, 300);
GivePlayerWeapon(playerid, 34, 50);
GivePlayerWeapon(playerid, 4, 1);
}
if(attachedviptext[playerid]==1)
{
}
if(PlayerInfo[playerid][pVip]==5 || freevip==1)
{
if(PlayerInfo[playerid][pChantichki]==0)
GivePlayerWeapon(playerid, 16, 5);
else
GivePlayerWeapon(playerid, 39, 5);
}
if(PlayerInfo[playerid][pVip]==6 || freevip==1)
{
if(PlayerInfo[playerid][pChantichki]==0)
GivePlayerWeapon(playerid, 16, 5);
else
GivePlayerWeapon(playerid, 39, 5);
}
if(PlayerInfo[playerid][pVip] >= 4 || freevip==1)
{
SetPlayerArmour(playerid,100);
}
if(requestspawn[playerid]==1)
{
GameTextForPlayer(playerid, "     ",1000, 3);
}
if(mission==3 && dmstarted==0)
{
if(checkpointarena<15)
{
SetPlayerCheckpoint(playerid, 1480.0670,-1639.8453,14.1484, 3.0);
}
if(checkpointarena>=15)
{
SetPlayerCheckpoint(playerid, 2004.9063,1545.0177,13.5859, 3.0);
}
}
if(PlayerInfo[playerid][pSpawnO]==6)
{
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
new spawn=random(3);
if(spawn==0)
{
SetPlayerPos(playerid,ClanInfo[PlayerInfo[playerid][pClan]][cBaseX]+2,ClanInfo[PlayerInfo[playerid][pClan]][cBaseY]+3,ClanInfo[PlayerInfo[playerid][pClan]][cBaseZ]);
SetPlayerFacingAngle(playerid,270.3970);
}
if(spawn==1)
{
SetPlayerPos(playerid,ClanInfo[PlayerInfo[playerid][pClan]][cBaseX]+1,ClanInfo[PlayerInfo[playerid][pClan]][cBaseY]+1,ClanInfo[PlayerInfo[playerid][pClan]][cBaseZ]);
SetPlayerFacingAngle(playerid,1.2900);
}
if(spawn==2)
{
SetPlayerPos(playerid,ClanInfo[PlayerInfo[playerid][pClan]][cBaseX]+2,ClanInfo[PlayerInfo[playerid][pClan]][cBaseY]+2,ClanInfo[PlayerInfo[playerid][pClan]][cBaseZ]);
SetPlayerFacingAngle(playerid,1.2900);
}
if(spawn==3)
{
SetPlayerPos(playerid,ClanInfo[PlayerInfo[playerid][pClan]][cBaseX]+1,ClanInfo[PlayerInfo[playerid][pClan]][cBaseY]+2,ClanInfo[PlayerInfo[playerid][pClan]][cBaseZ]);
SetPlayerFacingAngle(playerid,1.2900);
}
}
if(PlayerInfo[playerid][pSpawnO]==1)
{
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
new spawn=random(10);
if(spawn==0)
{
SetPlayerPos(playerid,2178.9063,1285.6537,10.8203);
SetPlayerFacingAngle(playerid,270.3970);
}
if(spawn==1)
{
SetPlayerPos(playerid,1027.0188,-1344.9539,13.7266);
SetPlayerFacingAngle(playerid,1.2900);
}
if(spawn==2)
{
SetPlayerPos(playerid,2216.9980,-1170.4368,25.7266);
SetPlayerFacingAngle(playerid,359.7421);
}
if(spawn==3)
{
SetPlayerPos(playerid,2097.3970,2490.7754,14.8390);
SetPlayerFacingAngle(playerid,179.1149);
}
if(spawn==4)
{
SetPlayerPos(playerid,386.7134,-2028.5282,7.8359);
SetPlayerFacingAngle(playerid,89.3663);
}
if(spawn==5)
{
SetPlayerPos(playerid,1676.4705,-1634.6233,14.2266);
SetPlayerFacingAngle(playerid,269.8728);
}
if(spawn==6)
{
SetPlayerPos(playerid,2225.3550,1838.6611,10.8203);
SetPlayerFacingAngle(playerid,90.2421);
}
if(spawn==7)
{
SetPlayerPos(playerid,2551.8250,2244.6887,10.8203);
SetPlayerFacingAngle(playerid,167.6396);
}
if(spawn==8)
{
SetPlayerPos(playerid,1742.8735,-1863.2289,13.5753);
SetPlayerFacingAngle(playerid,359.7475);
}
if(spawn==9)
{
SetPlayerPos(playerid,1688.3342,1447.8641,10.7678);
SetPlayerFacingAngle(playerid,269.8827);
}
if(spawn==10)
{
SetPlayerPos(playerid,2216.9980,-1170.4368,25.7266);
SetPlayerFacingAngle(playerid,359.7421);
}
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pSpawnO]==3)
{
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetPlayerPos(playerid,280.9982,1410.2089,10.4179);
}
if(PlayerInfo[playerid][pSpawnO]==2)
{
if(PlayerInfo[playerid][pTeam]==1)
{
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
new spawn=random(5);
if(spawn==0)
{
SetPlayerPos(playerid,1261.8252,-1997.7322,59.6290);
}
if(spawn==1)
{
SetPlayerPos(playerid,1248.4459,-1999.1543,60.0590);
SetPlayerFacingAngle(playerid,182.6776);
}
if(spawn==2)
{
SetPlayerPos(playerid,1248.4459,-1999.1543,60.0590);
SetPlayerFacingAngle(playerid,179.7874);
}
if(spawn==3)
{
SetPlayerPos(playerid,1248.4459,-1999.1543,60.0590);
SetPlayerFacingAngle(playerid,174.3698);
}
if(spawn==4)
{
SetPlayerPos(playerid,1265.0127,-1997.6207,59.6290);
SetPlayerFacingAngle(playerid,174.3698);
}
if(spawn==5)
{
SetPlayerPos(playerid,1265.0127,-1997.6207,59.6290);
SetPlayerFacingAngle(playerid,179.7682);
}
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==3)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,2146.5444,-1432.6128,25.5391);
SetPlayerFacingAngle(playerid,90.9074);
}
if(spawn==1)
{
SetPlayerPos(playerid,2147.8428,-1489.3254,26.6198);
SetPlayerFacingAngle(playerid,88.7140);
}
if(spawn==2)
{
SetPlayerPos(playerid,2146.5444,-1432.6128,25.5391);
SetPlayerFacingAngle(playerid,90.9074);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==7)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,1958.0376,951.1666,10.8203);
SetPlayerFacingAngle(playerid,180.1847);
}
if(spawn==1)
{
SetPlayerPos(playerid,1969.9386,942.0911,10.8126);
SetPlayerFacingAngle(playerid,176.1113);
}
if(spawn==2)
{
SetPlayerPos(playerid,1928.6168,945.8361,10.8127);
SetPlayerFacingAngle(playerid,85.2205);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==5)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,743.6805,-498.7406,18.0129);
SetPlayerFacingAngle(playerid,276.3322);
}
if(spawn==1)
{
SetPlayerPos(playerid,745.5961,-511.2993,18.0129);
SetPlayerFacingAngle(playerid,176.9813);
}
if(spawn==2)
{
SetPlayerPos(playerid,739.9612,-554.7196,18.0129);
SetPlayerFacingAngle(playerid,5.9559);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==6)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,297.6942,-1155.6418,80.9099);
SetPlayerFacingAngle(playerid,125.8933);
}
if(spawn==1)
{
SetPlayerPos(playerid,320.8712,-1170.3861,80.9141);
SetPlayerFacingAngle(playerid,88.6063);
}
if(spawn==2)
{
SetPlayerPos(playerid,274.3722,-1167.7781,80.8616);
SetPlayerFacingAngle(playerid,276.8981);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==21)
{
SetPlayerArmour(playerid,100);
SetPlayerPos(playerid,1267.1464,-777.3041,1091.9063);
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,5);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==8)
{
SetPlayerPos(playerid,2449.8516,-1688.9565,1013.5078);
SetPlayerFacingAngle(playerid,182.1234);
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,2);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==16)
{
SetPlayerArmour(playerid,100);
SetPlayerPos(playerid,2331.0933,-1137.6527,1054.3047);
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,12);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==9)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,2615.6545,2313.8264,10.8203);
SetPlayerFacingAngle(playerid,253.6507);
}
if(spawn==1)
{
SetPlayerPos(playerid,2622.7986,2335.3406,10.8203);
SetPlayerFacingAngle(playerid,185.9700);
}
if(spawn==2)
{
SetPlayerPos(playerid,2655.8208,2347.8174,10.8203);
SetPlayerFacingAngle(playerid,149.9362);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==10)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,2621.7190,1825.1489,11.0234);
SetPlayerFacingAngle(playerid,91.7867);
}
if(spawn==1)
{
SetPlayerPos(playerid,2635.7065,1797.4092,11.0234);
SetPlayerFacingAngle(playerid,87.7133);
}
if(spawn==2)
{
SetPlayerPos(playerid,2599.0176,1812.4899,10.9766);
SetPlayerFacingAngle(playerid,279.7651);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==12)
{
SetPlayerArmour(playerid,100);
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,681.9958,-1276.5922,13.5755);
SetPlayerFacingAngle(playerid,88.3163);
}
if(spawn==1)
{
SetPlayerPos(playerid,673.2634,-1292.6874,13.6328);
SetPlayerFacingAngle(playerid,82.0496);
}
if(spawn==2)
{
SetPlayerPos(playerid,658.6101,-1251.8407,13.7522);
SetPlayerFacingAngle(playerid,190.7540);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
/////////////////////////////////////////////
if(PlayerInfo[playerid][pTeam]==14)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,946.5899,1733.7976,8.8516);
SetPlayerFacingAngle(playerid,91.9914);
}
if(spawn==1)
{
SetPlayerPos(playerid,950.7797,1760.9878,8.8516);
SetPlayerFacingAngle(playerid,91.9914);
}
if(spawn==2)
{
SetPlayerPos(playerid,954.2988,1705.9655,8.8510);
SetPlayerFacingAngle(playerid,88.8813);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
//////////////////////////////////////////////
if(PlayerInfo[playerid][pTeam]==15)
{
new spawn=random(2);
if(PlayerInfo[playerid][pSpawnP]==0)
{
if(spawn==0)
{
SetPlayerPos(playerid,882.3967,-2253.1809,12.8527);
SetPlayerFacingAngle(playerid,273.8735);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(spawn==1)
{
SetPlayerPos(playerid,846.1121,-2076.6079,28.8883);
SetPlayerFacingAngle(playerid,182.0894);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(spawn==2)
{
SetPlayerPos(playerid,826.1920,-2075.8296,28.8883);
SetPlayerFacingAngle(playerid,358.1844);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
SetPlayerArmour(playerid,100);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pSpawnP]==1)
{
if(spawn==0)
{
SetPlayerPos(playerid,211.4815,1810.5336,21.8672);
SetPlayerFacingAngle(playerid,6.4513);
}
if(spawn==1)
{
SetPlayerPos(playerid,207.2556,1814.8164,21.8672);
SetPlayerFacingAngle(playerid,356.1112);
}
if(spawn==2)
{
SetPlayerPos(playerid,216.4520,1814.0637,21.86723);
SetPlayerFacingAngle(playerid,269.0037);
}
SetPlayerArmour(playerid,100);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pSpawnP]==2)
{
if(spawn==0)
{
SetPlayerPos(playerid,-2430.4685,503.4060,29.9297);
SetPlayerFacingAngle(playerid,6.4513);
}
if(spawn==1)
{
SetPlayerPos(playerid,-2444.8418,501.3643,30.0900);
SetPlayerFacingAngle(playerid,356.1112);
}
if(spawn==2)
{
SetPlayerPos(playerid,-2454.6726,496.0553,30.0903);
SetPlayerFacingAngle(playerid,269.0037);
}
SetPlayerArmour(playerid,100);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
///
}
if(PlayerInfo[playerid][pTeam]==13)
{
if(PlayerInfo[playerid][pSpawnP]==3)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,-1577.5488,657.7401,7.1901);
SetPlayerFacingAngle(playerid,273.8735);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(spawn==1)
{
SetPlayerPos(playerid,-1616.6578,680.6903,7.1875);
SetPlayerFacingAngle(playerid,182.0894);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(spawn==2)
{
SetPlayerPos(playerid,-1602.8096,718.0143,11.4886);
SetPlayerFacingAngle(playerid,358.1844);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
}
}
if(PlayerInfo[playerid][pTeam]==13)
{
if(PlayerInfo[playerid][pSpawnP]==2)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,248.6385,67.7899,1003.6406);
SetPlayerFacingAngle(playerid,91.9914);
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,6);
SetCameraBehindPlayer(playerid);
}
if(spawn==1)
{
SetPlayerPos(playerid,239.6486,75.8408,1005.0391);
SetPlayerFacingAngle(playerid,91.9914);
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,6);
SetCameraBehindPlayer(playerid);
}
if(spawn==2)
{
SetPlayerPos(playerid,255.1964,74.0962,1003.6406);
SetPlayerFacingAngle(playerid,88.8813);
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,6);
SetCameraBehindPlayer(playerid);
}
}
if(PlayerInfo[playerid][pSpawnP]==1)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,2250.5913,2489.1421,10.9908);
SetPlayerFacingAngle(playerid,91.9914);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(spawn==1)
{
SetPlayerPos(playerid,2250.5913,2489.1421,10.9908);
SetPlayerFacingAngle(playerid,91.9914);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(spawn==2)
{
SetPlayerPos(playerid,2290.5657,2471.1653,10.8203);
SetPlayerFacingAngle(playerid,88.8813);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
}
if(PlayerInfo[playerid][pSpawnP]==0)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,1580.2686,-1634.2051,13.5625);
SetPlayerFacingAngle(playerid,1.1300);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(spawn==1)
{
SetPlayerPos(playerid,1546.5138,-1619.8557,13.5546);
SetPlayerFacingAngle(playerid,89.8041);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(spawn==2)
{
SetPlayerPos(playerid,1542.3820,-1682.4557,13.5544);
SetPlayerFacingAngle(playerid,92.3108);
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
}
}
if(PlayerInfo[playerid][pTeam]==11)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,-688.8886,938.8144,13.6328);
}
if(spawn==1)
{
SetPlayerPos(playerid,-688.0349,926.8151,13.6293);
}
if(spawn==2)
{
SetPlayerPos(playerid,-708.7231,950.2300,12.4724);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==4)
{
SetPlayerArmour(playerid,100);
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,2549.9004,-1036.9694,69.5835);
}
if(spawn==1)
{
SetPlayerPos(playerid,2501.3057,-1034.6913,69.2638);
}
if(spawn==2)
{
SetPlayerPos(playerid,2532.4399,-1054.4396,69.5781);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==20)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,-37.7534,1079.9067,20.0710);
}
if(spawn==1)
{
SetPlayerPos(playerid,-22.8780,1063.8611,19.7422);
}
if(spawn==2)
{
SetPlayerPos(playerid,-7.8116,1075.0288,19.7422);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==18)
{
SetPlayerArmour(playerid,100);
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,1757.1570,2766.8816,10.8359);
}
if(spawn==1)
{
SetPlayerPos(playerid,1749.6184,2797.0723,10.8359);
}
if(spawn==2)
{
SetPlayerPos(playerid,1783.9874,2787.4541,10.8359);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==19)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,1100.7185,-1220.8761,17.8047);
}
if(spawn==1)
{
SetPlayerPos(playerid,1117.1194,-1237.0652,15.9510);
}
if(spawn==2)
{
SetPlayerPos(playerid,1122.6483,-1247.2380,25.3020);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==22)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,-799.6035,1569.4238,27.1172);
}
if(spawn==1)
{
SetPlayerPos(playerid,-814.1357,1542.5577,27.1172);
}
if(spawn==2)
{
SetPlayerPos(playerid,-800.3713,1531.4137,27.1172);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==17)
{
new spawn=random(2);
if(spawn==0)
{
SetPlayerPos(playerid,2584.7444,2787.1177,10.8203);
}
if(spawn==1)
{
SetPlayerPos(playerid,2581.6055,2747.6665,10.8203);
}
if(spawn==2)
{
SetPlayerPos(playerid,2531.0698,2794.3374,10.8203);
}
SetPlayerVirtualWorld(playerid,0);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(PlayerInfo[playerid][pTeam]==2)
{
new spawn=random(5);
if(spawn==0)
{
SetPlayerPos(playerid,2496.0024,-1709.4805,1014.7422);
SetPlayerFacingAngle(playerid,2.1533);
}
if(spawn==1)
{
SetPlayerPos(playerid,2496.0024,-1709.4805,1014.7422);
SetPlayerFacingAngle(playerid,2.1533);
}
if(spawn==2)
{
SetPlayerPos(playerid,2496.0024,-1709.4805,1014.7422);
SetPlayerFacingAngle(playerid,2.1533);
}
if(spawn==3)
{
SetPlayerPos(playerid,2492.2722,-1703.3955,1018.3438);
SetPlayerFacingAngle(playerid,179.7682);
}
if(spawn==4)
{
SetPlayerPos(playerid,2492.2722,-1703.3955,1018.3438);
SetPlayerFacingAngle(playerid,179.7682);
}
if(spawn==5)
{
SetPlayerPos(playerid,2496.0024,-1709.4805,1014.7422);
SetPlayerFacingAngle(playerid,2.1533);
}
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,3);
SetCameraBehindPlayer(playerid);
}
}
RestartPlayerColor(playerid);
RestartVIPLaser(playerid);
RestartPlayerSkin(playerid);
if(adutyskinchanged[playerid]==0)
{
spawnselectedskin2[playerid]=GetPlayerSkin(playerid);
spawnselectedskin[playerid]=GetPlayerSkin(playerid);
}
else
{
spawnselectedskin2[playerid]=GetPlayerSkin(playerid);
spawnselectedskin[playerid]=PlayerInfo[playerid][pASkin];
}
if(PlayerInfo[playerid][pSpawnO]==4)
{
SetPlayerVirtualWorld(playerid,0); SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,HouseInfo[PlayerInfo[playerid][pHouseO]][hX],HouseInfo[PlayerInfo[playerid][pHouseO]][hY],HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
if(PlayerInfo[playerid][pSpawnO]==5)
{
SetPlayerVirtualWorld(playerid,0); SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,BizInfo[PlayerInfo[playerid][pBizO]][bX],BizInfo[PlayerInfo[playerid][pBizO]][bY],BizInfo[PlayerInfo[playerid][pBizO]][bZ]);
}
if(PlayerInfo[playerid][pADuty]==0)
{
if(PlayerInfo[playerid][pVIPLabel]==1)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
format(VipText3D[playerid],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
}
}
if(PlayerInfo[playerid][pADuty]==1)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
format(VipText3D[playerid],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, 0, 0, -1, 15.0);
PlayerLabel[playerid] = CreateDynamic3DTextLabel("ADMIN ON-DUTY", 0xE60000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, 0, 0, -1, 15.0);
SetPlayerColor(playerid, 0x7BFFFFFF);
adutyskinchanged[playerid]=1;
SendClientMessage(playerid, 0x40BF00FF,"Ти все-още си On-Duty и трябва да помагаш на играчите");
SetPlayerSkin(playerid,PlayerInfo[playerid][pASkin]);
if(godmode[playerid]==1)
{
SetPlayerHealth(playerid, 99999);
SetPlayerArmour(playerid, 99999);
}
ResetPlayerWeapons(playerid);
}
if(PlayerInfo[playerid][pJail]>0)
{
ResetPlayerWeapons(playerid);
SetPlayerVirtualWorld(playerid,1);
SetPlayerInterior(playerid,4);
SetPlayerPos(playerid,299.7077,303.4193,999.1484);
SetPlayerAttachedObject(playerid, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977,-81.700035, 0.891999, 1.000000, 1.168000);
SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
}
if(PlayerInfo[playerid][pAFK]>0)
{
ResetPlayerWeapons(playerid);
SetPlayerInterior(playerid,15);
SetPlayerColor(playerid, 0xD6F34AFF);
SetPlayerPos(playerid,2192.4077,-1187.1726,1029.7969);
SetPlayerVirtualWorld(playerid, playerid+500);
}
if(indmon[playerid]==1)
{
SetPlayerVirtualWorld(playerid,3233);
SetPlayerColor(playerid,0x00CE96FF);
ResetPlayerWeapons(playerid);
SetPlayerArmour(playerid,0);
if(PlayerInfo[playerid][pTestDMON]==0)
{
new r = random(sizeof(PossibleRandomWeapons));
GivePlayerWeapon(playerid, PossibleRandomWeapons[r][0], PossibleRandomWeapons[r][1]);
}
else
{
indmon[playerid]=0;
TextDrawHideForPlayer(playerid, DMON[playerid]);
}
if(PlayerInfo[playerid][pTestDMON]==0)
{
if(dmarena==1)
{
new spawnpos=randomex(1,5);
if(spawnpos<3)
{
SetPlayerPos(playerid, 1411.2889,1.3799,1000.9237);
}
if(spawnpos>2)
{
SetPlayerPos(playerid, 1360.4244,-39.4643,1007.8828);
}
SetPlayerInterior(playerid,1);
}
if(dmarena==2)
{
new spawnpos=randomex(1,5);
if(spawnpos<3)
{
SetPlayerPos(playerid, -1426.4996,1054.9972,1038.4913);
}
if(spawnpos>2)
{
SetPlayerPos(playerid, -1473.7843,948.4413,1036.7908);
}
SetPlayerInterior(playerid,15);
}
}
}
if(PlayerInfo[playerid][pInDM]==1 && dmplace[playerid]==1)
{
SetPlayerPos(playerid,1936.0902,-1398.6613,13.5703);
ResetPlayerWeapons(playerid);
SetPlayerVirtualWorld(playerid,550);
if(weaponsdm2<5){ GivePlayerWeapon(playerid, 28, 300);}
if(weaponsdm2>=5 && weaponsdm2<10)
{
GivePlayerWeapon(playerid, 29, 300);
}
if(weaponsdm2>=10 && weaponsdm2<15)
{
GivePlayerWeapon(playerid, 30, 300);
}
if(weaponsdm2>=15 && weaponsdm2<20){
GivePlayerWeapon(playerid, 27, 300);
}
if(weaponsdm2>=20 && weaponsdm2<25){
GivePlayerWeapon(playerid, 18, 300);
}
if(weaponsdm2>=25)
{
GivePlayerWeapon(playerid, 26, 300);
}
}
if(PlayerInfo[playerid][pInDM]==1 && dmplace[playerid]==2)
{
SetPlayerPos(playerid,1903.3893,1294.0376,55.3731);
ResetPlayerWeapons(playerid);
SetPlayerVirtualWorld(playerid,550);
if(weaponsdm2<5){ GivePlayerWeapon(playerid, 28, 300);}
if(weaponsdm2>=5 && weaponsdm2<10)
{
GivePlayerWeapon(playerid, 29, 300);
}
if(weaponsdm2>=10 && weaponsdm2<15)
{
GivePlayerWeapon(playerid, 30, 300);
}
if(weaponsdm2>=15 && weaponsdm2<20){
GivePlayerWeapon(playerid, 27, 300);
}
if(weaponsdm2>=20 && weaponsdm2<25){
GivePlayerWeapon(playerid, 18, 300);
}
if(weaponsdm2>=25)
{
GivePlayerWeapon(playerid, 26, 300);
}
}
if(hidedf==1)
{
if(PlayerInfo[playerid][pTeam] == 15 && PlayerInfo[playerid][pInDM]==0)
{
SetPlayerColor(playerid, 0xFFFFFF00);
}
}
if(PlayerInfo[playerid][pPJail]>0)
{
SetPlayerAttachedObject(playerid, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977,-81.700035, 0.891999, 1.000000, 1.168000);
SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
ResetPlayerWeapons(playerid);
SendClientMessage(playerid, 0x0040FFFF, "Jail: Ти все още си в затвора!");
if(PlayerInfo[playerid][pJailType]==0)
{
SetPlayerPos(playerid,263.6435,86.2383,1001.0391);
SetPlayerInterior(playerid,6);
SetPlayerVirtualWorld(playerid,1);
}
else if(PlayerInfo[playerid][pJailType]==1)
{
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,0);
SetPlayerPos(playerid,1753.5106,-1542.6031,9.4192);
}
//PlayerInfo[playerid][pJailType]=1;
}
if(registered[playerid]==1 && firstspawn[playerid]==1)
{
SetPlayerPos(playerid,1691.8470,1450.5051,10.7653);
}
if(firstspawn[playerid]==1)
{
if(onlymasks==1)
{
SendClientMessage(playerid, 0xA4A400FF, "");
SendClientMessage(playerid, 0xA4A400FF, "[COVID-19 -- ЩАБ] По заповед на командващите щаба маските са задължителни, до обратна заповед на щаба");
SendClientMessage(playerid, 0x0040FFFF, "[COVID-19 -- МЕРКИ] Използвайте /clothes за да вземете маската си");
}
if(PlayerInfo[playerid][pCrashedFromGTA]==1)
{
PlayerInfo[playerid][pCrashedFromGTA]=0;
SendClientMessage(playerid, 0xFFBF00FF, "[Anti Crasher 0.3.7] Поради причината, че Crash-нахте от сървъра, си изтеглете от нашия сайт Anti Crasher");
SendClientMessage(playerid, 0xFFBF00FF, "[Anti Crasher 0.3.7] Ако нашият Anti Crasher не работи за вес, потърсете друг из Youtube с Линк за Изтегляне");
}
requestspawn2[playerid]=1;
nospawnselect[playerid]=1;
//ForceClassSelection(playerid);
StopAudioStreamForPlayer(playerid);
firstspawn[playerid]=0;
}
if(PlayerInfo[playerid][pADuty]==0)
{
if(dutypolice[playerid]==0 && PlayerInfo[playerid][pTeam]==13)
{
SetPlayerSkin(playerid,PlayerInfo[playerid][pNSkin]);
}
}
if(PlayerInfo[playerid][pTeam]==13 && dutypolice[playerid]==1)
{
SetPlayerColor(playerid,COLOR_RLSPD);
}
else if(PlayerInfo[playerid][pTeam]==13 && dutypolice[playerid]==0)
{
SetPlayerColor(playerid,COLOR_WHITE);
}
spawnselectedskin2[playerid]=GetPlayerSkin(playerid);
spawnselectedskin[playerid]=GetPlayerSkin(playerid);
return 1;
}
public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{
}
public OnPlayerDeath(playerid, killerid, reason)
{
//
if(IsPlayerInAnyVehicle(playerid))
{
if(driver[playerid]==1)
{
drive[GetPlayerVehicleID(playerid)]=0;
}
}
if(cuffedby[playerid]!=-1)
{
PlayerInfo[playerid][pFollowPolice]=0;
cuffedwho[cuffedby[playerid]]=-1;
TogglePlayerControllable(playerid, 1);
SendClientMessage(playerid,0xB8860BFF,"Вие се изплъзнахте от затвора!");
}
//
if(indrift[playerid]==1)
{
TextDrawHideForPlayer(playerid, TDLabels[0]);
TextDrawHideForPlayer(playerid, TDLabels[1]);
TextDrawHideForPlayer(playerid, TDLabels[2]);
indrift[playerid]=0;
}
SendDeathMessage(killerid, playerid, reason);
spawnednew[playerid]=0;
if(PlayerInfo[playerid][pTestDMON]==1)
{
PlayerInfo[playerid][pTestDMON]=0;
PlayerInfo[playerid][pTestDMTimer]=0;
indmon[playerid]=0;
}
if(csgamestarted==1)
{
if(joinedincounter[playerid]==1)
{
RemovePlayerAttachedObject(playerid,7);
if(bomber==playerid)
{
RemovePlayerAttachedObject(playerid,7);
isvalidbomb=1;
SendClientMessage(playerid,0x0092ffFF,"Counter Strike: Човекът с бомбата умря, тя е на земята!");
bombata=CreateDynamicPickup(1252,1,X[playerid],Y[playerid],Z[playerid]);
}
if(policecs[playerid]==1)
{
alivecounter[0]++;
}
else
{
alivecounter[1]++;
}
SetPlayerCameraPos(playerid, 366.1500, 1762.8300, 158.9100);
SetPlayerCameraLookAt(playerid, 365.1930, 1762.5275, 158.7751);
SendClientMessage(playerid,0x0092ffFF,"Counter Strike: Ти беше убит, изчакай до следващия рунд");
if(joinedincounter[killerid]==1)
{
GivePlayerCashCS(killerid,300);
SendClientMessage(playerid,0x0092ffFF,"Counter Strike: Ти уби враг, благодарение на което получаваш $300");
}
if(alivecounter[1]<=0)
{
bombgurmi=0;
csroundtimer=120*2;
for(new i=0; i<MAX_PLAYERS ;i++ && IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
SpawnPlayer(i);
PlayerPlaySound(i,1057,0.0,0.0,0.0);
if(policecs[i]==1)
{
GameTextForPlayer(i, "~r~LOSE", 3000, 1);
}
else
{
GameTextForPlayer(i, "~g~WIN", 3000, 1);
}
}
}
ctwin++;
}
else if(alivecounter[0]<=0)
{
csroundtimer=120*2;
bombgurmi=0;
for(new i=0; i<MAX_PLAYERS ;i++ && IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
SpawnPlayer(i);
PlayerPlaySound(i,1057,0.0,0.0,0.0);
if(policecs[i]==0)
{
GameTextForPlayer(i, "~r~LOSE", 3000, 1);
}
else
{
GameTextForPlayer(i, "~g~WIN", 3000, 1);
}
}
}
twin++;
}
if(ctwin>3 || twin>3)
{
if(ctwin>twin)
{
for(new i=0; i<MAX_PLAYERS ;i++ && IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
if(policecs[i]==1)
{
GivePlayerEP(i,5);
GivePlayerCash(i,5000);
}
}
}
csgamestarted=0;
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши, победител Counter Terrorists!");
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Награда за победата: 5 EP и $5000!");
}
else if(twin>ctwin)
{
for(new i=0; i<MAX_PLAYERS ;i++ && IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
if(policecs[i]==0)
{
GivePlayerEP(i,5);
GivePlayerCash(i,5000);
}
}
}
csgamestarted=0;
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши, победител Terrorists!");
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Награда за победата: 5 EP и $5000!");
}
else if(twin==ctwin)
{
csgamestarted=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Играта свърши с равенство между CT и T!");
}
for(new i=0; i<MAX_PLAYERS ;i++ && IsPlayerConnected(i))
{
if(joinedincounter[i]==1)
{
SetPlayerHealth(i,0);
}
}
//
}
}
}
new whetherDropCash=randomex(1,8);
if(whetherDropCash>5)
{
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
new pickupdeath=CreateDynamicPickup(1212,1,X[playerid],Y[playerid],Z[playerid],GetPlayerVirtualWorld(playerid));
pickupmoney[pickupdeath]=1;
}
if(PlayerInfo[playerid][pMission]==2 && enteredInMissionCP[playerid]==1)
{
PlayerInfo[playerid][pTimerATM]=0;
enteredInMissionCP[playerid]=0;
GameTextForPlayer(playerid, "~w~Mission~n~~r~failed", 2000, 1);
}
for(new i=1; i<=5; i++)
{
if(GetPlayerVehicleID(playerid)==carpizza[i])
{
ToggleEngine(carpizza[i], VEHICLE_PARAMS_OFF); vehEngineStatusON[carpizza[i]]=0;
}
}
PlayerInfo[playerid][pAfterWork]=30*120;
DisablePlayerRaceCheckpoint(playerid);
SetVehicleToRespawn(GetPlayerVehicleID(playerid));
if(deliverpizza[playerid]>=6)
{
GivePlayerCash(playerid,1500);
GivePlayerEP(playerid,5);
deliverpizza[playerid]=0;
SendClientMessage(playerid,0xB55900FF,"Pizza Job: Вие спечелихте 5 EP и $1500, заради доставените пици.");
}
//
if(CASHMONEY[2]>0 && CASHMONEY[1]>0 && CASHMONEY[0]>0)
{
if(PlayerInfo[playerid][pRobberyATM]>0)
{
ClearAnimations(playerid);
DestroyDynamicObject(CASHBAG[0]);
CASHMONEY[2]=0;
CASHMONEY[1]=0;
RemovePlayerAttachedObject(playerid,7);
CASHMONEY[0]=0;
DestroyDynamic3DTextLabel(CASHBAGTEXT[0]);
DestroyDynamicObject(CASHBAG[1]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[1]);
DestroyDynamicObject(CASHBAG[2]);
DestroyDynamic3DTextLabel(CASHBAGTEXT[2]);
PlayerInfo[playerid][pRobberyATM]=0;
StartedRobbery=0;
PlayerInfo[playerid][pRobberyATM2]=0;
SendClientMessageToAll(COLOR_RTRIADS,"Robbery ATM: Обирът е неуспешен, но въпреки това крадецът успя да открадне пари!");
}
}
extraarmour[playerid]=0;
shield[playerid]=0;
if(IsPlayerAttachedObjectSlotUsed(playerid, 5))
{
RemovePlayerAttachedObject(playerid,5);
}
if(IsPlayerAttachedObjectSlotUsed(playerid, 6))
{
RemovePlayerAttachedObject(playerid,6);
}
cameras[playerid]=0;
TogglePlayerControllable(playerid, 1); RemovePlayerAttachedObject(playerid,1);
sdelkaSelected[playerid]=0;
if(enabledcar[playerid]==1)
{
enabledcar[playerid]=0;
missionrepeat[playerid]=1;
}
PlayerInfo[playerid][pDMONKills2]=0;
inevent[playerid]=0;
if(locker[playerid]!=-1)
{
for(new i=0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
SetVehicleParamsForPlayer(locker[playerid],i,0,0);
}
}
else
locker[playerid]=-1;
//if(GetPlayerState(killerid) == PLAYER_STATE_DRIVER)
//{
//SetPlayerHealth(killerid,0);
//SendClientMessage(killerid, 0xE60000FF, "SERVER: Driverby Kill Driver-by Kill Driver by Kill");
//}
if(onwork[playerid]==1)
{
onfootwork[playerid]=0;
onwork[playerid]=0;
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
PlayerInfo[playerid][pPizzaTimer]=0;
PlayerInfo[playerid][pJob]=0;
SendClientMessage(playerid, COLOR_JOB, "Ти умря и загуби твоята работа, но може да се пробваш отново!");
}
if(PlayerInfo[killerid][pTeam]== 15 && PlayerInfo[playerid][pWanted]>0 && killerid!=playerid
|| PlayerInfo[killerid][pTeam]== 13 && PlayerInfo[playerid][pWanted]>0 && killerid!=playerid)
{
if(PlayerInfo[playerid][pWanted]==6 && PlayerInfo[playerid][pADuty]==0)
{
if( PlayerInfo[killerid][pTeam]==15)
{
SendClientMessage(playerid,0xFF0000FF,"[DELTA FORCE]{A4A400} Ти беше убит от член на DELTA FORCE и изгуби $3000");
SendClientMessage(killerid,0xFF0000FF,"[DELTA FORCE]{A4A400} Ти уби заподозрян със 6 звезди и получаваш като награда $3000 и 5 EP");
PlayerInfo[playerid][pWanted]=0;
SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
PlayerInfo[playerid][pPJail]=15*60;
GivePlayerCash(playerid,-3000);
GivePlayerCash(killerid,3000);
}
}
if(PlayerInfo[playerid][pWanted]==1 && PlayerInfo[playerid][pADuty]==0)
{
if( PlayerInfo[killerid][pTeam]==13 && dutypolice[killerid]==1)
{
PlayerInfo[playerid][pWanted]=0;
SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
PlayerInfo[playerid][pPJail]=2*60;
PlayerInfo[playerid][pJailType]=0;
new stringpolice[256];
if(PlayerInfo[playerid][pWanted]==0)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0xCC0000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
}
format(stringpolice,256,"[WASTED] {0040FF}Ти беше заловен от полицай %s, защото си извършил престъпление!",pname[killerid]);
SendClientMessage(playerid, 0xFF0000FF, stringpolice);
SendClientMessage(playerid, 0xFF0000FF, "[WASTED] {0040FF} Сега ще си в затвора за 2 минути и губиш $900!");
GivePlayerCash(killerid,900); GivePlayerCash(playerid,-900);
}
}
if(PlayerInfo[playerid][pWanted]==2)
{
if( PlayerInfo[killerid][pTeam]==13 && dutypolice[killerid]==1)
{
PlayerInfo[playerid][pWanted]=0;
SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
PlayerInfo[playerid][pPJail]=4*60;
PlayerInfo[playerid][pJailType]=0;
new stringpolice[256];
if(PlayerInfo[playerid][pWanted]==0)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0xCC0000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
}
format(stringpolice,256,"[WASTED] {0040FF}Ти беше заловен от полицай %s, защото си извършил престъпление!",pname[killerid]);
SendClientMessage(playerid, 0xFF0000FF, stringpolice);
SendClientMessage(playerid, 0xFF0000FF, "[WASTED] {0040FF} Сега ще си в затвора за 4 минути и губиш $1800!");
GivePlayerCash(killerid,1800); GivePlayerCash(playerid,-1800);
}
}
if(PlayerInfo[playerid][pWanted]==3)
{
if( PlayerInfo[killerid][pTeam]==13 && dutypolice[killerid]==1)
{
PlayerInfo[playerid][pWanted]=0;
SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
PlayerInfo[playerid][pPJail]=6*60;
PlayerInfo[playerid][pJailType]=0;
new stringpolice[256];
if(PlayerInfo[playerid][pWanted]==0)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0xCC0000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
}
format(stringpolice,256,"[WASTED] {0040FF}Ти беше заловен от полицай %s, защото си извършил престъпление!",pname[killerid]);
SendClientMessage(playerid, 0xFF0000FF, stringpolice);
SendClientMessage(playerid, 0xFF0000FF, "[WASTED] {0040FF} Сега ще си в затвора за 6 минути и губиш $2700!");
GivePlayerCash(killerid,2700); GivePlayerCash(playerid,-2700);
}
}
if(PlayerInfo[playerid][pWanted]==4)
{
if( PlayerInfo[killerid][pTeam]==13 && dutypolice[killerid]==1)
{
PlayerInfo[playerid][pWanted]=0;
SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
PlayerInfo[playerid][pPJail]=8*60;
PlayerInfo[playerid][pJailType]=1;
new stringpolice[256];
if(PlayerInfo[playerid][pWanted]==0)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0xCC0000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
}
format(stringpolice,256,"[WASTED] {0040FF}Ти беше заловен от полицай %s, защото си извършил престъпление!",pname[killerid]);
SendClientMessage(playerid, 0xFF0000FF, stringpolice);
SendClientMessage(playerid, 0xFF0000FF, "[WASTED] {0040FF} Сега ще си в затвора за 8 минути и губиш $3600!");
GivePlayerCash(killerid,3600); GivePlayerCash(playerid,-3600);
}
}
if(PlayerInfo[playerid][pWanted]==5)
{
if( PlayerInfo[killerid][pTeam]==13 && dutypolice[killerid]==1)
{
PlayerInfo[playerid][pWanted]=0;
SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
PlayerInfo[playerid][pPJail]=10*60;
PlayerInfo[playerid][pJailType]=1;
new stringpolice[256];
if(PlayerInfo[playerid][pWanted]==0)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0xCC0000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
}
format(stringpolice,256,"[WASTED] {0040FF}Ти беше заловен от полицай %s, защото си извършил престъпление!",pname[killerid]);
SendClientMessage(playerid, 0xFF0000FF, stringpolice);
SendClientMessage(playerid, 0xFF0000FF, "[WASTED] {0040FF} Сега ще си в затвора за 10 минути и губиш $4500!");
GivePlayerCash(killerid,4500); GivePlayerCash(playerid,-4500);
}
}
if(PlayerInfo[playerid][pWanted]==6)
{
if( PlayerInfo[killerid][pTeam]==13 && dutypolice[killerid]==1)
{
PlayerInfo[playerid][pWanted]=0;
SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
PlayerInfo[playerid][pPJail]=12*60;
PlayerInfo[playerid][pJailType]=1;
new stringpolice[256];
if(PlayerInfo[playerid][pWanted]==0)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0xCC0000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
}
format(stringpolice,256,"[WASTED] {0040FF}Ти беше заловен от полицай %s, защото си извършил престъпление!",pname[killerid]);
SendClientMessage(playerid, 0xFF0000FF, stringpolice);
SendClientMessage(playerid, 0xFF0000FF, "[WASTED] {0040FF} Сега ще си в затвора за 12 минути и губиш $5400!");
GivePlayerCash(killerid,5400); GivePlayerCash(playerid,-5400);
}
}
}
//
//
if(PlayerInfo[playerid][pMoonshine2]>0 || PlayerInfo[playerid][pWeed]>0 || PlayerInfo[playerid][pCocaine]>0 || PlayerInfo[playerid][pHeroin]>0)
{
PlayerInfo[playerid][pMoonshine2]=0;
SetPlayerWeather(playerid,serverWeather);
}
if(killerid!=INVALID_PLAYER_ID && killerid!=playerid)
{
if(PlayerInfo[playerid][pWeed]>=1)
{
if(PlayerInfo[playerid][pWeed]==1)
{
new string110[110];
SendClientMessage(playerid,0xFF2D2DFF,"Ти загуби твоя грам трева!");
format(string110,110,"Ти отмъкна 1 грам трева от %s",pname[playerid]);
SendClientMessage(playerid,0xFF2D2DFF,string110);
}
else
{
new string110[110];
format(string110,110,"Ти загуби твоите %d грама трева!",PlayerInfo[playerid][pWeed]);
SendClientMessage(playerid,0xFF2D2DFF,string110);
format(string110,110,"Ти отмъкна %d грама трева от %s",pname[playerid],PlayerInfo[playerid][pWeed]);
SendClientMessage(playerid,0xFF2D2DFF,string110);
}
PlayerInfo[killerid][pWeed]+=PlayerInfo[playerid][pWeed];
PlayerInfo[playerid][pWeed]=0;
}
//-------------------------------------------------------------------
if(PlayerInfo[playerid][pCocaine]>=1)
{
if(PlayerInfo[playerid][pCocaine]==1)
{
new string110[110];
SendClientMessage(playerid,0xFF2D2DFF,"Ти загуби твоя грам кокаин!");
format(string110,110,"Ти отмъкна 1 грам кокаин от %s",pname[playerid]);
SendClientMessage(playerid,0xFF2D2DFF,string110);
}
else
{
new string110[110];
format(string110,110,"Ти загуби твоите %d кокаин трева!",PlayerInfo[playerid][pCocaine]);
SendClientMessage(playerid,0xFF2D2DFF,string110);
format(string110,110,"Ти отмъкна %d грама кокаин от %s",pname[playerid],PlayerInfo[playerid][pCocaine]);
SendClientMessage(playerid,0xFF2D2DFF,string110);
}
PlayerInfo[killerid][pCocaine]+=PlayerInfo[playerid][pCocaine];
PlayerInfo[playerid][pCocaine]=0;
}
//-------------------------------------------------------------------
if(PlayerInfo[playerid][pHeroin]>=1)
{
if(PlayerInfo[playerid][pHeroin]==1)
{
new string110[110];
SendClientMessage(playerid,0xFF2D2DFF,"Ти загуби твоя грам хероин!");
format(string110,110,"Ти отмъкна 1 грам хероин от %s",pname[playerid]);
SendClientMessage(playerid,0xFF2D2DFF,string110);
}
else
{
new string110[110];
format(string110,110,"Ти загуби твоите %d хероин трева!",PlayerInfo[playerid][pHeroin]);
SendClientMessage(playerid,0xFF2D2DFF,string110);
format(string110,110,"Ти отмъкна %d грама хероин от %s",pname[playerid],PlayerInfo[playerid][pHeroin]);
SendClientMessage(playerid,0xFF2D2DFF,string110);
}
PlayerInfo[killerid][pHeroin]+=PlayerInfo[playerid][pHeroin];
PlayerInfo[playerid][pHeroin]=0;
}
//-------------------------------------------------------------------
if(PlayerInfo[playerid][pMoonshine]>=1)
{
new string110[110];
if(PlayerInfo[playerid][pMoonshine]==1)
{
SendClientMessage(playerid,0xFF2D2DFF,"Ти загуби твоя литър спиртно питие!");
format(string110,110,"Ти отмъкна 1 литър спиртно питие от %s",pname[playerid]);
SendClientMessage(playerid,0xFF2D2DFF,string110);
}
else
{
format(string110,110,"Ти загуби твоите %d литра спиртно питие!",PlayerInfo[playerid][pMoonshine]);
SendClientMessage(playerid,0xFF2D2DFF,string110);
format(string110,110,"Ти отмъкна %d литра спиртно питие от %s",pname[playerid],PlayerInfo[playerid][pMoonshine]);
SendClientMessage(playerid,0xFF2D2DFF,string110);
}
PlayerInfo[killerid][pMoonshine]+=PlayerInfo[playerid][pMoonshine];
PlayerInfo[playerid][pMoonshine]=0;
}
//-------------------------------------------------------------------
}
//if(firstdeath[playerid]==0)
//{
//firstdeath[playerid]=1;
//}
if( PlayerInfo[playerid][pTeam]>0)
{
if(turfmember[playerid]==2)
{
nospam2[playerid]=1;
inturfmembers[PlayerInfo[playerid][pTeam]]-=1;
turfmember[playerid]=0;
new string200[200];
format(string200, 200, "[TURF INFO] {FF0000}%s{008cff} умря и той отпадна от атаката на твоята банда/мафия!",pname[playerid],
TeamInfo[TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfOwner]][tName]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x008cffFF,string200);
if(inturfmembers[PlayerInfo[playerid][pTeam]]<1)
{
new string256[256];
new gangb[32];
if(PlayerInfo[playerid][pTeam] == 2) { gangb = "Grove Street Families"; }
else if(PlayerInfo[playerid][pTeam] == 3) { gangb = "Rolling Heights Ballas"; }
else if(PlayerInfo[playerid][pTeam] == 4) { gangb = "Los Santos Vagos"; }
else if(PlayerInfo[playerid][pTeam] == 5) { gangb = "Varrios Los Aztecas"; }
else if(PlayerInfo[playerid][pTeam] == 6) { gangb = "Vinewood Cripz"; }
else if(PlayerInfo[playerid][pTeam] == 7) { gangb = "San Fierro Triads"; }
else if(PlayerInfo[playerid][pTeam] == 8) { gangb = "Eastern Boys"; }
else if(PlayerInfo[playerid][pTeam] == 9) { gangb = "Sons Of Anarchy"; }
else if(PlayerInfo[playerid][pTeam] == 10) { gangb = "Da Nang Boys"; }
else if(PlayerInfo[playerid][pTeam] == 11) { gangb = "Italian Mafia"; }
else if(PlayerInfo[playerid][pTeam] == 12) { gangb = "Bounty Hunters"; }
format(string256, 256, "Turf War: {FF0000}%s{008cff} не успя да превземе %s територията на %s!",TeamInfo[PlayerInfo[playerid][pTeam]][tName],TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfName],
TeamInfo[TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfOwner]][tName]);
SendClientMessageToAll(0x008cffFF, string256);
turfattack[PlayerInfo[playerid][pTeam]]=0;
if(inturfmembers[PlayerInfo[playerid][pTeam]]==0)
{
TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfWarGang]=0;
turfwargang[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]]=0;
}
GangZoneStopFlashForAll(TeamInfo[PlayerInfo[playerid][pTeam]][tWar]);
TeamInfo[PlayerInfo[playerid][pTeam]][tWar]=0;
}
}
}
if(inevent[playerid]==1 || PlayerInfo[playerid][pOrganisator]==1)
{
if(cbchat[playerid]>0)
{
SendClientMessage(playerid, 0xFF9933FF, "CB Chanel: Твоят CB Chanel беше изключен, защото вече не си в евента!");
}
cbchat[playerid] = 0;
eventmembers-=1;
inevent[playerid]=0;
cbchat[playerid]=0;
if(hidename[playerid]==1)
{
hidename[playerid]=0;
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
ShowPlayerNameTagForPlayer(i, playerid, 1);
}
}
SetPlayerWeather(playerid,serverWeather);
if(hours==0) SetWorldTime(0); if(hours==6) SetWorldTime(5); if(hours==12) SetWorldTime(12); if(hours==18) SetWorldTime(2);
if(hours==1) SetWorldTime(0); if(hours==7) SetWorldTime(6); if(hours==13) SetWorldTime(13); if(hours==19) SetWorldTime(2);
if(hours==2) SetWorldTime(0); if(hours==8) SetWorldTime(7); if(hours==14) SetWorldTime(16); if(hours==20) SetWorldTime(0);
if(hours==3) SetWorldTime(0); if(hours==9) SetWorldTime(12); if(hours==15) SetWorldTime(16); if(hours==21) SetWorldTime(0);
if(hours==4) SetWorldTime(5); if(hours==10) SetWorldTime(12); if(hours==16) SetWorldTime(16); if(hours==22) SetWorldTime(0);
if(hours==5) SetWorldTime(5); if(hours==11) SetWorldTime(12); if(hours==17) SetWorldTime(23); if(hours==23) SetWorldTime(0);
}
PlayerInfo[playerid][pDeaths]+=1; PlayerInfo[killerid][pKills]+=1;
if(indmon[playerid]==1 && indmon[killerid]==1)
{
PlayerInfo[killerid][pDMONKills2]+=1;
PlayerInfo[killerid][pDMONKills]+=1;
TextDrawShowForPlayer(killerid, DMON2);
PlayerInfo[killerid][pHideDMON2]=4;
if(PlayerInfo[killerid][pDMONKills]>=20)
{
GivePlayerEP(playerid,1);
PlayerInfo[killerid][pDMONKills]=0;
SendClientMessage(killerid,0x01E5A7FF,"- След като събра нужните убийства в полето, ти спечели едно EP -"); //for change
}
if(PlayerInfo[killerid][pDMONKills2]>dmtop)
{
new stringaz[256];
format(stringaz, 256, "~w~DM AREA~n~~n~~r~NEW RECORD: ~g~%d",PlayerInfo[killerid][pDMONKills2]);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
GameTextForPlayer(i, stringaz, 3000, 3);
}
new stringa[256];
if(dmtop>20)
{
format(stringa,256,"TOP: %s надмина %s по най-много убийства без умиране в {FF0000}DM Area",pname[killerid],dmtop2);
SendClientMessageToAll(0x80FF80FF,stringa);
format(stringa,256,"TOP: Новият резултат е %d убийства без умиране!",PlayerInfo[killerid][pDMONKills2]);
SendClientMessageToAll(0x80FF80FF,stringa);
}
else
{
format(stringa,256,"TOP: %s направи рекорд по най-много убийства без умиране в {FF0000}DM Area",pname[killerid]);
SendClientMessageToAll(0x80FF80FF,stringa);
format(stringa,256,"TOP: Новият резултат е %d убийства без умиране!",PlayerInfo[killerid][pDMONKills2]);
SendClientMessageToAll(0x80FF80FF,stringa);
}
dmtop=PlayerInfo[killerid][pDMONKills2];
new dmon[64]; format(dmon, 64, "/Top/dmon.ini");
dini_Set(dmon,"Killer",pname[killerid]);
dini_IntSet(dmon,"Kills",dmtop);
format(dmtop2,64,"%s",pname[killerid]);
PlayerInfo[killerid][pDMONKills2]=0;
}
new stringtext[115];
TextDrawHideForPlayer(killerid, DMON[killerid]);
format(stringtext, 115, " ~r~Kills: ~w~%d/~g~20",PlayerInfo[killerid][pDMONKills]);
TextDrawSetString(DMON[killerid], stringtext);
TextDrawShowForPlayer(killerid, DMON[killerid]);
new Float:myarmour;
GetPlayerArmour(killerid,myarmour);
SetPlayerArmour(killerid,myarmour+25);
}
if(induel[playerid]==1)
{
RestartPlayerColor(duelprotivnik[playerid]);
new stringduel[256];
new formatrank[256];
if(dueltype[playerid]==1 && dueltype[duelprotivnik[playerid]]==1)
{
format(formatrank,256,"~g~RANK: %d",rankformula[duelprotivnik[playerid]]);
GameTextForPlayer(duelprotivnik[playerid], formatrank, 5000, 3);
format(formatrank,256,"~g~RANK: %d",rankformula[playerid]);
GameTextForPlayer(playerid, formatrank, 5000, 3);
format(stringduel, 256, "Ти спечели дуела срещу %s и заслужаваш Rank %d", pname[playerid],rankformula[duelprotivnik[playerid]]);
SendClientMessage(duelprotivnik[playerid], 0xFFE400FF, stringduel);
format(stringduel, 256, "Ти загуби дуела срещу %s и заслужаваш  Rank %d", pname[duelprotivnik[playerid]],rankformula[playerid]);
SendClientMessage(playerid, 0xFFE400FF, stringduel);
new stringdueltest[256];
dueltype[playerid]=0;
dueltype[duelprotivnik[playerid]]=0;
new stringdueltest2[256];
dueltimer[playerid]=0;
dueltimer[duelprotivnik[playerid]]=0;
format(stringdueltest,256,"[Duel Test] %s победи в дуела срещу %s и заслужава Rank %d",pname[duelprotivnik[playerid]],pname[playerid],rankformula[duelprotivnik[playerid]]);
format(stringdueltest2,256,"[Duel Test] %s изгуби в дуела срещу %s и заслужава Rank %d",pname[playerid],pname[duelprotivnik[playerid]],rankformula[playerid]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,stringdueltest);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,stringdueltest2);
}
else if(dueltype[playerid]==0 && dueltype[duelprotivnik[playerid]]==0)
{
RestartPlayerColor(duelprotivnik[playerid]);
dueltype[playerid]=0;
dueltype[duelprotivnik[playerid]]=0;
RestartPlayerColor(duelprotivnik[playerid]);
GivePlayerCash(playerid,-duelzalog[playerid]);
GivePlayerCash(duelprotivnik[playerid],duelzalog[playerid]);
AfterDuel(duelprotivnik[playerid]);
GameTextForPlayer(duelprotivnik[playerid], "~g~WINNER", 5000, 3);
format(stringduel, 256, "Ти спечели дуела срещу %s и получаваш $%d от залога.", pname[playerid],duelzalog[playerid]);
SendClientMessage(duelprotivnik[playerid], 0xFFE400FF, stringduel);
format(stringduel, 256, "Ти загуби дуела срещу %s и загуби $%d от залога.", pname[duelprotivnik[playerid]],duelzalog[playerid]);
SendClientMessage(playerid, 0xFFE400FF, stringduel);
}
duelzalog[playerid]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelTimer]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelTimer2]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelTimer3]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelTimer4]=0;
PlayerInfo[playerid][pDuelTimer]=0;
PlayerInfo[playerid][pDuelTimer2]=0;
PlayerInfo[playerid][pDuelTimer3]=0;
PlayerInfo[duelprotivnik[playerid]][pDuelTimer4]=0;
duelzalog[duelprotivnik[playerid]]=0;
AfterDuel(duelprotivnik[playerid]);
duelsend[playerid]=-1; duelsend[duelprotivnik[playerid]]=-1;
induel[duelprotivnik[playerid]]=0;
induel[playerid]=0;
duelsender[playerid]=-1; duelsender[duelprotivnik[playerid]]=-1;
duelprotivnik[duelprotivnik[playerid]]=-1;
duelprotivnik[playerid]=-1;
}
if(hitmanby[playerid]!=-1)
{
new hitmanstring[256];
format(hitmanstring, 256, "Hitman: %s уби %s и спечели $%d", pname[killerid],pname[playerid],hitmanprice[playerid]);
SendClientMessageToAll(0xA4A400FF, hitmanstring);
GivePlayerCash(killerid,hitmanprice[playerid]);
hitmaner[hitmanby[playerid]]=-1;
hitmanprice[playerid]=0;
hitmanby[playerid]=-1;
}
if(PlayerInfo[playerid][pVip]==0)
{
GivePlayerCash(playerid,-100);
}
if(PlayerInfo[playerid][pVip]>0 || freevip==1)
{
GivePlayerCash(playerid,-50);
}
if(killerid != playerid)
{
if(PlayerInfo[killerid][pVip]==0)
{
GivePlayerCash(killerid,100);
}
if(PlayerInfo[killerid][pVip] >0 || freevip==1)
{
GivePlayerCash(killerid,200);
}
if(PlayerInfo[killerid][pVip]==6 || freevip==1)
{
GivePlayerCash(killerid,600);
}
}
if(PlayerInfo[playerid][pADuty]==1)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
}
if(PlayerInfo[playerid][pVIPLabel]==1)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
}
return 1;
}
public OnVehicleSpawn(vehicleid)
{
if(GetVehicleModel(vehicleid) == 481
|| GetVehicleModel(vehicleid) == 509
|| GetVehicleModel(vehicleid) == 510
|| GetVehicleModel(vehicleid) == 481
|| GetVehicleModel(vehicleid) == 460
|| GetVehicleModel(vehicleid) == 476
|| GetVehicleModel(vehicleid) == 511
|| GetVehicleModel(vehicleid) == 512
|| GetVehicleModel(vehicleid) == 519
|| GetVehicleModel(vehicleid) == 513
|| GetVehicleModel(vehicleid) == 520
|| GetVehicleModel(vehicleid) == 533
|| GetVehicleModel(vehicleid) == 577
|| GetVehicleModel(vehicleid) == 593
|| GetVehicleModel(vehicleid) == 417
|| GetVehicleModel(vehicleid) == 425
|| GetVehicleModel(vehicleid) == 447
|| GetVehicleModel(vehicleid) == 469
|| GetVehicleModel(vehicleid) == 487
|| GetVehicleModel(vehicleid) == 497
|| GetVehicleModel(vehicleid) == 548
|| GetVehicleModel(vehicleid) == 563
|| GetVehicleModel(vehicleid) == 464
|| GetVehicleModel(vehicleid) == 441
|| GetVehicleModel(vehicleid) == 465
|| GetVehicleModel(vehicleid) == 501
|| GetVehicleModel(vehicleid) == 564
|| GetVehicleModel(vehicleid) == 594)
{
ToggleEngine(vehicleid, VEHICLE_PARAMS_ON); vehEngineStatusON[vehicleid]=1;
}
if(lockedvehicle[vehicleid]==1)
{
if(drive[vehicleid]==0)
{
ToggleEngine(vehicleid, VEHICLE_PARAMS_OFF); vehEngineStatusON[vehicleid]=0;
}
}
if(restartedvehs==0)
{
if(vehicleid==gangcars[1][16] || vehicleid==gangcars[1][19])
{
AddVehicleComponent(vehicleid,1034);
AddVehicleComponent(vehicleid,1035);
AddVehicleComponent(vehicleid,1041);
}
if(vehicleid==gangcars[1][20] || vehicleid==gangcars[1][15])
{
AddVehicleComponent(vehicleid,1068);
AddVehicleComponent(vehicleid,1071);
}
if(vehicleid==gangcars[6][4] || vehicleid==gangcars[6][5])
{
AddVehicleComponent(vehicleid,1138);
}
if(vehicleid==gangcars[13][9] || vehicleid==gangcars[13][11]
|| vehicleid==gangcars[13][10] || vehicleid==gangcars[13][12])
{
AddVehicleComponent(vehicleid,1138);
}
if(vehicleid==gangcars[13][24] || vehicleid==gangcars[13][25]
|| vehicleid==gangcars[13][26] || vehicleid==gangcars[13][27])
{
AddVehicleComponent(vehicleid,1138);
}
/////////////////////////////////////////////////
if(!IsValidDynamicObject(gangcarsobject[1][21][0]))
{
for(new i=0; i<2; i++)
{
if(!IsValidDynamicObject(gangcarsobject[1][21][i]))
{
DestroyDynamicObject(gangcarsobject[1][21][i]);
}
}
gangcarsobject[1][21][0] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690,   0.00000, 0.00000, 0.00000);
AttachDynamicObjectToVehicle(gangcarsobject[1][21][0], gangcars[1][21],-0.72500, 0.00750, -0.58690,   0.00000, 0.00000, 0.00000);
gangcarsobject[1][21][1] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690,   0.00000, 0.00000, 0.00000);
AttachDynamicObjectToVehicle(gangcarsobject[1][21][1], gangcars[1][21],0.72500, 0.00750, -0.58690,   0.00000, 0.00000, 0.00000);
}
if(!IsValidDynamicObject(gangcarsobject[1][22][0]))
{
for(new i=0; i<2; i++)
{
if(!IsValidDynamicObject(gangcarsobject[1][22][i]))
{
DestroyDynamicObject(gangcarsobject[1][22][i]);
}
}
gangcarsobject[1][22][0] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690,   0.00000, 0.00000, 0.00000);
AttachDynamicObjectToVehicle(gangcarsobject[1][22][0], gangcars[1][22],-0.72500, 0.00750, -0.58690,   0.00000, 0.00000, 0.00000);
gangcarsobject[1][22][1] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690,   0.00000, 0.00000, 0.00000);
AttachDynamicObjectToVehicle(gangcarsobject[1][22][1], gangcars[1][22],0.72500, 0.00750, -0.58690,   0.00000, 0.00000, 0.00000);
}
/////////////////////////////////////////////////////
if(!IsValidDynamicObject(gangcarsobject[6][2][0]))
{
for(new i=0; i<2; i++)
{
if(!IsValidDynamicObject(gangcarsobject[6][2][i]))
{
DestroyDynamicObject(gangcarsobject[6][2][i]);
}
}
gangcarsobject[6][2][0] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690,   0.00000, 0.00000, 0.00000);
AttachDynamicObjectToVehicle(gangcarsobject[6][2][0], gangcars[6][2],-0.72500, 0.00750, -0.58690,   0.00000, 0.00000, 0.00000);
gangcarsobject[6][2][1] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690,   0.00000, 0.00000, 0.00000);
AttachDynamicObjectToVehicle(gangcarsobject[6][2][1], gangcars[6][2],0.72500, 0.00750, -0.58690,   0.00000, 0.00000, 0.00000);
}
if(!IsValidDynamicObject(gangcarsobject[6][1][0]))
{
for(new i=0; i<2; i++)
{
if(!IsValidDynamicObject(gangcarsobject[6][1][i]))
{
DestroyDynamicObject(gangcarsobject[6][1][i]);
}
}
gangcarsobject[6][1][0] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690,   0.00000, 0.00000, 0.00000);
AttachDynamicObjectToVehicle(gangcarsobject[6][1][0], gangcars[6][1],-0.72500, 0.00750, -0.58690,   0.00000, 0.00000, 0.00000);
gangcarsobject[6][1][1] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690,   0.00000, 0.00000, 0.00000);
AttachDynamicObjectToVehicle(gangcarsobject[6][1][1], gangcars[6][1],0.72500, 0.00750, -0.58690,   0.00000, 0.00000, 0.00000);
}
//////////////////////////////////////////////////
if(!IsValidDynamicObject(gangcarsobject[13][48][0]))
{
for(new i=0; i<2; i++)
{
if(!IsValidDynamicObject(gangcarsobject[13][48][i]))
{
DestroyDynamicObject(gangcarsobject[13][48][i]);
}
}
gangcarsobject[13][48][0] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690,   0.00000, 0.00000, 0.00000);
AttachDynamicObjectToVehicle(gangcarsobject[13][48][0], gangcars[13][48],-0.72500, 0.00750, -0.58690,   0.00000, 0.00000, 0.00000);
gangcarsobject[13][48][1] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690,   0.00000, 0.00000, 0.00000);
AttachDynamicObjectToVehicle(gangcarsobject[13][48][1], gangcars[13][48],0.72500, 0.00750, -0.58690,   0.00000, 0.00000, 0.00000);
}
if(!IsValidDynamicObject(gangcarsobject[13][49][0]))
{
for(new i=0; i<2; i++)
{
if(!IsValidDynamicObject(gangcarsobject[13][49][i]))
{
DestroyDynamicObject(gangcarsobject[13][49][i]);
}
}
gangcarsobject[13][49][0] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690,   0.00000, 0.00000, 0.00000);
AttachDynamicObjectToVehicle(gangcarsobject[13][49][0], gangcars[13][49],-0.72500, 0.00750, -0.58690,   0.00000, 0.00000, 0.00000);
gangcarsobject[13][49][1] = CreateDynamicObject(18647, -0.80500, -0.01250, -0.56690,   0.00000, 0.00000, 0.00000);
AttachDynamicObjectToVehicle(gangcarsobject[13][49][1], gangcars[13][49],0.72500, 0.00750, -0.58690,   0.00000, 0.00000, 0.00000);
}
////////////////////////////////////////////////
if(!IsValidDynamicObject(gangcarsobject[13][9][0]))
{
for(new i=0; i<10; i++)
{
if(!IsValidObject(gangcarsobject[13][9][i]))
{
DestroyObject(gangcarsobject[13][9][i]);
}
}
gangcarsobject[13][9][0] = CreateObject(19620, 10, 13.0, 10.0, 0, 0, 0);
AttachObjectToVehicle(gangcarsobject[13][9][0], gangcars[13][9], 0.000000, -0.10, 0.702634, 0.000000, 0.000000, 0.000000);
gangcarsobject[13][9][1] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,0.0);
SetObjectMaterialText(gangcarsobject[13][9][1], "\n{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g{E3EF02}g{00296D}g\n{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g", 0, OBJECT_MATERIAL_SIZE_256x128,"webdings", 30, 0, 0xFFFF8200, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
AttachObjectToVehicle(gangcarsobject[13][9][1], gangcars[13][9], 1.120, 0, 0, 0.3, 0.0, 0.0);//1.1 2.6
gangcarsobject[13][9][2] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,180.0);
//SetDynamicObjectMaterialText(gangcarsobject[13][11][2],"<00296D>g<00296D>g<00296D>g<00296D>g<00296D>g<00296D>g<00296D>g<00296D>g\n<00296D>g<00296D>g<00296D>g<00296D>g<00296D>g<00296D>g", 0, OBJECT_MATERIAL_SIZE_256x128, "webdings", 30, 1, 0xFFFFFFFF, 0, 0);
SetObjectMaterialText(gangcarsobject[13][9][2], "\n{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g{E3EF02}g{00296D}g\n{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g", 0, OBJECT_MATERIAL_SIZE_256x128,"webdings", 30, 0, 0xFFFF8200, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
AttachObjectToVehicle(gangcarsobject[13][9][2], gangcars[13][9], -1.120, 0, 0, 0.3, 0.0, 180.0);
}
if(!IsValidDynamicObject(gangcarsobject[13][10][0]))
{
for(new i=0; i<10; i++)
{
if(!IsValidObject(gangcarsobject[13][10][i]))
{
DestroyObject(gangcarsobject[13][10][i]);
}
}
gangcarsobject[13][10][0] = CreateObject(19620, 9.0, 13.0, 10.0, 0, 0, 0);
AttachObjectToVehicle(gangcarsobject[13][10][0], gangcars[13][10], 0.000000, -0.10, 0.702634, 0.000000, 0.000000, 0.000000);
gangcarsobject[13][10][1] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,0.0);
SetObjectMaterialText(gangcarsobject[13][10][1], "\n{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g{E3EF02}g{00296D}g\n{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g", 0, OBJECT_MATERIAL_SIZE_256x128,"webdings", 30, 0, 0xFFFF8200, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
AttachObjectToVehicle(gangcarsobject[13][10][1], gangcars[13][10], 1.120, 0, 0, 0.3, 0.0, 0.0);//1.1 2.6
gangcarsobject[13][10][2] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,180.0);
SetObjectMaterialText(gangcarsobject[13][10][2], "\n{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g{E3EF02}g{00296D}g\n{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g", 0, OBJECT_MATERIAL_SIZE_256x128,"webdings", 30, 0, 0xFFFF8200, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
AttachObjectToVehicle(gangcarsobject[13][10][2], gangcars[13][10], -1.120, 0, 0, 0.3, 0.0, 180.0);
}
if(!IsValidObject(gangcarsobject[13][11][0]))
{
for(new i=0; i<10; i++)
{
if(!IsValidObject(gangcarsobject[13][11][i]))
{
DestroyObject(gangcarsobject[13][11][i]);
}
}
gangcarsobject[13][11][0] = CreateObject(19419, 8, 13.0, 9.4, 0, 0, 0);
AttachObjectToVehicle(gangcarsobject[13][11][0], gangcars[13][11], 0.000000, 0.0, 0.872634, 0.000000, 0.000000, 0.000000);
gangcarsobject[13][11][1] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,0.0);
SetObjectMaterialText(gangcarsobject[13][11][1],"POLICE", 0, OBJECT_MATERIAL_SIZE_256x128, "BankGothic Md BT", 60, 1, 0xFFFF8200, 0, 1);
AttachObjectToVehicle(gangcarsobject[13][11][1], gangcars[13][11], 1.084, 0, 0, 0.3, 0.0, 0.0);
gangcarsobject[13][11][2] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,180.0);
SetObjectMaterialText(gangcarsobject[13][11][2],"POLICE", 0, OBJECT_MATERIAL_SIZE_256x128, "BankGothic Md BT", 60, 1, 0xFFFF8200, 0, 1);
AttachObjectToVehicle(gangcarsobject[13][11][2], gangcars[13][11], -1.084, 0, 0, 0.3, 0.0, 180.0);
}
if(!IsValidObject(gangcarsobject[13][24][0]))
{
for(new i=0; i<10; i++)
{
if(!IsValidObject(gangcarsobject[13][24][i]))
{
DestroyObject(gangcarsobject[13][24][i]);
}
}
gangcarsobject[13][24][0] = CreateObject(19620, 10, 13.0, 10.0, 0, 0, 0);
AttachObjectToVehicle(gangcarsobject[13][24][0], gangcars[13][24], 0.000000, -0.1, 0.792634, 0.000000, 0.000000, 0.000000);
gangcarsobject[13][24][1] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,0.0);
SetObjectMaterialText(gangcarsobject[13][24][1],"POLICE", 0, OBJECT_MATERIAL_SIZE_256x128, "BankGothic Md BT", 60, 1, 0xFFFF8200, 0, 1);
AttachObjectToVehicle(gangcarsobject[13][24][1], gangcars[13][24], 1.084, 0, 0, 0.3, 0.0, 0.0);
gangcarsobject[13][24][2] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,180.0);
SetObjectMaterialText(gangcarsobject[13][24][2],"POLICE", 0, OBJECT_MATERIAL_SIZE_256x128, "BankGothic Md BT", 60, 1, 0xFFFF8200, 0, 1);
AttachObjectToVehicle(gangcarsobject[13][24][2], gangcars[13][24], -1.084, 0, 0, 0.3, 0.0, 180.0);
}
/////////////////////////////////////////////////////////
if(!IsValidDynamicObject(gangcarsobject[13][25][0]))
{
for(new i=0; i<10; i++)
{
if(!IsValidObject(gangcarsobject[13][25][i]))
{
DestroyObject(gangcarsobject[13][25][i]);
}
}
gangcarsobject[13][25][0] = CreateObject(19620, 10, 13.0, 10.0, 0, 0, 0);
AttachObjectToVehicle(gangcarsobject[13][25][0], gangcars[13][25], 0.000000, -0.2, 0.792634, 0.000000, 0.000000, 0.000000);
gangcarsobject[13][11][1] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,0.0);
SetObjectMaterialText(gangcarsobject[13][25][1], "{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g{E3EF02}g{00296D}g\n{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g", 0, OBJECT_MATERIAL_SIZE_256x128,"webdings", 30, 0, 0xFFFF8200, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
AttachObjectToVehicle(gangcarsobject[13][25][1], gangcars[13][25], 1.084, 0, 0, 0.3, 0.0, 0.0);//1.1 2.6
gangcarsobject[13][11][2] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,180.0);
//SetDynamicObjectMaterialText(gangcarsobject[13][11][2],"<00296D>g<00296D>g<00296D>g<00296D>g<00296D>g<00296D>g<00296D>g<00296D>g\n<00296D>g<00296D>g<00296D>g<00296D>g<00296D>g<00296D>g", 0, OBJECT_MATERIAL_SIZE_256x128, "webdings", 30, 1, 0xFFFFFFFF, 0, 0);
SetObjectMaterialText(gangcarsobject[13][25][2], "{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g{E3EF02}g{00296D}g\n{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g", 0, OBJECT_MATERIAL_SIZE_256x128,"webdings", 30, 0, 0xFFFF8200, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
AttachObjectToVehicle(gangcarsobject[13][25][2], gangcars[13][25], -1.084, 0, 0, 0.3, 0.0, 180.0);
}
if(!IsValidObject(gangcarsobject[13][26][0]))
{
for(new i=0; i<10; i++)
{
if(!IsValidObject(gangcarsobject[13][26][i]))
{
DestroyObject(gangcarsobject[13][26][i]);
}
}
gangcarsobject[13][26][0] = CreateObject(18646, 9.0, 13.0, 10.0, 0, 0, 0);
AttachObjectToVehicle(gangcarsobject[13][26][0], gangcars[13][26], 0.0, 1.2, 0.4, 0.0, 0.1, 0.0);
gangcarsobject[13][26][1] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,0.0);
SetObjectMaterialText(gangcarsobject[13][26][1], "{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g{E3EF02}g{00296D}g\n{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g", 0, OBJECT_MATERIAL_SIZE_256x128,"webdings", 30, 0, 0xFFFF8200, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
AttachObjectToVehicle(gangcarsobject[13][26][1], gangcars[13][26], 1.084, 0, 0, 0.3, 0.0, 0.0);
gangcarsobject[13][26][2] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,180.0);
SetObjectMaterialText(gangcarsobject[13][26][2], "{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g{E3EF02}g{00296D}g\n{00296D}g{E3EF02}g{00296D}g{00296D}g{E3EF02}g{00296D}g", 0, OBJECT_MATERIAL_SIZE_256x128,"webdings", 30, 0, 0xFFFF8200, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
AttachObjectToVehicle(gangcarsobject[13][26][2], gangcars[13][26], -1.084, 0, 0, 0.3, 0.0, 180.0);
}
if(!IsValidObject(gangcarsobject[13][27][0]))
{
for(new i=0; i<10; i++)
{
if(!IsValidDynamicObject(gangcarsobject[13][27][i]))
{
DestroyObject(gangcarsobject[13][27][i]);
}
}
gangcarsobject[13][27][0] = CreateObject(19419, 8, 13.0, 9.4, 0, 0, 0);
AttachObjectToVehicle(gangcarsobject[13][27][0], gangcars[13][27], 0.000000, 0.0, 0.872634, 0.000000, 0.000000, 0.000000);
gangcarsobject[13][27][1] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,0.0);
SetObjectMaterialText(gangcarsobject[13][27][1],"POLICE", 0, OBJECT_MATERIAL_SIZE_256x128, "BankGothic Md BT", 60, 1, 0xFFFF8200, 0, 1);
AttachObjectToVehicle(gangcarsobject[13][27][1], gangcars[13][27], 1.084, 0, 0, 0.3, 0.0, 0.0);
gangcarsobject[13][27][2] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,180.0);
SetObjectMaterialText(gangcarsobject[13][27][2],"POLICE", 0, OBJECT_MATERIAL_SIZE_256x128, "BankGothic Md BT", 60, 1, 0xFFFF8200, 0, 1);
AttachObjectToVehicle(gangcarsobject[13][27][2], gangcars[13][27], -1.084, 0, 0, 0.3, 0.0, 180.0);
}
if(!IsValidObject(gangcarsobject[13][12][0]))
{
for(new i=0; i<10; i++)
{
if(!IsValidObject(gangcarsobject[13][12][i]))
{
DestroyObject(gangcarsobject[13][12][i]);
}
}
gangcarsobject[13][12][0] = CreateObject(19620, 10, 13.0, 10.0, 0, 0, 0);
AttachObjectToVehicle(gangcarsobject[13][12][0], gangcars[13][12], 0.000000, -0.1, 0.792634, 0.000000, 0.000000, 0.000000);
gangcarsobject[13][12][1] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,0.0);
SetObjectMaterialText(gangcarsobject[13][12][1],"POLICE", 0, OBJECT_MATERIAL_SIZE_256x128, "BankGothic Md BT", 60, 1, 0xFFFF8200, 0, 1);
AttachObjectToVehicle(gangcarsobject[13][12][1], gangcars[13][12], 1.084, 0, 0, 0.3, 0.0, 0.0);
gangcarsobject[13][12][2] = CreateObject(19477, 0.0,0.0,0.0,0.0,0.0,180.0);
SetObjectMaterialText(gangcarsobject[13][12][2],"POLICE", 0, OBJECT_MATERIAL_SIZE_256x128, "BankGothic Md BT", 60, 1, 0xFFFF8200, 0, 1);
AttachObjectToVehicle(gangcarsobject[13][12][2], gangcars[13][12], -1.084, 0, 0, 0.3, 0.0, 180.0);
}
if(vehobjectsloaded[vehicleid]>-1)
{
for(new i=0;i<=vehobjectsloaded[vehicleid];i++)
{
DestroyDynamicObject(privatecarobject[vehicleid][i]);
privatecarobject[vehicleid][i]=CreateDynamicObject(vObject[vehicleid][i],0.0,0.0,0.0, 0.0,0.0,0.0);
SetObjectMaterial(privatecarobject[vehicleid][i], 0, 4981, "wiresetc2_las", "antenna1", 0xFFFFFFFF);
AttachDynamicObjectToVehicle(privatecarobject[vehicleid][i], vehicleid, vObjectX[vehicleid][i], vObjectY[vehicleid][i],
vObjectofz[vehicleid][i], vObjectfRotX[vehicleid][i], vObjectfRotY[vehicleid][i], vObjectfRotofaz[vehicleid][i]);
}
}
//////////
}
if(privatecars[vehicleid]==1)
{
SetVehiclePos(vehicleid,privatecarX[vehicleid],privatecarY[vehicleid],privatecarZ[vehicleid]);
//SetVehicleZAngle(vehicleid,privatecarA[vehicleid]);
VehOtherInfo[vehicleid][vPrivateSetAngle]=1;
}
eventveh[vehicleid]=0;
return 1;
}
public OnVehicleDeath(vehicleid, killerid)
{
eventveh[vehicleid]=0;
return 1;
}
public OnPlayerText(playerid, text[])
{
if(logged[playerid]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва първо да влезеш в профила си, преди да пишеш!");
return 0;
}
if(PlayerInfo[playerid][pMuted] > 0 || PlayerInfo[playerid][pADMINMute]==1)
{
SendClientMessage(playerid, 0xBFC0C2FF, "Не можеш да пишеш в чата сега, защото си заглушен!");
return 0;
}
if(togchat[playerid]==1 && cbchat[playerid]==0)
{
SendClientMessage(playerid, 0xBFC0C2FF, "Ти си игнорирал да ти идват съобщения от главния чат!");
return 0;
}
printf("[say] %s(id:%d): %s",pname[playerid],playerid,text);
/*if (strfind(text, ":",true) != -1)
{
SendClientMessage(playerid, COLOR_RED, "Сървърът засече опит за реклама на IP Address!");
return 0;
}*/
if (strfind(text, "nenormalen",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}nenormalen{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "otkachen",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}otkachen{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "myrshlqk",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}myrshlqk{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "myrsha",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}myrsha{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "murshlqk",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}murshlqk{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "mursha",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}mursha{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "hyi",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}hyi{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "kyr",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}kyr{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "pytka",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}pytka{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "typanar",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}typanar{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "tupanar",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}tupanar{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "duda",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}duda{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "bokluk",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}bokluk{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "neshtasten",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}neshtasten{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "pedal",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}pedal{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "pederas",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}pederas{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "gei",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}gei{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "putka",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}putka{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "hui",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}hui{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "kur",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}kur{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "lapa",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думата {ff0000}lapa{E60000} е строго забранена в чата!"); return 0; }
if (strfind(text, "maika ti",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думите {ff0000}maika ti{E60000} са строго забранени в чата!"); return 0; }
if (strfind(text, "maluk penis",true) != -1) {  SendClientMessage(playerid, COLOR_RED, "Думите {ff0000}maluk penis{E60000} са строго забранени в чата!"); return 0; }
if (strfind(text, "da eba",true) != -1) { SendClientMessage(playerid, COLOR_RED, "Думите {ff0000}da eba{E60000} са строго забранени в чата!"); return 0;  }
if(cbchat[playerid]>0 && PlayerInfo[playerid][pOrganisator]==0)
{
new string256[256];
format(string256, 256, "[CB: %d] %s(%d): %s",cbchat[playerid],pname[playerid], playerid, text[0]);
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
if(cbchat[i]==cbchat[playerid] || PlayerInfo[i][pTogCB]==1)
{
SendClientMessage(i,0xFF9933FF, string256);
//SendClientMessage(playerid,0xFF9933FF, string256);
return 0;
}
}
}
if(cbchat[playerid]>0 && PlayerInfo[playerid][pOrganisator]==1)
{
new string256[256];
format(string256, 256, "[CB: %d] %s(%d): {FF0000}%s",cbchat[playerid],pname[playerid], playerid, text[0]);
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
if(cbchat[i]==cbchat[playerid] || PlayerInfo[i][pTogCB]==1)
{
SendClientMessage(i,0xFF9933FF, string256);
//SendClientMessage(playerid,0xFF9933FF, string256);
return 0;
}
}
}
//if(cbchat[i]==0 && togchat[i]==0)
//{
if(PlayerInfo[playerid][pTextSpam]==0)
{
PlayerInfo[playerid][pTextSpam]=8;
}
textspam[playerid]+=1;
if(textspam[playerid]==5)
{
new string200[200];
format(string200, 200, "[DEFENDER] %s беше заглушен за 25 минути, поради SPAM в чата",pname[playerid]);
SendClientMessageToAll(0xE60000FF,string200);
PlayerInfo[playerid][pMuted]=120*25;
PlayerInfo[playerid][pMuteReason] = 3;
return 0;
}
if(cbchat[playerid]==0)
{
new string25622[256];
if(PlayerInfo[playerid][pClan]==0)
{
format(string25622, 256, "{FFFFFF}(%d): {FFFFFF}%s", playerid, text[0]);
SendPlayerMessageToAll(playerid, string25622);
return 0;
}
if(PlayerInfo[playerid][pClan]>0)
{
new string256223[1256];
format(string256223, 1256, "{%06x}[%s] %s{FFFFFF} (%d): {FFFFFF}%s",GetPlayerColor(playerid) >>> 8,ClanInfo[PlayerInfo[playerid][pClan]][cName],pname[playerid], playerid, text);
SendClientMessageToAll(-1,string256223);
return 0;
}
}
return 1;
}
public OnPlayerCommandText(playerid, cmdtext[])
{
new cmd[256];
new tmp[256];
new idx;
new string[256];
cmd=strtok(cmdtext, idx);
printf("[cmd] %s(id: %d): %s",pname[playerid],playerid,cmdtext);
if(logged[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да влезеш в акаунта преди да ползваш команда!");
if(PlayerInfo[playerid][pCommandSpam]==0)
{
PlayerInfo[playerid][pCommandSpam]=8;
}
commandspam[playerid]+=1;
if(commandspam[playerid]==9)
{
new string115[115];
format(string115,115,"[DEFENDER] %s беше KICKED [Причина: Command Spam]",pname[playerid]);
SendClientMessageToAll(0xE60000FF,string115);
PlayerInfo[playerid][pKick]=1;
return 1;
}
//
if (strcmp("/bus", cmdtext, true, 10) == 0)
{
if(GetPlayerVehicleID(playerid) == carbus[1] || GetPlayerVehicleID(playerid) == carbus[2] || GetPlayerVehicleID(playerid) == carbus[3] || GetPlayerVehicleID(playerid) == carbus[4] || GetPlayerVehicleID(playerid) == carbus[5]
|| GetPlayerVehicleID(playerid) == carbus[6] || GetPlayerVehicleID(playerid) == carbus[7] || GetPlayerVehicleID(playerid) == carbus[8] || GetPlayerVehicleID(playerid) == carbus[9])
{
new pizzastring[256];
if(PlayerInfo[playerid][pBusTimer1] != 0)
{
format(pizzastring, 256, "Не можеш да работиш тази работа в момента.");
SendClientMessage(playerid, COLOR_GRAD1, pizzastring);
return 1;
}
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си с куфара!");}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си CMN1!"); }
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се работиш, докато си в евент!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си в DMON!");
onwork[playerid]=1;
SetPlayerColor(playerid, 0xD8844DFF);
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
if(GetPlayerVehicleID(playerid) == carbus[1] || GetPlayerVehicleID(playerid) == carbus[2] || GetPlayerVehicleID(playerid) == carbus[3] || GetPlayerVehicleID(playerid) == carbus[4] || GetPlayerVehicleID(playerid) == carbus[5])
{
SetPlayerCheckpoint(playerid, BusCheckPoint1, 4.0);
}
else
{
SetPlayerCheckpoint(playerid, BusCheckPoint2_1, 4.0);
}
format(pizzastring, 256, "Bus: Ти започна работа като шофьор на автобус и сега трябва да следваш червените маркери.");
SendClientMessage(playerid, COLOR_JOB, pizzastring);
SendClientMessage(playerid, COLOR_WHITE, "Job: Нямаш право да слезеш от превозното средство. Ако искаш да напуснеш работата, напиши {e7905e}/leavejob");
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_ON); vehEngineStatusON[GetPlayerVehicleID(playerid)]=1;
return 1;
} else {
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в превозното средство, за да започнеш работа!");
}
return 1;
}
if (strcmp("/coalmine", cmdtext, true, 10) == 0)
{
if(GetPlayerVehicleID(playerid) == carcoalmine[1] || GetPlayerVehicleID(playerid) == carcoalmine[2] || GetPlayerVehicleID(playerid) == carcoalmine[3] || GetPlayerVehicleID(playerid) == carcoalmine[4])
{
new pizzastring[256];
if(PlayerInfo[playerid][pCoalmineTimer1] != 0)
{
format(pizzastring, 256, "Не можеш да работиш тази работа в момента.");
SendClientMessage(playerid, COLOR_GRAD1, pizzastring);
return 1;
}
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си с куфара!");}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си CMN1!"); }
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се работиш, докато си в евент!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си в DMON!");
if(cmn1[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си CMN1!");
onwork[playerid]=1;
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
SetPlayerColor(playerid, 0xD8844DFF);
drive[GetPlayerVehicleID(playerid)]=1;
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_ON); vehEngineStatusON[GetPlayerVehicleID(playerid)]=1;
SetPlayerCheckpoint(playerid, CoalmineCheckPoint1, 4.0);
format(pizzastring, 256, "Coalmine: Ти започна работа като шофьор на самосвал и сега трябва да следваш червените маркери.");
SendClientMessage(playerid, COLOR_JOB, pizzastring);
SendClientMessage(playerid, COLOR_WHITE, "Job: Нямаш право да слезеш от превозното средство. Ако искаш да напуснеш работата, напиши {e7905e}/leavejob");
return 1;
} else {
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в превозното средство, за да започнеш работа!");
}
return 1;
}
////////////////////////////////////////////////////////
if (strcmp("/taxi", cmdtext, true, 10) == 0)
{
if(GetPlayerVehicleID(playerid) == jobtaxivehs[0] || GetPlayerVehicleID(playerid) == jobtaxivehs[1] || GetPlayerVehicleID(playerid) == jobtaxivehs[2]
|| GetPlayerVehicleID(playerid) == jobtaxivehs[3] || GetPlayerVehicleID(playerid) == jobtaxivehs[4] || GetPlayerVehicleID(playerid) == jobtaxivehs[5])
{
drive[GetPlayerVehicleID(playerid)]=1;
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_ON); vehEngineStatusON[GetPlayerVehicleID(playerid)]=1;
SendClientMessage(playerid, COLOR_JOB, "Taxi Job: Вие запалихте таксито, сега превозвайте хора от едно място до друго");
drive[GetPlayerVehicleID(playerid)]=1;
}
return 1;
}
if (strcmp("/pizza", cmdtext, true, 10) == 0)
{
if(GetPlayerVehicleID(playerid) == carpizza[1] || GetPlayerVehicleID(playerid) == carpizza[2] || GetPlayerVehicleID(playerid) == carpizza[3] || GetPlayerVehicleID(playerid) == carpizza[4] || GetPlayerVehicleID(playerid) == carpizza[5] || GetPlayerVehicleID(playerid) == carpizza[6])
{
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(cmn1[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си CMN1!");
if(getmbid==playerid) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в Moneybox!");
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
new pizzastring[256];
if(PlayerInfo[playerid][pPizzaTimer1] != 0)
{
format(pizzastring, 256, "Не можеш да работиш тази работа в момента.");
SendClientMessage(playerid, COLOR_GRAD1, pizzastring);
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се работиш, докато си в евент!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си в DMON!");
onwork[playerid]=1;
drive[GetPlayerVehicleID(playerid)]=1;
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
PlayerInfo[playerid][pJob]=1;
PlayerInfo[playerid][pPizzaTimer]=900*2;
SetPlayerColor(playerid, 0xD8844DFF);
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_ON); vehEngineStatusON[GetPlayerVehicleID(playerid)]=1;
SetPlayerCheckpoint(playerid, 1458.9838,-1721.0509,13.0068, 3);
SendClientMessage(playerid, COLOR_JOB, "Pizza Job: Ти започна работа, като разносвач на пица. Сега трябва да следваш маркерите.");
SendClientMessage(playerid, COLOR_WHITE, "Job: Нямаш право да слезеш от превозното средство. Ако искаш да напуснеш работата, напиши {e7905e}/leavejob");
if(PlayerInfo[playerid][pMission]==3)
{
DisablePlayerRaceCheckpoint(playerid);
SendClientMessage(playerid,0xFF3737FF,"[Мисия 4] Сега трябва да разнасяш пица.");
}
return 1;
} else {
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в мотора, за да започнеш работа!");
}
return 1;
}
///////////////////////////////////////////////////////
if (strcmp("/sweep", cmdtext, true, 10) == 0)
{
if(GetPlayerVehicleID(playerid) == carsweeper[1] || GetPlayerVehicleID(playerid) == carsweeper[2] || GetPlayerVehicleID(playerid) == carsweeper[3] || GetPlayerVehicleID(playerid) == carsweeper[4])
{
new pizzastring[256];
if(PlayerInfo[playerid][pSweeperTimer1] != 0)
{
format(pizzastring, 256, "Не можеш да работиш тази работа в момента.");
SendClientMessage(playerid, COLOR_GRAD1, pizzastring);
return 1;
}
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си с куфара!");}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си CMN1!"); }
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се работиш, докато си в евент!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си в DMON!");
onwork[playerid]=1;
SetPlayerColor(playerid, 0xD8844DFF);
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
drive[GetPlayerVehicleID(playerid)]=1;
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_ON); vehEngineStatusON[GetPlayerVehicleID(playerid)]=1;
SetPlayerCheckpoint(playerid, SweepCheckPoint1, 4.0);
format(pizzastring, 256, "Sweeper: Ти започна работа като чистач на улици и сега трябва да следваш червените маркери.");
SendClientMessage(playerid, COLOR_JOB, pizzastring);
SendClientMessage(playerid, COLOR_WHITE, "Job: Нямаш право да слезеш от превозното средство. Ако искаш да напуснеш работата, напиши {e7905e}/leavejob");
return 1;
} else {
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в превозното средство, за да започнеш работа!");
}
return 1;
}
if (strcmp("/leavejob", cmdtext, true, 10) == 0)
{
if(onwork[playerid]==1)
{
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
new pizzastring[256];
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF); vehEngineStatusON[GetPlayerVehicleID(playerid)]=0;
format(pizzastring, 256, "Job: Ти напусна твоята работа, ела отново!");
SendClientMessage(playerid, COLOR_JOB, pizzastring);
onwork[playerid]=0;
onfootwork[playerid]=0;
PlayerInfo[playerid][pJob]=0;
PlayerInfo[playerid][pPizzaTimer]=0;
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
RestartPlayerColor(playerid);
RemovePlayerFromVehicle(playerid);
LoadMission(playerid);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"В момента не си на работа и не можеш да използваш тази команда!");
}
return 1;
}
if (strcmp("/deliver", cmdtext, true, 10) == 0)
{
if(GetPlayerVehicleID(playerid) == cardeliver[1] || GetPlayerVehicleID(playerid) == cardeliver[2] || GetPlayerVehicleID(playerid) == cardeliver[3] || GetPlayerVehicleID(playerid) == cardeliver[4] || GetPlayerVehicleID(playerid) == cardeliver[5])
{
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(cmn1[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си CMN1!");
if(getmbid==playerid) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в Moneybox!");
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
new pizzastring[500];
if(PlayerInfo[playerid][pDeliverTimer1] != 0)
{
format(pizzastring, 256, "Не можеш да работиш тази работа в момента.");
SendClientMessage(playerid, COLOR_GRAD1, pizzastring);
return 1;
}
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си с куфара!");}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си CMN1!"); }
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се работиш, докато си в евент!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си в DMON!");
onwork[playerid]=1;
SetPlayerColor(playerid, 0xD8844DFF);
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_ON); vehEngineStatusON[GetPlayerVehicleID(playerid)]=1;
SetPlayerCheckpoint(playerid, DeliverCheckPoint1, 4.0);
format(pizzastring, 500, "Deliver: Ти започна работа като доставчик и сега трябва да следваш червените маркери.");
SendClientMessage(playerid, COLOR_JOB, pizzastring);
SendClientMessage(playerid, COLOR_WHITE, "Job: Нямаш право да слезеш от превозното средство. Ако искаш да напуснеш работата, напиши {e7905e}/leavejob");
return 1;
} else {
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в буса, за да започнеш работа!");
}
return 1;
}
if (strcmp("/pilot", cmdtext, true, 10) == 0)
{
if(GetPlayerVehicleID(playerid) == carpilot[1] || GetPlayerVehicleID(playerid) == carpilot[2] || GetPlayerVehicleID(playerid) == carpilot[3] || GetPlayerVehicleID(playerid) == carpilot[4] || GetPlayerVehicleID(playerid) == carpilot[5])
{
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(cmn1[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си CMN1!");
if(getmbid==playerid) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в Moneybox!");
new pizzastring[500];
if(PlayerInfo[playerid][pPilotTimer1] != 0)
{
format(pizzastring, 256, "Не можеш да работиш тази работа в момента.");
SendClientMessage(playerid, COLOR_GRAD1, pizzastring);
return 1;
}
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си с куфара!");}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си CMN1!"); }
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се работиш, докато си в евент!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да работиш, докато си в DMON!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
onwork[playerid]=1;
SetPlayerColor(playerid, 0xD8844DFF);
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_ON); vehEngineStatusON[GetPlayerVehicleID(playerid)]=1;
SetPlayerCheckpoint(playerid, PilotCheckPoint1, 5.0);
format(pizzastring, 500, "Pilot: Ти започна работа като пилот и сега трябва да следваш червените маркери.");
SendClientMessage(playerid, COLOR_JOB, pizzastring);
SendClientMessage(playerid, COLOR_WHITE, "Job: Нямаш право да слезеш от превозното средство. Ако искаш да напуснеш работата, напиши {e7905e}/leavejob");
return 1;
} else {
SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в самолета, за да започнеш работа!");
}
return 1;
}
else if(strcmp(cmd, "/radioff", true) == 0)
{
if(PlayerInfo[playerid][pRadio]==0) return SendClientMessage(playerid, COLOR_GRAD1,"Ти нямаш радио!");
if(radion[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1,"Радиото вече е спряно!");
radion[playerid]=0;
StopAudioStreamForPlayer(playerid);
SendClientMessage(playerid,0x9ACD32FF,"- Ти изключи радиото -");
return 1;
}
else if(strcmp(cmd, "/radio", true) == 0)
{
if(PlayerInfo[playerid][pRadio]==0) return SendClientMessage(playerid, COLOR_GRAD1,"Ти нямаш радио!");
new vehicleid=GetPlayerVehicleID(playerid);
if(IsPlayerInAnyVehicle(playerid))
{
if(radioveh[vehicleid]!=0)
{
return SendClientMessage(playerid, COLOR_GRAD1,"В слушаш музиката от ПС в което си!");
}
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /radio [radio name]");
SendClientMessage(playerid, 0x9ACD32FF, "Radio names: City, Njoy, Zrock, Dubstep, Fresh, Veronika, NRJ, Severozapad, Ultra");
SendClientMessage(playerid, 0x9ACD32FF, "Radio names: 1Rock, Payner, Galaxy, Veselina");
SendClientMessage(playerid, 0x9ACD32FF, "Използвай '/radio off' за да не чуваш радиото в колата!");
SendClientMessage(playerid, 0x9ACD32FF, "Използвай '/radio check' за да провериш кой радио канал слушаш!");
return 1;
}
new level[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /radio [radio name]");
SendClientMessage(playerid, 0x9ACD32FF, "Radio names: City, Njoy, Zrock, Dubstep, Fresh, Veronika, NRJ, Severozapad, Ultra");
SendClientMessage(playerid, 0x9ACD32FF, "Radio names: 1Rock, Payner, Galaxy, Veselina");
SendClientMessage(playerid, 0x9ACD32FF, "Използвай '/radio off' за да не чуваш радиото в колата!");
SendClientMessage(playerid, 0x9ACD32FF, "Използвай '/radio check' за да провериш кой радио канал слушаш!");
return 1;
}
strmid(level, tmp, 0, sizeof(level), sizeof(level));
if(strcmp(level,"check",false)==0)
{
}
if(strcmp(level,"off",false)==0)
{
if(radioff[playerid]==0)
{
radioff[playerid]=1;
PlayAudioStreamForPlayer(playerid, "https://www.google.com/");
}
else
{
radioff[playerid]=0;
SendClientMessage(playerid,0x9ACD32FF,"- Ти вече отново ще чуваш радиото в колата -");StopAudioStreamForPlayer(playerid);
}
}
if(strcmp(level,"check",false)==0)
{
if(radion[playerid]==0 || radioff[playerid]==1) return SendClientMessage(playerid, 0x9ACD32FF,"Твоето радио не е пуснато!");
if(radion[playerid]==1) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио City");
if(radion[playerid]==2) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Njoy");
if(radion[playerid]==3) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Zrock");
if(radion[playerid]==4) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Dubstep");
if(radion[playerid]==5) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Fresh");
if(radion[playerid]==6) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Veronika");
if(radion[playerid]==7) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио NRJ");
if(radion[playerid]==8) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Severozapad");
if(radion[playerid]==9) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Ultra");
if(radion[playerid]==10) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио 1Rock");
if(radion[playerid]==11) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Payner");
if(radion[playerid]==12) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Galaxy");
if(radion[playerid]==13) SendClientMessage(playerid, 0x9ACD32FF,"Ти в момента слушаш радио Veselina");
}
if(strcmp(level,"city",false)==1 && strcmp(level,"njoy",false)==1 && strcmp(level,"zrock",false)==1 && strcmp(level,"dubstep",false)==1 && strcmp(level,"fresh",false)==1
&& strcmp(level,"veronika",false)==1 && strcmp(level,"nrj",false)==1 && strcmp(level,"severozapad",false)==1 && strcmp(level,"ultra",false)==1 && strcmp(level,"1rock",false)==1
&& strcmp(level,"payner",false)==1 && strcmp(level,"galaxy",false)==1 && strcmp(level,"veselina",false)==1
&& strcmp(level,"check",false)==1
&& strcmp(level,"off",false)==1
&& strcmp(level,"City",false)==1 && strcmp(level,"Njoy",false)==1 && strcmp(level,"Zrock",false)==1 && strcmp(level,"Dubstep",false)==1 && strcmp(level,"Fresh",false)==1
&& strcmp(level,"Veronika",false)==1 && strcmp(level,"Nrj",false)==1 && strcmp(level,"Severozapad",false)==1 && strcmp(level,"Ultra",false)==1
&& strcmp(level,"Payner",false)==1 && strcmp(level,"Galaxy",false)==1 && strcmp(level,"Veselina",false)==1)
{
SendClientMessage(playerid, COLOR_GRAD1,"Няма такова радио!");
return 1;
}
if(strcmp(level,"city",false)==0 || strcmp(level,"City",false)==0)
{
radioff[playerid]=0;
radion[playerid]=2;SendClientMessage(playerid,0x9ACD32FF,"- Ти пусна радио City -");
PlayAudioStreamForPlayer(playerid, "http://149.13.0.80/city64.m3u");
}
if(strcmp(level,"njoy",false)==0 || strcmp(level,"Njoy",false)==0)
{
radioff[playerid]=0;
radion[playerid]=2;SendClientMessage(playerid,0x9ACD32FF,"- Ти пусна радио Njoy -");
PlayAudioStreamForPlayer(playerid, "http://live.btvradio.bg/njoy.mp3.m3u");
}
if(strcmp(level,"zrock",false)==0 || strcmp(level,"Zrock",false)==0)
{
radioff[playerid]=0;
radion[playerid]=3;SendClientMessage(playerid,0x9ACD32FF,"- Ти пусна радио Zrock -");
PlayAudioStreamForPlayer(playerid, "http://live.btvradio.bg/z-rock.mp3.m3u");
}
if(strcmp(level,"dubstep",false)==0 || strcmp(level,"Dubstep",false)==0)
{
radioff[playerid]=0;
radion[playerid]=4;SendClientMessage(playerid,0x9ACD32FF,"- Ти пусна радио Dubstep -");
PlayAudioStreamForPlayer(playerid, "http://listen.di.fm/public3/dubstep.pls");
}
if(strcmp(level,"fresh",false)==0 || strcmp(level,"Fresh",false)==0)
{
radioff[playerid]=0;
radion[playerid]=5;SendClientMessage(playerid,0x9ACD32FF,"- Ти пусна радио Fresh -");
PlayAudioStreamForPlayer(playerid, "http://193.108.24.21:8000/fresh.m3u");
}
if(strcmp(level,"veronika",false)==0 || strcmp(level,"Veronika",false)==0)
{
radioff[playerid]=0;
radion[playerid]=6;SendClientMessage(playerid,0x9ACD32FF,"- Ти пусна радио Veronika -");
PlayAudioStreamForPlayer(playerid, "http://149.13.0.81/veronika64.m3u");
}
if(strcmp(level,"nrj",false)==0 || strcmp(level,"Nrj",false)==0)
{
radioff[playerid]=0;
radion[playerid]=7;SendClientMessage(playerid,0x9ACD32FF,"- Ти пусна радио NRJ -");
PlayAudioStreamForPlayer(playerid, "http://149.13.0.81/nrj64.m3u");
}
if(strcmp(level,"severozapad",false)==0 || strcmp(level,"Severozapad",false)==0)
{
radioff[playerid]=0;
radion[playerid]=8;SendClientMessage(playerid,0x9ACD32FF,"- Ти пусна радио Severozapad -");
PlayAudioStreamForPlayer(playerid, "http://stream-bg.net:8020/severozapad.m3u");
}
if(strcmp(level,"ultra",false)==0 || strcmp(level,"Ultra",false)==0)
{
radioff[playerid]=0;
radion[playerid]=9;SendClientMessage(playerid,0x9ACD32FF,"- Ти пусна радио Ultra -");
PlayAudioStreamForPlayer(playerid, "http://ultranet.biz/ultrapernik.m3u");
}
if(strcmp(level,"1rock",false)==0)
{
radioff[playerid]=0;
radion[playerid]=10;SendClientMessage(playerid,0x9ACD32FF,"- Ти пусна радио 1Rock -");
PlayAudioStreamForPlayer(playerid, "http://149.13.0.81/1rock128.m3u");
}
if(strcmp(level,"payner",false)==0 || strcmp(level,"Payner",false)==0)
{
radioff[playerid]=0;
radion[playerid]=11;SendClientMessage(playerid,0x9ACD32FF,"- Ти пусна радио Payner -");
PlayAudioStreamForPlayer(playerid, "http://78.129.224.11:29120/listen.pls");
}
if(strcmp(level,"galaxy",false)==0 || strcmp(level,"Galaxy",false)==0)
{
radioff[playerid]=0;
radion[playerid]=12;SendClientMessage(playerid,0x9ACD32FF,"- Ти пусна радио Galaxy -");
PlayAudioStreamForPlayer(playerid, "http://87.117.228.65:35961.pls");
}
if(strcmp(level,"veselina",false)==0 || strcmp(level,"Veselina",false)==0)
{
radioff[playerid]=0;
radion[playerid]=13;SendClientMessage(playerid,0x9ACD32FF,"- Ти пусна радио Veselina -");
PlayAudioStreamForPlayer(playerid, "http://31.13.223.148:8000/veselina/mp3");
}
return 1;
}
else if(strcmp(cmd, "/leaverace", true) == 0) //> for fix
{
if(MiniGameLeaveException(playerid, MINIGAME_STREET_RACE,true)==0) return 1;
LeavePlayerFromMiniGame(playerid, MINIGAME_STREET_RACE, false);
return 1;
}
else if(strcmp(cmd, "/joinrace", true) == 0) //> for fix
{
if(MiniGameException(playerid, MINIGAME_STREET_RACE,true)==0) return 1;
if(HisOwnVehicle(playerid, OWNVEH_YES)==0) return 1;
AddPlayerToMiniGame(playerid, MINIGAME_STREET_RACE);
fightForFinishRaceGame=1;
return 1;
}
//makechristmas
else if(strcmp(cmd, "/makechristmas", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
new string256[256];
if(christmas==0)
{
christmas=1;
format(string256, 256, "- %s активира коледните обекти и добави послание при влизане в сървъра -", pname[playerid]);
SendClientMessageToAll(0x2157f4FF, string256);
Christmas(true);
}
else
{
christmas=0;
format(string256, 256, "- %s премахна коледните обекти от сървъра -", pname[playerid]);
SendClientMessageToAll(0x2157f4FF, string256);
Christmas(false);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/freevip", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
new string256[256];
if(freevip==0)
{
freevip=1;
format(string256, 256, "- %s активира безплатен VIP Level 6 за всички -", pname[playerid]);
SendClientMessageToAll(0xE65B00FF, string256);
}
else
{
freevip=0;
format(string256, 256, "- %s деактивира безплатния VIP Level 6 за всички -", pname[playerid]);
SendClientMessageToAll(0xE65B00FF, string256);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/changepass", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(strlen(result)<1)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /changepass [password]");
return 1;
}
if(strlen(result)<4 || strlen(result)>20)
{
SendClientMessage(playerid,COLOR_GRAD1,"Паролата трябва да е от 4 до 20 символа!");
return 1;
}
if(strfind( result , "||", true) == 0 || strfind( result , "|", true ) == 0 || strfind( result , "~", true ) == 0 || strfind( result , ",", true ) == 0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Ти не можеш да използваш забранени символи!");
}
format(accountfiles[playerid], 28, "%s.ini", pname[playerid]);
dini_Set(accountfiles[playerid], "pPassword", result);
new string130[130];
format(string130, 130, "SERVER: Ти промени твоята парола на {FFFF00}%s", result);
SendClientMessage(playerid, 0xFFFFFFFF, string130);
return 1;
}
else if(strcmp(cmd, "/gotocor", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /gotocor [coor x] [coor y] [coor z]");
new coorx;
coorx = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /gotocor [coor x] [coor y] [coor z]");
new coory;
coory = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /gotocor [coor x] [coor y] [coor z]");
new coorz;
coorz = strval(tmp);
SetPlayerPos(playerid, coorx,coory,coorz);
SendClientMessage(playerid, 0xFFFF00FF, "- Вие се телепортирахте успешно! -");
return 1;
}
else if(strcmp(cmd, "/uninvite", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /uninvite [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[playerid][pRank] < 6)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
return 1;
}
if(PlayerInfo[para1[playerid]][pRank] > 5 && PlayerInfo[playerid][pGLeader]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да изгониш лидер!");
return 1;
}
if(para1[playerid]==playerid)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да изгониш себе си!");
return 1;
}
if(PlayerInfo[para1[playerid]][pTeam]==PlayerInfo[playerid][pTeam])
{
PlayerInfo[para1[playerid]][pFWarns]=0;
new string256[256];
format(string256, 256, "[FACTION CHAT] %s изгони %s от %s!", pname[playerid],pname[para1[playerid]],TeamInfo[PlayerInfo[playerid][pTeam]][tName]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
PlayerInfo[para1[playerid]][pSpawnO]=1; SendClientMessage(para1[playerid], 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Civil spawn!");
if(turfmember[para1[playerid]]==2 && nospam2[para1[playerid]]==0)
{
inturfmembers[PlayerInfo[para1[playerid]][pTeam]]-=1;
turfmember[para1[playerid]]=0;
format(string256, 256, "Turf War: {FF0000}%s{008cff} беше изгонен от банда/мафията и отпадна от атаката!",pname[playerid]);
SendFactionMessage(PlayerInfo[para1[playerid]][pTeam],0x008cffFF,string256);
if(inturfmembers[PlayerInfo[para1[playerid]][pTeam]]==0)
{
format(string256, 256, "Turf War: {FF0000}%s{008cff} не успя да превземе %s територията на %s!",TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tName],TurfInfo[TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]][TurfName],
TeamInfo[TurfInfo[TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]][TurfOwner]][tName]);
SendClientMessageToAll(0x008cffFF, string256);
turfwargang[TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]]=0;
//turfwargang[turfa]>0
turfattack[PlayerInfo[para1[playerid]][pTeam]]=0;
GangZoneStopFlashForAll(TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]);
TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]=0;
}
}
PlayerInfo[para1[playerid]][pRank]=1;
PlayerInfo[para1[playerid]][pTeam]=0; GivePlayerEP(para1[playerid],0);
if(PlayerInfo[playerid][pADuty]==0)
{
RestartPlayerColor(para1[playerid]);
}
if(IsPlayerInAnyVehicle(para1[playerid]) == 1 && PlayerInfo[para1[playerid]][pADuty]==0)
{
SendClientMessage(para1[playerid],0xFFFFFFFF, "- Твоят скин не се смени, защото не си пешеходец -");
}
else
{
if(PlayerInfo[para1[playerid]][pADuty]==0){
RestartPlayerSkin(para1[playerid]);
} }
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Човекът, който искаш да изгониш не е от твоята банда/мафия!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
return 1;
}
else if(strcmp(cmd, "/mph", true) == 0)
{
SendClientMessage(playerid, COLOR_YELLOW, "- Скороста вече ще я показва в m/s -");
kmh[playerid] = 1;
return 1;
}
else if(strcmp(cmd, "/kph", true) == 0)
{
SendClientMessage(playerid, COLOR_YELLOW, "- Скороста вече ще я показва в km/h -");
kmh[playerid] = 0;
return 1;
}
else if(strcmp(cmd, "/speedo", true) == 0)
{
if(speedo[playerid] == 0)
{
SendClientMessage(playerid, COLOR_YELLOW, "- Вие премахнахте вашия Speedo от екрана -");
speedo[playerid]=1;
if(IsPlayerInAnyVehicle(playerid))
{
TextDrawHideForPlayer(playerid,vehstatus[playerid]);
}
return 1;
}
if(speedo[playerid] == 1)
{
SendClientMessage(playerid, COLOR_YELLOW, "- Вие сложихте вашия Speedo на екрана -");
speedo[playerid]=0;
if(IsPlayerInAnyVehicle(playerid))
{
TextDrawShowForPlayer(playerid,vehstatus[playerid]);
}
}
return 1;
}
else if(strcmp(cmd, "/statistic", true) == 0)
{
if(statisticset[playerid] == 1)
{
SendClientMessage(playerid, 0xFFFF00FF, "- Вие сложихте статистиката на вашия екран -");
TextDrawShowForPlayer(playerid, statistic[playerid]);
statisticset[playerid] = 0;
return 1;
}
if(statisticset[playerid] == 0)
{
SendClientMessage(playerid, 0xFFFF00FF, "- Вие премахнахте статистиката на вашия екран -");
TextDrawHideForPlayer(playerid, statistic[playerid]);
statisticset[playerid] = 1;
}
return 1;
}
else if(strcmp(cmd, "/leavefaction", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /leavefaction [confirm]");
SendClientMessage(playerid, 0x00E600FF, "SERVER: confirm действа като потвърждение, напишете /leavefaction confirm");
return 1;
}
if(strcmp(result, "confirm", true) != 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /leavefaction [confirm]");
SendClientMessage(playerid, 0x00E600FF, "SERVER: confirm действа като потвърждение, напишете /leavefaction confirm");
return 1;
}
if(PlayerInfo[playerid][pTeam]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в банда/мафия!");
return 1;
}
new string256[256];
if(PlayerInfo[playerid][pRank]==6)
{
format(string256, 256, "%s махна неговото лидерство!",pname[playerid]);
SendClientMessage(para1[playerid], 0xF97804FF, string256);
}
PlayerInfo[playerid][pDFDuty]=0;
dutypolice[playerid]=0;
format(string256, 256, "[FACTION CHAT] %s напусна бандата/мафията по негово желание!", pname[playerid]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
if(turfmember[playerid]==2 && nospam2[playerid]==0)
{
inturfmembers[PlayerInfo[playerid][pTeam]]-=1;
turfmember[playerid]=0;
format(string256, 256, "Turf War: {FF0000}%s{008cff} напусна банда/мафията и отпадна от атаката!",pname[playerid]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x008cffFF,string256);
if(inturfmembers[PlayerInfo[playerid][pTeam]]==0)
{
format(string256, 256, "Turf War: {FF0000}%s{008cff} не успя да превземе %s територията на %s!",TeamInfo[PlayerInfo[playerid][pTeam]][tName],TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfName],
TeamInfo[TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfOwner]][tName]);
SendClientMessageToAll(0x008cffFF, string256);
turfwargang[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]]=0;
//turfwargang[turfa]>0
turfattack[PlayerInfo[playerid][pTeam]]=0;
GangZoneStopFlashForAll(TeamInfo[PlayerInfo[playerid][pTeam]][tWar]);
TeamInfo[PlayerInfo[playerid][pTeam]][tWar]=0;
}
}
if(IsPlayerInAnyVehicle(playerid) == 1 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xFFFFFFFF, "- Твоят скин не се смени, защото не си пешеходец -");
}
else {
if(adutyskinchanged[playerid]==0){RestartPlayerSkin(playerid); }}
PlayerInfo[playerid][pSpawnO]=1; SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Civil spawn!");
if(PlayerInfo[playerid][pADuty]==0){SetPlayerColor(playerid,0xFFFFFFFF);}
PlayerInfo[playerid][pRank]=1;
PlayerInfo[playerid][pTeam]=0; GivePlayerEP(playerid,0);
PlayerInfo[playerid][pFWarns]=0;
RestartPlayerSkin(playerid);
if(PlayerInfo[playerid][pVip]>3 || freevip==1) SetPVarInt(playerid, "color", 0);
return 1;
}
else if(strcmp(cmd, "/frespawn", true) == 0)
{
if(PlayerInfo[playerid][pRank] < 6)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
return 1;
}
for(new cars=0; cars<=gangcarsmax[PlayerInfo[playerid][pTeam]]; cars++)
{
SetVehicleToRespawn(gangcars[PlayerInfo[playerid][pTeam]][cars]);
}
new string170[170];
format(string170, 170, "[FACTION CHAT] All Vehicles has been respawned by %s", pname[playerid]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string170);
return 1;
}
else if(strcmp(cmd, "/frefuel", true) == 0)
{
if(PlayerInfo[playerid][pRank] < 6)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
return 1;
}
for(new cars=0; cars<=gangcarsmax[PlayerInfo[playerid][pTeam]]; cars++)
{
vehfuel[gangcars[PlayerInfo[playerid][pTeam]][cars]] = 100;
}
new string230[230];
format(string230, 230, "[FACTION CHAT] %s зареди всички превозни средства със 100 литра бензин!", pname[playerid]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string230);
return 1;
}
else if(strcmp(cmd, "/setrankname", true) == 0)
{
if (PlayerInfo[playerid][pRank]>5 && PlayerInfo[playerid][pTeam]>0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setrankname [1-6] [name]");
return 1;
}
new rnkid = strval(tmp);
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setrankname [1-6] [name]");
return 1;
}
if(rnkid < 1 || rnkid > 6)
{
SendClientMessage(playerid, COLOR_GRAD1, "Невалиден ранк!");
return 1;
}
if(strlen(result)<1 || strlen(result)>25) return SendClientMessage(playerid, COLOR_GRAD1, "Символите трябва да бъдат между 1 и 25 знака!");
if(strfind( result , "||", true) == 0 || strfind( result , "|", true ) == 0 || strfind( result , "~", true ) == 0 || strfind( result , ",", true ) == 0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Ти не можеш да използваш забранени символи!");
}
new string256[256];
if(rnkid==1)
{
format(string256, 256, "[FACTION CHAT] %s промени името на ранк: %d(%s) на: %s", pname[playerid], rnkid, TeamInfo[PlayerInfo[playerid][pTeam]][tRank1],result);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
format(TeamInfo[PlayerInfo[playerid][pTeam]][tRank1], 256, "%s",result);
}
if(rnkid==2)
{
format(string256, 256, "[FACTION CHAT] %s промени името на ранк: %d(%s) на: %s", pname[playerid], rnkid, TeamInfo[PlayerInfo[playerid][pTeam]][tRank2],result);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
format(TeamInfo[PlayerInfo[playerid][pTeam]][tRank2], 256, "%s",result);
}
if(rnkid==3)
{
format(string256, 256, "[FACTION CHAT] %s промени името на ранк: %d(%s) на: %s", pname[playerid], rnkid, TeamInfo[PlayerInfo[playerid][pTeam]][tRank3],result);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
format(TeamInfo[PlayerInfo[playerid][pTeam]][tRank3], 256, "%s",result);
}
if(rnkid==4)
{
format(string256, 256, "[FACTION CHAT] %s промени името на ранк: %d(%s) на: %s", pname[playerid], rnkid, TeamInfo[PlayerInfo[playerid][pTeam]][tRank4],result);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
format(TeamInfo[PlayerInfo[playerid][pTeam]][tRank4], 256, "%s",result);
}
if(rnkid==5)
{
format(string256, 256, "[FACTION CHAT] %s промени името на ранк: %d(%s) на: %s", pname[playerid], rnkid, TeamInfo[PlayerInfo[playerid][pTeam]][tRank5],result);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
format(TeamInfo[PlayerInfo[playerid][pTeam]][tRank5], 256, "%s",result);
}
if(rnkid==6)
{
format(string256, 256, "[FACTION CHAT] %s промени името на ранк: %d(%s) на: %s", pname[playerid], rnkid, TeamInfo[PlayerInfo[playerid][pTeam]][tRank6],result);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
format(TeamInfo[PlayerInfo[playerid][pTeam]][tRank6], 256, "%s",result);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
return 1;
}
return 1;
}
/*
if(strcmp(cmd,"/animlist",true)==0)
{
SendClientMessage(playerid,0x51dadcAA,"Команди за анимации:");
SendClientMessage(playerid,0x51dadcAA,"/handsup /drunk /getarrested /laugh /lookout /robman");
SendClientMessage(playerid,0x51dadcAA,"/crossarms /lay /hide /vomit /eat /wave /taichi");
SendClientMessage(playerid,0x51dadcAA,"/deal /crack /smokem /smokef /groundsit /chat /dance /fucku");
return 1;
}
// HANDSUP
else if(strcmp(cmd, "/handsup", true) == 0) {
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
return 1;
}
// CELLPHONE IN
else if(strcmp(cmd, "/cellin", true) == 0) {
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
return 1;
}
// CELLPHONE OUT
else if(strcmp(cmd, "/cellout", true) == 0) {
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
return 1;
}
// Drunk
else if(strcmp(cmd, "/drunk", true) == 0) {
LoopingAnim(playerid,"PED","WALK_DRUNK",4.0,1,1,1,1,0);
return 1;
}
// Place a Bomb
// Police Arrest
else if (strcmp("/getarrested", cmdtext, true, 7) == 0) {
LoopingAnim(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1); // Gun Arrest
return 1;
}
// Laugh
else if (strcmp("/laugh", cmdtext, true) == 0) {
OnePlayAnim(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0); // Laugh
return 1;
}
// Rob Lookout
else if (strcmp("/lookout", cmdtext, true) == 0) {
OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
return 1;
}
// Rob Threat
else if (strcmp("/robman", cmdtext, true) == 0) {
LoopingAnim(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0); // Rob
return 1;
}
// Arms crossed
else if (strcmp("/crossarms", cmdtext, true) == 0) {
LoopingAnim(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1); // Arms crossed
return 1;
}
// Lay Down
else if (strcmp("/lay", cmdtext, true, 6) == 0) {
LoopingAnim(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0); // Lay down
return 1;
}
// Take Cover
else if (strcmp("/hide", cmdtext, true, 3) == 0) {
LoopingAnim(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0); // Taking Cover
return 1;
}
// Vomit
else if (strcmp("/vomit", cmdtext, true) == 0) {
OnePlayAnim(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); // Vomit BAH!
return 1;
}
// Eat Burger
else if (strcmp("/eat", cmdtext, true) == 0) {
OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
return 1;
}
// Wave
else if (strcmp("/wave", cmdtext, true) == 0) {
LoopingAnim(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0); // Wave
return 1;
}
// Slap Ass
else if (strcmp("/slapass", cmdtext, true) == 0) {
OnePlayAnim(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0); // Ass Slapping
return 1;
}
// Dealer
else if (strcmp("/deal", cmdtext, true) == 0) {
OnePlayAnim(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0); // Deal Drugs
return 1;
}
// Crack Dieing
else if (strcmp("/crack", cmdtext, true, 6) == 0) {
LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0); // Dieing of Crack
return 1;
}
// Male Smoking
else if (strcmp("/smokem", cmdtext, true, 4) == 0) {
LoopingAnim(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0); // Smoke
return 1;
}
// Female Smoking
else if (strcmp("/smokef", cmdtext, true) == 0) {
LoopingAnim(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0); // Female Smoking
return 1;
}
// Sit
else if (strcmp("/groundsit", cmdtext, true, 4) == 0) {
LoopingAnim(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0); // Sit
return 1;
}
// Idle Chat
else if(strcmp(cmd, "/chat", true) == 0) {
OnePlayAnim(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
return 1;
}
// Fucku
else if(strcmp(cmd, "/fucku", true) == 0) {
OnePlayAnim(playerid,"PED","fucku",4.0,0,0,0,0,0);
return 1;
}
// TaiChi
else if(strcmp(cmd, "/taichi", true) == 0) {
LoopingAnim(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
return 1;
}
// ChairSit
else if(strcmp(cmd, "/chairsit", true) == 0) {
LoopingAnim(playerid,"BAR","dnk_stndF_loop",4.0,1,0,0,0,0);
return 1;
}
// Collapse
else if(strcmp(cmd, "/collapse", true) == 0) {
LoopingAnim(playerid,"PED","FALL_COLLAPSE",4.0,1,0,0,0,0);
return 1;
}
// fall
else if(strcmp(cmd, "/fallover", true) == 0) {
LoopingAnim(playerid,"PED","FALL_FALL",4.0,1,0,0,0,0);
return 1;
}
// ko
else if(strcmp(cmd, "/ko1", true) == 0) {
LoopingAnim(playerid,"PED","KO_SHOT_STOM",200.0, 0, 1, 1, 1, -1);
return 1;
}
// ko
else if(strcmp(cmd, "/ko2", true) == 0) {
LoopingAnim(playerid,"PED","KO_SHOT_FACE",4.0, 0, 1, 1, 1, -1);
return 1;
}
else if(strcmp(cmd, "/floorhit", true) == 0) {
ApplyAnimation(playerid,"PED", "FLOOR_hit_f", 4.1, 0, 0, 0, 1, 0);
return 1;
}
else if(strcmp(cmd, "/dance", true) == 0) {
new tmp[256];
// Get the dance style param
tmp = strtok(cmdtext, idx);
if(!strlen(tmp) || strlen(tmp) > 2) {
SendClientMessage(playerid,0xFF0000FF,"USAGE: /dance [style 1-4]");
return 1;
}
dancestyle = strval(tmp);
if(dancestyle < 1 || dancestyle > 4) {
SendClientMessage(playerid,0xFF0000FF,"USAGE: /dance [style 1-4]");
return 1;
}
if(dancestyle == 1) {
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
} else if(dancestyle == 2) {
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
} else if(dancestyle == 3) {
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
} else if(dancestyle == 4) {
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
}
return 1;
}
*/
else if(strcmp(cmd, "/setrank", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setrank [ID на играч] [rank]");
return 1;
}
new level2;
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
level2 = strval(tmp);
new ranktext[256];
switch(PlayerInfo[para1[playerid]][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tRank6]);
}
if(PlayerInfo[para1[playerid]][pTeam]!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
if(para1[playerid]==playerid) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да смениш своя ранк!");
if(PlayerInfo[playerid][pRank]<6) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер!");
if(level2>5||level2<1) return SendClientMessage(playerid,COLOR_GRAD1,"Ранковете са от 1 до 5!");
new string256[256];
PlayerInfo[para1[playerid]][pRank]=level2;
RestartPlayerSkin(para1[playerid]);
format(string256, 256, "%s промени твоят ранк на %s(%d)", pname[playerid],ranktext,level2);
SendClientMessage(para1[playerid],0x33CCFFFF, string256);
format(string256, 256, "[FACTION CHAT] %s промени ранка на %s на %s(%d)", pname[playerid],pname[para1[playerid]],ranktext,level2);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
return 1;
}
if (strcmp(cmd, "/check", true) == 0)
{
//if (PlayerInfo[playerid][pAdmin] >= 1)//
if (PlayerInfo[playerid][pAdmin] >= 2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /check [ID на играч]");
return 1;
}
new giveplayerid = ReturnUser(tmp);
if(IsPlayerConnected(giveplayerid))
{
new gangname[100];
new isbizzowner[5];
new ishouseowner[5];
new isofficeowner[5];
new isinjob[5];
if(onwork[playerid]==1) format(isinjob,5,"Yes"); if(PlayerInfo[giveplayerid][pJob]==0) format(isinjob,5,"No");
if(PlayerInfo[giveplayerid][pTeam]==1)
{
format(gangname,100,"VIP");
}
if(PlayerInfo[giveplayerid][pTeam]==2)
{
format(gangname,100,"Grove Street Families");
}
if(PlayerInfo[giveplayerid][pTeam]==3)
{
format(gangname,100,"Rolling Heights Ballas");
}
if(PlayerInfo[giveplayerid][pTeam]==4)
{
format(gangname,100,"Los Santos Vagos");
}
if(PlayerInfo[giveplayerid][pTeam]==5)
{
format(gangname,100,"Varrio Los Aztecas");
}
if(PlayerInfo[giveplayerid][pTeam]==6)
{
format(gangname,100,"Vinewood Cripz");
}
if(PlayerInfo[giveplayerid][pTeam]==7)
{
format(gangname,100,"San Fierro Triads");
}
if(PlayerInfo[giveplayerid][pTeam]==8)
{
format(gangname,100,"Eastern Boys");
}
if(PlayerInfo[giveplayerid][pTeam]==9)
{
format(gangname,100,"Sons Of Anarchy");
}
if(PlayerInfo[giveplayerid][pTeam]==10)
{
format(gangname,100,"Da Nang Boys");
}
if(PlayerInfo[giveplayerid][pTeam]==11)
{
format(gangname,100,"Italian Mafia");
}
if(PlayerInfo[giveplayerid][pTeam]==12)
{
format(gangname,100,"Bounty Hunters");
}
if(PlayerInfo[giveplayerid][pTeam]==13)
{
format(gangname,100,"San Andreas Police");
}
if(PlayerInfo[giveplayerid][pTeam]==14)
{
format(gangname,100,"FBI");
}
if(PlayerInfo[giveplayerid][pTeam]==15)
{
format(gangname,100,"Delta Force");
}
new ranktext[256];
switch(PlayerInfo[giveplayerid][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[giveplayerid][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[giveplayerid][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[giveplayerid][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[giveplayerid][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[giveplayerid][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[giveplayerid][pTeam]][tRank6]);
}
if(PlayerInfo[giveplayerid][pOffice]==0)format(isofficeowner,5,"НЕ");
if(PlayerInfo[giveplayerid][pOffice]==1)format(isofficeowner,5,"ДА");
if(PlayerInfo[giveplayerid][pBizO]>-1)
{
format(isbizzowner,5,"ДА");
}
if(PlayerInfo[giveplayerid][pBizO]==-1)
{
format(isbizzowner,5,"НЕ");
}
if(PlayerInfo[giveplayerid][pHouseO]>-1)
{
format(ishouseowner,5,"ДА");
}
if(PlayerInfo[giveplayerid][pHouseO]==-1)
{
format(ishouseowner,5,"НЕ");
}
new playedTime;
for(new i=0; i<24; i++)
{
playedTime+=PlayerInfo[giveplayerid][pWhenPlayed][i];
}
new playedTimeMinutes=playedTime/60;
if(playedTimeMinutes<1)
{
playedTimeMinutes=0;
}
//------------------------------------
//------------------------------------
new playedTimeImportant;
for(new i=11; i<=19; i++)
{
playedTimeImportant+=PlayerInfo[giveplayerid][pWhenPlayed][i];
}
new playedTimeImportantMinutes=playedTimeImportant/60;
if(playedTimeImportantMinutes<1)
{
playedTimeImportantMinutes=0;
}
TextDrawShowForPlayer(playerid, Intro[0]);
new string2230[512]; new string2230result[2230];
format(string2230,512,"{008000}PLAYER\t{008000}STATS\n");
strcat(string2230result, string2230);
format(string2230,512,"{00ff00}Играно време във всички часове\t {008000}: {FF0000}%d мин.\n",playedTimeMinutes);
strcat(string2230result, string2230);
format(string2230,512,"{00ff00}Играно време в награждаваните часове(11:00 до 19:00)\t {008000}: {FF0000}%d мин.\n",playedTimeImportantMinutes);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Reputation Level\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pLevel]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}EP\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pEP]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Admin Level\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pAdmin]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}VIP Level\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pVip]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Weapon Skill\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pWeaponS]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Cash\t {008000}: {FF0000}$%s\n",FormatNumber(PlayerInfo[giveplayerid][pCash]));
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Bank Account\t {008000}: {FF0000}$%s\n",FormatNumber(PlayerInfo[giveplayerid][pAccount]));
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Лични коли\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pPrivateVehs]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}House\t {008000}: {FF0000}%s\n",ishouseowner);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Biz\t {008000}: {FF0000}%s\n",isbizzowner);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Bombs\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pBombs]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Wanted\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pWanted]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Police Jail seconds\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pPJail]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}ADMIN Jail seconds\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pJail]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Faction\t {008000}: {FF0000}%s\n",TeamInfo[PlayerInfo[giveplayerid][pTeam]][tName]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Rank\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pRank]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Faction Mute seconds\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pFMuted]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Faction Warns\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pFWarns]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Mute\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pMuted]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}R&N Mute seconds\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pRNMute]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Warns\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pWarns]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}ADMIN Warns\t {008000}: {FF0000}%d\n",PlayerInfo[giveplayerid][pAWarns]);
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,3501,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}ST{008000}A{FF0000}TS",string2230result,"Затвори","");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/gangstats", true)==0)
{
if(PlayerInfo[playerid][pTeam]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в банда/мафия за да използваш тази команда!");
new string2230[512]; new string2230result[2230];
format(string2230,512,"{F97804}%s\t{F97804}Статистика\n",TeamInfo[PlayerInfo[playerid][pTeam]][tName]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Gang Level\t {008000}: {FF0000}%d\n",TeamInfo[PlayerInfo[playerid][pTeam]][tLevel]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Gang EP\t {008000}: {FF0000}%d\n",TeamInfo[PlayerInfo[playerid][pTeam]][tKills]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Gang Cash\t {008000}: {FF0000}$%d\n",TeamInfo[PlayerInfo[playerid][pTeam]][tCash]);
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,3501,DIALOG_STYLE_TABLIST_HEADERS,"{F97804}STATS",string2230result,"Затвори","");
return 1;
}
else if(strcmp(cmd, "/stats", true)==0)
{
new gangname[100];
new isbizzowner[5];
new ishouseowner[5];
new isofficeowner[5];
new isinjob[5];
if(PlayerInfo[playerid][pJob]==1) format(isinjob,5,"Yes"); if(PlayerInfo[playerid][pJob]==0) format(isinjob,5,"No");
if(PlayerInfo[playerid][pTeam]==1)
{
format(gangname,100,"VIP");
}
if(PlayerInfo[playerid][pTeam]==2)
{
format(gangname,100,"Grove Street Families");
}
if(PlayerInfo[playerid][pTeam]==3)
{
format(gangname,100,"Rolling Heights Ballas");
}
if(PlayerInfo[playerid][pTeam]==4)
{
format(gangname,100,"Los Santos Vagos");
}
if(PlayerInfo[playerid][pTeam]==5)
{
format(gangname,100,"Varrio Los Aztecas");
}
if(PlayerInfo[playerid][pTeam]==6)
{
format(gangname,100,"Vinewood Cripz");
}
if(PlayerInfo[playerid][pTeam]==7)
{
format(gangname,100,"San Fierro Triads");
}
if(PlayerInfo[playerid][pTeam]==8)
{
format(gangname,100,"Eastern Boys");
}
if(PlayerInfo[playerid][pTeam]==9)
{
format(gangname,100,"Sons Of Anarchy");
}
if(PlayerInfo[playerid][pTeam]==10)
{
format(gangname,100,"Da Nang Boys");
}
if(PlayerInfo[playerid][pTeam]==11)
{
format(gangname,100,"Italian Mafia");
}
if(PlayerInfo[playerid][pTeam]==12)
{
format(gangname,100,"Bounty Hunters");
}
if(PlayerInfo[playerid][pTeam]==13)
{
format(gangname,100,"San Andreas Police");
}
if(PlayerInfo[playerid][pTeam]==14)
{
format(gangname,100,"FBI");
}
if(PlayerInfo[playerid][pTeam]==15)
{
format(gangname,100,"Delta Force");
}
new ranktext[256];
switch(PlayerInfo[playerid][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank6]);
}
if(PlayerInfo[playerid][pOffice]==0)format(isofficeowner,5,"НЕ");
if(PlayerInfo[playerid][pOffice]==1)format(isofficeowner,5,"ДА");
if(PlayerInfo[playerid][pBizO]>-1)
{
format(isbizzowner,5,"ДА");
}
if(PlayerInfo[playerid][pBizO]==-1)
{
format(isbizzowner,5,"НЕ");
}
if(PlayerInfo[playerid][pHouseO]>-1)
{
format(ishouseowner,5,"ДА");
}
if(PlayerInfo[playerid][pHouseO]==-1)
{
format(ishouseowner,5,"НЕ");
}
new admintext[35];
if(PlayerInfo[playerid][pTest]==1)
{
format(admintext,35,"Тестов");
}
if(PlayerInfo[playerid][pAdmin]==1)
{
format(admintext,35,"Помощник");
}
if(PlayerInfo[playerid][pAdmin]==2)
{
format(admintext,35,"Администратор");
}
if(PlayerInfo[playerid][pAdmin]==3)
{
format(admintext,35,"Висш Администратор");
}
if(PlayerInfo[playerid][pAdmin]==4)
{
format(admintext,35,"Главен Администратор");
}
if(PlayerInfo[playerid][pAdmin]>=5)
{
format(admintext,35,"Собственик");
}
new playedTime;
for(new i=0; i<24; i++)
{
playedTime+=PlayerInfo[playerid][pWhenPlayed][i];
}
new playedTimeMinutes=playedTime/60;
if(playedTimeMinutes<1)
{
playedTimeMinutes=0;
}
//------------------------------------
//------------------------------------
new playedTimeImportant;
for(new i=11; i<=19; i++)
{
playedTimeImportant+=PlayerInfo[playerid][pWhenPlayed][i];
}
new playedTimeImportantMinutes=playedTimeImportant/60;
if(playedTimeImportantMinutes<1)
{
playedTimeImportantMinutes=0;
}
TextDrawShowForPlayer(playerid, Intro[0]);
new string2230[512]; new string2230result[2230];
format(string2230,512,"{008000}PLAYER\t{008000}STATS\n");
strcat(string2230result, string2230);
format(string2230,512,"{00ff00}Играно време във всички часове\t {008000}: {FF0000}%d мин.\n",playedTimeMinutes);
strcat(string2230result, string2230);
format(string2230,512,"{00ff00}Играно време в награждаваните часове(11:00 до 19:00)\t {008000}: {FF0000}%d мин.\n",playedTimeImportantMinutes);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Reputation Level\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pLevel]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}EP\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pEP]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Admin Level\t {008000}: {FF0000}%s\n",admintext);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}VIP Level\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pVip]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Weapon Skill\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pWeaponS]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Cash\t {008000}: {FF0000}$%s\n",FormatNumber(PlayerInfo[playerid][pCash]));
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Bank Account\t {008000}: {FF0000}$%s\n",FormatNumber(PlayerInfo[playerid][pAccount]));
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Лични коли\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pPrivateVehs]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}House\t {008000}: {FF0000}%s\n",ishouseowner);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Biz\t {008000}: {FF0000}%s\n",isbizzowner);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Bombs\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pBombs]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Wanted\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pWanted]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Police Jail seconds\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pPJail]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}ADMIN Jail seconds\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pJail]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Faction\t {008000}: {FF0000}%s\n",TeamInfo[PlayerInfo[playerid][pTeam]][tName]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Rank\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pRank]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Faction Mute seconds\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pFMuted]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Faction Warns\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pFWarns]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Mute\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pMuted]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}R&N Mute seconds\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pRNMute]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Warns\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pWarns]);
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}ADMIN Warns\t {008000}: {FF0000}%d\n",PlayerInfo[playerid][pAWarns]);
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,3501,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}ST{008000}A{FF0000}TS",string2230result,"Затвори","");
return 1;
}
else if(strcmp(cmd, "/dfrules", true) == 0)
{
if(PlayerInfo[playerid][pTeam] == 15)
{
new cmds[2230];
strins(cmds,"{626200}Delta Force правила\n",strlen(cmds));
strins(cmds,"{FFFFFF}Забранен е боят помежду играчите в Delta Force {626200}(+ 1 Faction Warn)\n",strlen(cmds));
strins(cmds,"{FFFFFF}Забранено е спаменето в Faction чата {626200}(По преценка на лидера)\n",strlen(cmds));
strins(cmds,"{FFFFFF}Забранени са лъжите във Faction чата {626200}(По преценка на лидера)\n",strlen(cmds));
strins(cmds,"{FFFFFF}Забранено е да биете банди с които сме в мир {626200}(+ 1 Faction Warn)\n",strlen(cmds));
strins(cmds,"{FFFFFF}Забранено е да се използват Special Force превозните средства, освен по команда на лидера {626200}(+ 1 Faction Warn)\n",strlen(cmds));
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"Правила",cmds,"Изход","");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Delta Force!");
}
return 1;
}
else if(strcmp(cmd, "/ganginfo", true)==0)
{
new string2[2300];
format(string2, sizeof(string2), "{00ff00}Банди/Екстри\t{33CCFF}Цена\n");
strcat(string2, "{A4A400}Инфо: IC =\t{33CCFF}едра игрова валута\n", sizeof(string2));
strcat(string2, "{A4A400}Grove Street\t{33CCFF}35 IC\n", sizeof(string2));
strcat(string2, "{A4A400}Ballas\t{33CCFF}20 IC\n", sizeof(string2));
strcat(string2, "{A4A400}Vagos\t{33CCFF}20 IC\n", sizeof(string2));
strcat(string2, "{A4A400}VCripz\t{33CCFF}20 IC\n", sizeof(string2));
strcat(string2, "{A4A400}Triads\t{33CCFF}15 IC\n", sizeof(string2));
strcat(string2, "{A4A400}ES\t{33CCFF}20 IC\n", sizeof(string2));
strcat(string2, "{A4A400}SOA\t{33CCFF}15 IC\n", sizeof(string2));
strcat(string2, "{A4A400}Da Nang Boys\t{33CCFF}15 IC\n", sizeof(string2));
strcat(string2, "{A4A400}Italian Mafia\t{33CCFF}15 IC\n", sizeof(string2));
strcat(string2, "{A4A400}Bounty Hunters\t{33CCFF}20 IC\n", sizeof(string2));
strcat(string2, "{A4A400}Soldier Boys\t{33CCFF}15 IC\n", sizeof(string2));
strcat(string2, "{A4A400}Yakuza\t{33CCFF}15 IC\n", sizeof(string2));
strcat(string2, "{A4A400}Syndicate Texas\t{33CCFF}15 IC\n", sizeof(string2));
strcat(string2, "{A4A400}Blood Mafia\t{33CCFF}15 IC\n", sizeof(string2));
strcat(string2, "{A4A400}MS13\t{33CCFF}15 IC\n", sizeof(string2));
strcat(string2, "{A4A400}343 Black Street\t{33CCFF}15 IC\n", sizeof(string2));
strcat(string2, "{A4A400}BG Mafia\t{33CCFF}25 IC\n", sizeof(string2));
strcat(string2, "{33CCFF}---------\t{33CCFF}---------\n", sizeof(string2));
strcat(string2, "{00ff00}Teleport\t{33CCFF}20 Gang Level, $45, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}Gunmachine\t{33CCFF}5 Gang Level, $15, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}Gunmachine 25 ammu Sniper\t{33CCFF}30 Gang Level, $60, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}Bonus EP при PAYDAY\t{33CCFF}30 Gang Level, $45, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}Bonus пари при PAYDAY\t{33CCFF}40 Gang Level, $70, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}Tune на кола\t{33CCFF}5 Gang Level, $10, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}Tune на кола с обекти\t{33CCFF}40 Gang Level, $40, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}Къща за банда/мафия\t{33CCFF}5 Gang Level, $20, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}DM Bizz за банда/мафия\t{33CCFF}5 Gang Level, $20, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}Heal + Armour\t{33CCFF}2 Gang Level, $5, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}Самолет с Interior\t{33CCFF}5 Gang Level, $80, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}Друго превозно средство с Interior\t{33CCFF}2 Gang Level, $20, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}Taxi с телепорт\t{33CCFF}3 Gang Level, $2, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}Тунинг гараж\t{33CCFF}9 Gang Level, $40, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{00ff00}Паркинг/магазин за коли достъпни за банда/мафия\t{33CCFF}35 Gang Level, $120, 000 Gang Cash\n", sizeof(string2));
strcat(string2, "{33CCFF}За поръчки пишете на Discord\t{33CCFF}sTrIx: danielandreevofficial#1084\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{A4A400}Банди и Екстри", string2, "Излез", "");
return 1;
}
else if(strcmp(cmd, "/factioncommands", true)==0 || strcmp(cmd, "/fcmds", true)==0)
{
if (PlayerInfo[playerid][pTeam] == 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в банда/мафия!");
}
new string2[2300];
if(PlayerInfo[playerid][pTeam] == 15)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{A4A400}/givemasks\t{00FF00}5 \t{ffffff}Дава безплатни маски на всички\n", sizeof(string2));
strcat(string2, "{A4A400}/onlymasks\t{00FF00}5 \t{ffffff}Забранява/позволява ходенето без маска\n", sizeof(string2));
strcat(string2, "{A4A400}/armysay\t{00FF00}4 \t{ffffff}Съобщава важни новини, свързани с COVID-19\n", sizeof(string2));
strcat(string2, "{A4A400}/hidedf\t{00FF00}6 (Лидер)\t{ffffff}Скрива всички играчи на DF от картата\n", sizeof(string2));
strcat(string2, "{A4A400}/showdf\t{00FF00}6 (Лидер)\t{ffffff}Показва всички играчи от DF на картата\n", sizeof(string2));
strcat(string2, "{A4A400}/specialforce\t{00FF00}6 (Лидер)\t{ffffff}Добавя играч в специалните служби\n", sizeof(string2));
strcat(string2, "{A4A400}/unspecialforce\t{00FF00}6 (Лидер)\t{ffffff}Премахва от длъжност играч от специалните служби\n", sizeof(string2));
strcat(string2, "{A4A400}/dfcars\t{00FF00}6 (Лидер)\t{ffffff}Пзволява/забранява специалните превози средства\n", sizeof(string2));
strcat(string2, "{A4A400}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{A4A400}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
strcat(string2, "{A4A400}/dfrules\t{00FF00}1 (За всички)\t{ffffff}Показва правилата за Delta Force\n", sizeof(string2));
strcat(string2, "{A4A400}/suspects\t{00FF00}1 (За всички)\t{ffffff}Показва играчи заподозрени в престъпления\n", sizeof(string2));
strcat(string2, "{A4A400}/dflv\t{00FF00}1 (За всички)\t{ffffff}SPAWN в Las Venturas Army Base\n", sizeof(string2));
strcat(string2, "{A4A400}/dfls\t{00FF00}1 (За всички)\t{ffffff}SPAWN в Los Santos Army Base\n", sizeof(string2));
strcat(string2, "{A4A400}/dfsf\t{00FF00}1 (За всички)\t{ffffff}SPAWN в San Fierro Army Base\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{A4A400}Delta Force команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam] == 1)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{FF4500}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{FF4500}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
strcat(string2, "{FF4500}/ls\t{00FF00}1 (За всички)\t{ffffff}За да се телепортираш до Los Santos\n", sizeof(string2));
strcat(string2, "{FF4500}/lv\t{00FF00}1 (За всички)\t{ffffff}За да се телепортираш до Las Venturas\n", sizeof(string2));
strcat(string2, "{FF4500}/vipbase\t{00FF00}1 (За всички)\t{ffffff}За да се телепортираш до VIP\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{FF4500}VIP команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam] == 2)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{33AA33}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{33AA33}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{33AA33}GSF команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam] == 3)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{BC73DE}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{BC73DE}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{BC73DE}Ballas команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam] == 4)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{DFEF1F}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{DFEF1F}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{DFEF1F}Vagos команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam] == 5)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{0000CC}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{0000CC}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{0000CC}Aztecas команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam] == 6)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{000099}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{000099}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{000099}Cripz команди", string2, "Излез", "");
}
//<--------------------------------->
if(PlayerInfo[playerid][pTeam] == 7)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{F97804}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{F97804}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{F97804}Triads команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam] == 8)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{d9d9d9}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{d9d9d9}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{d9d9d9}ES команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam] == 9)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{7F7F7F}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{7F7F7F}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{7F7F7F}SOA команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam] == 10)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{4D2C2F}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{4D2C2F}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{4D2C2F}Da Nang Boys команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam] == 11)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{33998f}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{33998f}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{33998f}Italian Mafia команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam] == 12)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{8ADB3F}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{8ADB3F}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{8ADB3F}Bounty Hunters команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam] == 13)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{0040FF}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{0040FF}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
strcat(string2, "{0040FF}/spikes\t{00FF00}3\t{ffffff}Слага шипове на улицата\n", sizeof(string2));
strcat(string2, "{0040FF}/getspikes\t{00FF00}3\t{ffffff}Пребира шипове от улицата\n", sizeof(string2));
strcat(string2, "{0040FF}/policeskin\t{00FF00}2\t{ffffff}Сменя дрехите за извън служба\n", sizeof(string2));
strcat(string2, "{0040FF}/policesay\t{00FF00}2\t{ffffff}За да използвате говорителя (до 60 метра разстояние)\n", sizeof(string2));
strcat(string2, "{0040FF}/suspects\t{00FF00}2\t{ffffff}За да видите кои са заподозрени\n", sizeof(string2));
strcat(string2, "{0040FF}/policelv\t{00FF00}1 (За всички)\t{ffffff}SPAWN в Las Venturas Police\n", sizeof(string2));
strcat(string2, "{0040FF}/policels\t{00FF00}1 (За всички)\t{ffffff}SPAWN в Los Santos Police\n", sizeof(string2));
strcat(string2, "{0040FF}/policesf\t{00FF00}1 (За всички)\t{ffffff}SPAWN в San Fierro Police\n", sizeof(string2));
strcat(string2, "{0040FF}/policeinterior\t{00FF00}1 (За всички)\t{ffffff}SPAWN в управлението\n", sizeof(string2));
strcat(string2, "{0040FF}/cuff\t{00FF00}1 (За всички)\t{ffffff}Задържане на престъпник, който се е предал\n", sizeof(string2));
strcat(string2, "{0040FF}/policecameras\t{00FF00}1 (За всички)\t{ffffff}Команди за камерите на полицията\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{0040FF}San Andreas Police Department команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam] == 14)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{0040FF}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{0040FF}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{0040FF}FBI команди", string2, "Излез", "");
}
//<--------------------------------->
if(PlayerInfo[playerid][pTeam]==16)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{9932CC}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{9932CC}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{9932CC}Soldier Boys команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam]==17)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{838b8b}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{838b8b}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{838b8b}Yakuza команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam]==18)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{276BA9}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{276BA9}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{276BA9}Syndicate Texas команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam]==19)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{0040FF}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{0040FF}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{0040FF}Blood Mafia команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam]==20)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{B7E1FF}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{B7E1FF}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{B7E1FF}MS-13 команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam]==21)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{FF40FF}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{FF40FF}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{FF40FF}BG Mafia команди", string2, "Излез", "");
}
if(PlayerInfo[playerid][pTeam]==22)
{
format(string2, sizeof(string2), "{33CCFF}Команда\t{33CCFF}Rank\t{33CCFF}Действие\n");
strcat(string2, "{80BFBF}/frefuel\t{00FF00}6 (Лидер)\t{ffffff}Respawn на всички превозни средства\n", sizeof(string2));
strcat(string2, "{80BFBF}/frespawn\t{00FF00}6 (Лидер)\t{ffffff}Презареждане на всички превозни средства\n", sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{80BFBF}343 Black Street команди", string2, "Излез", "");
}
return 1;
}
else if(strcmp(cmd, "/transfer", true) == 0)
{
if(IsPlayerInRangeOfPoint(playerid, 3, 2316.6213,-9.9516,26.7422))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /transfer [ID на играч] [money]");
return 1;
}
new duel = strval(tmp);
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
duel = strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if (PlayerInfo[playerid][pAccount]<duel) return SendClientMessage(playerid,COLOR_GRAD1,"Нямаш толкова пари в общата си сума!");
if(duel < 1 || duel > 1000000) return SendClientMessage(playerid, COLOR_GRAD1, "Парите трябва да са от 1 до 1 000 000 !");
if(para1[playerid] == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да дадеш на себеси пари!");
new string200[200];
format(string200, 200, "%s изпрати пари в твоята обща сума на стойност $%d.",pname[playerid], duel);
SendClientMessage(para1[playerid], 0xFFFF00FF,string200);
format(string200, 200, "Ти изпрати $%d в общата сума на %s.",duel ,pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string200);
PlayerInfo[playerid][pAccount] -= duel;
PlayerInfo[para1[playerid]][pAccount] += duel;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си близо в банката, за да ползваш командата!");
}
return 1;
}
else if(strcmp(cmd, "/removegps", true)==0)
{
if(withgps[playerid]==0) return SendClientMessage(playerid,COLOR_GRAD1, "В момента ти не използваш GPS!");
DisablePlayerCheckpoint(playerid);
LoadMission(playerid);
return 1;
}
else if(strcmp(cmd, "/gps", true)==0)
{
if(onwork[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1, "Не можеш да използваш /gps, докато си на работа!");
ShowPlayerDialog(playerid, 43, DIALOG_STYLE_LIST, "GPS:", "Pizza Job\nTaxi Job\nCoalmine Job\nSweeper Job\nBus Job\nDeliver Job\nРиболов\n24/7 Магазин\nСпециален Тунинг гараж\nМагазин за коли\nБанка\nКазино\nЛотария Шоу\nСделка или не\nАвтошкола", "Избери", "Назад");
return 1;
}
else if(strcmp(cmd, "/credit", true)==0)
{
if(IsPlayerInRangeOfPoint(playerid, 3, 2316.6213,-9.9516,26.7422))
{
new stringut[256];
if(PlayerInfo[playerid][pCreditTime]==0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /credit [money]");
return 1;
}
new duel = strval(tmp);
if(duel <= 50000  && PlayerInfo[playerid][pLevel]<2)
{
SendClientMessage(playerid,0xccccffFF, "Банката не може да ви даде кредит с тази стойност, понеже вие нямате достаъчно репутация!");
return 1;
}
if(duel>50000 && duel <= 80000  && PlayerInfo[playerid][pLevel]<5)
{
SendClientMessage(playerid,0xccccffFF, "Банката не може да ви даде кредит с тази стойност, понеже вие нямате достаъчно репутация!");
return 1;
}
if(duel>80000 && duel <= 120000  && PlayerInfo[playerid][pLevel]<10)
{
SendClientMessage(playerid,0xccccffFF, "Банката не може да ви даде кредит с тази стойност, понеже вие нямате достаъчно репутация!");
return 1;
}
if(duel<1 || duel>120000)
{
SendClientMessage(playerid,0xccccffFF, "Можете да изтеглите до $120000!");
return 1;
}
format(stringut,256,"Вие изтеглихте кредит на стойност $%d, който трябва да върнете до 15 часа в размер $%d.",duel,duel+duel/2);
SendClientMessage(playerid,0xccccffFF, stringut);
GivePlayerCash(playerid,duel);
PlayerInfo[playerid][pCreditTime]=54000*2;
PlayerInfo[playerid][pCreditMoney]+=duel+duel/2;
}
else
{
if(PlayerInfo[playerid][pCreditMoney]<PlayerInfo[playerid][pCash])
{
format(stringut,256,"Вие успешно си платихте заема на стойност $%d.",PlayerInfo[playerid][pCreditMoney]);
SendClientMessage(playerid,0xccccffFF, stringut);
PlayerInfo[playerid][pCash]-=PlayerInfo[playerid][pCreditMoney];
PlayerInfo[playerid][pCreditTime]=0;
PlayerInfo[playerid][pCreditMoney]=0;
}
else
{
SendClientMessage(playerid,0xccccffFF, "Нямате достатъчно средства за да си платите заема.");
}
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си в банката, за да ползваш командата!");
}
return 1;
}
else if(strcmp(cmd, "/bank", true)==0)
{
if(IsPlayerInRangeOfPoint(playerid, 3, 2316.6213,-9.9516,26.7422))
{
ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Банка", "Обща сума\nИзтегли пари\nВнеси пари", "Избери", "Назад");
}
else
{
SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си в банката, за да ползваш командата!");
}
return 1;
}
else if(strcmp(cmd, "/chelp", true)==0 || strcmp(cmd, "/clanhelp", true)==0)
{
new closeddialog=3500;
new string2230[512]; new string2230result[1500];
format(string2230,512,"{00FF00}---Команди за клан---\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/leaveclan {008000}- {ff0000}напускаш клана\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/clanuninvite {008000}- {ff0000}гониш от клана\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/clan(/cl) {008000}- {ff0000}пишеш в чата на клана\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/clanmembers {008000}- {ff0000}показва онлайн играчите от вашия клан\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/setclanrank {008000}- {ff0000}сменя Rank на играч от клана\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/acceptclan {008000}- {ff0000}приема покана за клан\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/cancelclan {008000}- {ff0000}отказва покана за клан\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/clanlock {008000}- {ff0000}отключва/заключва лично превозно средство за клан\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/clans {008000}- {ff0000}показва всички кланове в сървъра\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{33CCFF}FACTION HELP",string2230result,"Затвори","");
return 1;
}
else if(strcmp(cmd, "/ifchelp", true)==0)
{
new string2230[512]; new string2230result[1500]; new closeddialog=3500;
format(string2230,512,"{00FF00}---Команди за INTENSE FUEL COMPANY---\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/ifcgps {008000}- {ff0000}GPS за бензиностанции\n");
strcat(string2230result, string2230);
format(string2230,512,"{33AA33}Когато вече сте до бензиностанцията, напишете /refillgs, за да я заредите\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{33CCFF}FACTION HELP",string2230result,"Затвори","");
return 1;
}
else if(strcmp(cmd, "/fhelp", true)==0)
{
new string2230[512]; new string2230result[1500];
format(string2230,512,"{00FF00}---Команди за банда/мафия---\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/acceptfaction(/af) {008000}- {ff0000}приемате покана\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/cancelfaction(/cf) {008000}- {ff0000}отказвате покана\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/faction(/f) {008000}- {ff0000}пишете в чата на банда/мафията\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/leavefaction {008000}- {ff0000}напускате бандата\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/members {008000}- {ff0000}показва онлайн играчите от вашата банда/мафия\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/fturfs {008000}- {ff0000}показва кои и колко територии притежава твоята банда/мафия\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/duelranks {008000}- {ff0000}преглежда оценките на дуел тестове на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/gangstats {008000}- {ff0000}преглежда статистиката на банда\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/factioncommands(/fcmds) {008000}- {ff0000}показва командите, които са само за определа банда/мафия\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,9,DIALOG_STYLE_MSGBOX,"{33CCFF}FACTION HELP",string2230result,"Други","Затвори");
return 1;
}
else if(strcmp(cmd, "/buyws", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /buyws [confirm]");
SendClientMessage(playerid, 0x00E600FF, "SERVER: confirm действа като потвърждение, напишете /buyws confirm за да си купите WS");
return 1;
}
if(strcmp(result, "confirm", true) != 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /buyws [confirm]");
SendClientMessage(playerid, 0x00E600FF, "SERVER: confirm действа като потвърждение, напишете /buyws confirm за да си купите WS");
return 1;
}
if(PlayerInfo[playerid][pWeaponS]>9)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти вече достигна 10 Weapon Skill!");
return 1;
}
if(PlayerInfo[playerid][pEP]<PlayerInfo[playerid][pWeaponS]*4)
{
new formatneeded[256];
format(formatneeded,256,"Нуждаеш се от %d EP за да вдигнеш своя Weapon Skill",PlayerInfo[playerid][pWeaponS]*4);
SendClientMessage(playerid,COLOR_GRAD1,formatneeded);
return 1;
}
PlayerInfo[playerid][pWeaponS]+=1;
new string111[111];
format(string111,111,"Поздравления, вашият Weapon Skill вече е %d!",PlayerInfo[playerid][pWeaponS]);
SendClientMessage(playerid,0xb67bedFF,string111);
PlayerInfo[playerid][pEP]-=PlayerInfo[playerid][pWeaponS]*4;
GivePlayerEP(playerid,0);
return 1;
}
else if(strcmp(cmd, "/drop", true) == 0)
{
new x_job[256];
x_job = strtok(cmdtext, idx);
if(!strlen(x_job)) {
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /drop [item number]");
SendClientMessage(playerid, COLOR_YELLOW, "Item Numbers: 1: Fuelcan, 2: Dice, 3: Briefcase, 4: Cigarettes, 5: Radio");
SendClientMessage(playerid, COLOR_YELLOW, "Item Numbers: 6: Moonshine, 7: Weed, 8: Cocaine, 9: Heroin, 10: Boat License");
SendClientMessage(playerid, COLOR_YELLOW, "Item Numbers: 11: Train License, 12: Helicopter License, 13: Airplane License, 14: Hook");
return 1;
}
tmp = strtok(cmdtext, idx);
if(strcmp(x_job,"1",true) == 0)
{
if(PlayerInfo[playerid][pFuelcase]==-1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш туба за бензин!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своята туба за бензин.");
PlayerInfo[playerid][pFuelcase] = -1;
}
if(strcmp(x_job,"2",true) == 0)
{
if(PlayerInfo[playerid][pDice]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш зарче в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своето зарче.");
PlayerInfo[playerid][pDice] = 0;
}
if(strcmp(x_job,"3",true) == 0)
{
if(PlayerInfo[playerid][pBriefcase]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш куфарче в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своето куфарче.");
PlayerInfo[playerid][pBriefcase] = 0;
}
if(strcmp(x_job,"4",true) == 0)
{
if(PlayerInfo[playerid][pCigarettes]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш цигари в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своите цигари.");
PlayerInfo[playerid][pCigarettes] = 0;
}
if(strcmp(x_job,"5",true) == 0)
{
if(PlayerInfo[playerid][pRadio]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш радио в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своето радио.");
PlayerInfo[playerid][pRadio] = 0;
}
if(strcmp(x_job,"6",true) == 0)
{
if(PlayerInfo[playerid][pMoonshine]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш спиртно питие в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своето спиртно питие.");
PlayerInfo[playerid][pMoonshine] = 0;
}
if(strcmp(x_job,"7",true) == 0)
{
if(PlayerInfo[playerid][pWeed]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш марихуана в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своята марихуана.");
PlayerInfo[playerid][pWeed] = 0;
}
if(strcmp(x_job,"8",true) == 0)
{
if(PlayerInfo[playerid][pCocaine]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш кокаин в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своя кокаин.");
PlayerInfo[playerid][pCocaine] = 0;
}
if(strcmp(x_job,"9",true) == 0)
{
if(PlayerInfo[playerid][pHeroin]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш хероин в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своя хероин.");
PlayerInfo[playerid][pHeroin] = 0;
}
if(strcmp(x_job,"10",true) == 0)
{
if(PlayerInfo[playerid][pLodka]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш книжка за лодка в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своята книжка за лодка.");
PlayerInfo[playerid][pLodka] = 0;
}
if(strcmp(x_job,"11",true) == 0)
{
if(PlayerInfo[playerid][pVlak]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш книжка за влак в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своята книжка за влак.");
PlayerInfo[playerid][pVlak] = 0;
}
if(strcmp(x_job,"12",true) == 0)
{
if(PlayerInfo[playerid][pHelikopter]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш книжка за хеликоптер в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своята книжка за хеликоптер.");
PlayerInfo[playerid][pHelikopter] = 0;
}
if(strcmp(x_job,"13",true) == 0)
{
if(PlayerInfo[playerid][pSamolet]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш книжка за самолет в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своята книжка за самолет.");
PlayerInfo[playerid][pSamolet] = 0;
}
if(strcmp(x_job,"14",true) == 0)
{
if(PlayerInfo[playerid][pHook]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш въдица в себе си!");
SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли своята въдица.");
PlayerInfo[playerid][pHook] = 0;
}
return 1;
}
else if(strcmp(cmd, "/mytimers", true)==0)
{
new string2[2300], string1[256];
format(string2, sizeof(string2), "{FFFFFF}Timer\t{00ff00}Време\n");
format(string1, sizeof(string1),"{ff0000}MUTE:\t{33CCFF}%d секунди\n", PlayerInfo[playerid][pMuted]);
strcat(string2, string1, sizeof(string2));
format(string1, sizeof(string1),"{ff0000}JAIL:\t{33CCFF}%d секунди\n", PlayerInfo[playerid][pJail]);
strcat(string2, string1, sizeof(string2));
format(string1, sizeof(string1),"{ff0000}POLICE ЗАТВОР:\t{33CCFF}%d секунди\n", PlayerInfo[playerid][pPJail]);
strcat(string2, string1, sizeof(string2));
format(string1, sizeof(string1),"{ff0000}MUTE:\t{33CCFF}%d секунди\n", PlayerInfo[playerid][pMuted]);
strcat(string2, string1, sizeof(string2));
format(string1, sizeof(string1),"{ff0000}Coalmine:\t{33CCFF}%d секунди\n", PlayerInfo[playerid][pCoalmineTimer1]);
strcat(string2, string1, sizeof(string2));
format(string1, sizeof(string1),"{ff0000}Burger Shot:\t{33CCFF}%d секунди\n", PlayerInfo[playerid][pBurgerShotTimer1]);
strcat(string2, string1, sizeof(string2));
format(string1, sizeof(string1),"{ff0000}Sweep:\t{33CCFF}%d секунди\n", PlayerInfo[playerid][pSweeperTimer1]);
strcat(string2, string1, sizeof(string2));
format(string1, sizeof(string1),"{ff0000}Pizza:\t{33CCFF}%d секунди\n", PlayerInfo[playerid][pPizzaTimer1]);
strcat(string2, string1, sizeof(string2));
format(string1, sizeof(string1),"{ff0000}Deliver:\t{33CCFF}%d секунди\n", PlayerInfo[playerid][pDeliverTimer1]);
strcat(string2, string1, sizeof(string2));
format(string1, sizeof(string1),"{ff0000}Bus:\t{33CCFF}%d секунди\n", PlayerInfo[playerid][pBusTimer1]);
strcat(string2, string1, sizeof(string2));
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Твоите броячи", string2, "Излез", "");
return 1;
}
/*
else if(strcmp(cmd, "/leaders",true)==0)
{
new string256[256];
new string256result[2300];
new onlineleaders=0;
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pRank]==6)
{
onlineleaders=1;
if(PlayerInfo[i][pGLeader]==1)
{
format(string256,256, "{33CCFF}Главен лидер: %s (ID:%d) на банда/мафия - {00FF00}%s\n",pname[i],i,TeamInfo[PlayerInfo[i][pTeam]][tName]);
strcat(string256result, string256, sizeof(string256result));
}
if(PlayerInfo[i][pGLeader]==0)
{
format(string256,256, "{33CCFF}Лидер: %s (ID:%d) на банда/мафия - {00FF00}%s\n",pname[i],i,TeamInfo[PlayerInfo[i][pTeam]][tName]);
strcat(string256result, string256, sizeof(string256result));
}
}
}
if(onlineleaders>0)
{
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"{33aa33}Онлайн лидери:",string256result,"Затвори","");
}
else if(onlineleaders==0)
{
SendClientMessage(playerid, 0xE60000FF,"Няма онлайн лидери в момента!");
}
return 1;
}
*/
else if(strcmp(cmd, "/admins", true)==0)
{
new adminsonline=0;
new adminprefix2[60];
new status[35];
new string2[2300], string1[256];
format(string2, sizeof(string2), "{FFFFFF}ID\t{339933}Име и ниво\t{FF0000}Статус\n");
for(new i=0; i<MAX_PLAYERS;i++)
{
if(PlayerInfo[i][pTest]==1) adminprefix2="Тестов";
switch(PlayerInfo[i][pAdmin])
{
case 1: adminprefix2="Помощник";
case 2: adminprefix2="Администратор";
case 3: adminprefix2="Висш администратор";
case 4: adminprefix2="Главен администратор";
case 5: adminprefix2="Притежател";
case 6: adminprefix2="Scripter";
}
if(PlayerInfo[i][pAdmin]>0 || PlayerInfo[i][pTest]==1)
{
adminsonline++;
if(PlayerInfo[i][pADuty]==1)
{
format(status,35, "{339933}  • На смяна");
}
else if(PlayerInfo[i][pADuty]==0)
{
format(status,35,"{FF0000}  Извън смяна");
}
else if(PlayerInfo[i][pAFK]>0)
{
format(status,35,"{FFFF00}  AFK");
}
format(string1, sizeof(string1),"{FFFFFF}%d\t{33CCFF}%s - %s\t%s\n", i, pname[i],adminprefix2,status);
strcat(string2, string1, sizeof(string2));
}
}
if(adminsonline>0)
{
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Онлайн администратори", string2, "Излез", "");
}
if(adminsonline==0) {
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"{ffffff}Онлайн администратори","{E60000}Няма онлайн администратори в момента!","Затвори","");
}
return 1;
}
else if(strcmp(cmd, "/refillfc", true)==0)
{
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281)
|| IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406)
|| IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335)
|| IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391)
|| IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219)
|| IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797)
|| IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922)
|| IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625)
|| IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116)
|| IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328)
|| IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359)
|| IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452))
{
if (PlayerInfo[playerid][pFuelcase]==-1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш туба за бензин!");
if (IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Трябва да си пешеходец за да заредиш тубата си за бензин!");
if (PlayerInfo[playerid][pFuelcase]>99) return SendClientMessage(playerid,COLOR_GRAD1,"Твоята туба за бензин е заредена до горе!");
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281) && benzinkifuel[0]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406) && benzinkifuel[1]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335) && benzinkifuel[2]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391) && benzinkifuel[3]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219) && benzinkifuel[4]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797) && benzinkifuel[5]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203) && benzinkifuel[6]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922) && benzinkifuel[7]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625) && benzinkifuel[8]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116) && benzinkifuel[9]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203) && benzinkifuel[10]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203) && benzinkifuel[11]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203) && benzinkifuel[12]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203) && benzinkifuel[13]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328) && benzinkifuel[14]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359) && benzinkifuel[15]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452) && benzinkifuel[16]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
new string500[500];
if(100-PlayerInfo[playerid][pFuelcase]==1)
{
format(string500,500,"{00FF00}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашата туба с бензин.\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{FFFFFF}За да заредиш до горе ти нужен {FFFF00}1 литър.");
ShowPlayerDialog(playerid,38,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
if(100-PlayerInfo[playerid][pFuelcase]<1)
{
format(string500,500,"{00FF00}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашата туба с бензин.\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{FFFFFF}За да заредиш до горе са ти нужни {FFFF00}0 литра.");
ShowPlayerDialog(playerid,38,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
if(100-PlayerInfo[playerid][pFuelcase]>1)
{
format(string500,500,"{00FF00}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашата туба с бензин.\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{FFFFFF}За да заредиш до горе са ти нужни {FFFF00}%d литра.",100-PlayerInfo[playerid][pFuelcase]);
ShowPlayerDialog(playerid,38,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте до бензиностанция!");
return 1;
}
return 1;
}
else if(strcmp(cmd, "/fc", true)==0)
{
new string500[500]; new closeddialog=3500;
if (PlayerInfo[playerid][pFuelcase]==-1) return SendClientMessage(playerid,COLOR_RED,"Ти нямаш туба за бензин!");
format(string500,500,"Вашата туба бензин има {C14124}%d L",PlayerInfo[playerid][pFuelcase]);
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FF0000}Туба бензин",string500,"Затвори","");
return 1;
}
else if(strcmp(cmd, "/fuelcan", true)==0)
{
if (PlayerInfo[playerid][pFuelcase]==-1) return SendClientMessage(playerid,COLOR_RED,"Ти нямаш туба за бензин!");
if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_RED,"Трябва да се качиш в превозно средство за да заредиш!");
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
{
SendClientMessage(playerid,COLOR_RED,"Трябва да си в превозно средство като шофьор!");
return 1;
}
if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 481
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 509
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 510
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
{
if (PlayerInfo[playerid][pFuelcase]==0) return SendClientMessage(playerid,COLOR_RED,"Ти нямаш бензин в тубата!");
new string500[500];
if(100-vehfuel[GetPlayerVehicleID(playerid)]==1)
{
format(string500,500,"{FFFF00}Моля въведете с колко литра искате да заредите вашето превозно средство.\n{FFFFFF}За да заредиш до горе ти нужен {FFFF00}1 литър.");
ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
if(100-vehfuel[GetPlayerVehicleID(playerid)]<1)
{
format(string500,500,"{FFFF00}Моля въведете с колко литра искате да заредите вашето превозно средство.\n{FFFFFF}За да заредиш до горе са ти нужни {FFFF00}0 литра.");
ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"{FF0000}Туба бензин",string500,"Презареди","Затвори");
}
if(100-vehfuel[GetPlayerVehicleID(playerid)]>1)
{
format(string500,500,"{FFFF00}Моля въведете с колко литра искате да заредите вашето превозно средство.\n{FFFFFF}За да заредиш до горе са ти нужни {FFFF00}%d литра.",100-vehfuel[GetPlayerVehicleID(playerid)]);
ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"{FF0000}Туба бензин",string500,"Презареди","Затвори");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можете да заредите бензин в това превозно средство!");
return 1;
}
return 1;
}
else if(strcmp(cmd, "/refuel", true)==0)
{
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281)
|| IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406)
|| IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335)
|| IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391)
|| IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219)
|| IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797)
|| IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922)
|| IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625)
|| IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116)
|| IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203)
|| IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328)
|| IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359)
|| IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452))
{
if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство!");
if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 481
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 509
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 510
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
{
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281) && benzinkifuel[0]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406) && benzinkifuel[1]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335) && benzinkifuel[2]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391) && benzinkifuel[3]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219) && benzinkifuel[4]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797) && benzinkifuel[5]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203) && benzinkifuel[6]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922) && benzinkifuel[7]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625) && benzinkifuel[8]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116) && benzinkifuel[9]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203) && benzinkifuel[10]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203) && benzinkifuel[11]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203) && benzinkifuel[12]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203) && benzinkifuel[13]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328) && benzinkifuel[14]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359) && benzinkifuel[15]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452) && benzinkifuel[16]==0) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма бензин, елате по-късно.");
new string500[500];
if(100-vehfuel[GetPlayerVehicleID(playerid)]==1)
{
format(string500,500,"{00FF00}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашето превозно средство.\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{FFFFFF}За да заредиш до горе ти нужен {FFFF00}1 литър.");
ShowPlayerDialog(playerid,18,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
if(100-vehfuel[GetPlayerVehicleID(playerid)]<1)
{
format(string500,500,"{00FF00}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашето превозно средство.\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{FFFFFF}За да заредиш до горе са ти нужни {FFFF00}0 литра.");
ShowPlayerDialog(playerid,18,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
if(100-vehfuel[GetPlayerVehicleID(playerid)]>1)
{
format(string500,500,"{00FF00}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашето превозно средство.\n{C14124}1 литър {FFFFFF}= {00BF00}1 долар\n{FFFFFF}За да заредиш до горе са ти нужни {FFFF00}%d литра.",100-vehfuel[GetPlayerVehicleID(playerid)]);
ShowPlayerDialog(playerid,18,DIALOG_STYLE_INPUT,"{0040FF}Бензиностанция",string500,"Презареди","Затвори");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можете да заредите бензин в това превозно средство!");
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте до бензиностанция!");
return 1;
}
return 1;
}
else if(strcmp(cmd, "/gotobank", true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /bank ls/lv");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /bank ls/lv");
return 1;
}
if(strcmp(result,"ls",true)==1 && strcmp(result,"ls",true)==1)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /bank ls/lv");
}
if(strcmp(result,"ls",true)==0)
{
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си с куфара!");}
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в евент!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в DMON!");}
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
SendClientMessage(playerid, 0xFFFFFFFF, "- Ти се телепортира на Los Santos Bank! -");
SetPlayerPos(playerid, 1490.2128,-1741.8989,13.5469); SetPlayerFacingAngle(playerid,359.2968);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
if(strcmp(result,"lv",true)==0)
{
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в евент!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в DMON!");}
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
SendClientMessage(playerid, 0xFFFFFFFF, "- Ти се телепортира на Las Venturas Bank! -");
SetPlayerPos(playerid, 2417.1665,1121.0125,10.8203); SetPlayerFacingAngle(playerid,264.4303);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
return 1;
}
else if(strcmp(cmd, "/gotodesert", true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си с куфара!");}
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в евент!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в DMON!");}
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
SendClientMessage(playerid, 0xFFFFFFFF, "- Ти се телепортира на Desert! -");
SetPlayerPos(playerid, -295.2643,1537.3564,75.5625); SetPlayerFacingAngle(playerid,176.6348);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
else if(strcmp(cmd, "/dmoff", true)==0)
{
if(indmon[playerid]==0){ return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в DMON!");}
SetPlayerHealth(playerid,0);
indmon[playerid]=0;
PlayerInfo[playerid][pDMONKills]=0;
PlayerInfo[playerid][pTestDMON]=0;
PlayerInfo[playerid][pTestDMTimer]=0;
PlayerInfo[playerid][pTestDamage]=0;
TextDrawHideForPlayer(playerid, DMON[playerid]);
RestartPlayerColor(playerid);
return 1;
}
else if(strcmp(cmd, "/dmon", true)==0)
{
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pNo20S]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не са изминали 20 секунди откакто си написал /dmon!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в арената, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в арената, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в арената, докато си в дуел!");}
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Ти вече си в DMON!");}
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(PlayerInfo[playerid][pADuty]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си ADMIN ON-DUTY и не можеш да влезеш в DMON!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if (IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си пешеходец за да си във DM зоната!");
ResetPlayerWeapons(playerid);
format(string,256,"Deathmatch поле: %s влезе в битките, присъединявайте се, чрез /dmon!",pname[playerid]);
SendClientMessageToAll(0x01E5A7FF, string);
SendClientMessage(playerid, 0x01E5A7FF, "Deathmatch поле: За да напуснеш битките, използвай /dmoff!");
indmon[playerid]=1;
DMON[playerid]=TextDrawCreate(528.000000,385.000000," ~r~Kills: ~w~0/~g~20");
TextDrawAlignment(DMON[playerid],0);
TextDrawBackgroundColor(DMON[playerid],0x000000ff);
TextDrawFont(DMON[playerid],1);
TextDrawLetterSize(DMON[playerid], 0.2800,1.8000);
TextDrawSetProportional(DMON[playerid],1);
TextDrawSetShadow(DMON[playerid],1);
new stringtext[115];
PlayerInfo[playerid][pDMONKills]=0;
PlayerInfo[playerid][pNo20S]=40;
TextDrawHideForPlayer(playerid, DMON[playerid]);
format(stringtext, 115, " ~r~Kills: ~w~%d/~g~20",PlayerInfo[playerid][pDMONKills]);
TextDrawSetString(DMON[playerid], stringtext);
TextDrawShowForPlayer(playerid, DMON[playerid]);
SetPlayerColor(playerid,0x00CE96FF);
if(dmarena==1)
{
new spawnpos=randomex(1,5);
if(spawnpos<3)
{
SetPlayerPos(playerid, 1411.2889,1.3799,1000.9237);
}
if(spawnpos>2)
{
SetPlayerPos(playerid, 1360.4244,-39.4643,1007.8828);
}
SetPlayerInterior(playerid,1);
}
if(dmarena==2)
{
new spawnpos=randomex(1,5);
if(spawnpos<3)
{
SetPlayerPos(playerid, -1426.4996,1054.9972,1038.4913);
}
if(spawnpos>2)
{
SetPlayerPos(playerid, -1473.7843,948.4413,1036.7908);
}
SetPlayerInterior(playerid,15);
}
SetPlayerVirtualWorld(playerid,3233);
SetCameraBehindPlayer(playerid);
SetPlayerHealth(playerid,100); SetPlayerArmour(playerid,0);
new r = random(sizeof(PossibleRandomWeapons));
GivePlayerWeapon(playerid, PossibleRandomWeapons[r][0], PossibleRandomWeapons[r][1]);
return 1;
}
else if(strcmp(cmd, "/policeinterior", true)==0)
{
if(PlayerInfo[playerid][pTeam] !=13) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си от SAPD за да използваш тази команда!");
if(PlayerInfo[playerid][pSpawnP]==2) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече се пускаш в San Andreas Police Interior!");
SendClientMessage(playerid,0x0040FFFF,"Вече ще се пускаш в San Andreas Police Interior.");
PlayerInfo[playerid][pSpawnP]=2;
return 1;
}
else if(strcmp(cmd, "/policesf", true)==0)
{
if(PlayerInfo[playerid][pTeam] !=13) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си от SAPD за да използваш тази команда!");
if(PlayerInfo[playerid][pSpawnP]==3) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече се пускаш в San Fierro Police!");
SendClientMessage(playerid,0x0040FFFF,"Вече ще се пускаш в Los Santos Police.");
PlayerInfo[playerid][pSpawnP]=3;
return 1;
}
else if(strcmp(cmd, "/policels", true)==0)
{
if(PlayerInfo[playerid][pTeam] !=13) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си от SAPD за да използваш тази команда!");
if(PlayerInfo[playerid][pSpawnP]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече се пускаш в Los Santos Police!");
SendClientMessage(playerid,0x0040FFFF,"Вече ще се пускаш в Los Santos Police.");
PlayerInfo[playerid][pSpawnP]=0;
return 1;
}
else if(strcmp(cmd, "/policelv", true)==0)
{
if(PlayerInfo[playerid][pTeam] !=13) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си от SAPD за да използваш тази команда!");
if(PlayerInfo[playerid][pSpawnP]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече се пускаш в Las Venturas Police!");
SendClientMessage(playerid,0x0040FFFF,"Вече ще се пускаш в Las Venturas Police.");
PlayerInfo[playerid][pSpawnP]=1;
return 1;
}
else if(strcmp(cmd, "/dfls", true)==0)
{
if(PlayerInfo[playerid][pTeam] !=15) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си от Delta Force за да използваш тази команда!");
if(PlayerInfo[playerid][pSpawnP]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече се пускаш в Los Santos Army Base!");
SendClientMessage(playerid,COLOR_RDF,"Вече ще се пускаш в Los Santos Army Base.");
PlayerInfo[playerid][pSpawnP]=0;
return 1;
}
else if(strcmp(cmd, "/dfsf", true)==0)
{
if(PlayerInfo[playerid][pTeam] !=15) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си от Delta Force за да използваш тази команда!");
if(PlayerInfo[playerid][pSpawnP]==2) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече се пускаш в San Fierro Army Base!");
SendClientMessage(playerid,COLOR_RDF,"Вече ще се пускаш в San Fierro Army Base.");
PlayerInfo[playerid][pSpawnP]=2;
return 1;
}
else if(strcmp(cmd, "/dflv", true)==0)
{
if(PlayerInfo[playerid][pTeam] !=15) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си от Delta Force за да използваш тази команда!");
if(PlayerInfo[playerid][pSpawnP]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече се пускаш в Las Venturas Army Base!");
SendClientMessage(playerid,COLOR_RDF,"Вече ще се пускаш в Las Venturas Army Base.");
PlayerInfo[playerid][pSpawnP]=1;
return 1;
}
else if(strcmp(cmd, "/ls", true)==0)
{
if(PlayerInfo[playerid][pTeam] !=1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си от VIP за да използваш тази команда!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си пешеходец за да се телепортираш!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в дуел!");}
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в евент!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в DMON!");}
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
new Float:pHealth;
GetPlayerHealth(playerid,pHealth);
new Float:pArmour;
GetPlayerArmour(playerid,pArmour);
if(pHealth <= 99 && pArmour<=99)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш 100 кръв и 100 жилетка за да се телепортираш!");
return 1;
}
SendClientMessage(playerid, 0xFF3737FF, "VIP: Ти се телепортира в Los Santos");
SetPlayerPos(playerid, 1537.7205,-1691.0510,13.5469); SetPlayerFacingAngle(playerid,90.5010);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
//////////////////////////////////
///////////////////////////////////
else if(strcmp(cmd, "/lv", true)==0)
{
if(PlayerInfo[playerid][pTeam] !=1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си от VIP за да използваш тази команда!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си пешеходец за да се телепортираш!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в дуел!");}
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в евент!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в DMON!");}
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
new Float:pHealth;
GetPlayerHealth(playerid,pHealth);
new Float:pArmour;
GetPlayerArmour(playerid,pArmour);
if(pHealth <= 99 && pArmour<=99)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш 100 кръв и 100 жилетка за да се телепортираш!");
return 1;
}
SendClientMessage(playerid, 0xFF3737FF, "VIP: Ти се телепортира в Las Venturas");
SetPlayerPos(playerid, 1699.6941,1434.8165,10.6869); SetPlayerFacingAngle(playerid,272.8860);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
else if(strcmp(cmd, "/drift", true)==0)
{
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си пешеходец за да се телепортираш!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в евент!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в DMON!");}
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
new Float:pHealth;
GetPlayerHealth(playerid,pHealth);
if(pHealth <= 70)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш 70 кръв за да се телепортираш!");
return 1;
}
indrift[playerid]=1;
TextDrawHideForPlayer(playerid, TDLabels[0]);
TextDrawHideForPlayer(playerid, TDLabels[1]);
TextDrawHideForPlayer(playerid, TDLabels[2]);
SendClientMessage(playerid, 0xccffffFF, "SERVER: След като се телепортира до Drift, имаш право на командите {ffff00}/driftveh, /tune и /driftnos");
SendClientMessage(playerid, 0xccffffFF, "SERVER: Също така ти се отчитат дрифт точки и ти се дават пари в замяна на тях");
SendClientMessage(playerid, COLOR_RED, "EXIT: За да излезеш, използвай /driftoff");
SetPlayerPos(playerid, -254.5266,1429.2543,120.2559);
SetCameraBehindPlayer(playerid);
return 1;
}
else if(strcmp(cmd, "/vipbase", true)==0)
{
if(PlayerInfo[playerid][pTeam] !=1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си от VIP за да използваш тази команда!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си пешеходец за да се телепортираш!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си с куфара!");}
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в евент!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в DMON!");}
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
new Float:pHealth;
GetPlayerHealth(playerid,pHealth);
new Float:pArmour;
GetPlayerArmour(playerid,pArmour);
if(pHealth <= 99 && pArmour<=99)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш 100 кръв и 100 жилетка за да се телепортираш!");
return 1;
}
SendClientMessage(playerid, 0xFF3737FF, "VIP: Ти се телепортира в базата");
SetPlayerPos(playerid, 1252.4546,-2032.9832,59.6335); SetPlayerFacingAngle(playerid,269.6020);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
else if(strcmp(cmd, "/gotols", true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в дуел!");}
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в евент!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в DMON!");}
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
SendClientMessage(playerid, 0xFFFFFFFF, "- Ти се телепортира на Los Santos! -");
SetPlayerPos(playerid, 1537.7205,-1691.0510,13.5469); SetPlayerFacingAngle(playerid,90.5010);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
else if(strcmp(cmd, "/gotolv", true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в евент!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в DMON!");}
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
SendClientMessage(playerid, 0xFFFFFFFF, "- Ти се телепортира на Las Venturas Airport! -");
SetPlayerPos(playerid, 1699.6941,1434.8165,10.6869); SetPlayerFacingAngle(playerid,272.8860);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
else if(strcmp(cmd, "/gotosf", true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в евент!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в DMON!");}
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
SendClientMessage(playerid, 0xFFFFFFFF, "- Ти се телепортира на San Fierro Airport! -");
SetPlayerPos(playerid, -1416.9932,-296.2564,14.1484); SetPlayerFacingAngle(playerid,132.8014);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
else if(strcmp(cmd, "/gotomc", true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в евент!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в DMON!");}
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
SendClientMessage(playerid, 0xFFFFFFFF, "- Ти се телепортира на Mountain Chiliad! -");
SetPlayerPos(playerid, -2311.1885,-1641.3820,483.7031); SetPlayerFacingAngle(playerid,216.9667);
SetPlayerInterior(playerid,0); SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
return 1;
}
else if(strcmp(cmd,"/invisible",true) == 0)
{
if(PlayerInfo[playerid][pVip] >= 3 || freevip==1 || joinedincounter[playerid]==1)
{
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да бъдеш невидим, докато си CMN1!"); }
if(PlayerInfo[playerid][pInDM]) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да бъдеш невидим, докато си Deathmatch!"); }
if(induel[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да бъдеш невидим, докато си Duel!"); }
if(inevent[playerid]== 1 && einvisible==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /invisible е забранена в евента!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(PlayerInfo[playerid][pInvisible]==0)
{
SetPlayerColor(playerid, 0xFFFFFF00);
SendClientMessage(playerid,0xFFFFFFFF,"Ти вече си невидим на картата.");
PlayerInfo[playerid][pInvisible]=1;
}
else
{
SendClientMessage(playerid,0xFFFFFFFF,"Ти вече си видим на картата.");
PlayerInfo[playerid][pInvisible]=0;
RestartPlayerColor(playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!"); //Нямаш достатъчно VIP права за да ползваш командата
}
return 1;
}
else if(strcmp(cmd,"/showdf",true) == 0)
{
if(PlayerInfo[playerid][pTeam] == 15 && PlayerInfo[playerid][pRank]==6)
{
if(hidedf==0) return SendClientMessage(playerid,COLOR_GRAD1,"Delta Force вече е на видим режим!");
new string130[130];
format(string130, 130, "[FACTION CHAT] %s превключи Delta Force на видим режим!",pname[playerid]);hidedf=0;
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string130);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam] == 15 && PlayerInfo[i][pInDM]==0 && induel[i]==0 && cmn1[i]==0)
{
SetPlayerColor(i,0xA4A400FF);
}
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на Delta Force!");
}
return 1;
}
if (strcmp(cmdtext, "/fmuted", true) == 0)
{
if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pTeam]>0)
{
SendClientMessage(playerid, 0x40BF00FF, "Онлайн заглушени играчи в твоята банда/мафия:");
new muted = 0;
new string256[256];
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pFMuted] > 0 && PlayerInfo[i][pTeam]==PlayerInfo[playerid][pTeam])
{
format(string256, 50, "%s (ID:%d)", pname[i], i);
muted = 1;
}
}
if (muted == 0) SendClientMessage(playerid,0xE60000FF,"Няма онлайн заглушени играчи в твоята банда/мафия."); else SendClientMessage(playerid,0xFFFFFFFF,string256);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/checkfwarn", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /checkfwarn [ID на играч]");
return 1;
}
new playa;
playa = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if (PlayerInfo[playerid][pRank] >= 6)
{
if(playa != INVALID_PLAYER_ID)
{
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[playa][pTeam]) return SendClientMessage(playerid, 0xFFFFFFFF,"Този играч не е от твоята банда/мафия!");
new string60[60];
format(string60,60,"%s има %d FACTION WARNS",pname[playa],PlayerInfo[playa][pFWarns]);
SendClientMessage(playerid,0xFFFFFFFF,string60);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/ismember", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ismember [ID на играч]");
return 1;
}
new playa;
playa = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if (PlayerInfo[playerid][pRank] >= 6)
{
if(playa != INVALID_PLAYER_ID)
{
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[playa][pTeam]) SendClientMessage(playerid, 0xFFFFFFFF,"Този играч не е от твоята банда/мафия!");
if(PlayerInfo[playerid][pTeam]==PlayerInfo[playa][pTeam]) SendClientMessage(playerid, 0xFFFFFFFF,"Този играч е от твоята банда/мафия!");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/funmute", true) == 0 || strcmp(cmd, "/factionunmute", true) == 0 )
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /factionunmute(/funmute) [ID на играч]");
return 1;
}
new playa;
playa = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if (PlayerInfo[playerid][pRank] >= 6)
{
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[playa][pTeam]) return SendClientMessage(playerid, COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
if(playa != INVALID_PLAYER_ID)
{
if(PlayerInfo[playa][pFMuted] >0)
{
PlayerInfo[playa][pFMuted] = 0;
new string180[180];
format(string180, 180, "[FACTION CHAT] %s was FACTION unmuted by %s",pname[playa], pname[playerid]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string180);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е заглушен в FACTION чата!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/ftmute", true) == 0 || strcmp(cmd, "/factiontimemute", true) == 0 )
{
//---------------[GET PLAYER ID, OPEN]---------------
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /factiontimemute(/ftmute) [playerid] [time] [reason]");
return 1;
}
new playa;
playa = ReturnUser(tmp);
//---------------[GET PLAYER ID, CLOSE]---------------
if(!IsPlayerConnected(playa))
{
SendClientMessage(playerid, COLOR_GRAD1,"Посоченото ID не е в сървъра!");
return 1;
}
//------------------[GET TIME, OPEN]-----------------
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /factiontimemute(/ftmute) [playerid] [time] [reason]");
return 1;
}
new level=strval(tmp);
//------------------[GET TIME, CLOSE]-----------------
if (PlayerInfo[playerid][pRank] >= 6)
{
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[playa][pTeam]) return SendClientMessage(playerid, COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /ftmute [playerid] [time] [reason]");
return 1;
}
if(PlayerInfo[playa][pFMuted] == 0)
{
if(level<1 || level>1000) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва минутите да бъдат между 1 и 1000!");
PlayerInfo[playa][pFMuted] = level*120;
new string180[180];
format(string180, 180, "[FACTION CHAT] %s was FACTION muted by %s for %d minutes. [Reason: %s]",pname[playa], pname[playerid],level,result);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string180);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е заглушен в FACTION чата!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/aunmute", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /aunmute [ID на играч]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
if(PlayerInfo[para1[playerid]][pAMuted] > 0)
{
PlayerInfo[para1[playerid]][pAMuted] = 0;
new string180[180];
format(string180, 180, "%s was unmuted in ADMIN CHAT by %s",pname[para1[playerid]] ,pname[playerid]);
SendClientMessageToAll(COLOR_GREEN,string180);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е заглушен в ADMIN чата!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/amute", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /amute [ID на играч] [minutes] [причина]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
new minutesz;
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /amute [ID на играч] [minutes] [причина]");
return 1;
}
minutesz = strval(tmp);
if(minutesz<1)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /amute [ID на играч] [minutes] [причина]");
return 1;
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /amute [ID на играч] [minutes] [причина]");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
PlayerInfo[para1[playerid]][pAMuted] = minutesz*120;
new string256[256];
format(string256, 256, "%s беше заглушен в ADMIN чата от %s за %d минути [Причина: %s]",pname[para1[playerid]], pname[playerid],minutesz,result);
SendClientMessageToAll(COLOR_RED, string256);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/fmute", true) == 0 || strcmp(cmd, "/factionmute", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /factionmute(/fmute) [ID на играч] [причина]");
return 1;
}
new playa;
playa = ReturnUser(tmp);
if (PlayerInfo[playerid][pRank] >= 6)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /factionmute(/fmute) [ID на играч] [причина]");
return 1;
}
if(playa != INVALID_PLAYER_ID)
{
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[playa][pTeam]) return SendClientMessage(playerid, COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
if(PlayerInfo[playa][pFMuted] == 0)
{
PlayerInfo[playa][pFMuted] = 1000000;
new string256[256];
format(string256, 256, "[FACTION CHAT] %s was FACTION muted by %s [Reason: %s]",pname[playa], pname[playerid],result);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е заглушен в FACTION чата!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd,"/factionmuteall",true) == 0 || strcmp(cmd,"/fmuteall",true) == 0)
{
if(PlayerInfo[playerid][pTeam] != 0 && PlayerInfo[playerid][pRank]==6)
{
if(TeamInfo[PlayerInfo[playerid][pTeam]][tMute]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Всички играчи в твоята банда вече са заглушени!");
new string180[180];
format(string180, 180, "[FACTION CHAT] All players were FACTION muted by %s!",pname[playerid]);TeamInfo[PlayerInfo[playerid][pTeam]][tMute]=1;
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string180);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
PlayerInfo[i][pFMuted]=1;
}
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер!");
}
return 1;
}
else if(strcmp(cmd,"/factionunmuteall",true) == 0 || strcmp(cmd,"/funmuteall",true) == 0)
{
if(PlayerInfo[playerid][pTeam] != 0 && PlayerInfo[playerid][pRank]==6)
{
if(TeamInfo[PlayerInfo[playerid][pTeam]][tMute]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Всички играчи в твоята банда вече са отглушени!");
new string180[180];
format(string180, 180, "[FACTION CHAT] All players were FACTION unmuted by %s!",pname[playerid]);TeamInfo[PlayerInfo[playerid][pTeam]][tMute]=0;
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string180);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
PlayerInfo[i][pFMuted]=0;
}
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер!");
}
return 1;
}
else if(strcmp(cmd,"/hidedf",true) == 0)
{
if(PlayerInfo[playerid][pTeam] == 15 && PlayerInfo[playerid][pRank]==6)
{
if(hidedf==1) return SendClientMessage(playerid,COLOR_GRAD1,"Delta Force вече е на невидим режим!");
new string140[140];
format(string140, 140, "[FACTION CHAT] %s превключи Delta Force на невидим режим!",pname[playerid]);hidedf=1;
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string140);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam] == 15 && PlayerInfo[i][pInDM]==0 && induel[i]==0 && cmn1[i]==0)
{
SetPlayerColor(i, 0xFFFFFF00);
}
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на Delta Force!");
}
return 1;
}
else if(strcmp(cmd, "/vguns", true) == 0)
{
if (PlayerInfo[playerid][pVip] >= 3 || freevip==1)
{
if(PlayerInfo[playerid][pVGuns]>0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вече си използвал /vguns!");
return 1;
}
if(PlayerInfo[playerid][pTeam]==0)
{
GivePlayerWeapon(playerid, 31, 50);
GivePlayerWeapon(playerid, 26, 55);
}
else
{
GivePlayerWeapon(playerid, 34, 15);
GivePlayerWeapon(playerid, 4, 1);
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
else if(strcmp(cmdtext, "/tune", true) == 0)
{
if(indrift[playerid]==1 || PlayerInfo[playerid][pVip]<3 || freevip==1 || IsPlayerInRangeOfPoint(playerid, 4.0, 1247.9263,-2051.8269,59.5036) || IsPlayerInRangeOfPoint(playerid, 4.0, 1248.8352,-2058.9548,59.4665) || IsPlayerInRangeOfPoint(playerid, 4.0, 2404.2773,1023.2300,10.5474) || IsPlayerInRangeOfPoint(playerid, 4.0, 2404.1978,1029.6959,10.5400))
{
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в превозно средство като шофьор!");
return 1;
}
if(inevent[playerid]== 1 && etune==1) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /tune е забранена в евента!");
CarmodDialog(playerid);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си близо до обикновен тунинг гараж!");
}
return 1;
}
else if(strcmp(cmd,"/vrefuel",true)==0)
{
new vehicle;
vehicle = GetPlayerVehicleID(playerid);
if(IsPlayerInAnyVehicle(playerid))
{
if(PlayerInfo[playerid][pVip] >= 3 || freevip==1)
{
if(PlayerInfo[playerid][pVRefuel] == 0)
{
if(vehfuel[GetPlayerVehicleID(playerid)]>=80) SendClientMessage(playerid,COLOR_GRAD1,"Твоето превозно средство има над 80 литра!");
vehfuel[GetPlayerVehicleID(playerid)] +=20;
SendClientMessage(playerid,0xFFFF00FF,"Ти добави 20 литра бензин на твоето превозно средство");
PlayerInfo[playerid][pVRefuel] = 6*120;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Не са минали 6 минути от последното използване на командата!");
}
}
return 1;
}
else if(strcmp(cmd,"/aviptext",true)==0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /aviptext [ID на играч] [text]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /aviptext [ID на играч] [text]");
return 1;
}
if(PlayerInfo[para1[playerid]][pVip] < 6 && freevip==0) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч няма достатъчно VIP права за да му сложиш текст!");
if(PlayerInfo[para1[playerid]][pADuty]==1)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Този играч е ADMIN ON-DUTY!");
}
if(para1[playerid]==INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
if(para1[playerid]==playerid) return SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да смениш своя 3D текст!");
if(strlen(result)<1 || strlen(result)>25) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва символите да бъдат между 1 и 25!");
UpdateDynamic3DTextLabelText(PlayerLabel[para1[playerid]], 0x800000FF, " ");
format(VipText3D[para1[playerid]],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, para1[playerid], INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(para1[playerid]), GetPlayerInterior(para1[playerid]), -1, 15.0);
PlayerLabel[playerid] = CreateDynamic3DTextLabel(result, 0xCC0000FF, 0.0, 0.0, 0.0, 15.0, para1[playerid], INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(para1[playerid]), GetPlayerInterior(para1[playerid]), -1, 15.0);
new stringaa[256];
format(stringaa,256,"VIP Label: Ти смени 3D текста на главата на %s на %s",pname[para1[playerid]],result);
SendClientMessage(playerid,0xFF3737FF,stringaa);
format(stringaa,256,"VIP Label: %s смени твоят 3D текст на главата ти на %s",pname[playerid],result);
SendClientMessage(para1[playerid],0xFF3737FF,stringaa);
format(VipText3D[playerid],26,"%s",result);
PlayerInfo[para1[playerid]][pVIPLabel] = 1;
return 1;
}
else if(strcmp(cmd, "/extraarmour", true) == 0)
{
if(PlayerInfo[playerid][pVip] < 6 && freevip==0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
if(PlayerInfo[playerid][pHealT] > 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
return 1;
}
SetPlayerArmour(playerid,100);
PlayerInfo[playerid][pHealT]=9*120;
SendClientMessage(playerid,0xB8860BFF,"Вие си сложите жилетка с повече защита");
SendClientMessage(playerid,0xB8860BFF,"Жилетката предпазва само от изстрели и удари, но не и от падане");
extraarmour[playerid]=100;
RemovePlayerAttachedObject(playerid, 5);
new	objectid=SetPlayerAttachedObject(playerid, 5, 19515,  1, 0.1,  0.05, 0.0,  0.0,   0.0,   0.0);
attachedPlayerObject[objectid]=true;
EditAttachedObject(playerid, 5);
return 1;
}
else if(strcmp(cmd, "/viptext", true) == 0)
{
if(PlayerInfo[playerid][pVip] < 6 && freevip==0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
if(PlayerInfo[playerid][pADuty]==1)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си ON-DUTY!");
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /viptext [text]");
return 1;
}
if(PlayerInfo[playerid][pCash]<5000) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да имаш поне $5000 за да смениш текста на главата си!");
if(strlen(result)<1 || strlen(result)>25) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва символите да бъдат между 1 и 25!");
PlayerInfo[playerid][pCash]-=5000;
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
format(VipText3D[playerid],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
PlayerLabel[playerid] = CreateDynamic3DTextLabel(result, 0xCC0000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
new stringaa[256];
format(stringaa,256,"VIP Label: Ти смени твоят 3D текст на главата ти на %s",result);
SendClientMessage(playerid,0xFF3737FF,stringaa);
format(VipText3D[playerid],26,"%s",result);
PlayerInfo[playerid][pVIPLabel] = 1;
return 1;
}
else if(strcmp(cmdtext, "/viplabel", true) == 0)
{
if(PlayerInfo[playerid][pVip] < 4 && freevip==0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
if(PlayerInfo[playerid][pADuty]==1)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си ON-DUTY!");
}
if(PlayerInfo[playerid][pVIPLabel]==0)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
format(VipText3D[playerid],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
format(VipText3D[playerid],26,"VIP");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
PlayerInfo[playerid][pVIPLabel] = 1; SendClientMessage(playerid,0xFF3737FF,"VIP Label: Вече над главата ти пише 'VIP'.");
return 1;
}
else
{
PlayerInfo[playerid][pVIPLabel] = 0;
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
new stringaaa[256]; format(stringaaa,256,"VIP Label: Вече над главата ти няма да пише '%s'.",VipText3D[playerid]);
SendClientMessage(playerid,0xFF3737FF,stringaaa);
}
return 1;
}
else if(strcmp(cmdtext, "/laser", true) == 0)
{
if(PlayerInfo[playerid][pVip] < 4 && freevip==0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
if(PlayerInfo[playerid][pLaser] == 0)
{
if(PlayerInfo[playerid][pTeam]==1)
{
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==2)
{
SetPVarInt(playerid, "color", 19083);
}
if(PlayerInfo[playerid][pTeam]==13 || PlayerInfo[playerid][pTeam]==14 || PlayerInfo[playerid][pTeam]==6)
{
SetPVarInt(playerid, "color", 19080);
}
if(PlayerInfo[playerid][pTeam]==8)
{
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==15)
{
SetPVarInt(playerid, "color", 19084);
}
PlayerInfo[playerid][pLaser] = 1; SendClientMessage(playerid,0xF97804FF,"VIP Laser: Ти добави лазера."); return 1;
}
else
{
PlayerInfo[playerid][pLaser] = 0;
SetPVarInt(playerid, "color", 0);
SendClientMessage(playerid,0xF97804FF,"VIP Laser: Ти си махна лазера.");
}
return 1;
}
else if(strcmp(cmdtext, "/parrot", true) == 0)
{
if(PlayerInfo[playerid][pVip] < 4 && freevip==0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
if(PlayerInfo[playerid][pParrot] == 0)
{
SendClientMessage(playerid, 0xF97804FF,"Ти си сложи папагал!");
new objectid=SetPlayerAttachedObject( playerid, 2, 19078, 15, 0.073592, 0.024750, 0.023458, 164.272216, 87.050361, 0.000000, 1.000000, 0.968321, 1.118647 ) && EditAttachedObject(playerid, 2);
attachedPlayerObject[objectid]=true;
PlayerInfo[playerid][pParrot] = 1; return 1;
}
else
{
PlayerInfo[playerid][pParrot] = 0;
RemovePlayerAttachedObject(playerid,2);
SendClientMessage(playerid, 0xF97804FF,"Ти си махна папагала!");
}
return 1;
}
else if(strcmp(cmd, "/jetpack", true) == 0)
{
if (PlayerInfo[playerid][pVip] >= 2 || freevip==1)
{
if(getmbid==playerid)
{
SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да използваш тази команда, докато си с куфара!");
return 1;
}
if(PlayerInfo[playerid][pJail]>0)
{
SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в затвора!");
return 1;
}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в дуел!");}
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в евент!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в DMON!");}
if(turfmember[playerid]==2){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в атака на територия!");}
if(onwork[playerid]==1) return SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да използваш тази команда, докато си на работа!");
if(PlayerInfo[playerid][pInDM]) return SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в Deathmatch!");
if(inevent[playerid]== 1 && ejetpack==1) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /healme е забранена в евента!");
SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
SetPlayerArmedWeapon(playerid,0);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
//
else if(strcmp(cmd, "/dmv", true) == 0)
{
if(IsPlayerInRangeOfPoint(playerid, 4, -2026.8839,-115.1081,1035.1719))
{
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да си купиш книжка от тук!");
return 1;
}
new x_job[256];
x_job = strtok(cmdtext, idx);
if(!strlen(x_job)) {
SendClientMessage(playerid, 0xFFFFFFFF,"Начин на използване: /dmv [лицензи]");
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}За да си вземеш шофьорска книжка, трябва да преминеш изпит за нея");
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Номер 1: Лодка, Номер 2: Влак, Номер 3: Хеликоптер, Номер 4: Самолет");
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Цени: Лодка - $5000, Влак - $10000, Хеликоптер - $15000, Самолет - $25000");
return 1;
}
tmp = strtok(cmdtext, idx);
if(strcmp(x_job,"4",true) == 0)
{
if(PlayerInfo[playerid][pCash] < 25000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари, за да си купиш шофьорска книжка за самолет!");
return 1;
}
if(PlayerInfo[playerid][pLevel] < 15)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво, за да си купиш шофьорска книжка за самолет!");
return 1;
}
if(PlayerInfo[playerid][pSamolet] >= 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш шофьорска книжка за самолет!");
return 1;
}
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Ти си купи шофьорска книжка за самолет!");
GivePlayerCash(playerid, -25000);
BizInfo[enteredbiz[playerid]][bEarnings]+=25000;
PlayerInfo[playerid][pSamolet] = 1;
}
if(strcmp(x_job,"3",true) == 0)
{
if(PlayerInfo[playerid][pCash] < 15000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари, за да си купиш шофьорска книжка за хеликоптер!");
return 1;
}
if(PlayerInfo[playerid][pLevel] < 12)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво, за да си купиш шофьорска книжка за хеликоптер!");
return 1;
}
if(PlayerInfo[playerid][pHelikopter] >= 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш шофьорска книжка за хеликоптер!");
return 1;
}
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Ти си купи шофьорска книжка за хеликоптер!");
GivePlayerCash(playerid, -15000);
BizInfo[enteredbiz[playerid]][bEarnings]+=15000;
PlayerInfo[playerid][pHelikopter] = 1;
}
if(strcmp(x_job,"2",true) == 0)
{
if(PlayerInfo[playerid][pCash] < 10000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари, за да си купиш шофьорска книжка за влак/трамвай!");
return 1;
}
if(PlayerInfo[playerid][pLevel] < 10)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво, за да си купиш шофьорска книжка за влак/трамвай!");
return 1;
}
if(PlayerInfo[playerid][pVlak] >= 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш шофьорска книжка за влак/трамвай!");
return 1;
}
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Ти си купи шофьорска книжка за влак/трамвай!");
GivePlayerCash(playerid, -10000);
BizInfo[enteredbiz[playerid]][bEarnings]+=10000;
PlayerInfo[playerid][pVlak] = 1;
}
if(strcmp(x_job,"1",true) == 0)
{
if(PlayerInfo[playerid][pCash] < 5000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари, за да си купиш шофьорска книжка за лодка!");
return 1;
}
if(PlayerInfo[playerid][pLevel] < 8)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво, за да си купиш шофьорска книжка за лодка!");
return 1;
}
if(PlayerInfo[playerid][pLodka] >= 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш шофьорска книжка за лодка!");
return 1;
}
SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Ти си купи шофьорска книжка за лодка!");
GivePlayerCash(playerid, -5000);
BizInfo[enteredbiz[playerid]][bEarnings]+=5000;
PlayerInfo[playerid][pLodka] = 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се намираш в училище за шофьори!");
}
return 1;
}
else if(strcmp(cmd, "/fturfs", true) == 0)
{
if(PlayerInfo[playerid][pTeam]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в банда/мафия!");
if(PlayerInfo[playerid][pTeam]<2 || PlayerInfo[playerid][pTeam]>=13) return SendClientMessage(playerid,COLOR_GRAD1,"Твоята банда не може да превзема територии!");
if(TeamInfo[PlayerInfo[playerid][pTeam]][tTurfs]==0) return  SendClientMessage(playerid,0x008cffFF,"Turf War: Твоята банда/мафия не притежава нито една територия!");
new stringgang[256];
format(stringgang,256,"Turf War: Твоята банда/мафия притежава %d територии!",TeamInfo[PlayerInfo[playerid][pTeam]][tTurfs]);
SendClientMessage(playerid,0x008cffFF,stringgang);
return 1;
}
else if(strcmp(cmd, "/turfattack", true) == 0)
{
new turfut3;
new stringmoneybox[256];
new Float:x, Float:y, Float:z; new turfa=0;
new samegang=0;
new isinturf=0; new isinturfplayer[MAX_PLAYERS]=0;
if(GetPlayerInterior(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да нападаш територии в този Interior!");
if(GetPlayerVirtualWorld(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да нападаш територии в този Virtual World!");
if(PlayerInfo[playerid][pRank]<6) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер!");
if(PlayerInfo[playerid][pTeam]<2 || PlayerInfo[playerid][pTeam]>=13 && PlayerInfo[playerid][pTeam]<=15) return SendClientMessage(playerid,COLOR_GRAD1,"Твоята банда не може да превзема територии!");
if(TeamInfo[PlayerInfo[playerid][pTeam]][tTime]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Твоята банда не може да превзема територии в момента!");
if(TeamInfo[PlayerInfo[playerid][pTeam]][tWar]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Твоята банда/мафия в момента не може да направи атака!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да бъдеш в търф, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да бъдеш в търф, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да бъдеш в търф, докато си в дуел!");}
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да бъдеш в търф, докато си в DMON!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да бъдеш в търф, докато си в евент!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pInDM]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да бъдеш в търф, докато си в Deathmatch!");}
if(PlayerInfo[playerid][pADuty]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не да бъдеш в търф, докато си ADMIN ON-DUTY!");}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(GetPlayerVirtualWorld(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в този Virtual World!");
if(GetPlayerInterior(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в този Interior ID!");
if(testmode[playerid]==0)
{
if(hours>=1 && hours<=6)  return SendClientMessage(playerid,COLOR_GRAD1,"През 1 вечерта до 6 сутринта не можеш да нападаш територии!");
}
inturfmembers[PlayerInfo[playerid][pTeam]]=0;
new inturfmembers2=0;
for (new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam]==PlayerInfo[playerid][pTeam])
{
for (new t = 0; t < MAX_TURFS; t++)
{
GetPlayerPos(playerid, x, y, z);
if (IsPlayerInTurf(playerid, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]))
{
if(TeamInfo[PlayerInfo[playerid][pTeam]][tLevel]<10)
{
if(!CheckForGangLevel(PlayerInfo[playerid][pTeam],playerid))
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва територията която атакуваш да е по-близо до останалите ви територии");
SendClientMessage(playerid,COLOR_GRAD1,"Ще можете да нападате отдалечени територии, когато имате Level 10");
return 1;
}
}
turfut3=t;
}
}
}
}
for (new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam]==PlayerInfo[playerid][pTeam])
{
for (new t = 0; t < MAX_TURFS; t++)
{
GetPlayerPos(playerid, x, y, z);
if (IsPlayerInTurf(playerid, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]))
{
if(TurfInfo[t][TurfID]<=18)
{
new stringaaaa[256];
format(stringaaaa,256,"Не можеш да атакуваш главната територия на %s",TeamInfo[TurfInfo[t][TurfOwner]][tName]);
return SendClientMessage(playerid, COLOR_GRAD1,stringaaaa);
}
isinturfplayer[playerid]=t;
turfa=t;
if(TurfInfo[t][TurfOwner]==PlayerInfo[playerid][pTeam])
{
samegang=1;
}
}
}
if(turfwargang[turfa]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да атакуваш тази територия в момента!");
if(samegang==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да атакуваш територия на твоята банда/мафия!");
inturfmembers[PlayerInfo[playerid][pTeam]]=inturfmembers2;
for (new t = 0; t < MAX_TURFS; t++)
{
GetPlayerPos(playerid, x, y, z);
if (IsPlayerInTurf(playerid, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]))
{
for (new i3 = 0; i3 < MAX_PLAYERS; i3++ && IsPlayerConnected(i3))
{
if (IsPlayerInTurf(i3, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]) &&
IsPlayerInTurf(playerid, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]))
{
inturfmembers2+=1;
}
}
isinturf=t;
}
}
if(inturfmembers2<3 && testmode[playerid]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да има поне 3 члена на тази територия!");
if(isinturf==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не се намираш на територия!");
}
}
new turfstring[256];
TeamInfo[PlayerInfo[playerid][pTeam]][tTime]=85*120;
TeamInfo[PlayerInfo[playerid][pTeam]][tID]=isinturf;
turfattack[PlayerInfo[playerid][pTeam]]=5*120;
//
//
inturfmembers[PlayerInfo[playerid][pTeam]]=0;
GangZoneFlashForAll(isinturf, TeamInfo[PlayerInfo[playerid][pTeam]][tColor]);
format(turfstring, 256, "[TURF INFO] {FF0000}%s {008cff}стартира атака на територията %s, която принадлежи на {FF0000}%s",pname[playerid],TurfInfo[isinturf][TurfName],
TeamInfo[TurfInfo[isinturf][TurfOwner]][tName]);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
if (IsPlayerInTurf(i, TurfInfo[turfut3][zMinX], TurfInfo[turfut3][zMinY], TurfInfo[turfut3][zMaxX], TurfInfo[turfut3][zMaxY]))
{
if(turfmember[i]!=2)
{
turfmember[i]=2;
nospam2[i]=0;
inturfmembers[PlayerInfo[playerid][pTeam]]+=1;
}
if(PlayerInfo[playerid][pWanted]<6)
{
if(withbandana[i]==0)
{
PlayerInfo[i][pWanted]+=2;
}
else if(withbandana[i]==1)
{
PlayerInfo[i][pWanted]+=1;
}
}
nospam2[i]=0;
if(PlayerInfo[i][pWanted]>6) PlayerInfo[i][pWanted]=6;
SetPlayerWantedLevel(i,PlayerInfo[i][pWanted]);
format(stringmoneybox,256,"[SUSPECT]{0040FF} Ти си заподозрян в престъпление: Атака на територия, ниво на издирване: %d",PlayerInfo[i][pWanted]);
SendClientMessage(i,0xFF0000FF,stringmoneybox);
if(PlayerInfo[i][pWanted]==6)
{
PlayerInfo[i][pWanted]+=3;
format(stringmoneybox,115,"{ff0000}[DELTA FORCE]{A4A400} Ти ще бъдеш издирван от Delta Force, понеже имаш 6 звезди",PlayerInfo[i][pWanted]);
SendClientMessage(i,0xFF0000FF,stringmoneybox);
new stringsuspect[256];
format(stringsuspect,256,"[WARNING]{A4A400} %s е заподозрян с 6 звезди, който го убие ще спечели $3000 и 5 EP",pname[i],PlayerInfo[i][pWanted]);
for(new alldf=0; alldf<MAX_PLAYERS;alldf++ && IsPlayerConnected(alldf))
{
if(PlayerInfo[alldf][pTeam]==15)
{
SendClientMessage(alldf,0xFF0000FF,stringsuspect);
}
}
}
}
SendClientMessage(i, 0x008cffFF, turfstring);
}
}
if(TurfInfo[isinturf][TurfOwner]==0)
{
//inwar[PlayerInfo[playerid][pTeam]]=1;
format(turfstring, 256, "Turf War: {FF0000}%s {008cff}се опитва да превземе Civil територията на %s!", TeamInfo[PlayerInfo[playerid][pTeam]][tName],TurfInfo[isinturf][TurfName]);
SendClientMessageToAll(0x008cffFF, turfstring);
}
else
{
//inwar[PlayerInfo[playerid][pTeam]]=1;
format(turfstring, 256, "Turf War: {FF0000}%s {008cff}се опитва да превземе територията на %s в %s!",TeamInfo[PlayerInfo[playerid][pTeam]][tName],
TeamInfo[TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfOwner]][tName],TurfInfo[isinturf][TurfName]);
SendClientMessageToAll(0x008cffFF, turfstring);
}
turfwargang[turfa]=PlayerInfo[playerid][pTeam];
TurfInfo[isinturf][TurfWarGang]=PlayerInfo[playerid][pTeam];
TeamInfo[PlayerInfo[playerid][pTeam]][tWar]=isinturf;
return 1;
}
else if(strcmp(cmd, "/turftime", true) == 0)
{
if(PlayerInfo[playerid][pRank]<6) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
if(PlayerInfo[playerid][pTeam]<2 || PlayerInfo[playerid][pTeam]>=13 && PlayerInfo[playerid][pTeam]<=15) return SendClientMessage(playerid,COLOR_GRAD1,"Твоята банда не може да превзема територии!");
if(TeamInfo[PlayerInfo[playerid][pTeam]][tTime]>=80)
{
new string140[140];
format(string140,140, "Твоята банда ще може да прави атаки след %d минути!",TeamInfo[PlayerInfo[playerid][pTeam]][tTime]/120);
return SendClientMessage(playerid, 0x008cffFF, string140);
}
if(TeamInfo[PlayerInfo[playerid][pTeam]][tTime]>0 && TeamInfo[PlayerInfo[playerid][pTeam]][tTime]<80)
{
return SendClientMessage(playerid, 0x008cffFF, "Твоята банда ще може да прави атаки след 1 минута!");
}
if(TeamInfo[PlayerInfo[playerid][pTeam]][tTime]==0)
{
SendClientMessage(playerid,0x008cffFF,"Твоята банда може да направи атака още сега!");
}
return 1;
}
else if(strcmp(cmd, "/attackers", true) == 0)
{
if(PlayerInfo[playerid][pRank]<6) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
if(TeamInfo[PlayerInfo[playerid][pTeam]][tWar]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Твоята банда не атакува територия!");
return 1;
}
new string50[50];
new string25611[256];
format(string25611,256,"Онлайн атакуващи играчи на територията(%d):",inturfmembers[PlayerInfo[playerid][pTeam]] );
SendClientMessage(playerid, 0x008cffFF, string25611);
for (new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[playerid][pTeam]==PlayerInfo[i][pTeam])
{
if(turfmember[i]>0)
{
format(string50, 50, "%s (ID: %d)", pname[i], i);
SendClientMessage(playerid, 0xFFFFFFFF, string50);
}
}
}
return 1;
}
else if(strcmp(cmd, "/turfs", true) == 0)
{
new string2230[512]; new string2230result[2230];
new array[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22};
for(new i = 0; i < MAX_TEAMS; i ++)
{
PlayerInfo[playerid][ptTurfs][i]=TeamInfo[i][tTurfs];
}
SortTurfs(playerid,array);
new gangnumber=1;
for(new i = 0; i < MAX_TEAMS; i ++)
{
new turfid=array[i];
if(turfid!= 0 &&
turfid!= 1 &&
turfid!= 13 &&
turfid!= 14 &&
turfid!= 15)
{
format(string2230,512, "{00FF00}%d. {33CCFF}%s притежава: {FF0000}%d територии\n",gangnumber,TeamInfo[turfid][tName], TeamInfo[turfid][tTurfs]);
strcat(string2230result, string2230);
gangnumber++;
}
}
if(TeamInfo[0][tTurfs]<301)
{
format(string2230,512, "{FFFFFF}Брой Civil територии: {FF0000}%d територии\n", TeamInfo[0][tTurfs]);
strcat(string2230result, string2230);
}
else
{
format(string2230,512, "{FFFFFF}Брой Civil територии: {FF0000}288 територии\n");
strcat(string2230result, string2230);
TeamInfo[0][tTurfs]=300;
}
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX, "Брой територии:", string2230result, "OK", "");
return 1;
}
else if(strcmp(cmd, "/checkturf", true) == 0)
{
new Float:x, Float:y, Float:z;
new isinturf=0;
for (new t = 0; t < MAX_TURFS; t++)
{
GetPlayerPos(playerid, x, y, z);
if (IsPlayerInTurf(playerid, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]))
{
new string200[200];
if(TurfInfo[t][TurfID]<=18)
{
format(string200,200,"Това е главната територия на {FF0000}%s",TeamInfo[TurfInfo[t][TurfOwner]][tName]);
SendClientMessage(playerid, 0x008cffFF,string200);
return isinturf=1;
}
format(string, sizeof(string), "Тази територия се казва %s и принадлeжи на {FF0000}%s",TurfInfo[t][TurfName], TeamInfo[TurfInfo[t][TurfOwner]][tName]);
SendClientMessage(playerid, 0x008cffFF, string);
isinturf=1;
}
}
if(isinturf==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не се намираш на територия!");
return 1;
}
else if(strcmp(cmd, "/detonator", true)==0)
{
new string2230[512]; new string2230result[2230];
if(PlayerInfo[playerid][pActiveBomb][0]==0 && PlayerInfo[playerid][pBombsS1]==1)
{
format(string2230,512,"{FF0000}Бомба 1 - Деактивирана\n");
strcat(string2230result, string2230);
}
if(PlayerInfo[playerid][pActiveBomb][0]==1 && PlayerInfo[playerid][pBombsS1]==1)
{
format(string2230,512,"{00FF00}Бомба 1 - Активирана\n");
strcat(string2230result, string2230);
}
if(PlayerInfo[playerid][pBombsS1]==0)
{
format(string2230,512,"{FFFF00}Бомба 1 - Няма\n");
strcat(string2230result, string2230);
}
//-----------------------------------------------------------------------------------
if(PlayerInfo[playerid][pActiveBomb][1]==0 && PlayerInfo[playerid][pBombsS2]==1)
{
format(string2230,512,"{FF0000}Бомба 2 - Деактивирана\n");
strcat(string2230result, string2230);
}
if(PlayerInfo[playerid][pActiveBomb][1]==1 && PlayerInfo[playerid][pBombsS2]==1)
{
format(string2230,512,"{00FF00}Бомба 2 - Активирана\n");
strcat(string2230result, string2230);
}
if(PlayerInfo[playerid][pBombsS2]==0)
{
format(string2230,512,"{FFFF00}Бомба 2 - Няма\n");
strcat(string2230result, string2230);
}
//-----------------------------------------------------------------------------------
if(PlayerInfo[playerid][pActiveBomb][2]==0 && PlayerInfo[playerid][pBombsS3]==1)
{
format(string2230,512,"{FF0000}Бомба 3 - Деактивирана\n");
strcat(string2230result, string2230);
}
if(PlayerInfo[playerid][pActiveBomb][2]==1 && PlayerInfo[playerid][pBombsS3]==1)
{
format(string2230,512,"{00FF00}Бомба 3 - Активирана\n");
strcat(string2230result, string2230);
}
if(PlayerInfo[playerid][pBombsS3]==0)
{
format(string2230,512,"{FFFF00}Бомба 3 - Няма\n");
strcat(string2230result, string2230);
}
if(PlayerInfo[playerid][pActiveBomb][3]==0 && PlayerInfo[playerid][pBombsS4]==1)
{
format(string2230,512,"{FF0000}Бомба 4 - Деактивирана\n");
strcat(string2230result, string2230);
}
if(PlayerInfo[playerid][pActiveBomb][3]==1 && PlayerInfo[playerid][pBombsS4]==1)
{
format(string2230,512,"{00FF00}Бомба 4 - Активирана\n");
strcat(string2230result, string2230);
}
if(PlayerInfo[playerid][pBombsS4]==0)
{
format(string2230,512,"{FFFF00}Бомба 4 - Няма\n");
strcat(string2230result, string2230);
}
//-----------------------------------------------------------------------------------
if(PlayerInfo[playerid][pActiveBomb][4]==0 && PlayerInfo[playerid][pBombsS5]==1)
{
format(string2230,512,"{FF0000}Бомба 5 - Деактивирана\n");
strcat(string2230result, string2230);
}
if(PlayerInfo[playerid][pActiveBomb][4]==1 && PlayerInfo[playerid][pBombsS5]==1)
{
format(string2230,512,"{00FF00}Бомба 5 - Активирана\n");
strcat(string2230result, string2230);
}
if(PlayerInfo[playerid][pBombsS5]==0)
{
format(string2230,512,"{FFFF00}Бомба 5 - Няма\n");
strcat(string2230result, string2230);
}
//-----------------------------------------------------------------------------------
ShowPlayerDialog(playerid,50,DIALOG_STYLE_LIST,"Bombs",string2230result,"Затвори","");
return 1;
}
else if(strcmp(cmd, "/allevent",true)==0)
{
if(PlayerInfo[playerid][pAdmin]< 4) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
new stringevent[256];
new events=0;
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pEvent] >= 1)
{
events+=1;
}
}
format(stringevent,256,"Онлайн хора с евент права(%d):",events);
SendClientMessage(playerid, 0x33CCFFFF,stringevent);
if(events>0)
{
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pEvent] >= 1)
{
format(stringevent, 256, "%s е с евент права",pname[i]);
SendClientMessage(playerid, 0xFFFFFFFF,stringevent);
}
}
}
else
{
format(stringevent, 256, "Няма онлайн евент администратори в момента!");
SendClientMessage(playerid, COLOR_RED,stringevent);
}
return 1;
}
else if(strcmp(cmd, "/myveh", true) == 0)
{
new neargarage=-1;
if(PlayerInfo[playerid][pPrivateVehs]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате лични превозни средства!");
return 1;
}
tmp=strtok(cmdtext, idx);
new level=strval(tmp);
if(level<1 || level>PlayerInfo[playerid][pPrivateVehs])
{
new string25[256];
format(string25,256,"Начин на използване: /myveh [1-%d]",PlayerInfo[playerid][pPrivateVehs]);
SendClientMessage(playerid, 0xFFFFFFFF, string25);
return 1;
}
new imaveh=0;
for(new ala=1; ala<maxgarages; ala++) // Dynamic Houses
{
if(IsPlayerInRangeOfPoint(playerid,30,GarageInfo[ala][gX],GarageInfo[ala][gY],GarageInfo[ala][gZ]))
{
neargarage=ala;
}
}
////////////////
if(IsPlayerInRangeOfPoint(playerid,30,208.0397,37.7714,1068.7770))
{
if(spawnedvehicleinterior[playerid]!=-1)
{
SetVehicleToRespawn(spawnedvehicleinterior[playerid]);
}
spawnedvehicleinterior[playerid]=PlayerInfo[playerid][pPrivateVeh][level];
imaveh=1;
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
new vehIndex=PlayerInfo[playerid][pPrivateVeh][level];
new vehID=VehicleInfo[vehIndex][vVeh];
SetVehiclePos(vehID,X[playerid],Y[playerid],Z[playerid]);
LinkVehicleToInterior(vehID,GetPlayerInterior(playerid));
SetVehicleVirtualWorld(vehID,GetPlayerVirtualWorld(playerid));
PutPlayerInVehicle(playerid, vehID, 0);
SetPlayerInterior(playerid,0); SetPlayerInterior(playerid,1); SetPlayerInterior(playerid,0);
SendClientMessage(playerid, COLOR_PRIVATEVEH, "Вие пуснахте вашето превозно средство.");
return 1;
}
///////////////
if(IsPlayerInRangeOfPoint(playerid,30,1353.8860,-2038.6312,56.4188) ||
IsPlayerInRangeOfPoint(playerid,30,2448.1567,-1647.5823,13.5814) ||
IsPlayerInRangeOfPoint(playerid,30,335.2979,-1203.3108,76.3819))
{
if(IsPlayerInRangeOfPoint(playerid,30,1353.8860,-2038.6312,56.4188) && PlayerInfo[playerid][pTeam]!=1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на VIP за да използваш /myveh тук!");
return 1;
}
if(IsPlayerInRangeOfPoint(playerid,30,2448.1567,-1647.5823,13.5814) && PlayerInfo[playerid][pTeam]!=2)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на Grove Street Families за да използваш /myveh тук!");
return 1;
}
if(IsPlayerInRangeOfPoint(playerid,30,335.2979,-1203.3108,76.3819) && PlayerInfo[playerid][pTeam]!=6)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на Vinewood Cripz за да използваш /myveh тук!");
return 1;
}
imaveh=1;
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
new vehIndex=PlayerInfo[playerid][pPrivateVeh][level];
new vehID=VehicleInfo[vehIndex][vVeh];
SetVehiclePos(vehID,X[playerid],Y[playerid],Z[playerid]);
LinkVehicleToInterior(vehID,GetPlayerInterior(playerid));
SetVehicleVirtualWorld(vehID,GetPlayerVirtualWorld(playerid));
PutPlayerInVehicle(playerid, vehID, 0);
SendClientMessage(playerid, COLOR_PRIVATEVEH, "Вие пуснахте вашето превозно средство.");
return 1;
}
if(neargarage!=-1)
{
if(PlayerInfo[playerid][pTeam]!=1 && IsPlayerInRangeOfPoint(playerid,30,1353.8860,-2038.6312,56.4188))
{
SendClientMessage(playerid, COLOR_PRIVATEVEH, "Трябва да сте член на VIP за да си пуснете тук превозното средство!");
return 1;
}
if(PlayerInfo[playerid][pTeam]!=2 && IsPlayerInRangeOfPoint(playerid,30,2448.1567,-1647.5823,13.5814))
{
SendClientMessage(playerid, COLOR_PRIVATEVEH, "Трябва да сте член на Grove Street Families за да си пуснете тук превозното средство!");
return 1;
}
if(PlayerInfo[playerid][pTeam]!=6 && IsPlayerInRangeOfPoint(playerid,30,335.2979,-1203.3108,76.3819))
{
SendClientMessage(playerid, COLOR_PRIVATEVEH, "Трябва да сте член на Vinewood Cripz за да си пуснете тук превозното средство!");
return 1;
}
SendClientMessage(playerid, COLOR_PRIVATEVEH, "Вие пуснахте вашето превозно средство.");
imaveh=1;
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
new vehIndex=PlayerInfo[playerid][pPrivateVeh][level];
new vehID=VehicleInfo[vehIndex][vVeh];
SetVehiclePos(vehID,X[playerid],Y[playerid],Z[playerid]);
LinkVehicleToInterior(vehID,GetPlayerInterior(playerid));
SetVehicleVirtualWorld(vehID,GetPlayerVirtualWorld(playerid));
PutPlayerInVehicle(playerid, vehID, 0);
}
if(imaveh==0)
{
if(PlayerInfo[playerid][pVip]>2)
{
if(PlayerInfo[playerid][pVehT]>0)
{
SendClientMessage(playerid,COLOR_GRAD1,"В момента не можете да използвате тази команда извън гараж!");
return 1;
}
imaveh=1;
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
new vehIndex=PlayerInfo[playerid][pPrivateVeh][level];
new vehID=VehicleInfo[vehIndex][vVeh];
SetVehiclePos(vehID,X[playerid],Y[playerid],Z[playerid]);
LinkVehicleToInterior(vehID,GetPlayerInterior(playerid));
SetVehicleVirtualWorld(vehID,GetPlayerVirtualWorld(playerid));
PutPlayerInVehicle(playerid, vehID, 0);
PlayerInfo[playerid][pVehT]=120*15;
SendClientMessage(playerid, COLOR_PRIVATEVEH, "Ще можете да си пуснете превозно средство извън гараж след 15 минути!");
return 1;
}
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си близо до магазин за коли!");
}
return 1;
}
else if(strcmp(cmd,"/policecamera1",true)==0)
{
if(cameras[playerid]!=0) return SendClientMessage(playerid,COLOR_GRAD1,"В момента наблюдаваш през камера!");
if(PlayerInfo[playerid][pWanted]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да не си заподозрян!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си пешеходец!");
if(induel[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pJail] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да използваш тази команда!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pInDM]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(freezed[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
cameras[playerid]=1;
//
oldint[playerid]=GetPlayerInterior(playerid);
oldvw[playerid]=GetPlayerVirtualWorld(playerid);
GetPlayerPos(playerid,oldx[playerid],oldy[playerid],oldz[playerid]);
SetPlayerInterior(playerid, 0);
SetPlayerVirtualWorld(playerid, 0);
SetPlayerPos(playerid, 2212.5132, 2412.4609, 40.1586);
SetPlayerCameraPos(playerid, 2212.5132, 2412.4609, 40.1586);
SetPlayerCameraLookAt(playerid, 2213.5178, 2412.4814, 39.9035);
TogglePlayerControllable(playerid, 0);
//
return 1;
}
else if(strcmp(cmd,"/policecamera2",true)==0)
{
if(cameras[playerid]!=0) return SendClientMessage(playerid,COLOR_GRAD1,"В момента наблюдаваш през камера!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pWanted]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да не си заподозрян!");
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си пешеходец!");
if(induel[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pJail] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да използваш тази команда!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(PlayerInfo[playerid][pInDM]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(freezed[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
cameras[playerid]=1;
//
oldint[playerid]=GetPlayerInterior(playerid);
oldvw[playerid]=GetPlayerVirtualWorld(playerid);
GetPlayerPos(playerid,oldx[playerid],oldy[playerid],oldz[playerid]);
SetPlayerPos(playerid, 1918.5138,1019.6274,0.0004);
SetPlayerInterior(playerid, 0);
SendClientMessage(playerid,0x00FF00FF,"За да спрете да гледате през камерата, напишете /stopcamera!");
SetPlayerVirtualWorld(playerid, 0);
TogglePlayerControllable(playerid, 0);
SetPlayerCameraPos(playerid, 1904.7744, 980.0627, 51.9099);
SetPlayerCameraLookAt(playerid, 1904.3459, 979.1524, 51.8248);
//
return 1;
}
else if(strcmp(cmd,"/policecamera3",true)==0)
{
if(cameras[playerid]!=0) return SendClientMessage(playerid,COLOR_GRAD1,"В момента наблюдаваш през камера!");
if(PlayerInfo[playerid][pWanted]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да не си заподозрян!");
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си пешеходец!");
if(induel[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pJail] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да използваш тази команда!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pInDM]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(freezed[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
cameras[playerid]=1;
//
oldint[playerid]=GetPlayerInterior(playerid);
oldvw[playerid]=GetPlayerVirtualWorld(playerid);
GetPlayerPos(playerid,oldx[playerid],oldy[playerid],oldz[playerid]);
SetPlayerInterior(playerid, 0);
SendClientMessage(playerid,0x00FF00FF,"За да спрете да гледате през камерата, напишете /stopcamera!");
SetPlayerVirtualWorld(playerid, 0);
SetPlayerPos(playerid, 1581.8341,-1234.7407,98.0000);
SetPlayerCameraPos(playerid, 1581.2329, -1212.0856, 98.6395);
SetPlayerCameraLookAt(playerid, 1581.6681, -1211.1781, 98.4294);
TogglePlayerControllable(playerid, 0);
//
return 1;
}
else if(strcmp(cmd,"/policecamera4",true)==0)
{
if(cameras[playerid]!=0) return SendClientMessage(playerid,COLOR_GRAD1,"В момента наблюдаваш през камера!");
if(PlayerInfo[playerid][pWanted]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да не си заподозрян!");
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си пешеходец!");
if(induel[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pJail] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да използваш тази команда!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pInDM]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(freezed[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
cameras[playerid]=1;
//
oldint[playerid]=GetPlayerInterior(playerid);
oldvw[playerid]=GetPlayerVirtualWorld(playerid);
GetPlayerPos(playerid,oldx[playerid],oldy[playerid],oldz[playerid]);
SetPlayerInterior(playerid, 0);
SendClientMessage(playerid,0x00FF00FF,"За да спрете да гледате през камерата, напишете /stopcamera!");
SetPlayerVirtualWorld(playerid, 0);
SetPlayerPos(playerid, 1561.7896,-1655.9597,16.8633);
SetPlayerCameraPos(playerid, 1552.5308, -1658.1613, 27.3718);
TogglePlayerControllable(playerid, 0);
SetPlayerCameraLookAt(playerid, 1551.9059, -1658.9492, 26.9667);
//
return 1;
}
else if(strcmp(cmd,"/policecamera5",true)==0)
{
if(cameras[playerid]!=0) return SendClientMessage(playerid,COLOR_GRAD1,"В момента наблюдаваш през камера!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pWanted]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да не си заподозрян!");
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си пешеходец!");
if(induel[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pJail] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да използваш тази команда!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pInDM]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(freezed[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
cameras[playerid]=1;
//
oldint[playerid]=GetPlayerInterior(playerid);
oldvw[playerid]=GetPlayerVirtualWorld(playerid);
GetPlayerPos(playerid,oldx[playerid],oldy[playerid],oldz[playerid]);
SetPlayerInterior(playerid, 0);
SendClientMessage(playerid,0x00FF00FF,"За да спрете да гледате през камерата, напишете /stopcamera!");
SetPlayerVirtualWorld(playerid, 0);
SetPlayerPos(playerid,1775.7046,-1302.0459,27.6778);
SetPlayerCameraPos(playerid, 1775.9103, -1289.2638, 96.0540);
SetPlayerCameraLookAt(playerid, 1776.5898, -1288.5231, 94.2640);
TogglePlayerControllable(playerid, 0);
//
return 1;
}
else if(strcmp(cmd,"/stopcamera",true)==0)
{
if(PlayerInfo[playerid][pWanted]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да не си заподозрян!");
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си пешеходец!");
if(induel[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pJail] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да използваш тази команда!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(PlayerInfo[playerid][pInDM]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(freezed[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
if(cameras[playerid]!=1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента не наблюдаваш през камера!");
cameras[playerid]=0;
//
oldint[playerid]=GetPlayerInterior(playerid);
SetPlayerPos(playerid,oldx[playerid],oldy[playerid],oldz[playerid]);
oldvw[playerid]=GetPlayerVirtualWorld(playerid);
GetPlayerPos(playerid,oldx[playerid],oldy[playerid],oldz[playerid]);
SetPlayerInterior(playerid, oldint[playerid]);
SendClientMessage(playerid,0x00FF00FF,"Вие вече няма да наблюдавате през камерата!");
SetPlayerVirtualWorld(playerid, oldvw[playerid]);
SetCameraBehindPlayer(playerid);
TogglePlayerControllable(playerid, 1);
//
return 1;
}
else if(strcmp(cmd,"/policecameras",true)==0)
{
if(PlayerInfo[playerid][pTeam]!=13) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си член на San Andreas Police Department!");
new stringut256[856];
format(stringut256,856,"");
strins(stringut256,"{FFFFFF}Камера 1 - {00ff00}/policecamera1 {ffffff}- Las Venturas Police\n",strlen(stringut256));
strins(stringut256,"{FFFFFF}Камера 2 - {00ff00}/policecamera3 {ffffff}- Границата между Las Venturas и Los Santos\n",strlen(stringut256));
strins(stringut256,"{FFFFFF}Камера 3 - {00ff00}/policecamera4 {ffffff}- Границата между Los Santos и Las Venturas\n",strlen(stringut256));
strins(stringut256,"{FFFFFF}Камера 4 - {00ff00}/policecamera5 {ffffff}- Los Santos Police\n",strlen(stringut256));
strins(stringut256,"{FFFFFF}Камера 5 - {00ff00}/policecamera6 {ffffff}- Офисите\n\n",strlen(stringut256));
strins(stringut256,"{ffff00}Изключване на камерата - {00ff00}/stopcamera",strlen(stringut256));
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"{00FF00}КАМЕРИ",stringut256,"{ffffff}Затвори","");
return 1;
}
else if(strcmp(cmd,"/suspects",true)==0)
{
if(PlayerInfo[playerid][pTeam]!=13 && PlayerInfo[playerid][pTeam]!=15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си член на San Andreas Police Department!");
if(PlayerInfo[playerid][pRank]<2) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си 2 ранг за да използваш тази команда!");
new onlinecriminals=0;
new status[35];
new string2[2300], string1[256];
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pWanted]>0)
{
if(PlayerInfo[i][pAFK]==0)
{
format(status,35, "{339933}  • Онлайн");
}
else if(PlayerInfo[i][pAFK]>0)
{
format(status,35,"{FFFF00}  AFK");
}
onlinecriminals++;
format(string2, sizeof(string2),"{FFFFFF}%d\t{00FF00}%s - %s\t%s, ниво на издирване: %d\n", i, pname[i],TeamInfo[PlayerInfo[i][pTeam]][tName],status,PlayerInfo[i][pWanted]);
strcat(string1, string2, sizeof(string1));
}
}
if(onlinecriminals>0)
{
format(string2, sizeof(string2), "{FFFFFF}ID\t{00FF00}Име и банда/мафия\t{FF0000}Статус и ниво на издирване\n%s", string1);
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Онлайн Заподозрени", string2, "Излез", "");
}
else
{
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"{ffffff}Онлайн заподозрени","{E60000}Няма онлайн заподозрени в момента!","Излез","");
}
//
return 1;
}
//////////////////////////////////////
else if(strcmp(cmd, "/bizgps", true)==0)
{
if(PlayerInfo[playerid][pVip]==0 && freevip==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
return 1;
}
//
new housesrange=0;
new string2[2300]; new string1[170];
new type[256];
new type2;
format(string2, sizeof(string2), "{339933}Собственик\t{FF0000}Вид\n");
for(new alh=1; alh<maxbizz; alh++)
{
if(IsPlayerInRangeOfPoint(playerid, 1000.0,BizInfo[alh][bX],BizInfo[alh][bY],BizInfo[alh][bZ]))
{
if(BizInfo[alh][bOwner]==1)
{
if(housesrange<=10)
{
type2=BizInfo[alh][bType];
if(type2==1)
{
format(type,256,"Store");
}
if(type2==2)
{
format(type,256,"Bar");
}
if(type2==3)
{
format(type,256,"Ammu-nation");
}
if(type2==4)
{
format(type,256,"DMV");
}
if(type2==5)
{
format(type,256,"Store");
}
if(type2==6)
{
format(type,256,"Prolaps");
}
if(type2==7)
{
format(type,256,"Office");
}
if(type2==8)
{
format(type,256,"Burger Shot");
}
if(type2==9)
{
format(type,256,"Horse Bet");
}
if(type2==10)
{
format(type,256,"Store");
}
if(type2==11)
{
format(type,256,"Urban");
}
if(type2==12)
{
format(type,256,"ammu-nation");
}
if(type2==13)
{
format(type,256,"Ammu-nation");
}
if(type2==14)
{
format(type,256,"Disco");
}
if(type2==15)
{
format(type,256,"Sex Shop");
}
if(type2==16)
{
format(type,256,"Gym");
}
if(type2==17)
{
format(type,256,"Gym");
}
if(type2==18)
{
format(type,256,"Casino");
}
if(type2==19)
{
format(type,256,"Strip Club");
}
if(type2==20)
{
format(type,256,"DM BIZ");
}
if(type2==21)
{
format(type,256,"4 Dragons");
}
if(type2==22)
{
format(type,256,"Caligula's");
}
if(type2==23)
{
format(type,256,"Bar");
}
if(type2==24)
{
format(type,256,"Restaurant");
}
if(type2==25)
{
format(type,256,"Cluckin' Bell");
}
if(type2==26)
{
format(type,256,"Restaurant");
}
if(type2==27)
{
format(type,256,"Not enterable");
}
if(type2==28)
{
format(type,256,"Advertisiment");
}
if(type2==29)
{
format(type,256,"Drug Bombs");
}
if(type2==30)
{
format(type,256,"Drug Bombs");
}
housesrange++;
selectedBiz[playerid][housesrange]=alh;
format(string1, sizeof(string1),"{33CCFF}%s\t%s\n", BizInfo[alh][bOwnerName],type);
strcat(string2, string1, sizeof(string2));
}}
}
if(housesrange>0)
{
ShowPlayerDialog(playerid, 102, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}GPS", string2, "Маркирай", "Излез");
}
if(housesrange==0) {
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"{ffffff}GPS","{E60000}Няма бизнеси на 1 километър от тук!","Затвори","");
}
}
//
return 1;
}
else if(strcmp(cmd, "/clothes", true)==0)
{
//
new freeslot=-1;
if(PlayerInfo[playerid][pClothes][0]!=0)
{
freeslot=1;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_WHITE,"Вие нямате дрехи!");
}
ShowPlayerDialog(playerid,94,DIALOG_STYLE_LIST,"Дрехи","{FFFFFF}Вземете\nСвалете","Избери","Излезте");
//
return 1;
}
else if(strcmp(cmd, "/buygangcash", true) == 0)
{
if(PlayerInfo[playerid][pRank]<6)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер!");
return 1;
}
if(TeamInfo[PlayerInfo[playerid][pTeam]][tKills]<TeamInfo[PlayerInfo[playerid][pTeam]][tLevel]+12)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябват ти 80 EP за да купите $1 000 000");
return 1;
}
GiveTeamEP(playerid,-80);
GiveTeamCash(playerid,1000000);
SendFactionMessage(PlayerInfo[playerid][pTeam],0xb67bedFF,"[GANG CASH] Лидерът купи $1 000 000 за твоята банда/мафия срещу 80 EP!");
return 1;
}
else if(strcmp(cmd, "/buyganglevel", true) == 0)
{
if(PlayerInfo[playerid][pRank]<6)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер!");
return 1;
}
new string256[256];
if(TeamInfo[PlayerInfo[playerid][pTeam]][tKills]<TeamInfo[PlayerInfo[playerid][pTeam]][tLevel]+12)
{
format(string256,256,"Трябват ти %d EP за да вдигнеш нивото на бандата!",TeamInfo[PlayerInfo[playerid][pTeam]][tLevel]+12);
SendClientMessage(playerid,COLOR_GRAD1,string256);
return 1;
}
GiveTeamLevel(playerid,1);
format(string256,256,"Поздравления, нивото на вашата банда/мафия вече е %d!",TeamInfo[PlayerInfo[playerid][pTeam]][tLevel]);
SendClientMessage(playerid,0xb67bedFF,string256);
format(string256,256,"[GANG LEVEL] Нивото на вашата банда/мафия беше вдигнато от %s и вече е %d!",pname[playerid],TeamInfo[PlayerInfo[playerid][pTeam]][tLevel]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0xb67bedFF,string256);
return 1;
}
else if(strcmp(cmd, "/buylevel", true) == 0)
{
new string130[130];
if(PlayerInfo[playerid][pEP]<PlayerInfo[playerid][pLevel]+6)
{
format(string130,130,"Трябват ти %d EP за да вдигнеш твоя Level!",PlayerInfo[playerid][pLevel]+6);
SendClientMessage(playerid,COLOR_GRAD1,string130);
return 1;
}
GivePlayerEP(playerid,-PlayerInfo[playerid][pLevel]+6);
GivePlayerLevel(playerid,1);
SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
GivePlayerEP(playerid,0);
format(string130,130,"Поздравления, вашето ниво вече е %d!",PlayerInfo[playerid][pLevel]);
SendClientMessage(playerid,0xb67bedFF,string130);
return 1;
}
/*else if(strcmp(cmd, "/admincmd1",true)==0)
{
SetVehicleZAngle(GetPlayerVehicleID(playerid),privatecarA[GetPlayerVehicleID(playerid)]);
return 1;
}*/
else if(strcmp(cmd, "/checkdriver", true)==0)
{
new string222[222];
new vehicleID=GetPlayerVehicleID(playerid);
format(string222,222,"drive[vehicleid]=%d",drive[vehicleID]);
SendClientMessage(playerid,COLOR_RED,string222);
return 1;
}
else if (strcmp(cmd, "/ifcduty", true)==0)
{
if(!IsPlayerInRangeOfPoint(playerid,3.0,283.4191,1387.8158,10.5859))
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на мястото за влизане в служба!");
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,0xB4B5B7FF,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pIFC]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Intense Fuel Company!");
if(PlayerInfo[playerid][pIFCDuty]==1)
{
SendClientMessage(playerid, 0xA4FFA4FF, "* Вие вече не сте на служба в Intense Fuel Company *");
PlayerInfo[playerid][pIFCDuty]=0;
return 1;
}
else
{
SendClientMessage(playerid, 0xA4FFA4FF, "* Вие вече сте на служба в Intense Fuel Company *");
PlayerInfo[playerid][pIFCDuty]=1;
}
return 1;
}
if(strcmp(cmd, "/makeifc", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /makeifc [playerid]");
return 1;
}
new string256[256];
para1[playerid]=ReturnUser(tmp);
if(PlayerInfo[para1[playerid]][pIFC]==1) return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч вече е член на IFC!");
PlayerInfo[para1[playerid]][pIFC]=1;
format(string256, 256, "* %s те направи член на Intense Fuel Company, поздравления *", pname[playerid]);
SendClientMessage(para1[playerid], 0xA4FFA4FF, string256);
format(string256, 256, "* Ти направи %s член на Intense Fuel Company *", pname[para1[playerid]]);
SendClientMessage(playerid, 0xA4FFA4FF, string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достъп до тази административна команда!");
}
return 1;
}
if(strcmp(cmd, "/getifc", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Използвай: /getifc [playerid]");
return 1;
}
new string256[256];
para1[playerid]=ReturnUser(tmp);
if(PlayerInfo[para1[playerid]][pIFC]==0) return SendClientMessage(playerid, 0xB4B5B7FF, "Този играч не е член на IFC!");
PlayerInfo[para1[playerid]][pIFC]=0;
format(string256, 256, "* %s те махна от Intense Fuel Company *", pname[playerid]);
SendClientMessage(para1[playerid], 0xA4FFA4FF, string256);
format(string256, 256, "* Ти махна %s от Intense Fuel Company *", pname[para1[playerid]]);
SendClientMessage(playerid, 0xA4FFA4FF, string256);
}
else
{
SendClientMessage(playerid, 0xB4B5B7FF, "Нямаш достъп до тази административна команда!");
}
return 1;
}
if(strcmp(cmd, "/bizid", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] < 5)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
return 1;
}
if(specialpickupenter[playerid][PICKUPBIZ]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не се намираш близо до бизнес!");
return 1;
}
new alb=specialpickupenter[playerid][PICKUPBIZ];
new stringbiz[256];
format(stringbiz, 256, "Този бизнес е с ID: {FF0000}%d", alb);
SendClientMessage(playerid, 0xFFFFFFFF, stringbiz);
return 1;
}
else if(strcmp(cmd, "/achievements", true)==0)
{
new string2230[512]; new string2230result[2230];
new isCompleted[25];
new closeddialog=3500;
if(PlayerInfo[playerid][pAchievement][0]==1)
{
format(isCompleted,25,"{33aa33}Постигнато");
}
else
{
format(isCompleted,25,"{ff0000}Не е постигнато");
}
format(string2230,512,"{c8ee01}Постижение: Стани член на банда/мафия         |         %s\n",isCompleted);
strcat(string2230result, string2230);
if(PlayerInfo[playerid][pAchievement][1]==1)
{
format(isCompleted,25,"{33aa33}Постигнато");
}
else
{
format(isCompleted,25,"{ff0000}Не е постигнато");
}
format(string2230,512,"{c8ee01}Постижение: Стани лидер на банда/мафия         |         %s\n",isCompleted);
strcat(string2230result, string2230);
if(PlayerInfo[playerid][pAchievement][2]==1)
{
format(isCompleted,25,"{33aa33}Постигнато");
}
else
{
format(isCompleted,25,"{ff0000}Не е постигнато");
}
format(string2230,512,"{c8ee01}Постижение: Стани главен лидер на банда/мафия         |         %s\n",isCompleted);
strcat(string2230result, string2230);
if(PlayerInfo[playerid][pAchievement][3]==1)
{
format(isCompleted,25,"{33aa33}Постигнато");
}
else
{
format(isCompleted,25,"{ff0000}Не е постигнато");
}
format(string2230,512,"{c8ee01}Постижение: Спечели територия         |         %s\n",isCompleted);
strcat(string2230result, string2230);
if(PlayerInfo[playerid][pAchievement][4]==1)
{
format(isCompleted,25,"{33aa33}Постигнато");
}
else
{
format(isCompleted,25,"{ff0000}Не е постигнато");
}
format(string2230,512,"{c8ee01}Постижение: Стани много издирван         |         %s\n",isCompleted);
strcat(string2230result, string2230);
if(PlayerInfo[playerid][pAchievement][5]==1)
{
format(isCompleted,25,"{33aa33}Постигнато");
}
else
{
format(isCompleted,25,"Не е постигнато");
}
format(string2230,512,"{c8ee01}Постижение: Стани VIP         |         %s\n",isCompleted);
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FFFFFF}Постижения",string2230result,"Затвори","");
return 1;
}
else if(strcmp(cmd, "/myfish", true)==0)
{
new string2230[512];
new string2230result[1500];
for(new i=1; i<11; i++)
{
new fishSlotID = PlayerInfo[playerid][pFishSlot][i];
new fishWeight = PlayerInfo[playerid][pFishWeight][i];
if(fishSlotID==0)
{
format(string2230,512,"{FFFFFF}Слот %d {FFFF00}[Empty]\n",i);
strcat(string2230result, string2230);
}
else if(fishSlotID!=0)
{
format(string2230,512,"{FFFFFF}Слот %d {FFFF00}[%s - %d Kg]\n",i,GetFishName(fishSlotID), fishWeight);
strcat(string2230result, string2230);
}
}
ShowPlayerDialog(playerid,DIALOG_MYFISH,DIALOG_STYLE_LIST,"Fish:",string2230result,"Избери","Излез");
return 1;
}
else if(strcmp(cmd, "/fish", true) == 0)
{
if(IsPlayerInRangeOfPoint(playerid, 4, 2102.1777,-104.5141,2.2685))
{
if(PlayerInfo[playerid][pHook]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате въдица.");
if(PlayerInfo[playerid][pChervei]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате стръв.");
if(GetPlayerFreeFishSlot(playerid)==-1) return SendClientMessage(playerid,COLOR_GRAD1,"Нямаш свободно място в слотовете за риба!");
TogglePlayerControllable(playerid, 0);
SetPlayerAttachedObject(playerid, 2, 18632, 1, -0.091109, 0.255484, 0.018155, 94.362060, 312.328125, 190.418655, 1.000000, 1.000000, 1.000000 );
ApplyAnimation(playerid, "SAMP", "FishingIdle", 3.0,1,1,0,0,0);ApplyAnimation(playerid, "SAMP", "FishingIdle", 3.0,1,1,0,0,0);
SendClientMessage(playerid, COLOR_FISH, "Вие хвърлихте въдицата, нека видим какво ще хванете.");
PlayerInfo[playerid][pChervei]-=1;
PlayerInfo[playerid][pFishTimer]=6*2;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие не сте на мястото за риболов");
}
return 1;
}
else if(strcmp(cmd, "/help", true)==0)
{
TextDrawShowForPlayer(playerid, Intro[0]);
new string2230[512]; new string2230result[2230];
format(string2230,512,"{FFFFFF}Напред към {008000}Всички {FF0000} Команди\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Напред към {008000}Информационното {FF0000} Меню\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Напред към {008000}Tutorial {FF0000} Менюто\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,DIALOG_HELP_CMDS_INFO,DIALOG_STYLE_LIST,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string2230result,"Напред","Затвори");
return 1;
}
else if(strcmp(cmd, "/stopmp3", true)==0)
{
if(PlayerInfo[playerid][pVip]<3 && freevip==0) return SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
StopAudioStreamForPlayer(playerid);
SendClientMessage(playerid,0x27cc63FF,"MP3: Вие спряхте музиката!");
return 1;
}
else if(strcmp(cmd, "/mp3", true)==0)
{
if(PlayerInfo[playerid][pVip]<3 && freevip==0) return SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /mp3 [audio stream link]");
SendClientMessage(playerid, 0x27cc63FF, "[MP3 Link] Ако нямате качена музика, можете да използвате OpenDrive за да си качите и да я слушате тук!");
return 1;
}
PlayAudioStreamForPlayer(playerid, result);
SendClientMessage(playerid,0x27cc63FF,"MP3: Вие си пуснахте музика от линк, използвайте /stopmp3, за да я спрете!");
return 1;
}
else if(strcmp(cmd, "/viphelp", true)==0)
{
TextDrawShowForPlayer(playerid, Intro[0]);
new string2230[512];
new string2230result[2100];
strcat(string2230result,"{00FF00}VIP системата е бонус към съдържанието на играта\n");
format(string2230,512,"{00FF00}Максималният VIP level е 6, той може да бъде получен чрез много играене тук\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}                  Как да получим VIP?\n");
strcat(string2230result, string2230);
strcat(string2230result, "{00FF00}========================================");
strcat(string2230result, "{00FF00}========================================");
format(string2230,512,"{00FF00}\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF} \n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 1, Newbie\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Първо ниво се дава при 5 Level и $150, 000\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 2, Silver\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Второ ниво се дава при 10 Level и $300, 000\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 3, Gold\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Трето ниво се дава при 15 Level и $450, 000\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 4, Platinum\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Четвърто ниво се дава при 20 Level и $600, 000\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 5, Master\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Пето ниво се дава при 25 Level и $750, 000\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 6, Super\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Шесто ниво се дава при 30 Level и $1, 000, 000\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}--- VIP Level се дава от притежател на сървъра --- \n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}--- за връзка с притежателя, пишете на Discord: {ffffff}sTrIx - danielandreevofficial#1084{00ff00} --- \n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}Цъкни на бутона Бонуси за да видиш всички Бонуси команди \n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,112,DIALOG_STYLE_MSGBOX,"{FF0000}VIP УСЛОВИЯ",string2230result,"Бонуси","Затвори");
return 1;
}
else if(strcmp(cmd,"/clanlock",true)==0)
{
new vehicle2=0;
if (driver[playerid]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в превозно средство като шофьор!");
if(privatecars[GetPlayerVehicleID(playerid)]==1 && strcmp(privatecarowner[GetPlayerVehicleID(playerid)],pname[playerid],true)==0)
{
if(vClan[GetPlayerVehicleID(playerid)]==0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Това превозно средство не е за клан!");
}
if(vLockedClan[GetPlayerVehicleID(playerid)]==1)
{
vehicle2=1;
SendClientMessage(playerid,0x00FF00FF,"Вие си отключихте превозното средство за клана.");
vLockedClan[GetPlayerVehicleID(playerid)]=0;
}
else
{
vehicle2=1;
SendClientMessage(playerid,0x00FF00FF,"Вие си заключихте превозното средство за клана.");
vLockedClan[GetPlayerVehicleID(playerid)]=1;
}
}
if(vehicle2==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие не сте във вашето превозно средство.");
}
return 1;
}
else if(strcmp(cmd,"/vehlock",true)==0)
{
new vehicle2=0;
if (driver[playerid]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в превозно средство като шофьор!");
if(privatecars[GetPlayerVehicleID(playerid)]==1 && strcmp(privatecarowner[GetPlayerVehicleID(playerid)],pname[playerid],true)==0)
{
if(privatecarlocked[GetPlayerVehicleID(playerid)]==1)
{
vehicle2=1;
SendClientMessage(playerid,0x00FF00FF,"Вие си отключихте превозното средство.");
privatecarlocked[GetPlayerVehicleID(playerid)]=0;
}
else
{
vehicle2=1;
SendClientMessage(playerid,0x00FF00FF,"Вие си заключихте превозното средство.");
privatecarlocked[GetPlayerVehicleID(playerid)]=1;
}
}
if(vehicle2==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие не сте във вашето превозно средство.");
}
return 1;
}
if  (strcmp(cmd,"/sgchange", true)==0)
{
if(PlayerInfo[playerid][pVip]>=5 || freevip==1)
{
if(PlayerInfo[playerid][pChantichki]==0)
{
PlayerInfo[playerid][pChantichki]=1;
SendClientMessage(playerid,0xFFFFFFFF,"SERVER: Ти превключи и вече ще се SPAWN с гранати");
}
else
{
PlayerInfo[playerid][pChantichki]=0;
SendClientMessage(playerid,0xFFFFFFFF,"SERVER: Ти превключи и вече ще се SPAWN с чантички");
}
}
return 1;
}
if   (strcmp(cmd,"/eject", true)==0)
{
if(PlayerInfo[playerid][pVip]<6 && freevip==0) return SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
if (driver[playerid]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в превозно средство като шофьор!");
tmp = strtok(cmdtext,idx);
if (!strlen(tmp))
{
SendClientMessage(playerid,0xFFFFFFFF,"Начин на използване: /eject [ID на играч]");
return 1;
}
para1[playerid] = strval(tmp);
if(para1[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
if (!IsPlayerInVehicle(para1[playerid],GetPlayerVehicleID(playerid))) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е в твоето превозно средство!");
RemovePlayerFromVehicle(para1[playerid]);
SendClientMessage(playerid,0x00ff00FF,"Ти изгони пътника си!");
SendClientMessage(para1[playerid],0x00ff00FF,"Ти беше изгонен от превозното средство!");
return 1;
}
if (strcmp(cmdtext, "/hyd", true)==0)
{
if(PlayerInfo[playerid][pVip] >= 1 || freevip==1)
{
if(IsPlayerInAnyVehicle(playerid))
{
if(inevent[playerid]== 1 && ehyd==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /hyd е забранена в евента!");
if(GetPlayerVehicleID(playerid) != 448 && GetPlayerVehicleID(playerid) != 461 && GetPlayerVehicleID(playerid) != 462 && GetPlayerVehicleID(playerid) != 463
&& GetPlayerVehicleID(playerid) != 468 && GetPlayerVehicleID(playerid) != 481 && GetPlayerVehicleID(playerid) != 509 && GetPlayerVehicleID(playerid) != 510
&& GetPlayerVehicleID(playerid) != 521 && GetPlayerVehicleID(playerid) != 522 && GetPlayerVehicleID(playerid) != 581 && GetPlayerVehicleID(playerid) != 586
&& GetPlayerVehicleID(playerid) != 417 && GetPlayerVehicleID(playerid) != 425 && GetPlayerVehicleID(playerid) != 447 && GetPlayerVehicleID(playerid) != 460
&& GetPlayerVehicleID(playerid) != 469 && GetPlayerVehicleID(playerid) != 476 && GetPlayerVehicleID(playerid) != 487 && GetPlayerVehicleID(playerid) != 488
&& GetPlayerVehicleID(playerid) != 497 && GetPlayerVehicleID(playerid) != 511 && GetPlayerVehicleID(playerid) != 512 && GetPlayerVehicleID(playerid) != 513
&& GetPlayerVehicleID(playerid) != 519 && GetPlayerVehicleID(playerid) != 520 && GetPlayerVehicleID(playerid) != 548 && GetPlayerVehicleID(playerid) != 553
&& GetPlayerVehicleID(playerid) != 563 && GetPlayerVehicleID(playerid) != 577 && GetPlayerVehicleID(playerid) != 592 && GetPlayerVehicleID(playerid) != 593
&& GetPlayerVehicleID(playerid) != 538
&& GetPlayerVehicleID(playerid) != 537)
{
AddVehicleComponent(GetPlayerVehicleID(playerid), 1087);
PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да добавиш хидравлика на това превозно средство!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
if (strcmp(cmdtext, "/driftnos", true)==0)
{
if(indrift[playerid]==1)
{
if(IsPlayerInAnyVehicle(playerid))
{
if(GetPlayerVehicleID(playerid) != 448 && GetPlayerVehicleID(playerid) != 461 && GetPlayerVehicleID(playerid) != 462 && GetPlayerVehicleID(playerid) != 463
&& GetPlayerVehicleID(playerid) != 468 && GetPlayerVehicleID(playerid) != 481 && GetPlayerVehicleID(playerid) != 509 && GetPlayerVehicleID(playerid) != 510
&& GetPlayerVehicleID(playerid) != 521 && GetPlayerVehicleID(playerid) != 522 && GetPlayerVehicleID(playerid) != 581 && GetPlayerVehicleID(playerid) != 586
&& GetPlayerVehicleID(playerid) != 417 && GetPlayerVehicleID(playerid) != 425 && GetPlayerVehicleID(playerid) != 447 && GetPlayerVehicleID(playerid) != 460
&& GetPlayerVehicleID(playerid) != 469 && GetPlayerVehicleID(playerid) != 476 && GetPlayerVehicleID(playerid) != 487 && GetPlayerVehicleID(playerid) != 488
&& GetPlayerVehicleID(playerid) != 497 && GetPlayerVehicleID(playerid) != 511 && GetPlayerVehicleID(playerid) != 512 && GetPlayerVehicleID(playerid) != 513
&& GetPlayerVehicleID(playerid) != 519 && GetPlayerVehicleID(playerid) != 520 && GetPlayerVehicleID(playerid) != 548 && GetPlayerVehicleID(playerid) != 553
&& GetPlayerVehicleID(playerid) != 563 && GetPlayerVehicleID(playerid) != 577 && GetPlayerVehicleID(playerid) != 592 && GetPlayerVehicleID(playerid) != 593
&& GetPlayerVehicleID(playerid) != 538
&& GetPlayerVehicleID(playerid) != 537)
{
PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
if(PlayerInfo[playerid][pCNos]==0)
{
AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
}
else
{
AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да добавиш нитро на това превозно средство!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в Drift!");
}
return 1;
}
if (strcmp(cmdtext, "/nos", true)==0)
{
if(PlayerInfo[playerid][pVip] >= 1 || freevip==1)
{
if(IsPlayerInAnyVehicle(playerid))
{
if(inevent[playerid]== 1 && enos==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /nos е забранена в евента!");
if(GetPlayerVehicleID(playerid) != 448 && GetPlayerVehicleID(playerid) != 461 && GetPlayerVehicleID(playerid) != 462 && GetPlayerVehicleID(playerid) != 463
&& GetPlayerVehicleID(playerid) != 468 && GetPlayerVehicleID(playerid) != 481 && GetPlayerVehicleID(playerid) != 509 && GetPlayerVehicleID(playerid) != 510
&& GetPlayerVehicleID(playerid) != 521 && GetPlayerVehicleID(playerid) != 522 && GetPlayerVehicleID(playerid) != 581 && GetPlayerVehicleID(playerid) != 586
&& GetPlayerVehicleID(playerid) != 417 && GetPlayerVehicleID(playerid) != 425 && GetPlayerVehicleID(playerid) != 447 && GetPlayerVehicleID(playerid) != 460
&& GetPlayerVehicleID(playerid) != 469 && GetPlayerVehicleID(playerid) != 476 && GetPlayerVehicleID(playerid) != 487 && GetPlayerVehicleID(playerid) != 488
&& GetPlayerVehicleID(playerid) != 497 && GetPlayerVehicleID(playerid) != 511 && GetPlayerVehicleID(playerid) != 512 && GetPlayerVehicleID(playerid) != 513
&& GetPlayerVehicleID(playerid) != 519 && GetPlayerVehicleID(playerid) != 520 && GetPlayerVehicleID(playerid) != 548 && GetPlayerVehicleID(playerid) != 553
&& GetPlayerVehicleID(playerid) != 563 && GetPlayerVehicleID(playerid) != 577 && GetPlayerVehicleID(playerid) != 592 && GetPlayerVehicleID(playerid) != 593
&& GetPlayerVehicleID(playerid) != 538
&& GetPlayerVehicleID(playerid) != 537)
{
PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
if(PlayerInfo[playerid][pCNos]==0)
{
AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
}
else
{
AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да добавиш нитро на това превозно средство!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
else if(strcmp(cmdtext, "/cnos", true) == 0)
{
if(PlayerInfo[playerid][pVip] >= 2 || freevip==1)
{
if(PlayerInfo[playerid][pCNos] == 0)
{
SendClientMessage(playerid, 0x0066FFFF,"Твоето нитро вече е безкрайно!");
PlayerInfo[playerid][pCNos] = 1;
PlayerInfo[playerid][pCNos2]=4;
if(IsPlayerInAnyVehicle(playerid))
{
AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
}
}
else
{
PlayerInfo[playerid][pCNos] = 0;
if(IsPlayerInAnyVehicle(playerid))
{
AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
}
SendClientMessage(playerid, 0x0066FFFF,"Твоето нитро вече е краино!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
else if(strcmp(cmdtext,"/flip",true)==0)
{
if(PlayerInfo[playerid][pVip] >= 1 || freevip==1)
{
if(!IsPlayerInAnyVehicle(playerid))
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в превозно средство!");
return 1;
}
if(driver[playerid]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си шофьор!");
if(inevent[playerid]== 1 && eflip==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /flip е забранена в евента!");
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
new Float:zAngleVeh; GetVehicleZAngle(GetPlayerVehicleID(playerid), zAngleVeh);
SetVehiclePos(GetPlayerVehicleID(playerid),X[playerid],Y[playerid],Z[playerid]);
SetVehicleZAngle(GetPlayerVehicleID(playerid),zAngleVeh);
SendClientMessage(playerid, 0xFDFF5DFF, "- Вие преобърнахте вашето превозно средство -");
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
else if(strcmp(cmd, "/ip", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >0)
{
new ip[35];
GetPlayerIp(playerid,ip,35);
new string45[45];
format(string45, 45, "Your IP: %s\n", ip);
SendClientMessage(playerid, 0xFFFF00FF, string45);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/cbp",true)==0)
{
if(cbchat[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти в момента не си превключил на нито един CB Chanel!");
new string256[256];
format(string256, 256, "Онлайн играчи в CB Chanel %d:",cbchat[playerid]);
SendClientMessage(playerid, 0x40BF00FF,string256);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(cbchat[playerid] == cbchat[i])
{
format(string256, 256, "%s (ID: %d)",pname[i], i);
SendClientMessage(playerid, 0xFFFFFFFF, string256);
}
}
return 1;
}
if (strcmp(cmd, "/cboff", true) == 0)
{
if(cbchat[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти в момента не си превключил на нито един CB Chanel!");
SendClientMessage(playerid, 0xFF9933FF, "CB Chanel: Ти изключи твоя CB Chanel!");
cbchat[playerid] = 0;
return 1;
}
if (strcmp(cmd, "/cb", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /cb [1-9999]");
return 1;
}
new cbc = strval(tmp);
if(cbc < 2 || cbc > 999) return SendClientMessage(playerid, COLOR_GRAD1, "Числото трябва да е от 2 до 999!");
cbchat[playerid] = cbc;
new string100[100];
format(string100, 100, "CB Channel: Ти си смени твоя CB Channel на %d.", cbc);
SendClientMessage(playerid, 0xFF9933FF, string100);
return 1;
}
else if(strcmp(cmd, "/bizname", true) == 0)
{
if(PlayerInfo[playerid][pBizO]==-1)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Ти не притежаваш бизнес!");
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /bizname [name]");
return 1;
}
if(strfind( result , "||", true) == 0 || strfind( result , "|", true ) == 0 || strfind( result , "~", true ) == 0 || strfind( result , ",", true ) == 0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Ти не можеш да използваш забранени символи!");
}
if(strlen(result)<1 || strlen(result)>20)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Името на бизнеса трябва да бъде между 1 и 20 символа!");
}
SendClientMessage(playerid, 0x80BFFFFF, "Ти промени името на твоя бизнес!");
format(BizInfo[PlayerInfo[playerid][pBizO]][bName], 256, "%s", result);
return 1;
}
else if(strcmp(cmd, "/iphone", true) == 0)
{
if(PlayerInfo[playerid][pPhone]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате iPhone!");
if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GRAD1,"Не можете да използвате iPhone в кола!");
if(PhoneShow[playerid] == false)
{
ShowPlayerPhone(playerid);
PhoneShow[playerid] = true;
PhoneLocked[playerid] = 1;
SendClientMessage(playerid, 0x80BFFFFF, "Вие извадихте вашия iPhone!");
SendClientMessage(playerid, 0x80BFFFFF, "За да си приберете телефона, използвайте /iphone отново!");
//   TogglePlayerControllable(playerid, 0);
}
else
{
if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GRAD1,"Не можете да приберете iPhone в кола!");
SendClientMessage(playerid, 0x80BFFFFF, "Вие прибрахте вашия iPhone!");
HideWholePhone(playerid);
ClearAnimations(playerid);
TogglePlayerControllable(playerid,true);
ClearAnimations(playerid);
SetCameraBehindPlayer(playerid);
ClearAnimations(playerid);
inselfie[playerid]=0;
HideWholePhone(playerid);
PhoneShow[playerid] = false;
PhoneLocked[playerid] = 0;
TogglePlayerControllable(playerid, 1);
CancelSelectTextDraw(playerid);
ClearAnimations(playerid);
}
return 1;
}
else if(strcmp(cmd,"/news",true)==0)
{
new string223023[512];
new string22302result3[2713];
format(string223023,512,"{ffffff}Нови команди:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/gangstats - показва статистиката на твоята банда/мафия\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/duelrank - възлага автоматично ранг на човек чрез форума по броя щети които той нанася\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/duelranks - проверява последните 3 дуел теста на играч, докато е бил в сървъра\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/credit - тегли кредит, който трябва да бъде върнат в рамките на 15 часа\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/style [1-4] - променя изгледа на статистиката\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/pursuit - включва/изключва музиката по време на преследване с полицията\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/buy(в магазин за дрехи) - покупка на дрехи\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/buy(в 24/7) - покупка на iPhone, валчер и чанта за обири\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/robbomb - слага бомба на ATM\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/clothes - слагане/наместване на дрехи\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-------------{80BFFF}за полицията{ff0000}-------------\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/spikes - слага шипове на улицата\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/getspikes - взема шипове от улицата\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/suspects - преглед на онлайн заподозрените\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}----{80BFFF}и други за полицията{ff0000}---\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-------------{80BFFF}за VIP{ff0000}-------------\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/extraarmour - слага жилетка, която допълнително подпомага срещу щети\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/bizgps - излизат всички бизнеси на 1 км разстояние\n\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Нови елементи:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Бандите имат level система и Payday\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}ATM работят с копче, вместо команда\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Направени са обновления по картата на играта\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Личните коли се купуват чрез копче от Car Shop\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Могат да се добавят обекти към лично превозно средство\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Добавена е мини-игра Street Race\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Добавени са мисии, подобно на Single Player\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Добавена е нова работа - такси\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Като доставчик на пица хората трябва да разнасят пица из къшите чрез /pizzagps\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Добавени са кооперации с апартаменти\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Добавена е лотария на мига и вечерна лотария\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Притежателите на къщи могат да ги обзаведат\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Добавена е нова игра - Сделка или не\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Добавени са радари за скорост\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,103,DIALOG_STYLE_MSGBOX,"{ffffff}Новини",string22302result3,"Напред","Затвори");
return 1;
}
/*else if(strcmp(cmd,"/guide",true)==0)
{
new string223023[512];
new string22302result3[2213];
format(string223023,512,"{ffffff}Информация за сървъра\n\n{ff0000}-{80BFFF} Основата на гейммода е Gangwars и Roleplay\n{ff0000}-{80BFFF}Тук целта е да превземате територии, да изпълнявате мисии, да работите и да печелите репутация\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Когато спечелите достатъчно EP, репутацията ви се вдига автоматично\n{ff0000}-{80BFFF}Тук също така има VIP права, които ви осигуряват допълнителни функции\n{ff0000}-{80BFFF}Админ командите са изключително много и с тях човек може да проверява всичко, свързано с хаковете\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Можете да си купите лично превозно средство с пари от играта и да му сложите специален тунинг, също за пари от играта\n{ff0000}-{80BFFF}Ако си купите къща, ще можете да я обзаведете\n{ff0000}-{80BFFF}Ако имате бизнес, ще можете да печелите от него, когато хората си поръчват");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,86,DIALOG_STYLE_MSGBOX,"{ffffff}Информация за сървъра",string22302result3,"OK","");
return 1;
}*/
else if(strcmp(cmd,"/rules",true)==0)
{
new string223023[512];
new string22302result3[2213];
format(string223023,512,"{ff0000}Правила, отнасящи се до Хаковете\n");
strcat(string22302result3, string223023);
format(string223023,512,"{00cc99}Правила, отнасящи се до Начина на игра(чат и т.н.)\n");
strcat(string22302result3, string223023);
format(string223023,512,"{66ccff}Правила, отнасящи се до Администраторите на сървъра\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,111,DIALOG_STYLE_LIST,"{FFFFFF}--INTENSE {33cc33}SERVER {FF0000}Правила--",string22302result3,"Напред","Излез");
return 1;
}
else if(strcmp(cmd, "/style", true) == 0)
{
if(statisticset[playerid] == 1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти си изключил статистиката, използвай /statistic, за да я включиш!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /style [1-3]");
return 1;
}
new style;
style = strval(tmp);
if(style<1 || style>4) return SendClientMessage(playerid,COLOR_GRAD1,"Използвайте /style от 1 до 4!");
PlayerInfo[playerid][pStyle2]=style-1;
GivePlayerEP(playerid,0);
SendClientMessage(playerid,COLOR_WHITE,"SERVER: Вие обновихте изгледа на статистиката си!");
return 1;
}
else if(strcmp(cmd, "/fee", true) == 0)
{
if(PlayerInfo[playerid][pBizO]==-1)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Ти не притежаваш бизнес!");
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /fee [price]");
return 1;
}
new level;
level = strval(tmp);
if(level<1 || level>50) return SendClientMessage(playerid,COLOR_GRAD1,"Цената на входа трябва да бъде между $1 и $50!");
SendClientMessage(playerid, 0x80BFFFFF, "Ти промени цената за вход в твоя бизнес!");
BizInfo[PlayerInfo[playerid][pBizO]][bFee]=level;
return 1;
}
else if(strcmp(cmd, "/createbiz", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 5)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createbiz [price] [interior 1-26] [level 1-9999] [payout 1-999999] [ep]");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 1: 24/7, 2: Bar, 3: Ammu, 4: License, 5: 24/7, 6: ProLaps, 7: Office");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 8: BurShot, 9: HorseBet, 10: 24/7, 11: Urban, 12: Ammu, 13: Ammu 14: Disco");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 15: SexShop, 16: Gym, 17: Gym, 18: Casino, 19: StripClub, 20: DMBizz");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 21: FourDragons Casino, 22: Caligulas Casino, 23: Bar, 24: Rusty Brounns");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 25: CluckinBell, 26: Restaurant, 27: N.E., 28: Advert, 29: Drugs, 30: Drugs");
return 1;
}
GetPlayerPos(playerid, X[playerid],Y[playerid],Z[playerid]);
new model;
model = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createbiz [price] [interior 1-26] [level 1-9999] [payout 1-999999] [ep]");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 1: 24/7, 2: Bar, 3: Ammu, 4: License, 5: 24/7, 6: ProLaps, 7: Office");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 8: BurShot, 9: HorseBet, 10: 24/7, 11: Urban, 12: Ammu, 13: Ammu 14: Disco");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 15: SexShop, 16: Gym, 17: Gym, 18: Casino, 19: StripClub, 20: DMBizz");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 21: FourDragons Casino, 22: Caligulas Casino, 23: Bar, 24: Rusty Brounns");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 25: CluckinBell, 26: Restaurant, 27: N.E., 28: Advert, 29: Drugs, 30: Drugs");
return 1;
}
new type;
type = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createbiz [price] [interior 1-26] [level 1-9999] [payout 1-999999] [ep]");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 1: 24/7, 2: Bar, 3: Ammu, 4: License, 5: 24/7, 6: ProLaps, 7: Office");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 8: BurShot, 9: HorseBet, 10: 24/7, 11: Urban, 12: Ammu, 13: 14: Disco");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 15: SexShop, 16: Gym, 17: Gym, 18: Casino, 19: StripClub, 20: DMBizz");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 21: FourDragons Casino, 22: Caligulas Casino, 23: Bar, 24: Rusty Brounns");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 25: CluckinBell, 26: Restaurant, 27: N.E., 28: Advert, 29: Drugs, 30: Drugs");
return 1;
}
new bizlevel;
bizlevel = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createbiz [price] [interior 1-26] [level 1-9999] [payout 1-999999] [ep]");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 1: 24/7, 2: Bar, 3: Ammu, 4: License, 5: 24/7, 6: ProLaps, 7: Office");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 8: BurShot, 9: HorseBet, 10: 24/7, 11: Urban, 12: Ammu, 13: 14: Disco");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 15: SexShop, 16: Gym, 17: Gym, 18: Casino, 19: StripClub, 20: DMBizz");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 21: FourDragons Casino, 22: Caligulas Casino, 23: Bar, 24: Rusty Brounns");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 25: CluckinBell, 26: Restaurant, 27: N.E., 28: Advert, 29: Drugs, 30: Drugs");
return 1;
}
new bizpayout;
bizpayout = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createbiz [price] [interior 1-26] [level 1-9999] [payout 1-999999] [ep]");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 1: 24/7, 2: Bar, 3: Ammu, 4: License, 5: 24/7, 6: ProLaps, 7: Office");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 8: BurShot, 9: HorseBet, 10: 24/7, 11: Urban, 12: Ammu, 13: 14: Disco");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 15: SexShop, 16: Gym, 17: Gym, 18: Casino, 19: StripClub, 20: DMBizz");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 21: FourDragons Casino, 22: Caligulas Casino, 23: Bar, 24: Rusty Brounns");
SendClientMessage(playerid, 0x80BFFFFF, "Опции: 25: CluckinBell, 26: Restaurant, 27: N.E., 28: Advert, 29: Drugs, 30: Drugs");
return 1;
}
if(maxbizz+1>=MAX_BIZZ) return SendClientMessage(playerid, COLOR_GRAD1, "Достигнат е лимитът!");
new eplevel;
eplevel = strval(tmp);
if(model < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Цената трябва да е по-голяма от $0!");
if(type < 1 || type > 30) return SendClientMessage(playerid, COLOR_GRAD1, "Този тип е невалиден!");
if(bizlevel<1 || bizlevel>999) return SendClientMessage(playerid, COLOR_GRAD1, "Нивото на бизнеса трябва да е от 1 до 9999!");
if(bizpayout<1 || bizpayout>999999) return SendClientMessage(playerid, COLOR_GRAD1, "PayOut на бизнеса трябва да е от 1 до 999999!");
if(GetPlayerVirtualWorld(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да създадеш бизнес в този Virtual World!");
if(GetPlayerInterior(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да създадеш бизнес в този Interior!");
new biz[64];
format(biz, 64, "/Bizz/%d.ini", maxcreatedbizz);
SendClientMessage(playerid, 0x80BFFFFF,"Ти успешно създаде нов бизнес, той ще бъде вадлиден след рестарт!");
if(!dini_Exists(biz))
{
maxcreatedbizz++;
dini_Create(biz);
dini_IntSet(biz, "bEP",eplevel);
dini_IntSet(biz, "bOwner",0);
dini_Set(biz, "bOwnerName", "None");
dini_FloatSet(biz, "bX",X[playerid]);
dini_FloatSet(biz, "bY",Y[playerid]);
dini_FloatSet(biz, "bZ",Z[playerid]);
dini_IntSet(biz, "bLocked",0);
dini_IntSet(biz, "bType",type);
dini_IntSet(biz, "bPrice",model);
if(type!=27)
{
dini_IntSet(biz, "bFee",50);
}
dini_IntSet(biz,"bPayOut",bizpayout);
dini_IntSet(biz, "bLevel",bizlevel);
if(type==1)
{
dini_Set(biz, "bName","store");
}
if(type==2)
{
dini_Set(biz, "bName","BAR");
}
if(type==3)
{
dini_Set(biz, "bName","Ammu-nation");
}
if(type==4)
{
dini_Set(biz, "bName","DMV");
}
if(type==5)
{
dini_Set(biz, "bName","STORE");
}
if(type==6)
{
dini_Set(biz, "bName","PROLAPS");
}
if(type==7)
{
dini_Set(biz, "bName","OFFICE");
}
if(type==8)
{
dini_Set(biz, "bName","BURGER SHOT");
}
if(type==9)
{
dini_Set(biz, "bName","HORSE BET");
}
if(type==10)
{
dini_Set(biz, "bName","STORE");
}
if(type==11)
{
dini_Set(biz, "bName","URBAN");
}
if(type==12)
{
dini_Set(biz, "bName","ammu-nation");
}
if(type==13)
{
dini_Set(biz, "bName","ammu-nation");
}
if(type==14)
{
dini_Set(biz, "bName","DISCO");
}
if(type==15)
{
dini_Set(biz, "bName","SEX SHOP");
}
if(type==16)
{
dini_Set(biz, "bName","Gym");
}
if(type==17)
{
dini_Set(biz, "bName","Gym");
}
if(type==18)
{
dini_Set(biz, "bName","CASINO");
}
if(type==19)
{
dini_Set(biz, "bName","STRIP CLUB");
}
if(type==20)
{
dini_Set(biz, "bName","DM BIZ");
}
if(type==21)
{
dini_Set(biz, "bName","4 DRAGONS");
}
if(type==22)
{
dini_Set(biz, "bName","CALIGULA'S");
}
if(type==23)
{
dini_Set(biz, "bName","BAR");
}
if(type==24)
{
dini_Set(biz, "bName","Restaurant");
}
if(type==25)
{
dini_Set(biz, "bName","CLUCKIN' BELL");
}
if(type==26)
{
dini_Set(biz, "bName","Restaurant");
}
if(type==27)
{
dini_Set(biz, "bName","NOT ENTERABLE");
}
if(type==28)
{
dini_Set(biz, "bName","advertisiment");
}
if(type==29)
{
dini_Set(biz, "bName","drug factory");
}
if(type==30)
{
dini_Set(biz, "bName","drug factory");
}
}
else
{
maxcreatedbizz++;
SendClientMessage(playerid,COLOR_WHITE,"Презареден Save, бизнесът не беше създаден, следващият път ще бъде!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/creategarage", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 5)
{
tmp = strtok(cmdtext, idx);
new result[35];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /creategarage [name] [garage id: 1-2]");
SendClientMessage(playerid, 0xFFFF00FF, "Garage ID Info: ID: 1 - Салон за продажба на ПС, ID: 2 - Тунинг гараж със специални екстри");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /creategarage [name] [garage id: 1-2]");
SendClientMessage(playerid, 0xFFFF00FF, "Garage ID Info: ID: 1 - Салон за продажба на ПС, ID: 2 - Тунинг гараж със специални екстри");
return 1;
}
new garageid;
garageid = strval(tmp);
if(garageid<1 || garageid>2)
{
SendClientMessage(playerid, 0xFFFFFFFF, "ID на гаражите са от 1 до 2!");
return 1;
}
if(maxgarages>=50)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Достигнат е лимитът!");
return 1;
}
if(strfind( result , "||", true) == 0 || strfind( result , "|", true ) == 0 || strfind( result , "~", true ) == 0 || strfind( result , ",", true ) == 0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Ти не можеш да използваш забранени символи!");
}
if(strlen(result)<1 || strlen(result)>25)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Името трябва да бъде между 1 и 25 символа!");
}
new garage[64];
format(garage, 64, "/Garages/%d.ini", maxcreatedgarages);
SendClientMessage(playerid, 0x7FBFFFFF,"Ти успешно създаде нов гараж, той ще бъде валиден след рестарт.");
if(!dini_Exists(garage))
{
maxcreatedgarages++;
dini_Create(garage);
GetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
dini_FloatSet(garage, "gX",X[playerid]);
dini_FloatSet(garage, "gY",Y[playerid]);
dini_FloatSet(garage, "gZ",Z[playerid]);
dini_IntSet(garage, "gVirtualWorld",GetPlayerVirtualWorld(playerid));
dini_IntSet(garage, "gGarage",garageid);
dini_IntSet(garage, "gInterior",GetPlayerInterior(playerid));
dini_Set(garage, "gName",result);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/createcompany", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 5)
{
tmp = strtok(cmdtext, idx);
new result[35];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createcompany [name] [fisrt price]");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createcompany [name] [first price]");
return 1;
}
new coPrice2;
coPrice2 = strval(tmp);
if(coPrice2<1 || coPrice2>500000000)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Цената трябва да е от $1 до $500, 000, 000!");
return 1;
}
if(maxcompanies>=MAX_COMPANIES)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Достигнат е лимитът на компаниите!");
return 1;
}
if(strfind( result , "||", true) == 0 || strfind( result , "|", true ) == 0 || strfind( result , "~", true ) == 0 || strfind( result , ",", true ) == 0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Ти не можеш да използваш забранени символи!");
}
if(strlen(result)<1 || strlen(result)>25)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Името на компанията трябва да бъде между 1 и 25 символа!");
}
if(GetPlayerVirtualWorld(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да създадеш компания в този Virtual World!");
if(GetPlayerInterior(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да създадеш компания в този Interior!");
new company[64];
format(company, 64, "/Companies/%d.ini", maxcreatedcompanies);
SendClientMessage(playerid, 0x7FBFFFFF,"Ти успешно създаде нова компания, тя ще бъде валидна след рестарт.");
if(!dini_Exists(company))
{
maxcreatedcompanies++;
dini_Create(company);
GetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
dini_FloatSet(company, "coX",X[playerid]);
dini_FloatSet(company, "coY",Y[playerid]);
dini_FloatSet(company, "coZ",Z[playerid]);
dini_IntSet(company, "coPrice",coPrice2);
dini_Set(company, "coName",result);
dini_Set(company, "coOwner","NO");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/createcooperation", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 5)
{
tmp = strtok(cmdtext, idx);
new result[35];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createcooperation [name] [floors]");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createcooperation [name] [floors]");
return 1;
}
new floors;
floors = strval(tmp);
if(floors<1 || floors>500)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Етажите трябва да са от 1 до 500!");
return 1;
}
if(maxapartments>=MAX_APARTMENTS)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Достигнат е лимитът от 4000 жилища!");
return 1;
}
if(strfind( result , "||", true) == 0 || strfind( result , "|", true ) == 0 || strfind( result , "~", true ) == 0 || strfind( result , ",", true ) == 0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Ти не можеш да използваш забранени символи!");
}
if(strlen(result)<1 || strlen(result)>25)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Името на жилището трябва да бъде между 1 и 25 символа!");
}
if(GetPlayerVirtualWorld(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да създадеш жилище в този Virtual World!");
if(GetPlayerInterior(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да създадеш къща в този Interior!");
new apartment[64];
new oldapartmentid=maxapartments*501;
format(apartment, 64, "/Apartments/%d.ini", maxcreatedapartments);
SendClientMessage(playerid, 0x7FBFFFFF,"Ти успешно създаде ново жилище, то ще бъде валидно след рестарт.");
if(!dini_Exists(apartment))
{
maxcreatedapartments++;
dini_Create(apartment);
GetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
dini_FloatSet(apartment, "aX",X[playerid]);
dini_FloatSet(apartment, "aY",Y[playerid]);
dini_FloatSet(apartment, "aZ",Z[playerid]);
dini_IntSet(apartment, "aFloors",floors);
dini_IntSet(apartment, "aVirtualWorld",oldapartmentid);
dini_Set(apartment, "aName",result);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/makeclanleader", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
new formatclan[256];
new formatclan3[256];
format(formatclan3,256,"Начин на използване: /makeclanleader [ID на играч] [team 1-%d]",maxclans-1);
format(formatclan,256,"");
new formatclan2[256];
for(new i=1;i<maxclans;i++)
{
format(formatclan2,256," • %d: %s ",i,ClanInfo[i][cName]);
strcat(formatclan, formatclan2);
}
if(maxclans==1)
{
SendClientMessage(playerid,COLOR_GRAD1,"В момента няма кланове!");
return 1;
}
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, formatclan3);
SendClientMessage(playerid, 0xFFFF00FF, formatclan);
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1||level>maxclans-1)
{
SendClientMessage(playerid, 0xFFFFFFFF, formatclan3);
SendClientMessage(playerid, 0xFFFF00FF, formatclan);
return 1;
}
PlayerInfo[para1[playerid]][pClan]=level;
PlayerInfo[para1[playerid]][pClanRank]=ClanInfo[level][cRanks];
format(formatclan,256,"•• [Clans] %s сложи %s за лидер (Rank %d) на клан [%s] ••",pname[playerid],pname[para1[playerid]],ClanInfo[level][cRanks],ClanInfo[level][cName]);
SendClientMessageToAll(0x00FF00ff,formatclan);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/createclan", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 5)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createclan [ranks 1-6] [name]");
return 1;
}
new rnkid = strval(tmp);
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createclan [ranks 1-6] [name]");
return 1;
}
new clan[64];
new countclans;
if(maxclans==0)
{
countclans=maxclans;
countclans++;
}
else
{
countclans=maxclans;
}
if(GetPlayerVirtualWorld(playerid)!=0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да създадеш тук клан, трябва да си в Interior ID 0 и World ID 0");
return 1;
}
if(GetPlayerInterior(playerid)!=0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да създадеш тук клан, трябва да си в Interior ID 0 и World ID 0");
return 1;
}
format(clan, 64, "/Clans/%d.ini", countclans);
new minusClans=MAX_CLANS;
minusClans--;
if(countclans>=minusClans)
{
SendClientMessage(playerid, COLOR_GRAD1, "Достигнат е лимитът от 35 клана!");
return 1;
}
new stringclan[256];
format(stringclan,256,"[Clan Info] %s създаде нов клан с име [%s] и %d броя Ranks",pname[playerid],result,rnkid);
SendClientMessageToAll(0x00FF00ff,stringclan);
SendClientMessage(playerid, 0x00FF00ff,"Ти успешно създаде нов клан!");
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
ClanInfo[countclans][cRanks]=rnkid;
format(ClanInfo[countclans][cName],256,"%s",result);
ClanInfo[countclans][cBaseX]=X[playerid];
ClanInfo[countclans][cBaseY]=Y[playerid];
ClanInfo[countclans][cBaseZ]=Z[playerid];
if(!dini_Exists(clan))
{
dini_Create(clan);
maxclans++;
dini_IntSet(clan, "cRanks",rnkid);
dini_Set(clan, "cName", result);
dini_FloatSet(clan,"cBaseX",X[playerid]);
dini_FloatSet(clan,"cBaseY",Y[playerid]);
dini_FloatSet(clan,"cBaseZ",Z[playerid]);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/createhouse", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 5)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createhouse [price] [interior 1-26] [level 1-9999]");
return 1;
}
GetPlayerPos(playerid, X[playerid],Y[playerid],Z[playerid]);
new model;
model = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createhouse [price] [interior 1-26] [level 1-9999]");
return 1;
}
new type;
type = strval(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /createhouse [price] [interior 1-26] [level 1-9999]");
new maxhouses2=maxhouses;
maxhouses2++;
if(maxhouses2>=MAX_HOUSES)  return SendClientMessage(playerid, COLOR_GRAD1, "Достигнат е лимитът на къщите!");
new houselevel;
houselevel = strval(tmp);
if(model < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Цената трябва да е по-голяма от $0!");
if(type < 1 || type > 28) return SendClientMessage(playerid, COLOR_GRAD1, "Този интериор е невалиден!");
if(houselevel<1 || houselevel>9999) return SendClientMessage(playerid, COLOR_GRAD1, "Нивото на къщата трябва да е от 0 до 9999!");
new house[64];
format(house, 64, "/Houses/%d.ini", maxcreatedhouses);
SendClientMessage(playerid, 0x00FF40FF,"Ти успешно създаде нова къща, тя ще бъде валидна след рестарт!");
if(!dini_Exists(house))
{
maxcreatedhouses++;
dini_Create(house);
dini_IntSet(house, "hOwner",0);
dini_Set(house, "hOwnerName", "None");
dini_IntSet(house, "hOwner",0);
dini_IntSet(house, "hcVeh",0);
dini_FloatSet(house, "hX",X[playerid]);
dini_FloatSet(house, "hY",Y[playerid]);
dini_FloatSet(house, "hZ",Z[playerid]);
dini_IntSet(house, "hLocked",0);
dini_IntSet(house, "hInterior",type);
dini_IntSet(house,"hObjects",0);
dini_IntSet(house, "hPrice",model);
dini_IntSet(house, "hObjects",0);
dini_IntSet(house, "hLevel",houselevel);
dini_IntSet(house, "hVirtualWorld",GetPlayerVirtualWorld(playerid));
dini_IntSet(house, "hInterior2",GetPlayerInterior(playerid));
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/getip", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /getip [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new ip[35];
GetPlayerIp(para1[playerid],ip,35);
new string65[65];
format(string65, 65, "%s's IP: %s\n",pname[para1[playerid]], ip);
SendClientMessage(playerid, 0xFFFF00FF, string65);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/freeze", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /freeze [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
TogglePlayerControllable(para1[playerid], 0);
freezed[para1[playerid]]=1;
new string60[60];
format(string60, 60, "- Ти замрази %s -",pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFF00FF,string60);
format(string60, 60, "- %s те замрази -",pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFF00FF,string60);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/explode", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /explode [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
GetPlayerPos(para1[para1[playerid]], X[para1[playerid]], Y[para1[playerid]], Z[para1[playerid]]);
CreateExplosion(X[para1[playerid]], Y[para1[playerid]], Z[para1[playerid]], 7, 1.0);
new string60[60];
format(string60, 60, "- Ти взриви %s -",pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFF00FF,string60);
format(string60, 60, "- %s те взриви -",pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFF00FF,string60);
format(string60,60,"Explode: %s взриви %s",pname[playerid],pname[para1[playerid]]);
SendClientMessageToAll(0xE60000FF,string60);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/disarm", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /disarm [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
ResetPlayerWeapons(para1[playerid]);
new string60[60];
format(string60, 60, "- Ти взе всички оръжия на %s -",pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string60);
format(string60, 60, "- %s взе всички твои оръжия -",pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFF00FF,string60);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/unfreeze", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unfreeze [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
TogglePlayerControllable(para1[playerid], 1);
freezed[para1[playerid]]=0;
new string60[60];
format(string60, 60, "- Ти отмрази %s -",pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFF00FF,string60);
format(string60, 60, "- %s те отмрази -",pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFF00FF,string60);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/isjailed", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /isjailed [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pJail] == 0)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е в затвора!");
}
if(PlayerInfo[para1[playerid]][pJail] > 0)
{
new jailreason[80];
new string390[390];
switch(PlayerInfo[para1[playerid]][pJailReason])
{
case 1:
format(jailreason,80,"Пречи на хората да работят");
case 2:
format(jailreason,80,"Грешен Report");
case 3:
format(jailreason,80,"Опасен Glitch");
case 4:
format(jailreason,80,"Фалшиво оплакване във форума");
case 5:
format(jailreason,80,"Оплакване от играч");
case 6:
format(jailreason,80,"Пречи на ADUTY админ");
case 7:
format(jailreason,80,"Друго нарушение");
}
format(string390, 390, "Причината играчът да е в ADMIN затвора е -- %s --", jailreason);
SendClientMessage(playerid, 0xE60000FF, string390);
format(string390, 390, "Оставащото му време в затвора е %d минути", PlayerInfo[para1[playerid]][pJail]/120);
SendClientMessage(playerid, 0xE60000FF, string390);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е заглушен!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/drink", true) == 0)
{
if(!IsPlayerInRangeOfPoint(playerid, 4, 497.4557,-75.6231,998.7578) && !IsPlayerInRangeOfPoint(playerid, 4, 499.3484,-20.5936,1000.6797) &&
!IsPlayerInRangeOfPoint(playerid, 4, 1215.0492,-12.2688,1000.9219) && !IsPlayerInRangeOfPoint(playerid, 4, 287.8558,-109.2027,1001.5156) && !IsPlayerInRangeOfPoint(playerid, 4, -224.7806,1404.6755,27.7734)
&& !IsPlayerInRangeOfPoint(playerid, 4,2537.1509,-1286.3304,1054.6406))
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в бар за да използваш тази команда!");
return 1;
}
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да си купиш напитка от тук!");
return 1;
}
ShowPlayerDialog(playerid, 23, DIALOG_STYLE_LIST, "Напитки", "{FFFFFF}Бира - {40BF00}$50\n{FFFFFF}Вино - {40BF00}$60\n{FFFFFF}Водка - {40BF00}$100", "Избери", "Излез");
return 1;
}
else if(strcmp(cmd, "/train", true)==0)
{
new level[32];
if(!IsPlayerInRangeOfPoint(playerid, 4, 773.6641,-72.9778,1000.6484) && !IsPlayerInRangeOfPoint(playerid, 4, 773.0745,-39.3959,1000.6865))
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в салон за да тренираш!");
return 1;
}
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да си тренираш тук!");
return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 4, 773.6641,-72.9778,1000.6484))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /train [fighting style]");
SendClientMessage(playerid, 0xFF8040FF, "Fighting Styles: normal $20000, grabkick $100000, boxing $200000");
return 1;
}
strmid(level, tmp, 0, sizeof(level), sizeof(level));
if (strcmp(level, "normal", false) == 0)
{
if(PlayerInfo[playerid][pStyle]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
return 1;
}
if(PlayerInfo[playerid][pCash]<20000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
return 1;
}
SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Normal и това ти струваше $20000!");
PlayerInfo[playerid][pStyle]=0;
GivePlayerCash(playerid,-20000);BizInfo[enteredbiz[playerid]][bEarnings]+=20000;
SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
}
if (strcmp(level, "grabkick", false) == 0)
{
if(PlayerInfo[playerid][pStyle]==1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
return 1;
}
if(PlayerInfo[playerid][pCash]<100000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
return 1;
}
SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Grab Kick и това ти струваше $100000!");
PlayerInfo[playerid][pStyle]=1;
GivePlayerCash(playerid,-100000);BizInfo[enteredbiz[playerid]][bEarnings]+=100000;
SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
}
if (strcmp(level, "boxing", false) == 0)
{
if(PlayerInfo[playerid][pStyle]==2)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
return 1;
}
if(PlayerInfo[playerid][pCash]<200000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
return 1;
}
SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Boxing и това ти струваше $200000!");
PlayerInfo[playerid][pStyle]=2;
GivePlayerCash(playerid,-200000);BizInfo[enteredbiz[playerid]][bEarnings]+=200000;
SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
}
}
if(IsPlayerInRangeOfPoint(playerid,4, 773.0745,-39.3959,1000.6865))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /train [fighting style]");
SendClientMessage(playerid, 0xFF8040FF, "Fighting Styles: kungfu $300000, elbow $400000, kneehead $500000");
return 1;
}
strmid(level, tmp, 0, sizeof(level), sizeof(level));
if (strcmp(level, "kungfu", false) == 0)
{
if(PlayerInfo[playerid][pStyle]==3)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
return 1;
}
if(PlayerInfo[playerid][pCash]<300000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
return 1;
}
SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Kungfu и това ти струваше $300000!");
PlayerInfo[playerid][pStyle]=3;
GivePlayerCash(playerid,-30000);BizInfo[enteredbiz[playerid]][bEarnings]+=300000;
SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
}
if (strcmp(level, "elbow", false) == 0)
{
if(PlayerInfo[playerid][pStyle]==4)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
return 1;
}
if(PlayerInfo[playerid][pCash]<400000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
return 1;
}
SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Elbow и това ти струваше $400000!");
PlayerInfo[playerid][pStyle]=4;
GivePlayerCash(playerid,-400000);BizInfo[enteredbiz[playerid]][bEarnings]+=400000;
SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
}
if (strcmp(level, "kneehead", false) == 0)
{
if(PlayerInfo[playerid][pStyle]==5)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
return 1;
}
if(PlayerInfo[playerid][pCash]<500000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
return 1;
}
SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Kneehead и това ти струваше $500000!");
PlayerInfo[playerid][pStyle]=5;
GivePlayerCash(playerid,-500000);BizInfo[enteredbiz[playerid]][bEarnings]+=500000;
SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
}
}
return 1;
}
else if(strcmp(cmd, "/buybomb", true) == 0)
{
if(!IsPlayerInRangeOfPoint(playerid, 4, 2548.3892,-1293.2520,1044.1250) || BizInfo[enteredbiz[playerid]][bOwner]==0)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Не си на място за купуване на бомби, бизнесът трябва да има притежател!");
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0x29C9D6FF, "Bomb: За да купиш бомба това ще ти струва $18, 000!");
SendClientMessage(playerid, 0x29C9D6FF, "Ако си съгласен напиши '/buybomb confirm' за да потвърдиш!");
return 1;
}
if(strcmp(result, "confirm", true) != 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Напиши '/buybomb confirm' за да купиш бомба!");
return 1;
}
if(PlayerInfo[playerid][pCash]<18000) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари!");
SendClientMessage(playerid, 0x29C9D6FF, "Ти купи бомба за $18,000. Използвай /placebomb за да я поставиш!");
PlayerInfo[playerid][pBombs]+=1;
GivePlayerCash(playerid,-18000);
BizInfo[enteredbiz[playerid]][bEarnings]+=18000;
return 1;
}
else if(strcmp(cmd, "/givebomb", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /givebomb [ID на играч]");
return 1;
}
new giveplayerid = ReturnUser(tmp);
if (IsPlayerConnected(giveplayerid))
{
if (CorDetector(4.0, playerid, giveplayerid))
{
PlayerInfo[playerid][pBombs]-=1; PlayerInfo[giveplayerid][pBombs]+=1;
new stringpay[500];
format(stringpay, 500, "Bomb: Ти даде бомба на %s", pname[giveplayerid]);
SendClientMessage(playerid, COLOR_GRAD1, stringpay);
format(stringpay, 500, "Bomb: Ти бомба от %s", pname[playerid]);
SendClientMessage(giveplayerid, COLOR_GRAD1, stringpay);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си близо до играчът на който искаш да дадеш бомба!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
return 1;
}
else if(strcmp(cmd, "/bomb", true) == 0)
{
if(PlayerInfo[playerid][pBombsS1]== 0 && PlayerInfo[playerid][pBombsS2]== 0 && PlayerInfo[playerid][pBombsS3]== 0
&& PlayerInfo[playerid][pBombsS4]== 0 && PlayerInfo[playerid][pBombsS5]== 0)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си поставил нито една бомба!");
}
new activebomb=0;
if(PlayerInfo[playerid][pBombsS1]== 1 && PlayerInfo[playerid][pActiveBomb][0]==1)
{
activebomb=1;
DestroyDynamicObject(BombO[playerid][0]);
PlayerInfo[playerid][pBombsS1]=0;
PlayerInfo[playerid][pBombsS1T][0]=1*2;
PlayerInfo[playerid][pBombsS1T][1]=1*3;
PlayerInfo[playerid][pBombsS1T][2]=1*4;
PlayerInfo[playerid][pBombsS1T][3]=1*5;
CreateExplosion(BombX[playerid][0], BombY[playerid][0], BombZ[playerid][0], 3, 6.0);
//return SendClientMessage(playerid, 0x29C9D6FF, "Bomb: Ти гръмна всички активирани бомби, които постави!");
}
if(PlayerInfo[playerid][pBombsS2]== 1 && PlayerInfo[playerid][pActiveBomb][1]==1)
{
activebomb=1;
DestroyDynamicObject(BombO[playerid][1]);
PlayerInfo[playerid][pBombsS2]=0;
PlayerInfo[playerid][pBombsS1T][0]=1*2;
PlayerInfo[playerid][pBombsS1T][1]=1*3;
PlayerInfo[playerid][pBombsS1T][2]=1*4;
PlayerInfo[playerid][pBombsS1T][3]=1*5;
CreateExplosion(BombX[playerid][1], BombY[playerid][1], BombZ[playerid][1], 3, 6.0);
//return SendClientMessage(playerid, 0x29C9D6FF, "Bomb: Ти гръмна всички активирани бомби, които постави!");
}
if(PlayerInfo[playerid][pBombsS3]== 1 && PlayerInfo[playerid][pActiveBomb][2]==1)
{
activebomb=1;
DestroyDynamicObject(BombO[playerid][2]);
PlayerInfo[playerid][pBombsS3]=0;
PlayerInfo[playerid][pBombsS2T][0]=1*2;
PlayerInfo[playerid][pBombsS2T][1]=1*3;
PlayerInfo[playerid][pBombsS2T][2]=1*4;
PlayerInfo[playerid][pBombsS2T][3]=1*5;
CreateExplosion(BombX[playerid][2], BombY[playerid][2], BombZ[playerid][2], 3, 6.0);
//return SendClientMessage(playerid, 0x29C9D6FF, "Bomb: Ти гръмна всички активирани бомби, които постави!");
}
if(PlayerInfo[playerid][pBombsS4]== 1 && PlayerInfo[playerid][pActiveBomb][3]==1)
{
activebomb=1;
DestroyDynamicObject(BombO[playerid][3]);
PlayerInfo[playerid][pBombsS4]=0;
PlayerInfo[playerid][pBombsS3T][0]=1*2;
PlayerInfo[playerid][pBombsS3T][1]=1*3;
PlayerInfo[playerid][pBombsS3T][2]=1*4;
PlayerInfo[playerid][pBombsS3T][3]=1*5;
CreateExplosion(BombX[playerid][3], BombY[playerid][3], BombZ[playerid][3], 3, 6.0);
//return SendClientMessage(playerid, 0x29C9D6FF, "Bomb: Ти гръмна всички активирани бомби, които постави!");
}
if(PlayerInfo[playerid][pBombsS5]== 1 && PlayerInfo[playerid][pActiveBomb][4]==1)
{
activebomb=1;
DestroyDynamicObject(BombO[playerid][4]);
PlayerInfo[playerid][pBombsS5]=0;
PlayerInfo[playerid][pBombsS4T][0]=1*2;
PlayerInfo[playerid][pBombsS4T][1]=1*3;
PlayerInfo[playerid][pBombsS4T][2]=1*4;
PlayerInfo[playerid][pBombsS4T][3]=1*5;
CreateExplosion(BombX[playerid][4], BombY[playerid][4], BombZ[playerid][4], 3, 6.0);
}
if(activebomb==0)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш активни бомби!");
}
SendClientMessage(playerid, 0x29C9D6FF, "Bomb: Ти гръмна всички активирани бомби, които постави!");
if(InRobbery[playerid]==1)
{
new moneybagstr[256];
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
CASHBAG[0]=CreateDynamicObject(1550, XBOM,YBOM,ZBOM-0.50, 0.0, 0.0, 0.0);
CASHBAG[1]=CreateDynamicObject(1550, XBOM,YBOM+0.60,ZBOM-0.50, 0.0, 0.0, 0.0);
CASHBAG[2]=CreateDynamicObject(1550, XBOM+0.90,YBOM,ZBOM-0.50, 0.0, 0.0, 0.0);
CASHMONEY[0]=ATMCASH[ATMSTEAL]/5;
CASHMONEY[1]=ATMCASH[ATMSTEAL]/5;
CASHMONEY[2]=ATMCASH[ATMSTEAL]/5;
StartATMRob=1;
if(enteredInMissionCP[playerid]==1 && PlayerInfo[playerid][pMission]==2)
{
PlayerInfo[playerid][pTimerATM]=2*120;
SendClientMessage(playerid,COLOR_RVIP,"[Мисия 3] Имате 2 минути, след което Алекс ще ви се обади!");
DisablePlayerCheckpoint(playerid);
}
format(moneybagstr,256,"[Чанта]\nОставаща сума до изпразване: $%d",CASHMONEY[0]);
CASHBAGTEXT[0]=CreateDynamic3DTextLabel(moneybagstr, COLOR_RGROVE, XBOM,YBOM,ZBOM-0.50, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, 0, -1, 15.0);
format(moneybagstr,256,"[Чанта]\nОставаща сума до изпразване: $%d",CASHMONEY[1]);
CASHBAGTEXT[1]=CreateDynamic3DTextLabel(moneybagstr, COLOR_RGROVE, XBOM,YBOM+0.60,ZBOM-0.50, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, 0, -1, 15.0);
format(moneybagstr,256,"[Чанта]\nОставаща сума до изпразване: $%d",CASHMONEY[2]);
CASHBAGTEXT[2]=CreateDynamic3DTextLabel(moneybagstr, COLOR_RGROVE, XBOM+0.90,YBOM,ZBOM-0.50, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, 0, -1, 15.0);
PlayerInfo[playerid][pRobberyATM]=3;
SendClientMessage(playerid, COLOR_RTRIADS, "Robbery ATM: Изгаси пожара с пожарогасителя и отиди да обираш пари!");
GivePlayerWeapon(playerid, 42, 5000);
}
return 1;
}
else if(strcmp(cmd, "/robbomb", true) == 0)
{
if(GetPlayerInterior(playerid)!=0 || GetPlayerVirtualWorld(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да обираш тук!");
if(PlayerInfo[playerid][pChanta]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш чанта, където да пребираш парите!");
if(PlayerInfo[playerid][pBombs]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш нито една бомба!");
if(PlayerNearATM[playerid]==-1 || PlayerNearATM[playerid]>=9997) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си близо до банкомат!");
if(ATMCASH[PlayerNearATM[playerid]]<50000) return SendClientMessage(playerid, COLOR_GRAD1, "В банкомата няма достатъчно пари за да се направи обир!");
if(PlayerInfo[playerid][pBombsS1]== 1 && PlayerInfo[playerid][pBombsS2]== 1 && PlayerInfo[playerid][pBombsS3]== 1
&& PlayerInfo[playerid][pBombsS4]== 1 && PlayerInfo[playerid][pBombsS5]== 1)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си поставил 5 бомби!");
}
if(IsPlayerInRangeOfPoint(playerid, 3, 1539.162475, -1613.974609, 13.134112)
|| IsPlayerInRangeOfPoint(playerid, 3,387.170196, -1827.512084, 7.415833)
|| IsPlayerInRangeOfPoint(playerid, 3, 378.918457, -2060.627929, 7.453046)
|| IsPlayerInRangeOfPoint(playerid, 3, 672.134521, -503.247589, 15.964093)
|| IsPlayerInRangeOfPoint(playerid, 3, 2490.404541, 923.318664, 10.840134)
|| IsPlayerInRangeOfPoint(playerid, 3, 2181.033691, 2462.734130, 10.424777)
|| IsPlayerInRangeOfPoint(playerid, 3, -174.470657, 1138.796386, 19.313276)
|| IsPlayerInRangeOfPoint(playerid, 3, -1486.528686, 2583.155517, 55.317409)
|| IsPlayerInRangeOfPoint(playerid, 3, -2492.394775, 2366.457519, 9.587511)
|| IsPlayerInRangeOfPoint(playerid, 3, 1239.006103, -2041.014038, 59.432590)
|| IsPlayerInRangeOfPoint(playerid, 3, 210.3416,1808.8025,21.8672)
|| IsPlayerInRangeOfPoint(playerid, 3, 2194.2756,1986.2014,12.2969)
|| IsPlayerInRangeOfPoint(playerid, 3, 398.4085,-1805.4634,7.8379)
|| IsPlayerInRangeOfPoint(playerid, 3, 256.7464,70.0793,1003.6406)
|| IsPlayerInRangeOfPoint(playerid, 3, 142.7404,1381.5952,1088.3672)
|| IsPlayerInRangeOfPoint(playerid, 3, 2088.5652,1285.0544,10.8128) || IsPlayerInRangeOfPoint(playerid, 3, 1940.9657,764.1401,10.8203) || IsPlayerInRangeOfPoint(playerid, 3, 369.4242,-1352.7485,14.5682)
|| IsPlayerInRangeOfPoint(playerid, 3, 512.8521,-1552.2284,16.4595) || IsPlayerInRangeOfPoint(playerid, 3, 828.5903,-1386.0410,13.5804) || IsPlayerInRangeOfPoint(playerid, 3, 646.4356,-1764.3721,12.9817)
|| IsPlayerInRangeOfPoint(playerid, 3, 2498.6228,-1759.1406,13.5243) || IsPlayerInRangeOfPoint(playerid, 3, 1832.2898,-1837.7346,13.5781) || IsPlayerInRangeOfPoint(playerid, 3, 1346.1368,-1758.5430,13.5156))
{
if(PlayerInfo[playerid][pMission]==2)
{
if(enteredInMissionCP[playerid]==1)
{
if(IsPlayerInRangeOfPoint(playerid,4.0,2194.2742,1986.2155,12.2969))
{
DisablePlayerCheckpoint(playerid);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да сте близо до маркирания банкомат!");
}
}
}
if(PlayerInfo[playerid][pADuty]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да правиш обир, докато си ADMIN ON-DUTY!");
if(PlayerInfo[playerid][pPlaceBomb]>0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента поставяш бомба!");
if(StartedRobbery==1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има друг обир!");
SendClientMessage(playerid, 0x29C9D6FF, "Bomb: Изчакай, докато поставиш бомбата, след което я гръмни чрез /bomb!");
ApplyAnimation(playerid,"BOMBER","BOM_Plant", 4.1, 1, 1, 1, 1, 1, 1);
ApplyAnimation(playerid,"BOMBER","BOM_Plant", 4.1, 1, 1, 1, 1, 1, 1);
PlayerInfo[playerid][pPlaceBomb]=2*6;
PlayerInfo[playerid][pBombs]-=1;
StartATMRob=0;
StartedRobbery=1;
GetPlayerPos(playerid,XBOM,YBOM,ZBOM);
ATMCASH[PlayerNearATM[playerid]]-=ATMCASH[PlayerNearATM[playerid]]/5;
ATMCASH[PlayerNearATM[playerid]]-=ATMCASH[PlayerNearATM[playerid]]/5;
ATMCASH[PlayerNearATM[playerid]]-=ATMCASH[PlayerNearATM[playerid]]/5;
InRobbery[playerid]=1;
ATMSTEAL=PlayerNearATM[playerid];
TogglePlayerControllable(playerid, 0);
//SetPlayerAttachedObject(playerid, 5, 19515,  1, 0.1,  0.05, 0.0,  0.0,   0.0,   0.0);
SetPlayerAttachedObject(playerid, 7,1550,1, -0.027000, -0.251999, 0.095000 , 1.000000, 90.000000, 1.000000 );
GameTextForPlayer(playerid, "~r~PLACING THE BOMB ON THE ATM...", 3000, 3);
PlayerInfo[playerid][pUvedomiChengeta]=2*120;
SendClientMessage(playerid,COLOR_RTRIADS,"Robbery ATM: Полицията ще бъде уведомена до 2 минути, побързай!");
if(PlayerInfo[playerid][pWanted]>6) PlayerInfo[playerid][pWanted]=6;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си много близо до ATM!");
}
return 1;
}
else if(strcmp(cmd, "/placebomb", true) == 0)
{
if(PlayerInfo[playerid][pBombs]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш нито една бомба!");
if(PlayerInfo[playerid][pBombsS1]== 1 && PlayerInfo[playerid][pBombsS2]== 1 && PlayerInfo[playerid][pBombsS3]== 1
&& PlayerInfo[playerid][pBombsS4]== 1 && PlayerInfo[playerid][pBombsS5]== 1)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си поставил 5 бомби!");
}
if(PlayerInfo[playerid][pPlaceBomb]>0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента поставяш бомба!");
SendClientMessage(playerid, 0x29C9D6FF, "Bomb: Изчакай, докато поставиш бомбата!");
ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
PlayerInfo[playerid][pPlaceBomb]=2*6;
PlayerInfo[playerid][pBombs]-=1;
TogglePlayerControllable(playerid, 0);
GameTextForPlayer(playerid, "~g~PLACING THE BOMB...", 3000, 3);
return 1;
}
else if(strcmp(cmd, "/drugs", true) == 0)
{
new string230[230];
format(string230,230,"Спиртно питие: %d литра, Трева: %d грам(а), Кокаин %d грам(а), Хероин %d грам(а)",PlayerInfo[playerid][pMoonshine],PlayerInfo[playerid][pWeed],PlayerInfo[playerid][pCocaine],PlayerInfo[playerid][pHeroin]);
SendClientMessage(playerid, 0xFF2D2DFF, string230);
return 1;
}
else if(strcmp(cmd, "/briefcase", true) == 0 || strcmp(cmd,"/bcase",true)==0)
{
if(PlayerInfo[playerid][pBriefcase]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш куфарче!");
new x_job[256];
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) {
SendClientMessage(playerid, 0xFFFFFFFF,"Начин на използване: /briefcase(/bcase) [hold/hide/store/get/view]");
return 1;
}
new invalidfunction=1;
//new invalidfunction2=1;
if(strcmp(tmp,"get",true) == 0)
{
invalidfunction=0;
if(!IsPlayerAttachedObjectSlotUsed(playerid, 4)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти в момента не държиш куфара в ръце!");
new x_job2[256];
x_job2 = strtok(cmdtext, idx);
new level;
new tmp2[256];
//if(!strlen(x_job2))
//{
//SendClientMessage(playerid, 0xFFFFFFFF,"Начин на използване: /briefcase(/bcase) store [drug name] [gram/liter]");
//SendClientMessage(playerid, 0xFF2D2DFF,"Drug names: Moonshine, Weed, Cocaine, Heroin");
//}
tmp2=strtok(cmdtext, idx);
level=strval(tmp2);
if(!strlen(tmp2))
{
SendClientMessage(playerid, 0xFFFFFFFF,"Начин на използване: /briefcase(/bcase) get [drug name] [gram/liter]");
SendClientMessage(playerid, 0xFF2D2DFF,"Drug names: Moonshine, Weed, Cocaine, Heroin");
return 1;
}
if(level<1 || level>1000) return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да съхраняваш дрога с количество от 1 до 1000!");
if(strcmp(x_job2,"moonshine",false) == 0 || strcmp(x_job2,"Moonshine",false) == 0)
{
if(level>PlayerInfo[playerid][pMoonshine1]) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш толкова литра спиртно питие в куфара!");
PlayerInfo[playerid][pMoonshine1]-=level;
PlayerInfo[playerid][pMoonshine]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти взе 1 литър спиртно питие от твоя куфар!");
}
else
{
new string140[140];
format(string140,140,"Ти взе %d литра спиртно питие от твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string140);
}
}
if(strcmp(x_job2,"cocaine",false) == 0 || strcmp(x_job2,"Cocaine",false) == 0)
{
if(level>PlayerInfo[playerid][pCocaine1]) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш толкова грама кокаин в куфара!");
PlayerInfo[playerid][pCocaine1]-=level;
PlayerInfo[playerid][pCocaine]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти взе 1 грам кокаин от твоя куфар!");
}
else
{
new string140[140];
format(string140,140,"Ти взе %d грама кокаин от твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string140);
}
}
if(strcmp(x_job2,"heroin",false) == 0 || strcmp(x_job2,"Heroin",false) == 0)
{
if(level>PlayerInfo[playerid][pHeroin1]) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш толкова грама хероин в куфара!");
PlayerInfo[playerid][pHeroin1]-=level;
PlayerInfo[playerid][pHeroin]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти взе 1 грам хероин от твоя куфар!");
}
else
{
new string140[140];
format(string140,140,"Ти взе %d грама хероин от твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string140);
}
}
if(strcmp(x_job2,"weed",false) == 0 || strcmp(x_job2,"Weed",false) == 0)
{
if(level>PlayerInfo[playerid][pWeed1]) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш толкова грама трева в куфара!");
PlayerInfo[playerid][pWeed1]-=level;
PlayerInfo[playerid][pWeed]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти взе 1 грам трева от твоя куфар!");
}
else
{
new string140[140];
format(string140,140,"Ти взе %d грама трева от твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string140);
}
}
}
if(strcmp(tmp,"view",true) == 0)
{
invalidfunction=0;
if(!IsPlayerAttachedObjectSlotUsed(playerid, 4)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти в момента не държиш куфара в ръце!");
new string160[160];
format(string160,160,"Спиртно питие: %d литра, Трева: %d грам(а), Кокаин %d грам(а), Хероин %d грам(а)",PlayerInfo[playerid][pMoonshine1],PlayerInfo[playerid][pWeed1],PlayerInfo[playerid][pCocaine1],PlayerInfo[playerid][pHeroin1]);
SendClientMessage(playerid, 0xFF2D2DFF, string160);
}
if(strcmp(tmp,"store",true) == 0)
{
invalidfunction=0;
if(!IsPlayerAttachedObjectSlotUsed(playerid, 4)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти в момента не държиш куфара в ръце!");
new x_job2[256];
x_job2 = strtok(cmdtext, idx);
new level;
new tmp2[256];
//if(!strlen(x_job2))
//{
//SendClientMessage(playerid, 0xFFFFFFFF,"Начин на използване: /briefcase(/bcase) store [drug name] [gram/liter]");
//SendClientMessage(playerid, 0xFF2D2DFF,"Drug names: Moonshine, Weed, Cocaine, Heroin");
//}
tmp2=strtok(cmdtext, idx);
level=strval(tmp2);
if(!strlen(tmp2))
{
SendClientMessage(playerid, 0xFFFFFFFF,"Начин на използване: /briefcase(/bcase) get [drug name] [gram/liter]");
SendClientMessage(playerid, 0xFF2D2DFF,"Drug names: Moonshine, Weed, Cocaine, Heroin");
return 1;
}
if(level<1 || level>1000) return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да съхраняваш дрога с количество от 1 до 1000!");
if(strcmp(x_job2,"moonshine",true) == 0 || strcmp(x_job2,"Moonshine",true) == 0)
{
if(level>PlayerInfo[playerid][pMoonshine]) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш толкова литра спиртно питие!");
if(level+PlayerInfo[playerid][pMoonshine1]>1000) return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да съхраняваш дрога с количество от 1 до 1000!");
PlayerInfo[playerid][pMoonshine]-=level;
PlayerInfo[playerid][pMoonshine1]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти съхрани 1 литър спиртно питие в твоя куфар!");
}
else
{
new string130[130];
format(string130,130,"Ти съхрани %d литра спиртно питие в твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string130);
}
}
if(strcmp(x_job2,"weed",true) == 0 || strcmp(x_job2,"Weed",true) == 0)
{
if(level>PlayerInfo[playerid][pWeed]) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш толкова грама трева!");
if(level+PlayerInfo[playerid][pWeed1]>1000) return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да съхраняваш дрога с количество от 1 до 1000!");
PlayerInfo[playerid][pWeed]-=level;
PlayerInfo[playerid][pWeed1]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти съхрани 1 грам трева в твоя куфар!");
}
else
{
new string130[130];
format(string130,130,"Ти съхрани %d грама трева в твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string130);
}
}
if(strcmp(x_job2,"cocaine",true) == 0 || strcmp(x_job2,"Cocaine",true) == 0)
{
if(level>PlayerInfo[playerid][pCocaine]) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш толкова грама кокаин!");
if(level+PlayerInfo[playerid][pCocaine1]>1000) return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да съхраняваш дрога с количество от 1 до 1000!");
PlayerInfo[playerid][pCocaine]-=level;
PlayerInfo[playerid][pCocaine1]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти съхрани 1 грам кокаин трева в твоя куфар!");
}
else
{
new string130[130];
format(string130,130,"Ти съхрани %d грама кокаин в твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string130);
}
}
if(strcmp(x_job2,"heroin",true) == 0 || strcmp(x_job2,"Heroin",true) == 0)
{
if(level>PlayerInfo[playerid][pHeroin]) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш толкова грама хероин!");
if(level+PlayerInfo[playerid][pHeroin1]>1000) return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да съхраняваш дрога с количество от 1 до 1000!");
PlayerInfo[playerid][pHeroin]-=level;
PlayerInfo[playerid][pHeroin1]+=level;
if(level==1)
{
return SendClientMessage(playerid, 0xFF2D2DFF,"Ти съхрани 1 грам хероин трева в твоя куфар!");
}
else
{
new string130[130];
format(string130,130,"Ти съхрани %d грама хероин в твоя куфар!",level);
return SendClientMessage(playerid, 0xFF2D2DFF,string130);
}
}
}
if(strcmp(tmp,"hide",true) == 0)
{
invalidfunction=0;
if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
}
if(strcmp(tmp,"hold",true) == 0)
{
//new x_job2[256];
//tmp = strtok(cmdtext, idx);
x_job = strtok(cmdtext, idx);
if(!strlen(x_job)) {
SendClientMessage(playerid, 0xFFFFFFFF,"Начин на използване: /briefcase(/bcase) hold [left/right]");
return 1;
}
invalidfunction=0;
if(strcmp(x_job,"left",true) == 0)
//if(strfind(x_job, "left", true) == 0)
{
if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
SetPlayerAttachedObject(playerid,4, 1210, 5,0.250000, 0.100000, 0.000000, 0.000000, 264.337768, 21.619852, 1.000000, 1.000000, 1.000000); return 1;
}
if(strcmp(x_job,"right",true) == 0)
//if(strfind(x_job, "right", true) == 0)
{
if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
SetPlayerAttachedObject(playerid,4, 1210, 6,0.250000, 0.100000, 0.000000, 0.000000, 264.337768, 21.619852, 1.000000, 1.000000, 1.000000); return 1;
}
if(strcmp(x_job,"right",true) == 1 && strcmp(x_job,"left",true) == 1)
{
SendClientMessage(playerid, 0xFFFFFFFF,"Начин на използване: /briefcase(/bcase) hold [left/right]");
}
}
if(invalidfunction==1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Невалидна опция!");
}
return 1;
}
else if(strcmp(cmd, "/buydrug", true) == 0)
{
if(!IsPlayerInRangeOfPoint(playerid, 4, -1395.4200,1245.6000,1039.8672) && !IsPlayerInRangeOfPoint(playerid, 4, 2548.3892,-1293.2520,1044.1250))
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си във фабрика за дрога за да използваш тази команда!");
}
if(IsPlayerInRangeOfPoint(playerid, 4, -1395.4200,1245.6000,1039.8672) || IsPlayerInRangeOfPoint(playerid, 4, 2548.3892,-1293.2520,1044.1250))
{
new x_job[256];
x_job = strtok(cmdtext, idx);
if(!strlen(x_job)) {
SendClientMessage(playerid, 0xFFFFFFFF,"Начин на използване: /buy [drug name] [gram/liter]");
SendClientMessage(playerid, 0xFFFF00FF,"Drug names: Moonshine $5000, Weed $6000, Cocaine $8000, Heroin $9000");
SendClientMessage(playerid, 0xFF2D2DFF, "Всяка цена е за грам/литър и всеки наркотик има ефект!");
SendClientMessage(playerid, 0xFF2D2DFF, "При употреба на 1 литър Weed (трева) получаваш 20 HEALTH и резачка (за 13 сек.)");
SendClientMessage(playerid, 0xFF2D2DFF, "При употреба на 1 литър Moonshine (спиртно питие) получаваш 20 HEALTH и резачка (за 13 сек.)");
SendClientMessage(playerid, 0xFF2D2DFF, "При употреба на 1 литър Cocaine (кокаин) получаваш 20 HEALTH и резачка (за 13 сек.)");
SendClientMessage(playerid, 0xFF2D2DFF, "При употреба на 1 литър Heroin (хероин) получаваш 20 HEALTH и резачка (за 13 сек.)");
SendClientMessage(playerid, 0xFF2D2DFF, "ВНИМАНИЕ: Ако бъдеш убит и имаш дрога в себе си ще я загубиш затова използвай куфар да я съхраняваш!");
SendClientMessage(playerid, 0xFF2D2DFF, "Куфар (briefcase) можеш да вземеш от бизнес 24/7 Shop или General Store!");
return 1;
}
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да пазаруваш от тук!");
return 1;
}
tmp=strtok(cmdtext, idx);
new level=strval(tmp);
if(level<1 || level>100000)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да въведеш стойност на грама/литъра, по-голяма от 0!");
}
tmp=strtok(cmdtext, idx);
new invalid=0;
new string140[140];
if(strcmp(x_job,"moonshine",true) == 0 || strcmp(x_job,"Moonshine",true) == 0)
{
invalid=1;
if(PlayerInfo[playerid][pCash]<level*5000) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари!");
PlayerInfo[playerid][pMoonshine]+=level;
GivePlayerCash(playerid,-level*5000);
BizInfo[enteredbiz[playerid]][bEarnings]+=level*5000;
if(level==1)
{
format(string140,140,"Ти си купи %d литър спиртно питие и това ти струваше $%d",level,level*5000);
SendClientMessage(playerid,0xFF2D2DFF,string140);
}
else
{
format(string140,140,"Ти си купи %d литра спиртно питие и това ти струваше $%d",level,level*5000);
SendClientMessage(playerid,0xFF2D2DFF,string140);
}
}
if(strcmp(x_job,"weed",true) == 0 || strcmp(x_job,"Weed",true) == 0)
{
invalid=1;
if(PlayerInfo[playerid][pCash]<level*6000) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари!");
PlayerInfo[playerid][pMoonshine]+=level;
GivePlayerCash(playerid,-level*6000);
BizInfo[enteredbiz[playerid]][bEarnings]+=level*6000;
if(level==1)
{
format(string140,140,"Ти си купи %d грам трева и това ти струваше $%d",level,level*6000);
SendClientMessage(playerid,0xFF2D2DFF,string140);
}
else
{
format(string140,140,"Ти си купи %d грама трева и това ти струваше $%d",level,level*6000);
SendClientMessage(playerid,0xFF2D2DFF,string140);
}
}
if(strcmp(x_job,"cocaine",true) == 0 || strcmp(x_job,"Cocaine",true) == 0)
{
invalid=1;
if(PlayerInfo[playerid][pCash]<level*8000) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари!");
PlayerInfo[playerid][pMoonshine]+=level;
GivePlayerCash(playerid,-level*8000);
BizInfo[enteredbiz[playerid]][bEarnings]+=level*8000;
if(level==1)
{
format(string140,140,"Ти си купи %d грам кокаин и това ти струваше $%d",level,level*8000);
SendClientMessage(playerid,0xFF2D2DFF,string140);
}
else
{
format(string140,140,"Ти си купи %d грама кокаин и това ти струваше $%d",level,level*8000);
SendClientMessage(playerid,0xFF2D2DFF,string140);
}
}
if(strcmp(x_job,"heroin",true) == 0 || strcmp(x_job,"Heroin",true) == 0)
{
invalid=1;
if(PlayerInfo[playerid][pCash]<level*9000) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари!");
PlayerInfo[playerid][pMoonshine]+=level;
GivePlayerCash(playerid,-level*9000);
BizInfo[enteredbiz[playerid]][bEarnings]+=level*9000;
if(level==1)
{
format(string140,140,"Ти си купи %d грам хероин и това ти струваше $%d",level,level*9000);
SendClientMessage(playerid,0xFF2D2DFF,string140);
}
else
{
format(string140,140,"Ти си купи %d грама хероин и това ти струваше $%d",level,level*9000);
SendClientMessage(playerid,0xFF2D2DFF,string140);
}
}
if(invalid==0)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Невалиден наркотик!");
}
PlayerInfo[playerid][pWanted]+=1;
}
return 1;
}
else if(strcmp(cmd, "/usedrug", true) == 0)
{
new x_job[256];
x_job = strtok(cmdtext, idx);
if(!strlen(x_job))
{
SendClientMessage(playerid, 0xFFFFFFFF,"Начин на използване: /buy [drug name]");
return SendClientMessage(playerid, 0xFF2D2DFF,"Drug names: Moonshine $5000, Weed $6000, Cocaine $8000, Heroin $9000");
}
if(strcmp(x_job,"moonshine",true) == 0 || strcmp(x_job,"Moonshine",true) == 0)
{
if(PlayerInfo[playerid][pMoonshine2]>0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си под действието на наркотик!");
if(PlayerInfo[playerid][pMoonshine]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш спиртно питие!");
SetPlayerWeather(playerid, 42);
new Float:health;
GetPlayerHealth(playerid,health);
SetPlayerHealth(playerid,health+20.0);
if(GetPlayerWeapon(playerid)==9) rezachka[playerid]=1;
GivePlayerWeapon(playerid,9,1);
PlayerInfo[playerid][pMoonshine]-=1;
PlayerInfo[playerid][pMoonshine2]=13*2;
}
if(strcmp(x_job,"cocaine",true) == 0 || strcmp(x_job,"Cocaine",true) == 0)
{
if(PlayerInfo[playerid][pCocaine2]>0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си под действието на наркотик!");
if(PlayerInfo[playerid][pCocaine]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш кокаин!");
SetPlayerWeather(playerid, 50);
new Float:health;
GetPlayerHealth(playerid,health);
SetPlayerHealth(playerid,health+30.0);
if(GetPlayerWeapon(playerid)==9) rezachka[playerid]=1;
GivePlayerWeapon(playerid,9,1);
PlayerInfo[playerid][pCocaine]-=1;
PlayerInfo[playerid][pCocaine2]=13*2;
}
if(strcmp(x_job,"weed",true) == 0 || strcmp(x_job,"Weed",true) == 0)
{
if(PlayerInfo[playerid][pWeed2]>0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си под действието на наркотик!");
if(PlayerInfo[playerid][pWeed]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш трева!");
SetPlayerWeather(playerid, 2009);
new Float:health;
GetPlayerHealth(playerid,health);
SetPlayerHealth(playerid,health+40.0);
if(GetPlayerWeapon(playerid)==9) rezachka[playerid]=1;
GivePlayerWeapon(playerid,9,1);
PlayerInfo[playerid][pWeed]-=1;
PlayerInfo[playerid][pWeed2]=13*2;
}
if(strcmp(x_job,"heroin",true) == 0 || strcmp(x_job,"Heroin",true) == 0)
{
if(PlayerInfo[playerid][pHeroin2]>0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си под действието на наркотик!");
if(PlayerInfo[playerid][pHeroin]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш хероин!");
SetPlayerWeather(playerid, 100);
new Float:health;
GetPlayerHealth(playerid,health);
SetPlayerHealth(playerid,health+50.0);
if(GetPlayerWeapon(playerid)==9) rezachka[playerid]=1;
GivePlayerWeapon(playerid,9,1);
PlayerInfo[playerid][pHeroin]-=1;
PlayerInfo[playerid][pHeroin2]=13*2;
}
return 1;
}
else if(strcmp(cmd, "/health", true) == 0)
{
if(PlayerInfo[playerid][pHouseO]==-1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща!");
if(enteredhouse[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в къщата си!");
if(PlayerInfo[playerid][pHealth2]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш пакети!");
return 1;
}
SetPlayerHealth(playerid,100);
PlayerInfo[playerid][pHealth2]-=1;
return 1;
}
else if(strcmp(cmd, "/armour", true) == 0)
{
if(PlayerInfo[playerid][pHouseO]==-1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща!");
if(enteredhouse[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в къщата си!");
if(PlayerInfo[playerid][pArmour2]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш пакети!");
return 1;
}
SetPlayerArmour(playerid,100);
PlayerInfo[playerid][pArmour2]-=1;
return 1;
}
else if(strcmp(cmd, "/sellfish", true)==0)
{
if(IsPlayerInRangeOfPoint(playerid, 4, 2150.0171,-100.8072,2.8478))
{
new closeddialog=3500;
new string2230[512];
new string2230result[1500];
new bool: haveFish = false;
format(string2230,512,"{FFFFFF}Fish\t{FFFFFF}Weight\t{FFFFFF}Price\n");
strcat(string2230result, string2230);
for(new i=1; i<11; i++)
{
new fishSlotID = PlayerInfo[playerid][pFishSlot][i];
new fishWeight = PlayerInfo[playerid][pFishWeight][i];
new fishPrice = GetPlayerFishPrice(playerid, i);
if(fishSlotID!=0)
{
format(string2230,512,"{FFFFFF}%s\t{FFFFFF}%d Кг\t{FFFFFF}$%d\n",GetFishName(fishSlotID), fishWeight, fishPrice);
strcat(string2230result, string2230);
haveFish=true;
}
}
if(haveFish==false)
{
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"Fishing Store","Ти нямаш риба, която да продадеш!","Излез","");
return 1;
}
ShowPlayerDialog(playerid,DIALOG_SELL_FISH,DIALOG_STYLE_TABLIST_HEADERS,"Fishing Store",string2230result,"Избери","Излез");
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да сте в риболовен магазин!");
}
return 1;
}
else if(strcmp(cmd, "/sellcrate", true) == 0)
{
if(IsPlayerInRangeOfPoint(playerid, 4, 2150.0171,-100.8072,2.8478))
{
new closeddialog=3500;
new totalFishPrice;
for(new i=1; i<11; i++)
{
totalFishPrice+=GetPlayerFishPrice(playerid, i);
}
if(totalFishPrice==0)
{
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"Fishing Store","Вие нямате риба, която да продадете!","Излез","");
return 1;
}
new string556[556];
format(string556,556,"{FFFFFF}Можете да продадете всичката си риба за {33AA33}$%d\n{FFFFFF}Ако наистина искате да продадете рибата си, натиснете 'Продай' отдолу!",totalFishPrice);
ShowPlayerDialog(playerid,DIALOG_SELL_FISHCRATE,DIALOG_STYLE_MSGBOX,"Fishing Store",string556,"Продвай","Излез");
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да сте в риболовен магазин!");
}
return 1;
}
else if(strcmp(cmd, "/buy", true) == 0)
{
if(!IsPlayerInRangeOfPoint(playerid, 4, -30.9303,-28.3415,1003.5573) && !IsPlayerInRangeOfPoint(playerid, 4, -23.3775,-55.2958,1003.5469) &&
!IsPlayerInRangeOfPoint(playerid, 4, 287.8558,-109.2027,1001.5156) && !IsPlayerInRangeOfPoint(playerid, 4, 2150.0171,-100.8072,2.8478)
&& !IsPlayerInRangeOfPoint(playerid, 4, 369.5925,-6.7357,1001.8589) && !IsPlayerInRangeOfPoint(playerid, 4, 450.5178,-84.4856,999.5547)
&& !IsPlayerInRangeOfPoint(playerid, 4, 203.8465,-44.4779,1001.8047) && !IsPlayerInRangeOfPoint(playerid, 4, 206.9638,-129.8357,1003.5078)
&& !IsPlayerInRangeOfPoint(playerid, 4, 2548.3892,-1293.2520,1044.1250))
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в магазин за да използваш тази команда!");
return 1;
}
//376.6553,-68.1552,1001.5151
//
//
tmp=strtok(cmdtext, idx);
new level=strval(tmp);
/////////////////////////////////////////////////////////////////////////////////////////////////////////
if(IsPlayerInRangeOfPoint(playerid, 4, 203.8465,-44.4779,1001.8047) || IsPlayerInRangeOfPoint(playerid, 4, 206.9638,-129.8357,1003.5078))
{
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да си купиш дрехи от тук!");
return 1;
}
ShowPlayerDialog(playerid,88,DIALOG_STYLE_LIST,"Дрехи","{FFFFFF}Часовник\nОчила\nШапка\nБандана\nКаска","Избери","Излезте");
}
////////////////////////////////////////////////////////////////////////////////////////////////////////
if(IsPlayerInRangeOfPoint(playerid, 4, 376.6553,-68.1552,1001.5151) || IsPlayerInRangeOfPoint(playerid, 4, 2548.3892,-1293.2520,1044.1250))
{
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да пазаруваш от тук!");
return 1;
}
if(level<1 || level>8)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /buy [product number]");
SendClientMessage(playerid, 0xFFFF80FF, "Product numbers: 1: Tea $1, 2: Coffe $1, 3: Cola $2, 4: Toast $2, 5: Soup $3, 6: Chips $4");
SendClientMessage(playerid, 0xFFFF80FF, "Product numbers: 7: Burger $7, 8: Double Whopper Cheese Burger $20");
return 1;
}
new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(level==1)
{if(healthp>90) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+10);
}
GivePlayerCash(playerid,-1);
BizInfo[enteredbiz[playerid]][bEarnings]+=1;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи двоен чай и това ти струваше $1!");
}
if(level==8)
{if(healthp>20) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+80);
}
GivePlayerCash(playerid,-20);
BizInfo[enteredbiz[playerid]][bEarnings]+=20;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи двоен чиз бургер и това ти струваше $20!");
ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==7)
{if(healthp>30) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+70);
}
GivePlayerCash(playerid,-7);
BizInfo[enteredbiz[playerid]][bEarnings]+=7;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи бургер и това ти струваше $7!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==6)
{if(healthp>60) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+40);
}
GivePlayerCash(playerid,-4);
BizInfo[enteredbiz[playerid]][bEarnings]+=4;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи чипс и това ти струваше $4!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==2)
{if(healthp>90) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+10);
}
GivePlayerCash(playerid,-1);
BizInfo[enteredbiz[playerid]][bEarnings]+=1;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи кафе и това ти струваше $5!");
}
if(level==3)
{if(healthp>80) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+20);
}
GivePlayerCash(playerid,-2);
BizInfo[enteredbiz[playerid]][bEarnings]+=2;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи кола и това ти струваше $2!");
}
if(level==4)
{if(healthp>80) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+20);
}
GivePlayerCash(playerid,-2);
BizInfo[enteredbiz[playerid]][bEarnings]+=2;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи тост и това ти струваше $3!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==5)
{if(healthp>70) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+30);
}
GivePlayerCash(playerid,-3);
BizInfo[enteredbiz[playerid]][bEarnings]+=3;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи супа и това ти струваше $2!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
}
if(IsPlayerInRangeOfPoint(playerid, 4, 450.5178,-84.4856,999.5547))
{
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да пазаруваш от тук!");
return 1;
}
if(level<1 || level>8)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /buy [product number]");
SendClientMessage(playerid, 0xFFFF80FF, "Product numbers: 1: Tea $1, 2: Coffe $1, 3: Cola $2, 4: Toast $2, 5: Soup $3, 6: Chips $4");
SendClientMessage(playerid, 0xFFFF80FF, "Product numbers: 7: Burger $7, 8: Double Whopper Cheese Burger $20");
return 1;
}
new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(level==1)
{if(healthp>90) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+10);
}
GivePlayerCash(playerid,-1);
BizInfo[enteredbiz[playerid]][bEarnings]+=1;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи двоен чай и това ти струваше $1!");
}
if(level==8)
{if(healthp>20) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+80);
}
GivePlayerCash(playerid,-20);
BizInfo[enteredbiz[playerid]][bEarnings]+=20;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи двоен чиз бургер и това ти струваше $20!");
ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==7)
{if(healthp>30) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+70);
}
GivePlayerCash(playerid,-7);
BizInfo[enteredbiz[playerid]][bEarnings]+=7;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи бургер и това ти струваше $7!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==6)
{if(healthp>60) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+40);
}
GivePlayerCash(playerid,-4);
BizInfo[enteredbiz[playerid]][bEarnings]+=4;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи чипс и това ти струваше $4!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==2)
{if(healthp>90) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+10);
}
GivePlayerCash(playerid,-1);
BizInfo[enteredbiz[playerid]][bEarnings]+=1;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи кафе и това ти струваше $5!");
}
if(level==3)
{if(healthp>80) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+20);
}
GivePlayerCash(playerid,-2);
BizInfo[enteredbiz[playerid]][bEarnings]+=2;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи кола и това ти струваше $2!");
}
if(level==4)
{if(healthp>80) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+20);
}
GivePlayerCash(playerid,-2);
BizInfo[enteredbiz[playerid]][bEarnings]+=2;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи тост и това ти струваше $3!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==5)
{if(healthp>70) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
//new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+30);
}
GivePlayerCash(playerid,-3);
BizInfo[enteredbiz[playerid]][bEarnings]+=3;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи супа и това ти струваше $2!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
}
if(IsPlayerInRangeOfPoint(playerid, 4, 369.5925,-6.7357,1001.8589))
{
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да пазаруваш от тук!");
return 1;
}
if(level<1 || level>4)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /buy [menu number]");
SendClientMessage(playerid, 0xFFFF80FF, "Menu numbers: 1: Cluckin' Little Meal $2, 2: Cluckin' Big Meal $5, 3: Cluckin' Hude Meal $10, 4: Salad Meal $10");
return 1;
}
if(level==1)
{new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp>90) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+10);
}
GivePlayerCash(playerid,-2);
BizInfo[enteredbiz[playerid]][bEarnings]+=2;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи меню Cluckin' Little Meal и това ти струваше $2!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==2)
{new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp>80) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+20);
}
GivePlayerCash(playerid,-5);
BizInfo[enteredbiz[playerid]][bEarnings]+=5;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи меню Cluckin' Big Meal и това ти струваше $5!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==3)
{new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp>70) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
if(healthp<100)
{
SetPlayerHealth(playerid,healthp+30);
}
GivePlayerCash(playerid,-10);
BizInfo[enteredbiz[playerid]][bEarnings]+=10;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи меню Cluckin' Big Meal и това ти струваше $10!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
if(level==4)
{
new Float:healthp;
GetPlayerHealth(playerid,healthp);
if(healthp<100)
{if(healthp>60) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да си поръчаш това!");
SetPlayerHealth(playerid,healthp+40);
}
GivePlayerCash(playerid,-10);
BizInfo[enteredbiz[playerid]][bEarnings]+=10;
SendClientMessage(playerid, 0xFFFF80FF, "Ти си купи меню Salad Meal и това ти струваше $40!");ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
}
}
if(IsPlayerInRangeOfPoint(playerid, 4, 2150.0171,-100.8072,2.8478))
{
new stringguns[600];
format(stringguns,600,"{FFFFFF}Въдица - {40BF00}$350\n{FFFFFF}Стръв(50x) - {40BF00}$100");
return ShowPlayerDialog(playerid, DIALOG_BUYFISH, DIALOG_STYLE_LIST, "Fishing Store:", stringguns, "Купи", "Излез");
}
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да пазаруваш от тук!");
return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 4, 287.8558,-109.2027,1001.5156) || IsPlayerInRangeOfPoint(playerid, 4,-1395.4200,1245.6000,1039.8672)
|| IsPlayerInRangeOfPoint(playerid, 67, 1302.0842,0.8015,1001.0249))
{
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да си купиш напитка от тук!");
return 1;
}
new stringguns[600];
format(stringguns,600,"9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nMP5\nUzi\nTec9\nAK-47\nM4\nCountry Rifle\nSniper Rifle");
ShowPlayerDialog(playerid, DIALOG_BUYGUNS, DIALOG_STYLE_LIST, "Ammunation:", stringguns, "Избери", "Излез");
}
if(IsPlayerInRangeOfPoint(playerid, 4, -30.9303,-28.3415,1003.5573) || IsPlayerInRangeOfPoint(playerid, 4, -23.3775,-55.2958,1003.5469))
{
if(level<1 || level>18)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /buy [item number]");
SendClientMessage(playerid, 0x91FF8DFF, "Item numbers: 1: Dice $3, 2: Flowers $5, 3: Bat $15, 4: Cane $25, 5: Shovel $30, 6: Pool Cue $80,");
SendClientMessage(playerid, 0x91FF8DFF, "Item numbers: 7: Cigarettes (x20) $100, 8: Brass Knuckles $120, 9: Fuel Container $150, 10: Knife $150");
SendClientMessage(playerid, 0x91FF8DFF, "Item numbers: 11: Golf Club: $155, 12: Paraschute $250, 13: Katana $250, 14: Radio $1500, 15: Briefcase: $5000");
SendClientMessage(playerid, 0xFF0000FF, "Item numbers: 16: iPhone $600 17: Валчер от $15 за $100, 18: Чанта за обир $500");
return 1;
}
if(level==18)
{
if(PlayerInfo[playerid][pChanta]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш чанта!");
if(PlayerInfo[playerid][pCash]<500) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $100 за да си купиш валчер!");
GivePlayerCash(playerid,-500);
PlayerInfo[playerid][pChanta]=1;
BizInfo[enteredbiz[playerid]][bEarnings]+=500;
SendClientMessage(playerid, 0x91FF8DFF, "Ти си купи чанта за обир на цена - $500!");
}
if(level==17)
{
if(PlayerInfo[playerid][pPhone]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш iPhone!");
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $100 за да си купиш валчер!");
GivePlayerCash(playerid,-100);
PlayerInfo[playerid][pValcher]+=15;
BizInfo[enteredbiz[playerid]][bEarnings]+=100;
SendClientMessage(playerid, 0x91FF8DFF, "Ти си купи валчер за iPhone на цена - $100!");
}
if(level==16)
{
if(enteredInMissionCP[playerid]!=1)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да си купиш iPhone само в мисия 2!");
}
if(PlayerInfo[playerid][pPhone]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш iPhone!");
if(PlayerInfo[playerid][pCash]<600) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $600 за да си купиш iPhone!");
GivePlayerCash(playerid,-600);
PlayerInfo[playerid][pPhone]=1;
BizInfo[enteredbiz[playerid]][bEarnings]+=600;
SendClientMessage(playerid, 0x91FF8DFF, "Ти си купи iPhone за $600!");
if(enteredInMissionCP[playerid]==1)
{
enteredInMissionCP[playerid]=2;
}
}
if(level==1)
{
if(PlayerInfo[playerid][pDice]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш зарче!");
if(PlayerInfo[playerid][pLevel]<3) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си поне 3 левел за да си купиш зарче!");
if(PlayerInfo[playerid][pCash]<3) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $3 за да си купиш зарче!");
PlayerInfo[playerid][pDice]=1;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи зарче и това ти струваше $3!");
GivePlayerCash(playerid,-3);
BizInfo[enteredbiz[playerid]][bEarnings]+=3;
}
if(level==2)
{
if(PlayerInfo[playerid][pCash]<5) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $5 за да си купиш цветя!");
GivePlayerCash(playerid,-5);
BizInfo[enteredbiz[playerid]][bEarnings]+=5;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи цветя и това ти струваше $5!");
GivePlayerWeapon(playerid, 14, 1);
}
if(level==3)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $15 за да си купиш бухалка!");
GivePlayerCash(playerid,-15);
BizInfo[enteredbiz[playerid]][bEarnings]+=15;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи бухалка и това ти струваше $15!");
GivePlayerWeapon(playerid, 5, 1);
}
if(level==4)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $25 за да си купиш бастун!");
GivePlayerCash(playerid,-25);
BizInfo[enteredbiz[playerid]][bEarnings]+=25;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи бастун и това ти струваше $25!");
GivePlayerWeapon(playerid, 15, 1);
}
if(level==5)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $30 за да си купиш лопата!");
GivePlayerCash(playerid,-30);
BizInfo[enteredbiz[playerid]][bEarnings]+=30;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи лопата и това ти струваше $30!");
GivePlayerWeapon(playerid, 6, 1);
}
if(level==6)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $80 за да си купиш щека!");
GivePlayerCash(playerid,-80);
BizInfo[enteredbiz[playerid]][bEarnings]+=80;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи щека и това ти струваше $80!");
GivePlayerWeapon(playerid, 7, 1);
}
if(level==7)
{
if(PlayerInfo[playerid][pLevel]<3) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си поне 3 левел за да си купиш цигари!");
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $100 за да си купиш цигари!");
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи цигари и това ти струваше $20!");
PlayerInfo[playerid][pCigarettes]+=20;
GivePlayerCash(playerid,-100);
BizInfo[enteredbiz[playerid]][bEarnings]+=100;
}
if(level==8)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $120 за да си купиш бокс!");
GivePlayerCash(playerid,-120);
BizInfo[enteredbiz[playerid]][bEarnings]+=120;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи бокс и това ти струваше $120!");
GivePlayerWeapon(playerid, 1, 1);
}
if(level==9)
{
if(PlayerInfo[playerid][pFuelcase]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш бутилка за гас!");
if(PlayerInfo[playerid][pLevel]<6) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си поне 6 левел за да си купиш бутилка за гас!");
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $100 за да си купиш бутилка за гас!");
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи бутилка за гас и това ти струваше $150!");
PlayerInfo[playerid][pFuelcase]=0;
GivePlayerCash(playerid,-150);
BizInfo[enteredbiz[playerid]][bEarnings]+=150;
}
if(level==10)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $150 за да си купиш нож!");
GivePlayerCash(playerid,-150);
BizInfo[enteredbiz[playerid]][bEarnings]+=150;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи нож и това ти струваше $150!");
GivePlayerWeapon(playerid, 4, 1);
}
if(level==11)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $155 за да си купиш стик за голф!");
GivePlayerCash(playerid,-155);
BizInfo[enteredbiz[playerid]][bEarnings]+=155;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи стик за голф и това ти струваше $155!");
GivePlayerWeapon(playerid, 2, 1);
}
if(level==12)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $250 за да си купиш парашут!");
GivePlayerCash(playerid,-250);
BizInfo[enteredbiz[playerid]][bEarnings]+=250;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи парашут и това ти струваше $250!");
GivePlayerWeapon(playerid, 46, 1);
}
if(level==13)
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $250 за да си купиш меч!");
GivePlayerCash(playerid,-250);
BizInfo[enteredbiz[playerid]][bEarnings]+=250;
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи меч и това ти струваше $250!");
GivePlayerWeapon(playerid, 8, 1);
}
if(level==14)
{
if(PlayerInfo[playerid][pRadio]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш радио!");
if(PlayerInfo[playerid][pLevel]<2) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си поне 2 левел за да си купиш радио!");
if(PlayerInfo[playerid][pCash]<1500) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $1500 за да си купиш радио!");
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи радио и това ти струваше $1500!");
PlayerInfo[playerid][pRadio]=1;
GivePlayerCash(playerid,-1500);
BizInfo[enteredbiz[playerid]][bEarnings]+=1500;
}
if(level==15)
{
if(PlayerInfo[playerid][pBriefcase]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш куфарче!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си поне 5 левел за да си купиш куфарче!");
if(PlayerInfo[playerid][pCash]<5000) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $5000 за да си купиш куфарче!");
SendClientMessage(playerid, 0x91FF8DFF, "Ти купи куфарче и това ти струваше $5000!");
PlayerInfo[playerid][pBriefcase]=1;
GivePlayerCash(playerid,-5000);
BizInfo[enteredbiz[playerid]][bEarnings]+=5000;
}
}
return 1;
}
else if(strcmp(cmd,"/healme",true)==0)
{
if(induel[playerid]==1)return SendClientMessage(playerid, COLOR_GRAD1,"Ти си в дуел и не можеш да ползваш тази команда!");
//if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в евент!");
if(PlayerInfo[playerid][pInDM]==1)return SendClientMessage(playerid, COLOR_GRAD1,"Ти си в Deathmatch и не можеш да ползваш тази команда!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(inevent[playerid]== 1 && dhealme==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /healme е забранена в евента!");
if(PlayerInfo[playerid][pVip] >= 3 || freevip==1)
{
if(PlayerInfo[playerid][pHealT] <= 0)
{
SetPlayerHealth(playerid, 100);
SetPlayerArmour(playerid, 100);
SendClientMessage(playerid,0x008000FF,"Ти зареди твоята кръв и жилетка на 100!");
PlayerInfo[playerid][pHealT] = 6*120;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Не е изминало нужното време от последното използване на командата!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
else if(strcmp(cmd, "/dice", true) == 0)
{
new dice1 = randomex(1, 7);
if (PlayerInfo[playerid][pDice] == 1)
{
new zarstring[256];
format(zarstring, 256, "%s метна зарче и се падна числото %d", pname[playerid], dice1);
ProxDetector(15.0, playerid, zarstring, 0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш зарче за хвърляне!");
}
return 1;
}
else if(strcmp(cmd, "/heal", true) == 0)
{
if(!IsPlayerInRangeOfPoint(playerid, 67, 1302.0842,0.8015,1001.0249) && !IsPlayerInRangeOfPoint(playerid, 4, 287.8558,-109.2027,1001.5156)
&& !IsPlayerInRangeOfPoint(playerid, 4, -1395.4200,1245.6000,1039.8672))
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в бизнес за оръжия или DM за да използваш тази команда!");
return 1;
}
if(PlayerInfo[playerid][pCash] < 100)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $100 за да си купиш жилетка!");
return 1;
}
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да си купиш жилетка от тук!");
return 1;
}
new Float:armour;
GetPlayerArmour(playerid, armour);
if(armour==100) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш 100 процента жилетка!");
SetPlayerArmour(playerid,100);
//SetPlayerHealth(playerid,100);
GivePlayerCash(playerid,-100);
BizInfo[enteredbiz[playerid]][bEarnings]+=100;
return 1;
}
else if(strcmp(cmd, "/advert", true) == 0)
{
if(PlayerInfo[playerid][pVip]<2 && freevip==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
return 1;
}
if(!IsPlayerInRangeOfPoint(playerid, 4, 1720.5767,-1671.2698,20.2241) )
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в Artium за да пуснеш обява!");
return 1;
}
if(PlayerInfo[playerid][pCash] < 500)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $500!");
return 1;
}
if(PlayerInfo[playerid][pAdvertT]>0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Все още не можеш да пускаш обяви!");
return 1;
}
if(BizInfo[enteredbiz[playerid]][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да пуснеш обява от тук!");
return 1;
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /advert [text]");
SendClientMessage(playerid, 0xFFFFFFFF, "Цена: $500");
return 1;
}
GivePlayerCash(playerid,-500);
new advertstring[700];
format(advertstring,700,"Advert From %s(%d): %s",pname[playerid],playerid,result);
SendClientMessageToAll(0xFAF305FF,advertstring);
PlayerInfo[playerid][pAdvertT]=30*2;
BizInfo[enteredbiz[playerid]][bEarnings]+=500;
return 1;
}
else if(strcmp(cmd, "/listguns", true) == 0)
{
if (PlayerInfo[playerid][pVip]==0 || freevip==1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
return 1;
}
tmp = strtok(cmdtext,idx);
if (!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /listguns [ID на играч]");
return 1;
}
new giveplayerid = ReturnUser(tmp);
if (giveplayerid == INVALID_PLAYER_ID)
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
new sweapon, sammo, gunname[100]; new nqmaorujiq=0;
new giveplayer[MAX_PLAYER_NAME]; GetPlayerName(giveplayerid,  giveplayer, sizeof(giveplayer));
new string50[50];
format(string50, 50, "••• Оръжията на %s •••", pname[giveplayerid]);
SendClientMessage(playerid, 0xFFFFFFFF, string50);
for (new i=0; i<12; i++)
{
GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
GetWeaponName(sweapon, gunname, sizeof(gunname));
if(sweapon != 0)
{
format(string50, 50, "%s (%d)", gunname, sammo);
SendClientMessage(playerid, 0xFFFF00FF, string50);
nqmaorujiq+=1;
}
}
if(nqmaorujiq ==0)
{
format(string50, 50, "%s няма оръжия в себе си!", pname[giveplayerid]);
SendClientMessage(playerid, 0xFFFFFFFF, string50);
}
return 1;
}
else if(strcmp(cmd, "/isafk", true) == 0)
{
if (PlayerInfo[playerid][pVip]>0 || freevip==1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /isafk [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pAFK]==0)
{
SendClientMessage(playerid,0xD6F34AFF,"Този играч не е в AFK режим!");
}
new string90[90];
if(PlayerInfo[para1[playerid]][pAFK]<60)
{
format(string90, 90, "Този играч е в AFK режим от %d секунди !", PlayerInfo[para1[playerid]][pAFK]);
SendClientMessage(playerid, 0xD6F34AFF, string90);
}
if(PlayerInfo[para1[playerid]][pAFK]>=60)
{
format(string90, 90, "Този играч е в AFK режим от %d минути !", PlayerInfo[para1[playerid]][pAFK]/60);
SendClientMessage(playerid, 0xD6F34AFF, string90);
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
else if(strcmp(cmd, "/isadmin", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /isadmin [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pAdmin]==0 && PlayerInfo[para1[playerid]][pTest]==0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч няма администраторски права в сървъра!");
}
if(PlayerInfo[para1[playerid]][pAdmin]>0 || PlayerInfo[para1[playerid]][pTest]==1)
{
return SendClientMessage(playerid,0x00ff00ff,"Този играч е администратор!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/isevent", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /isevent [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pEvent]==0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч няма Event Admin права в сървъра!");
}
if(PlayerInfo[para1[playerid]][pEvent]>0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч има Event Admin права в сървъра!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/cbccheck", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /cbccheck [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new stringa[256];
if(cbchat[para1[playerid]]>0)
{
format(stringa,256,"%s - %d CB CHAT",pname[para1[playerid]],cbchat[para1[playerid]]);
SendClientMessage(playerid,0xFF9933FF,stringa);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Този играч не е в CB CHAT!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/islevel", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /islevel [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new stringa[256];
format(stringa,256,"%s - %d Level",pname[para1[playerid]],PlayerInfo[para1[playerid]][pLevel]);
SendClientMessage(playerid,0xFFFFFFFF,stringa);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/ismanage", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ismanage [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pManage]==0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч няма Manage Admin права в сървъра!");
}
if(PlayerInfo[para1[playerid]][pManage]>0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч има Manage Admin права в сървъра!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/isvip", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /isvip [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pVip]==0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч няма VIP в сървъра!");
}
if(PlayerInfo[para1[playerid]][pVip]>0)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч има VIP в сървъра!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/isleader", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /isleader [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pRank]>=6)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч има лидер в сървъра!");
}
if(PlayerInfo[para1[playerid]][pRank]<6)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Този играч няма лидер в сървъра!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/ismuted", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ismuted [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
new string256[256];
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pMuted] == 0 && PlayerInfo[para1[playerid]][pADMINMute]==0)
{
return SendClientMessage(playerid,COLOR_WHITE,"Този играч не е заглушен!");
}
if(PlayerInfo[para1[playerid]][pADMINMute] ==1)
{
format(string256, 256, "Този играч е заглушен завинаги с причина - %s!",PlayerInfo[para1[playerid]][pReasonMute]);
return SendClientMessage(playerid, 0xE60000FF, string256);
}
if(PlayerInfo[para1[playerid]][pMuted] > 0)
{
new mutereasonStr[256];
switch(PlayerInfo[playerid][pMuteReason])
{
case 1:
format(mutereasonStr,256,"Спам");
case 2:
format(mutereasonStr,256,"Псуване/Обиждане");
case 3:
format(mutereasonStr,256,"Спам/Псуване/Обиждане");
case 4:
format(mutereasonStr,256,"Пречи на играта");
case 5:
format(mutereasonStr,256,"Друго нарушение");
}
format(string256, 256, "Играчът е заглушен с причина: %s, оставащо време: %d минути", mutereasonStr, PlayerInfo[para1[playerid]][pMuted]/120);
SendClientMessage(playerid, 0xE60000FF, string256);
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
/*
else if(strcmp(cmd, "/isbanned", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /isbanned [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if (PlayerInfo[playerid][pAdmin] >0)
{
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pMuted] == 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е заглушен!");
}
if(PlayerInfo[para1[playerid]][pMuted] > 0)
{
}
else
{
SendClientMessage(playerid,0xE60000FF,"Този играч не е заглушен !");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
*/
else if(strcmp(cmd, "/policesay", true)==0)
{
if (PlayerInfo[playerid][pTeam]==13)
{
if(PlayerInfo[playerid][pRank]<2) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си поне 2 ранг!");
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /policesay [text]");
return 1;
}
new ranktext[256];
new string256[256];
switch(PlayerInfo[playerid][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank6]);
}
format(string256, 256, "[POLICE %s] %s(%d): %s",ranktext, pname[playerid],playerid, result);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(CorDetector(60.0,playerid,i))
{
SendClientMessage(i,COLOR_RLSPD, string256);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на San Andreas Police Deparment!");
}
return 1;
}
else if(strcmp(cmd, "/givemasks", true)==0)
{
if (PlayerInfo[playerid][pTeam] == 15)
{
if (PlayerInfo[playerid][pRank]>=5)
{
new string256[256];
new ranktext[256];
switch(PlayerInfo[playerid][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank6]);
}
format(string256, 256, "- [COVID-19 МЕРКИ] [%s] %s даде безплатни маски на всички-",ranktext, pname[playerid]);
SendClientMessageToAll(0xA4A400FF, string256);
SendClientMessageToAll(0xA4A400FF, "[Маски] Използвайте /clothes за да вземете маската си");
for(new i=0; i<MAX_PLAYERS; i++)
{
PlayerInfo[i][pClothes][0]=18897;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голям Rank за да използваш тази команда!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Delta Force!");
}
return 1;
}
else if(strcmp(cmd, "/onlymasks", true)==0)
{
if (PlayerInfo[playerid][pTeam] == 15)
{
if (PlayerInfo[playerid][pRank]>=5)
{
new string256[256];
new ranktext[256];
switch(PlayerInfo[playerid][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank6]);
}
if(onlymasks==0)
{
onlymasks=1;
format(string256, 256, "- [COVID-19 МЕРКИ] [%s] %s ЗАБРАНЯВА ходенето без МАСКИ и задължава ДИСТАНЦИЯТА-",ranktext, pname[playerid]);
SendClientMessageToAll(0xA4A400FF, string256);
SendClientMessageToAll(0x0040FFFF, "[Маски] Използвайте /clothes за да вземете маската си");
}
else
{
onlymasks=0;
format(string256, 256, "- [COVID-19 МЕРКИ] [%s] %s ПОЗВОЛЯВА ходенето без МАСКИ и премахва ДИСТАНЦИЯТА-",ranktext, pname[playerid]);
SendClientMessageToAll(0xA4A400FF, string256);
SendClientMessageToAll(0x0040FFFF, "[Маски] Използвайте /clothes за да махнете маската си");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голям Rank за да използваш тази команда!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Delta Force!");
}
return 1;
}
else if(strcmp(cmd, "/armysay", true)==0)
{
if (PlayerInfo[playerid][pTeam]==15)
{
if (PlayerInfo[playerid][pRank]>=4)
{
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /armysay [text]");
return 1;
}
new string256[256];
new ranktext[256];
switch(PlayerInfo[playerid][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank6]);
}
format(string256, 256, "[COVID-19 ЩАБ] %s [%s]: %s", pname[playerid],ranktext, result);
SendClientMessageToAll(0xA4A400FF, string256);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голям Rank за да използваш тази команда!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Delta Force!");
}
return 1;
}
else if(strcmp(cmd, "/asay", true)==0)
{
if (PlayerInfo[playerid][pAdmin]>1)
{
/*
if(PlayerInfo[playerid][pAMuted] != 0)
{
SendClientMessage(playerid,COLOR_GRAD1, "Ти си заглушен във ADMIN CHAT !");
return 1;
}
*/
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /asay [text]");
return 1;
}
new string256[256];
format(string256, 256, "[%s] %s: %s",adminprefix[playerid], pname[playerid], result);
SendClientMessageToAll(0xFF33FFFF, string256);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/back", true) == 0)
{
if (PlayerInfo[playerid][pAFK]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в AFK режим!");
return 1;
}
if(PlayerInfo[playerid][pAFKBack]>0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да се върнеш 3 минути след като си написал /afk!");
return 1;
}
SetPlayerHealth(playerid,0);
new string80[80];
format(string80,80, "AFK: %s се върна в играта!", pname[playerid]);
SendClientMessageToAll(0xD6F34AFF, string80);
PlayerInfo[playerid][pAFK] = 0;
return 1;
}
else if(strcmp(cmd, "/afk", true) == 0)
{
if (PlayerInfo[playerid][pAFK]>0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си AFK!");
return 1;
}
if(PlayerInfo[playerid][pADuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в AFK в момента!");
if(PlayerInfo[playerid][pWanted]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в AFK в момента!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(cmn1[playerid]>0)  return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в AFK в момента1!");
if(getmbid==playerid) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в AFK в момента!");
if(induel[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в AFK в момента!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в AFK в момента!");
if(PlayerInfo[playerid][pJail] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да влезеш в AFK в момента!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в AFK в момента!");
if(PlayerInfo[playerid][pInDM]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в AFK в момента!");
ResetPlayerWeapons(playerid);
SetPlayerInterior(playerid,15);
SetPlayerColor(playerid, 0xD6F34AFF);
SetPlayerPos(playerid,2192.4077,-1187.1726,1029.7969);
new string80[80];
format(string80,80, "AFK: %s излезе в почивка!", pname[playerid]);
SendClientMessageToAll(0xD6F34AFF, string80);
SendClientMessage(playerid, 0xD6F34AFF,"AFK: Използвай /back като се върнеш!");
PlayerInfo[playerid][pAFK] = 1;
PlayerInfo[playerid][pAFKBack]=3*120;
SetPlayerVirtualWorld(playerid, playerid);
return 1;
}
else if(strcmp(cmd, "/id", true)==0)
{
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /id [част от никнейма или целия]");
return 1;
}
new foundids;
//F97804
new nname[MAX_PLAYER_NAME];
new string60[60];
format(string60, 60, "Търсене за: {FF0000}%s", result);
SendClientMessage(playerid, 0xFFFFFFFF, string60);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(IsPlayerConnected(i))
{
GetPlayerName(i, nname, sizeof(nname));
if(strfind(nname, result, true) != -1)
{
foundids+=1;
if(foundids>0)
{
format(string60, 256, "%d. %s (ID:%d)", foundids,pname[i],i);
SendClientMessage(playerid, 0xFFFF00FF, string60);
//return 1;
}
}
}
}
if(foundids==0)
{
SendClientMessage(playerid, 0xE60000FF, "Няма открити играчи с този никнейм в сървъра!");
}
return 1;
}
else if(strcmp(cmd, "/lc", true)==0)
{
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /lc [text]");
return 1;
}
if (PlayerInfo[playerid][pTeam] >= 1 && PlayerInfo[playerid][pRank]==6)
{
if(PlayerInfo[playerid][pLMuted] != 0)
{
SendClientMessage(playerid,COLOR_GRAD1, "Ти си заглушен във LEADER CHAT!");
return 1;
}
new ranktext[256];
new string256[256];
switch(PlayerInfo[playerid][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank6]);
}
format(string256, 256, "[LEADER CHAT] %s на [%s]: %s",pname[playerid],TeamInfo[PlayerInfo[playerid][pTeam]][tName],result);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam] && PlayerInfo[i][pRank]==6 && PlayerInfo[i][pTogLeader]==0)
{
SendClientMessage(i, 0xD9CCC8FF, string256);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/f", true)==0||strcmp(cmd, "/faction", true)==0)
{
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: (/f)action [text]");
return 1;
}
if (PlayerInfo[playerid][pTeam] >= 1)
{
if(PlayerInfo[playerid][pFMuted] != 0)
{
SendClientMessage(playerid,COLOR_GRAD1, "Ти си заглушен във FACTION CHAT!");
return 1;
}
if(TeamInfo[PlayerInfo[playerid][pTeam]][tMute] == 1 && PlayerInfo[playerid][pRank]!=6)
{
SendClientMessage(playerid,COLOR_GRAD1, "Ти си заглушен във FACTION CHAT!");
return 1;
}
new ranktext[256];
switch(PlayerInfo[playerid][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[playerid][pTeam]][tRank6]);
}
new string256[256];
format(string256, 256, "[FACTION CHAT] %s(%d) %s(ID:%d): %s",ranktext,PlayerInfo[playerid][pRank], pname[playerid], playerid, result);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam] && PlayerInfo[i][pTogFaction]==0)
{
if(PlayerInfo[playerid][pRank]==6)
{
SendClientMessage(i, 0x40BF00FF, string256);
}
else
{
SendClientMessage(i, 0x33CCFFFF, string256);
}
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/a", true)==0||strcmp(cmd, "/adminchat", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
if(PlayerInfo[playerid][pAMuted] != 0)
{
SendClientMessage(playerid,COLOR_GRAD1, "Ти си заглушен във ADMIN CHAT!");
return 1;
}
if(PlayerInfo[playerid][pAHide]==1)
{
SendClientMessage(playerid,COLOR_GRAD1, "Ти си забранил да виждаш своя ADMIN CHAT!");
return 1;
}
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: (/a)dminchat [text]");
return 1;
}
new string256[256];
format(string256, 256, "[ADMIN CHAT] %s: %s(%d): %s",adminprefix[playerid], pname[playerid], playerid, result);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
SendClientMessage(i, 0xE60000FF, string256);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/ta", true)==0)
{
if (PlayerInfo[playerid][pTest] >= 1 || PlayerInfo[playerid][pReadTA]==1)
{
if(PlayerInfo[playerid][pAMuted] != 0)
{
SendClientMessage(playerid,COLOR_GRAD1, "Ти си заглушен във ADMIN CHAT!");
return 1;
}
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ta [text]");
return 1;
}
new string256[256];
format(string256, 256, "Test Admin %s(%d): %s", pname[playerid], playerid, result);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTest] >= 1 || PlayerInfo[i][pReadTA]==1)
{
SendClientMessage(i, 0xE60000FF, string256);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/driftoff", true) == 0)
{
if(indrift[playerid]==0){ return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в Drift!");}
SetPlayerHealth(playerid, 0);
indrift[playerid]=0;
SendClientMessage(playerid, 0xFFFF00FF , "Ти напусна Drift!");
return 1;
}
else if(strcmp(cmd, "/kill", true) == 0)
{
if (PlayerInfo[playerid][pVip]>1 || freevip==1)
{
if(cuffedby[playerid]!=-1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента полицията ви е задържала!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се самоубиеш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се самоубиеш, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се самоубиеш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в евент!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се самоубиеш, докато си в DMON!");}
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pInDM]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се самоубиеш, докато си в Deathmatch!");}
SetPlayerHealth(playerid, 0);
SendClientMessage(playerid, 0xFFFF00FF , "Ти си луд, защото се самоуби!");
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
else if(strcmp(cmd, "/tires", true) == 0)
{
if (PlayerInfo[playerid][pVip] < 6 && freevip==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
return 1;
}
if(inevent[playerid]== 1 && efix==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /tires е забранена в евента!");
if(PlayerInfo[playerid][pFixT] == 0)
{
if(IsPlayerInAnyVehicle(playerid))
{
new Panels, Doors, Lights, Tires;
new vehicleid=GetPlayerVehicleID(playerid);
GetVehicleDamageStatus(vehicleid, Panels, Doors, Lights, Tires);
UpdateVehicleDamageStatus(vehicleid,Panels, Doors, Lights, 0);
//UpdateVehicleDamageStatus(vehicleid, Panels, Doors, Lights, (Tires | 0b00));
PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
PlayerInfo[playerid][pFixT] = 8*120;
SendClientMessage(playerid, 0xFFFFFFFF, "- Вие поправихте гумите на вашето превозно средство -");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ще можеш да използваш командите /fix и /tires след 8 минути!");
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Не е изминало нужното време от последното използване на командата!");
}
return 1;
}
else if(strcmp(cmd, "/fix", true) == 0)
{
if (PlayerInfo[playerid][pVip] < 2 && freevip==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
return 1;
}
if(inevent[playerid]== 1 && efix==0) return SendClientMessage(playerid, COLOR_GRAD1,"Командата /fix е забранена в евента!");
if(PlayerInfo[playerid][pFixT] == 0)
{
if(IsPlayerInAnyVehicle(playerid))
{
SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
RepairVehicle(GetPlayerVehicleID(playerid));
PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
PlayerInfo[playerid][pFixT] = 8*120;
SendClientMessage(playerid, 0xFDFF5DFF, "- Вие поправихте вашето превозно средство -");
SendClientMessage(playerid, 0xFDFF5DFF, "SERVER: Ще можеш да използваш командите /fix и /tires след 8 минути!");
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Не е изминало нужното време от последното използване на командата!");
}
return 1;
}
else if(strcmp(cmd, "/cc", true) == 0)
{
if (PlayerInfo[playerid][pVip] >= 2 || freevip==1)
{
if(!IsPlayerInAnyVehicle(playerid))
{
return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство!");
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /cc [color1] [color2]");
return 1;
}
if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство!");
new color1;
color1 = strval(tmp);
new color2;
tmp = strtok(cmdtext, idx);
color2 = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /cc [color1] [color2]");
return 1;
}
ChangeVehicleColor(GetPlayerVehicleID(playerid), color1, color2);
SendClientMessage(playerid, 0xFFFF00FF, "- Ти смени цвета на колата си -");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
else if(strcmp(cmd, "/pj", true) == 0)
{
if (PlayerInfo[playerid][pVip] >= 2 || freevip==1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /pj [0-5]");
return 1;
}
if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство!");
new nomer;
tmp = strtok(cmdtext, idx);
nomer = strval(tmp);
ChangeVehiclePaintjob(GetPlayerVehicleID(playerid), nomer);
SendClientMessage(playerid, 0xFFFF00FF, "Ти пребоядиса твоята кола!");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
else if(strcmp(cmd, "/para", true) == 0)
{
if (PlayerInfo[playerid][pVip]>2 || freevip==1)
{
GivePlayerWeapon(playerid, 46,1);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
if (strcmp(cmdtext, "/sound", true) == 0)
{
if(PlayerInfo[playerid][pVip] >= 2 || freevip==1)
{
tmp = strtok(cmdtext, idx);
new soundid = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /sound [sound id]");
return 1;
}
SendClientMessage(playerid,0xFFFF00FF,"Ти си пусна звук!");
PlayerPlaySound(playerid, soundid, 0.0, 0.0, 0.0);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
else if(strcmp(cmd, "/admindiscords", true) == 0)
{
new cmds[656];
new closeddialog=3500;
format(cmds,656,"{FFFFFF}Discords на екипа, стоящ зад сървъра\n{008800}Екипът, който стои зад сървъра:\n\n\n{FF0000}» sTrIx - програмист на сървъра: danielandreevofficial#1084");
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{00FF00}CREDITS",cmds,"Изход","");
return 1;
}
else if(strcmp(cmd, "/bounties",true)==0)
{
new hitmans=0;
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(hitmanprice[i] >= 1)
{
hitmans+=1;
}
}
new string180[180];
format(string180,180,"Онлайн играчи със заложени цени на главите им(%d):",hitmans);
SendClientMessage(playerid, 0x40BF00FF,string180);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(hitmanprice[i] >= 1)
{
format(string180,180, "%s (ID: %d) - Цена: %d",pname[i],i,hitmanprice[i]);
SendClientMessage(playerid, 0xA4A400FF,string180);
}
}
if(hitmans==0)
{
SendClientMessage(playerid, 0xE60000FF,"Няма онлайн играчи със заложени цени за главите им!");
}
return 1;
}
else if(strcmp(cmd, "/credits", true) == 0)
{
new cmds[656];
new closeddialog=3500;
format(cmds,656,"{FFFFFF}Модът е изработен изцяло от sTrIx (C) 2018-2021\n{008800}Екипът, който стои зад сървъра:\n\n\n{FF0000}» sTrIx - програмист на сървъра");
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{00FF00}CREDITS",cmds,"Изход","");
return 1;
}
else if(strcmp(cmd, "/bounties",true)==0)
{
new hitmans=0;
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(hitmanprice[i] >= 1)
{
hitmans+=1;
}
}
new string180[180];
format(string180,180,"Онлайн играчи със заложени цени на главите им(%d):",hitmans);
SendClientMessage(playerid, 0x40BF00FF,string180);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(hitmanprice[i] >= 1)
{
format(string180,180, "%s (ID: %d) - Цена: %d",pname[i],i,hitmanprice[i]);
SendClientMessage(playerid, 0xA4A400FF,string180);
}
}
if(hitmans==0)
{
SendClientMessage(playerid, 0xE60000FF,"Няма онлайн играчи със заложени цени за главите им!");
}
return 1;
}
else if(strcmp(cmd, "/vipchat", true)==0)
{
if (PlayerInfo[playerid][pVip]>0 || freevip==1)
{
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /vipchat [text]");
return 1;
}
new string256[256];
format(string256, 256, "[VIP CHAT] %s(ID:%d): %s", pname[playerid], playerid, result);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pVip]>0 || freevip==1)
{
SendClientMessage(i, 0xE65B00FF, string256);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
//
else if(strcmp(cmd, "/gmx", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>1)
{
tmp = strtok(cmdtext, idx);
new minutesz;
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /gmx [minutes] [причина]");
return 1;
}
minutesz = strval(tmp);
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[70];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /gmx [minutes] [причина]");
return 1;
}
if(minutesz < 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Минутите трябва да са най-малко 1!");
return 1;
}
if(strlen(result)<1 || strlen(result)>15)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Текстът за ъпдейтът трябва да бъде най-много 15 символа");
}
new string256z[256];
if(minutesz==1)
format(string256z,256,"--- Сървърът ще се рестартира след 1 минута с причина: %s ---",result);
else
format(string256z,256,"--- Сървърът ще се рестартира след %d минути с причина: %s ---",minutesz,result);
SendClientMessageToAll(COLOR_RED, string256z);
serverrestarttimer=minutesz*120;
updatereason=result;
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i)) TextDrawShowForPlayer(i, RESTART);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
return 1;
}
return 1;
}
//
else if(strcmp(cmd, "/cnnn", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>1)
{
tmp = strtok(cmdtext, idx);
new txtid;
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /cnnn [type 1-6] [text]");
return 1;
}
txtid = strval(tmp);
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /cnnn [type 1-4] [text]");
return 1;
}
if(txtid == 2)
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш id 2!");
return 1;
}
if(txtid<1 || txtid>4) return SendClientMessage(playerid, COLOR_GRAD1, "Типът трябва да е от 1 до 4!");
new string256[256];
format(string256, 256, "~w~%s",result);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
GameTextForPlayer(i, string256, 5000, txtid);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
return 1;
}
return 1;
}
else if(strcmp(cmd, "/setskin", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setskin [ID на играч] [skin id]");
return 1;
}
new level;
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setskin [ID на играч] [skin id]");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
new string60[60];
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string60, 60, "[ADMIN] %s смени Skin ID на %s", pname[playerid],pname[para1[playerid]]);
SendClientMessage(i,COLOR_RED, string60);
}
}
format(string60, 60, "%s смени твоя Skin ID на %d",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF, string60);
SetPlayerSkin(para1[playerid], level);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/sethp", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /sethp [ID на играч] [health]");
return 1;
}
new level;
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /sethp [ID на играч] [health]");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
new string115[115];
format(string115, 115, "- %s промени твоя живот на %d -",pname[playerid],level);
SendClientMessage(para1[playerid],0xFFFF00FF, string115);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "[ADMIN] %s сложи %d Health на %s",pname[playerid],level,pname[para1[playerid]]);
SendClientMessage(i, COLOR_RED, string115);
}
}
SetPlayerHealth(para1[playerid], level);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/givegun", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /givegun [ID на играч] [weaponid] [ammount]");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
return 1;
}
new level;
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp) || level==0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /givegun [ID на играч] [weaponid] [ammount]");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
return 1;
}
if(level > 46)
{
SendClientMessage(playerid, COLOR_GRAD1, "Посоченото ID оръжие не съществува!");
return 1;
}
tmp = strtok(cmdtext, idx);
new ammount = strval(tmp);
if(!strlen(tmp) || ammount==0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /givegun [ID на играч] [weaponid] [ammount]");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
return 1;
}
if(ammount < 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да дадеш толкова амуниции!");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
new weaponname[32];
new string115[115];
GetWeaponName(level, weaponname, 32);
format(string115, 115, "- %s ти даде оръжие %s -",pname[para1[playerid]],weaponname);
SendClientMessage(para1[playerid],0xFFFF00FF, string115);
if(level==21)
{
SetPlayerArmedWeapon(para1[playerid],0);
SetPlayerSpecialAction(para1[playerid],SPECIAL_ACTION_USEJETPACK);
SetPlayerArmedWeapon(para1[playerid],0); SetPlayerArmedWeapon(para1[playerid],0); SetPlayerArmedWeapon(para1[playerid],0);
}
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "[ADMIN] %s даде оръжие %s на %s!",pname[playerid],weaponname,pname[para1[playerid]]);
SendClientMessage(i, COLOR_RED, string115);
}
}
GivePlayerWeapon(para1[playerid], level,ammount);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
if (strcmp(cmdtext, "/clearchat", true, 10) == 0)
{
if(PlayerInfo[playerid][pVip]>1 || freevip==1)
{
for(new i=0; i<25;i++)
{
SendClientMessage(playerid,COLOR_WHITE,"");
}
SendClientMessage(playerid,0xFFFF00FF,"Вие изчистихте вашия чат.");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
if (strcmp(cmdtext, "/adminclearchat", true, 10) == 0)
{
if(PlayerInfo[playerid][pAdmin]>2)
{
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," "); SendClientMessageToAll(0xFFFFFFFF," ");
new string115[115];
format(string115, 115, "%s изтри целия чат на сървъра писан досега",pname[playerid]);
SendClientMessageToAll(COLOR_RED,string115);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/setarmour", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setarmour [ID на играч] [armour]");
return 1;
}
new level;
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setarmour [ID на играч] [armour]");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
new string115[115];
format(string115, 115, "- %s промени твоя жилетка на %d -",pname[para1[playerid]],level);
SendClientMessage(para1[playerid],0xFFFF00FF, string115);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "[ADMIN] %s сложи %d Armour на %s",pname[playerid],level,pname[para1[playerid]]);
SendClientMessage(i, COLOR_RED, string115);
}
}
SetPlayerArmour(para1[playerid], level);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/setworld", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
tmp = strtok(cmdtext, idx);
para1[playerid] = ReturnUser(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setworld [ID на играч] [virtualworld id]");
return 1;
}
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setworld [ID на играч] [virtualworld id]");
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
new string115[115];
format(string115, 115, "- Ти смени ID VirtualWorld на %s*.",pname[para1[playerid]]);
SendClientMessage(playerid,0xFFFFFFFF, string115);
format(string115, 115, "- %s смени твоя ID VirtualWorld на %d*.",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF, string115);
SetPlayerVirtualWorld(para1[playerid], level);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/setint", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
tmp = strtok(cmdtext, idx);
para1[playerid] = ReturnUser(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setint [ID на играч] [interiorid]");
return 1;
}
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setint [ID на играч] [interiorid]");
return 1;
}
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
SetPlayerInterior(para1[playerid], level);
format(string, sizeof(string), "- Ти смени ID Interior на %s*.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF, string);
format(string, sizeof(string), "- %s смени твоя ID Interior на %d*.", pname[playerid], level);
SendClientMessage(para1[playerid], COLOR_YELLOW, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/acuffed",true)==0)
{
if (PlayerInfo[playerid][pAdmin]<4) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
new cuffedusers;
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(acuffed[i] >= 1)
{
cuffedusers+=1;
}
}
new string90[90];
format(string90,90,"Онлайн играчи с белезници(%d):",cuffedusers);
SendClientMessage(playerid, 0x40BF00FF,string90);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(acuffed[i] == 1)
{
format(string90, 90, "%s",pname[i]);
SendClientMessage(playerid, 0xFFB366FF,string90);
}
}
if(cuffedusers==0)
{
format(string90, 90, "Няма онлайн играчи с белезници в момента!");
SendClientMessage(playerid, 0xFFB366FF,string90);
}
return 1;
}
else if(strcmp(cmd, "/vipusers",true)==0)
{
new vipusers;
new string140[140];
SendClientMessage(playerid, 0x40BF00FF,"Онлайн VIP играчи:");
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pVip] >= 1)
{
format(string140, 140, "%s (ID: %d) - VIP Level: %d",pname[i],i, PlayerInfo[i][pVip]);
SendClientMessage(playerid, 0xFFB366FF,string140);
vipusers+=1;
}
}
if(vipusers==0)
{
SendClientMessage(playerid, 0xFFB366FF,"Няма онлайн VIP играчи в момента!");
}
return 1;
}
else if(strcmp(cmd, "/members",true)==0)
{
if(PlayerInfo[playerid][pTeam] != 0)
{
SendClientMessage(playerid, 0x40BF00FF,"Онлайн членове на банда/мафията:");
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
new ranktext[256];
if(PlayerInfo[i][pTeam]==PlayerInfo[playerid][pTeam])
{
switch(PlayerInfo[i][pRank])
{
case 1: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[i][pTeam]][tRank1]);
case 2: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[i][pTeam]][tRank2]);
case 3: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[i][pTeam]][tRank3]);
case 4: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[i][pTeam]][tRank4]);
case 5: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[i][pTeam]][tRank5]);
case 6: format(ranktext, 256, "%s", TeamInfo[PlayerInfo[i][pTeam]][tRank6]);
}
new string160[160];
if(PlayerInfo[i][pRank]<6)
{
format(string160, 160, "%s (ID: %d) Rank: %s(%d)",pname[i], i, ranktext,PlayerInfo[i][pRank]);
SendClientMessage(playerid, 0x33CCFFFF, string160);
}
if(PlayerInfo[i][pRank]==6 && PlayerInfo[i][pGLeader]==0)
{
format(string160, 160, "{FF8200}Лидер:{33CCFF} %s (ID: %d) Rank: %s(%d)",pname[i], i, ranktext,PlayerInfo[i][pRank]);
SendClientMessage(playerid, 0x33CCFFFF, string160);
}
if(PlayerInfo[i][pRank]==6 && PlayerInfo[i][pGLeader]==1)
{
format(string160, 160, "{FF8200}Главен лидер:{33CCFF} %s (ID: %d) Rank: %s(%d)",pname[i], i, ranktext,PlayerInfo[i][pRank]);
SendClientMessage(playerid, 0x33CCFFFF, string160);
}           }
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/leaders",true)==0)
{
new string256[256];
new string256result[2300];
new onlineleaders=0;
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pRank]==6)
{
onlineleaders=1;
if(PlayerInfo[i][pGLeader]==1)
{
format(string256,256, "{33CCFF}Главен лидер: %s (ID:%d) на банда/мафия - {00FF00}%s\n",pname[i],i,TeamInfo[PlayerInfo[i][pTeam]][tName]);
strcat(string256result, string256, sizeof(string256result));
}
if(PlayerInfo[i][pGLeader]==0)
{
format(string256,256, "{33CCFF}Лидер: %s (ID:%d) на банда/мафия - {00FF00}%s\n",pname[i],i,TeamInfo[PlayerInfo[i][pTeam]][tName]);
strcat(string256result, string256, sizeof(string256result));
}
}
}
if(onlineleaders>0)
{
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"{33aa33}Онлайн лидери:",string256result,"Затвори","");
}
else if(onlineleaders==0)
{
SendClientMessage(playerid, 0xE60000FF,"Няма онлайн лидери в момента!");
}
return 1;
}
else if(strcmp(cmdtext, "/gotomark", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
if(marked[playerid]!=1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си маркирал позиция!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в дуел!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в евент!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в евент!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш, докато си в DMON!");}
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
new string115[115];
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "[ADMIN] %s се телепортира до маркираната си позиция!",pname[playerid]);
SendClientMessage(i, COLOR_RED,string115);
}
}
SetPlayerInterior(playerid,AINT[playerid]);
SetPlayerVirtualWorld(playerid,AVW[playerid]);
if (GetPlayerState(playerid) == 2)
{
SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), AVW[playerid]);
LinkVehicleToInterior(GetPlayerVehicleID(playerid), AINT[playerid]);
SetVehiclePos(GetPlayerVehicleID(playerid), AX[playerid],AY[playerid],AZ[playerid]);
SetVehicleZAngle(GetPlayerVehicleID(playerid),AZA[playerid]);
}
else
{
SetPlayerPos(playerid, AX[playerid],AY[playerid],AZ[playerid]);
SetPlayerFacingAngle(playerid,AZA[playerid]);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmdtext, "/mark", true) == 0)
{
if (PlayerInfo[playerid][pAdmin]>2)
{
if (GetPlayerState(playerid) == 2)
{
GetVehiclePos(GetPlayerVehicleID(playerid), AX[playerid],AY[playerid],AZ[playerid]);
GetVehicleZAngle(playerid,AZA[playerid]);
}
else
{
GetPlayerFacingAngle(playerid,AZA[playerid]);
GetPlayerPos(playerid, AX[playerid],AY[playerid],AZ[playerid]);
}
new string115[115];
AINT[playerid] = GetPlayerInterior(playerid);
AVW[playerid] = GetPlayerVirtualWorld(playerid);
SendClientMessage(playerid, 0xFFFFFFFF, "- Позицията е запазена -");
marked[playerid]=1;
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "[ADMIN] %s си маркира позиция!",pname[playerid]);
SendClientMessage(i, COLOR_RED,string115);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
if (strcmp(cmd, "/adutyskin", true) == 0)
{
if(PlayerInfo[playerid][pAdmin]>0)
{
if(PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си ADMIN На смяна!");
return 1;
}
if(IsPlayerInAnyVehicle(playerid) == 1 && PlayerInfo[playerid][pADuty]==1)
{
SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си пешеходец за да си смениш скина!");
return 1;
}
DestroySelectionMenu(playerid);
SetPVarInt(playerid, "skinc_active", 1);
CreateSelectionMenu(playerid);
SelectTextDraw(playerid, 0xACCBF1FF);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
if (strcmp(cmdtext, "/afon", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] <4) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
if(Act[playerid]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си пуснал Anti fall of bike!");
Act[playerid] = 1;
GameTextForPlayer(playerid, "~w~Anti fall off bike is now ~g~on", 5000, 5);
return 1;
}
if (strcmp(cmdtext, "/afoff", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] <4) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
if(Act[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Anti fall of bike не е пуснат!");
GameTextForPlayer(playerid, "~w~Anti fall off bike is now ~r~off", 5000, 5);
Act[playerid] = 0;
return 1;
}
else if(strcmp(cmd, "/lottoopen", true)==0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
new string115[115];
if(lottoopen==0)
{
MoveDynamicObject(lottogate[1], 2251.052246, 1659.112792, 1009.517578,9.0);
MoveDynamicObject(lottogate[2], 2221.600097, 1659.046264, 1009.517578,9.0);
format(string115, 115, "[Национална Лотария Шоу] %s отвори играта за личен автомобил", pname[playerid]);
SendClientMessageToAll(0xE60000FF, string115);
lottoopen=1;
}
else
{
MoveDynamicObject(lottogate[1], 2241.052246, 1659.112792, 1009.517578,9.0);
MoveDynamicObject(lottogate[2], 2231.600097, 1659.046264, 1009.517578,9.0);
format(string115, 115, "[Национална Лотария Шоу] %s затвори играта за личен автомобил", pname[playerid]);
SendClientMessageToAll(0xE60000FF, string115);
lottoopen=0;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/lottogivecash", true)==0)
{
if (PlayerInfo[playerid][pEvent] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /lottogivecash [ID на играч] [cash]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1 || level>1000000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Парите трябва да са по-големи от 0 и по-малки от $1, 000, 000!");
return 1;
}
if(para1[playerid]==playerid) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да дадеш пари на себе си!");
if(lotariqselected!=para1[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е участник в лотарията!");
new string115[115];
GivePlayerCash(para1[playerid],level);
format(string115, 115, "[Национална Лотария Шоу] %s получи своята награда от лотарията - $%d", pname[para1[playerid]],level);
SendClientMessageToAll(0xE60000FF, string115);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/selectsdelka", true) == 0)
{
if (PlayerInfo[playerid][pEvent]==1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /selectsdelka [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(opensdelka==0) return SendClientMessage(playerid,COLOR_GRAD1,"Шоуто не е отворено!");
new string115[115];
if(sdelkaselected==-1)
{
format(string115, 115, "[Сделка или не] %s беше избран за участник в играта", pname[para1[playerid]]);
SendClientMessageToAll(0x3ADF15FF, string115);
}
else
{
format(string115, 115, "[Сделка или не] %s приключи своята игра. Новият избран е %s", pname[sdelkaselected], pname[para1[playerid]]);
SendClientMessageToAll(0x3ADF15FF, string115);
}
sdelkaselected=para1[playerid];
new formatSdelka[256];
for(new i=0; i<9; i++)
{
new i2=i;
i2+=1;
format(formatSdelka,256,"{ff0000}Кутия %d\n{00ff00}Затворена",i2);
UpdateDynamic3DTextLabelText(sdelkaBoxText[i], 0x800000FF, formatSdelka);
if(i>=8)
{
SdelkaBoxesMoney[i]=randomex(100,50000);
}
else if(i>=6)
{
SdelkaBoxesMoney[i]=randomex(500,14204);
}
else
{
SdelkaBoxesMoney[i]=randomex(500,34612);
}
sdelkaBoxesOpen[i]=false;
}
//sdelkaBoxText[0]=CreateDynamic3DTextLabel("{ff0000}Кутия 1\n{00ff00}Затворена", 0x00ff00FF, 1728.5927,-1659.4409,21.4581, 21.3, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 18, -1, 20.5);
//sdelkaBoxesOpen[9]; new SdelkaBoxesMoney[9];
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/selectlottery", true) == 0)
{
if (PlayerInfo[playerid][pEvent]==1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /selectlottery [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(openlottery==0) return SendClientMessage(playerid,COLOR_GRAD1,"Шоуто не е отворено!");
new string115[115];
if(lotariqselected==-1)
{
format(string115, 115, "[Национална Лотария Шоу] %s беше избран за участник в играта - Колело на късмета", pname[para1[playerid]]);
SendClientMessageToAll(0xE60000FF, string115);
}
else
{
format(string115, 115, "[Национална Лотария Шоу] %s приключи своята игра. Новият избран е %s", pname[lotariqselected], pname[para1[playerid]]);
SendClientMessageToAll(0xE60000FF, string115);
}
lotariqselected=para1[playerid];
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
if (strcmp(cmdtext, "/startnumbers", true) == 0)
{
if(PlayerInfo[playerid][pEvent]==1)
{
if(openlottery==0) return SendClientMessage(playerid,COLOR_GRAD1,"В момента играта е затворена!");
new rndnum=randomex(50,100);
new formatformat[256];
numberlotto=rndnum;
lotterysuma=15000;
format(formatformat,256,"[Колело на късмета] Първото число е %d!",rndnum);
SendClientMessageToAll(0xE60000FF, formatformat);
format(formatformat,256,"%d - $%d",rndnum,lotterysuma);
SetDynamicObjectMaterialText(display[0] , 0 , formatformat , OBJECT_MATERIAL_SIZE_256x128, "Arial", 28, 1, 0xC81717FF, 0x0000FFFF,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
SendClientMessageToAll(0xE60000FF, "[Колело на късмета] Участникът трябва да избере нагоре или надолу чрез Y");
openlottery=1;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
if (strcmp(cmdtext, "/closesdelka", true) == 0)
{
if(PlayerInfo[playerid][pEvent]==1)
{
if(opensdelka==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента шоуто не е отворено!");
SendClientMessage(playerid, 0x3ADF15FF, "[Сделка или не] Шоуто е вече затворено!");
opensdelka=1;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
if (strcmp(cmdtext, "/opensdelka", true) == 0)
{
if(PlayerInfo[playerid][pEvent]==1)
{
if(opensdelka==1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента шоуто е отворено!");
SendClientMessage(playerid, 0x3ADF15FF, "[Сделка или не] Шоуто е отворено, който желае може да го посети и да играе в него!");
SendClientMessage(playerid, 0x3ADF15FF, "[Сделка или не] Сградата на шоуто се намира точно срещу LSPD");
opensdelka=1;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
if (strcmp(cmdtext, "/closelottery", true) == 0)
{
if(PlayerInfo[playerid][pEvent]==1)
{
if(openlottery==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента шоуто не е отворено!");
SendClientMessage(playerid, 0xE60000FF, "[Национална Лотария Шоу] Шоуто е вече затворено!");
openlottery=1;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
if (strcmp(cmdtext, "/openlottery", true) == 0)
{
if(PlayerInfo[playerid][pEvent]==1)
{
if(openlottery==1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента шоуто е отворено!");
SendClientMessage(playerid, 0xE60000FF, "[Национална Лотария Шоу] Шоуто е отворено, който желае може да го посети и да играе в него!");
SendClientMessage(playerid, 0xE60000FF, "[Национална Лотария Шоу] Ако не знаете къде е то, използвайте /gps");
openlottery=1;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/givesdelkamoney", true)==0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /givesdelkamoney [ID на играч] [$100 - $50, 000]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(sdelkaselected!=playerid)
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е участник в играта 'Сделка или не'!");
return 1;
}
if(level<100 || level>50000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Парите трябва да са повече от $100 и по-малко от $50, 000!");
return 1;
}
GivePlayerCash(para1[playerid],level);
new string256[256];
format(string256, 256, ".:: [Сделка или не] %s възнагради %s с неговата печалба от $%d ::.",pname[playerid],pname[para1[playerid]],level);
SendClientMessageToAll(0x00FF00FF,string256);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
if (strcmp(cmd, "/givelotterycar", true) == 0)
{
if(PlayerInfo[playerid][pEvent]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
return 1;
}
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /givelotterycars [ID на играч]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
new formatformat[256];
if(para1[playerid]!=playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да дадеш наградата на себе си!");
if(PlayerInfo[para1[playerid]][pPrivateVehs]>=6) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч има твърде много лични превозни средства!");
if(PlayerInfo[para1[playerid]][pMission]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч все още не е минал първата мисия!");
format(formatformat,256,"[Лотария] %s даде наградата на %s, той спечели нова лична кола",pname[playerid],pname[para1[playerid]]);
SendLocalMessage(70.0,playerid,0xE60000FF, formatformat);
VehicleInfo[maximumPrivateVehsID][vVeh]=AddStaticVehicleEx(506,0.0,0.0,0.0,0.0,3,3, -1);
new vehicleID=VehicleInfo[maximumPrivateVehsID][vVeh];
privatecarC1[vehicleID]=3;
privatecarlocked[vehicleID]=1;
privatecarC2[vehicleID]=3;
privatecarlocked[vehicleID]=1;
format(privatecarowner[vehicleID],40,"%s",pname[para1[playerid]]);
privatecarID[vehicleID]=506;
privatecars[vehicleID]=1;
PlayerInfo[playerid][pPrivateVehs]+=1;
PlayerInfo[playerid][pPrivateVeh][PlayerInfo[playerid][pPrivateVehs]]=maximumPrivateVehsID;
maximumPrivateVehsID++;
SendClientMessage(playerid,COLOR_PRIVATEVEH,"- Честито, вие спечелихте чисто нова кола -");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"- Ако желаете да й сложите неон или специални екстри, то я тунинговайте в гараж -");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"Пуснете си я, чрез /myveh, за да я паркирате напишете /park");
return 1;
}
if (strcmp(cmdtext, "/eventhelp", true) == 0)
{
if(PlayerInfo[playerid][pEvent]==1)
{
SendClientMessage(playerid, 0xFFFF00AA, "Event Admin команди:");
SendClientMessage(playerid, 0x00FF00AA, "/startevent /startevent1 /ec /eenter /setvhpall /efight /givegunall /sethpall /setarmourall /int /startvote");
SendClientMessage(playerid, 0x00FF00AA, "/endvote /endevent /endevent1 /endevent2 /stopevent /ename /dname /ejetpack /djetpack /setweatherall /settime");
SendClientMessage(playerid, 0x00FF00AA, "/giveep /eev /edv /ehealme /dhealme /setlimit /invisible /invisibleall");
SendClientMessage(playerid, 0xFFFF00AA, "Национална лотария команди:");
SendClientMessage(playerid, 0x00FF00AA, "/openlottery /closelottery /selectlottery /startnumbers /givelotterycash /lottoopen /givelotterycar");
SendClientMessage(playerid, 0xFFFF00AA, "Сделка или не команди:");
SendClientMessage(playerid, 0x00FF00AA, "/opensdelka /closesdelka /selectsdelka /givesdelkamoney");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/togcb", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
if(PlayerInfo[playerid][pTogCB]==0)
{
SendClientMessage(playerid, 0xFF9933FF, "Ти вече ще виждаш всички CB Chanels!");
PlayerInfo[playerid][pTogCB]=1;
}
else
{
SendClientMessage(playerid, 0xFF9933FF, "Ти вече няма да виждаш всички CB Chanels!");
PlayerInfo[playerid][pTogCB]=0;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
}
return 1;
}
else if(strcmp(cmd, "/istogged", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /istogged [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if (PlayerInfo[playerid][pAdmin] >= 3)
{
if(para1[playerid] != INVALID_PLAYER_ID)
{
new textaa[256]; new textaa2[256]; new textaa3[256]; new textaa4[256]; new string2562[256]; new notoggle=1;
if(PlayerInfo[para1[playerid]][pAHide] == 1 && PlayerInfo[para1[playerid]][pTest]==0) { textaa = "ADMIN "; notoggle=0;}
if(PlayerInfo[para1[playerid]][pAHide] == 1 && PlayerInfo[para1[playerid]][pTest]==1) { textaa = "TEST "; notoggle=0; }
if(togchat[para1[playerid]]==1) { textaa2 = "GLOBAL "; notoggle=0; }
if(PlayerInfo[playerid][pTogFaction]==1) { textaa3 = "FACTION "; notoggle=0; }
if(PlayerInfo[playerid][pTogLeader]==1) { textaa4 = "LEADER "; notoggle=0; }
if(notoggle==1)
{
format(string2562,256, "%s не е скрил никой чат!", pname[para1[playerid]]);
return SendClientMessage(playerid, 0xFFFFFFFF, string2562);
}
//if(togchat[playerid]==1) { textaa += "FACTION "; }
format(string2562,256, "%s - скрил чат %s", pname[para1[playerid]],textaa,textaa2,textaa3,textaa4);
SendClientMessage(playerid, 0xFFFFFFFF, string2562);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
}
return 1;
}
if (strcmp(cmdtext, "/mhelp", true) == 0 || strcmp(cmdtext, "/mh", true) == 0)
{
if(PlayerInfo[playerid][pManage]==1)
{
new closeddialog=3500;
new string2230[512];
new string2230result[1500];
strcat(string2230result,"{00FF00}---= Level Manage Admin Commands =---\n");
format(string2230,512,"{33CCCC}/unwarn - Махате предупреждение на даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/respawncars - Respawn колите\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/crespawncars - Прекратявате Respawn колите\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/unban - Махате BAN на даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/checkrescars - Проверявате кога е имало последно Respawn на колите\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/askrescars - Питате сървъра за Respawn на колите\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/caskrescars - Прекратяване на питането за Respawn на колете\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/checkaskres - Проверявате кога последно е имало питане за Respawn на колите\n");
strcat(string2230result, string2230);
format(string2230,512,"{33CCCC}/unblock - Премахвате block-а на даден играч");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FF0000}MANAGE АДМИН КОМАНДИ:",string2230result,"Изход","");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
if (strcmp(cmd, "/startevent", true) == 0)
{
if(PlayerInfo[playerid][pEvent] == 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
return 1;
}
if(startedevent>0) return SendClientMessage(playerid, COLOR_GRAD1, "Все още има евент!");
if(eventmembers>0) return SendClientMessage(playerid, COLOR_GRAD1, "Все още има играчи от стария евент!");
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
tmp = strtok(cmdtext, idx);
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /startevent [event name]");
return 1;
}
format(string, sizeof(string),"~y~ >>> EVENT <<<~n~~r~%s~n~~p~no award",result);
eventinterior = GetPlayerInterior(playerid);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
GameTextForPlayer(i, string, 5000, 3);
}
SetPlayerVirtualWorld(playerid, 1);
eventclosed=0;
eev=1;
startedevent=1; eenter=0; efight=0; ejetpack=0; dhealme=1; etune=1; efix=1; enos =1; ehyd=1; eramp=0;
GetPlayerPos(playerid, eventx, eventy, eventz);
eventlimit=1000;
PlayerInfo[playerid][pOrganisator]=1;
format(string, sizeof(string), "%s: {80FF00}Напишете {F2FF00}/joinevent{80FF00} за да се присъедините към евента.{FFFFFF}  БЕЗ НАГРАДА!", result);
SendClientMessageToAll(0xFF0000FF, string);
return 1;
}
if (strcmp(cmd, "/startevent1", true) == 0)
{
if(PlayerInfo[playerid][pEvent] == 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
return 1;
}
if(startedevent>0) return SendClientMessage(playerid, COLOR_GRAD1, "Все още има евент!");
if(eventmembers>0) return SendClientMessage(playerid, COLOR_GRAD1, "Все още има играчи от стария евент!");
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
tmp = strtok(cmdtext, idx);
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /startevent1 [event name]");
return 1;
}
format(string, sizeof(string),"~y~ >>> EVENT <<<~n~~r~%s~n~~p~with award",result);
eventinterior = GetPlayerInterior(playerid);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
GameTextForPlayer(i, string, 5000, 3);
}
SetPlayerVirtualWorld(playerid, 1);
eventclosed=0;
eev=1;
PlayerInfo[playerid][pOrganisator]=1;
startedevent=2; eenter=0; efight=0; ejetpack=0; dhealme=1; etune=1; efix=1; enos =1; ehyd=1; eramp=0;
GetPlayerPos(playerid, eventx, eventy, eventz);
eventinterior = GetPlayerInterior(playerid);
eventlimit=1000;
format(string, sizeof(string), "%s: {80FF00}Напишете {F2FF00}/joinevent{80FF00} за да се присъедините към евента.{FFFFFF}  С НАГРАДА!", result);
SendClientMessageToAll(0xFF0000FF, string);
return 1;
}
else if(strcmp(cmd, "/ec", true) == 0)
{
if(PlayerInfo[playerid][pEvent]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(eactivecount == 0)
{
new string150[150];
format(string150,150,"•• %s стартира брояча на евента, бъдете в готовност ••",pname[playerid]);
SendClientMessageToAll(0x80FF00FF,string150);
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-~b~ 3 ~r~-", 1500, 3);
eactivecount = 1;
ecounttime0 = 3;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "В момента има активен брояч!");
}
return 1;
}
else if(strcmp(cmd, "/eenter", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(eenter==0)
{
eenter=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи натискането на F/ENTER в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
eenter=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани натискането на F/ENTER в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/nameoff", true) == 0)
{
if(inevent[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в евента!");
if(ename==0) return SendClientMessage(playerid, COLOR_GRAD1, "Командите /nameon и /nameoff са забранени!");
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
ShowPlayerNameTagForPlayer(i, playerid, 0);
}
format(string, sizeof(string), "Вече играчите няма да виждат твоето име!", pname[playerid]);
SendClientMessage(playerid,0x80FF00FF, string);
return 1;
}
else if(strcmp(cmd, "/nameon", true) == 0)
{
if(inevent[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в евент!");
if(ename==0) return SendClientMessage(playerid, COLOR_GRAD1, "Командите /nameon и /nameoff са забранени!");
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
ShowPlayerNameTagForPlayer(i, playerid, 1);
}
format(string, sizeof(string), "Вече играчите ще виждат твоето име!", pname[playerid]);
SendClientMessage(playerid,0x80FF00FF, string);
return 1;
}
else if(strcmp(cmd, "/dname", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(ename==0) return SendClientMessage(playerid, COLOR_GRAD1, "Командите /nameon и /nameoff вече са забранени!");
ename=0;
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(inevent[i]==1)
{
for(new i2 = 0; i2 < MAX_PLAYERS; i2++ && IsPlayerConnected(i2))
{
ShowPlayerNameTagForPlayer(i2, i, 1);
}
}
}
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /nameon и /nameoff в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/etune", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(etune==1) return SendClientMessage(playerid, COLOR_GRAD1, "Командата /tune вече е позволена!");
etune=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /tune в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/lockbiz", true) == 0)
{
if (PlayerInfo[playerid][pBizO]>-1)
{
if(BizInfo[PlayerInfo[playerid][pBizO]][bLocked]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят бизнес вече е заключен!");
BizInfo[PlayerInfo[playerid][pBizO]][bLocked]=1;
SendClientMessage(playerid, 0x80BFFFFF, "Ти заключи своя бизнес за другите играчи!");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не притежаваш бизнес!");
}
return 1;
}
else if(strcmp(cmd, "/unlockbiz", true) == 0)
{
if (PlayerInfo[playerid][pBizO]>-1)
{
if(BizInfo[PlayerInfo[playerid][pBizO]][bLocked]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят бизнес вече е отключен!");
BizInfo[PlayerInfo[playerid][pBizO]][bLocked]=0;
SendClientMessage(playerid, 0x80BFFFFF, "Ти отключи своя бизнес за другите играчи!");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не притежаваш бизнес!");
}
return 1;
}
else if(strcmp(cmd, "/lockhouse", true) == 0)
{
if (PlayerInfo[playerid][pHouseO]>-1)
{
if(HouseInfo[PlayerInfo[playerid][pHouseO]][hLocked]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Твоята къща вече е заключена!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hLocked]=1;
SendClientMessage(playerid, 0x00FF40FF, "Ти заключи своята къща за другите играчи!");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща!");
}
return 1;
}
else if(strcmp(cmd, "/unlockhouse", true) == 0)
{
if (PlayerInfo[playerid][pHouseO]>-1)
{
if(HouseInfo[PlayerInfo[playerid][pHouseO]][hLocked]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Твоята къща вече е отключена!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hLocked]=0;
SendClientMessage(playerid, 0x00FF40FF, "Ти отключи своята къща за другите играчи!");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща!");
}
return 1;
}
else if(strcmp(cmd, "/ejetpack", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(ejetpack==1) return SendClientMessage(playerid, COLOR_GRAD1, "Командата /jetpack вече е позволена!");
ejetpack=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /jetpack в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/eev", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(eev==1) return SendClientMessage(playerid, COLOR_GRAD1, "Влизането в превозни средства вече е позволено!");
eev=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи влизането в превозни средства в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/eflip", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(eflip==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ползването на /flip вече е позволено!");
eflip=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /flip в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/dtest", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >=5)
{
if(testmode[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента тест модът е изключен!");
testmode[playerid]=0;
SendClientMessage(playerid, 0xFFFFFFFF, "Ти изключи тест мода!");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/etest", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >=5)
{
if(testmode[playerid]==1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента тест модът е включен!");
testmode[playerid]=1;
SendClientMessage(playerid, 0xFFFFFFFF, "Ти включи тест мода!");
SendClientMessage(playerid, 0xFFFFFFFF, "По време на Test Mode, ще преодолявате ограничения, които ви позволяват да гледате за Bugs!");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/dflip", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(eflip==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ползването на /flip вече е забранено!");
eflip=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /flip в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/einvisible", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(einvisible==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ползването на /invisible вече е позволено!");
einvisible=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /invisible в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/dramp", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(eramp==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ползването на рампи вече е забранено!");
eramp=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани пускането на рампи в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/eramp", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(eramp==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ползването на рампи вече е позволено!");
eramp=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи пускането на рампи в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/ehyd", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(ehyd==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ползването на /hyd вече е позволено!");
ehyd=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /hyd в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/dhyd", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(ehyd==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ползването на /hyd вече е забранено!");
ehyd=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /hyd в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/enos", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(enos==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ползването на /nos вече е позволено!");
enos=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /nos в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/dnos", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(enos==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ползването на /nos вече е забранено!");
enos=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /nos в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/efix", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(efix==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ползването на /fix вече е позволено!");
efix=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /fix в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/dfix", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(efix==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ползването на /fix вече е забранено!");
efix=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /fix в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/ehealme", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(dhealme==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ползването на /healme вече е позволено!");
dhealme=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /healme в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/dhealme", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(dhealme==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ползването на /healme вече е забранено!");
dhealme=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /healme в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/edv", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(eev==0) return SendClientMessage(playerid, COLOR_GRAD1, "Влизането в превозни средства вече е забранено!");
eev=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани влизането в превозни средства в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/djetpack", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(ejetpack==0) return SendClientMessage(playerid, COLOR_GRAD1, "Командата /jetpack вече е забранена!");
ejetpack=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани ползването на /jetpack в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/ename", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(ename==1) return SendClientMessage(playerid, COLOR_GRAD1, "Командите /nameon и /nameoff вече са позволени!");
ename=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи ползването на /nameon и /nameoff в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/efight", true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(efight==0)
{
efight=1;
format(string, sizeof(string), "{FF0000}%s{80FF00} позволи боя в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
efight=0;
format(string, sizeof(string), "{FF0000}%s{80FF00} забрани боя в евента!", pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/setarmourall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setarmourall [armour]");
return 1;
}
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setarmourall [armour]");
return 1;
}
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи жилетката на всички в евента да е %d!",pname[playerid], level);
SendClientMessageToAll(0x80FF00FF, string);
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
if(inevent[i])
{
SetPlayerArmour(i,level);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/int", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /int [interior id]");
return 1;
}
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /int [interior id]");
return 1;
}
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи Interior ID на евента да е %d!",pname[playerid], level);
SendClientMessageToAll(0x80FF00FF, string);
eventinterior=level;
for(new i=0; i<MAX_PLAYERS; i++)
{
if(inevent[i]==1 || PlayerInfo[i][pOrganisator]==1)
{
SetPlayerInterior(i, eventinterior);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/sethpall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /sethpall [health]");
return 1;
}
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /sethpall [health]");
return 1;
}
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи кръвта на всички в евента да е %d!",pname[playerid], level);
SendClientMessageToAll(0x80FF00FF, string);
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
if(inevent[i])
{
SetPlayerHealth(i,level);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/unfreezeall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
format(string, sizeof(string), "{FF0000}%s{80FF00} отмрази всички в евента!",pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
if(inevent[i])
{
TogglePlayerControllable(i,1);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/freezeall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
format(string, sizeof(string), "{FF0000}%s{80FF00} замрази всички в евента!",pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
if(inevent[i])
{
TogglePlayerControllable(i,0);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/setskinall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setskinall [skin id]");
return 1;
}
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setskinall [skin id]");
return 1;
}
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи скинът на всички в евента да е ID %d!",pname[playerid], level);
SendClientMessageToAll(0x80FF00FF, string);
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
if(inevent[i])
{
SetPlayerSkin(i,level);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/removelimit", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
eventlimit=10000;
format(string, sizeof(string), "{FF0000}%s{80FF00} премахна лимита за влизането в евента!",pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/blueteam", true) == 0)
{
if (PlayerInfo[playerid][pEvent]==1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /blueteam [ID на играч]");
return 1;
}
new level[32];
new para12 = ReturnUser(tmp);
if(inevent[para12]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е от евента!");
strmid(level, tmp, 0, sizeof(level), sizeof(level));
if(para12 != INVALID_PLAYER_ID)
{
SetPlayerColor(para12, 0x00A2F3FF);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
return 1;
}
return 1;
}
else if(strcmp(cmd, "/redteam", true) == 0)
{
if (PlayerInfo[playerid][pEvent]==1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /redteam [ID на играч]");
return 1;
}
new level[32];
new para12 = ReturnUser(tmp);
if(inevent[para12]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е от евента!");
strmid(level, tmp, 0, sizeof(level), sizeof(level));
if(para12 != INVALID_PLAYER_ID)
{
SetPlayerColor(para12, 0xFF0000FF);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
return 1;
}
return 1;
}
else if(strcmp(cmd, "/ncolor", true) == 0)
{
if (PlayerInfo[playerid][pEvent]==1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ncolor [ID на играч] [color id]");
SendClientMessage(playerid, COLOR_RED, "1 - Бял 2 - Зелен 3 - Жълто 4 - Оранжев");
return 1;
}
new level[32];
new para12 = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ncolor [ID на играч] [color id]");
SendClientMessage(playerid, COLOR_RED, "1 - Бяло 2 - Зелено 3 - Сиво 4 - Жълто 5 - Оранжево");
return 1;
}
if(inevent[para12]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е от евента!");
strmid(level, tmp, 0, sizeof(level), sizeof(level));
if(para12 != INVALID_PLAYER_ID)
{
if(strcmp(level,"1",true)==1 && strcmp(level,"2",true)==1 && strcmp(level,"3",true)==1 && strcmp(level,"4",true)==1)
if (strcmp(level, "1", true) == 0)
{
SetPlayerColor(para12, 0xFFFFFFFF);
}
if (strcmp(level, "2", true) == 0)
{
SetPlayerColor(para12, 0x28BF0EFF);
}
if (strcmp(level, "3", true) == 0)
{
SetPlayerColor(para12, 0xFF0000FF);
}
if (strcmp(level, "4", true) == 0)
{
SetPlayerColor(para12, 0xFF5733FF);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
return 1;
}
return 1;
}
else if(strcmp(cmd, "/setlimit", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setlimit [limit]");
return 1;
}
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setlimit [limit]");
return 1;
}
if(level < 1 || level > 1000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Лимитът може да бъде от 1 до 1000 човека!");
return 1;
}
eventlimit=level;
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи лимита за влизането в евента да е %d!",pname[playerid],level);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/givegunall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(strval(tmp) < 1 || strval(tmp) >46)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /givegunall [weaponid]");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
SendClientMessage(playerid, 0x33AA33FF, "____________________________________________");
return 1;
}
new weaponname[32];
GetWeaponName(level, weaponname, 32);
format(string, sizeof(string), "{FF0000}%s{80FF00} даде %s на всички играчи в евента!",pname[playerid], weaponname);
SendClientMessageToAll(0x80FF00FF, string);
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
if(inevent[i])
{
GivePlayerWeapon(i, level,500);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/setvhpall", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
new level;
tmp = strtok(cmdtext, idx);
level = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setvhpall [vehicle health]");
return 1;
}
if(strval(tmp) < 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setvhpall [vehicle health]");
return 1;
}
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи %d Health на всички превозни средства в евента!",pname[playerid], level);
SendClientMessageToAll(0x80FF00FF, string);
for(new vh; vh<MAX_VEHICLES; vh++)
{
if(eventveh[vh]==1)
{
SetVehicleHealth(vh, level);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/endevent1", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
format(string, sizeof(string),"~w~EVENT ~g~WINNER:~n~~r~NO",pname[para1[playerid]]);
GameTextForAll(string, 5000, 3);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(inevent[i]>0)
{
SetPlayerHealth(i,0); inevent[i]=0;
}
PlayerInfo[i][pOrganisator]=0;
}
format(string, sizeof(string),"EVENT {00B300}WINNER: {FF0000}NO",pname[para1[playerid]]);
SendClientMessageToAll(0xFFFFFFFF,string);
startedevent=0;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/stopevent", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
format(string, sizeof(string), "Присъединяването в евента приключи");
SendClientMessageToAll(0x5065D9FF, string);
format(string, sizeof(string),"~w~EVENT ~g~JOIN ~r~OVER");
eventclosed=1;
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
GameTextForPlayer(i, string, 5000, 3);
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/endevent", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /endevent [winner id]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(inevent[para1[playerid]]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е в евента!");
if(para1[playerid] != INVALID_PLAYER_ID)
{
format(string, sizeof(string),"~w~EVENT ~g~WINNER:~n~~r~%s",pname[para1[playerid]]);
GameTextForAll(string, 5000, 3);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(inevent[i]>0)
{
SetPlayerHealth(i,0);  inevent[i]=0;
}
PlayerInfo[i][pOrganisator]=0;
}
format(string, sizeof(string),"EVENT {00B300}WINNER: {FF0000}%s",pname[para1[playerid]]);
SendClientMessageToAll(0xFFFFFFFF,string);
startedevent=0;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Посоченото ID не е в евента!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/endevent2", true) == 0)
{
if (PlayerInfo[playerid][pEvent]>0)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(strlen(result)<1)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /endevent2 [winners]");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
format(string, sizeof(string),"~w~EVENT ~g~WINNER:~n~~r~%s",result);
GameTextForAll(string, 5000, 3);
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(inevent[i]>0)
{
SetPlayerHealth(i,0);  inevent[i]=0;
}
PlayerInfo[i][pOrganisator]=0;
}
format(string, sizeof(string),"EVENT {00B300}WINNER: {FF0000}%s",result);
SendClientMessageToAll(0xFFFFFFFF,string);
startedevent=0;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Посоченото ID не е в евента!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/setweatherall", true) == 0)
{
if(IsPlayerConnected(playerid))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setweatherall [weather id]");
return 1;
}
new hour;
hour = strval(tmp);
if(hour<0 || hour>45) return SendClientMessage(playerid, COLOR_GRAD1, "Времето трябва да бъде от 0 до 45!");
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(inevent[i])
{
SetPlayerWeather(i, hour);
}
}
format(string, sizeof(string), "{FF0000}%s{80FF00} сложи временен Weather ID на всички играчи в евента да е %d!",pname[playerid], hour);
SendClientMessageToAll(0x80FF00FF, string);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
}
return 1;
}
else if(strcmp(cmd,"/invisibleall",true) == 0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
if(startedevent==0) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(einvisible2==1)
{
format(string, sizeof(string), "{FF0000}%s{80FF00} направи виски играчи в евента видими!",pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
einvisible2=0;
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(inevent[i])
{
SetPlayerColor(i, 0x00FF00FF);
}
}
}
if(einvisible2==0)
{
format(string, sizeof(string), "{FF0000}%s{80FF00} направи виски играчи в евента невидими!",pname[playerid]);
SendClientMessageToAll(0x80FF00FF, string);
einvisible2=1;
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(inevent[i])
{
SetPlayerColor(i, 0xFFFFFF00);
}
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd,"/erefuel",true) == 0)
{
if(inevent[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в евента!");
if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство!");
if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 481
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 509
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 510
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
{
if(vehfuel[GetPlayerVehicleID(playerid)]==100)
{
SendClientMessage(playerid,COLOR_GRAD1,"Твоето превозно средство вече има 100 литра бензин!");
return 1;
}
new string256[256];
format(string256,256,"Твоето превозно средство вече е със 100 литра бензин.");//3399ff
SendClientMessage(playerid,0x3399ffFF,string256);
vehfuel[GetPlayerVehicleID(playerid)]=100;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да заредиш това превозно средство с бензин!");
}
return 1;
}
else if(strcmp(cmd,"/joinevent",true) == 0)
{
if(eventclosed==1) return SendClientMessage(playerid,COLOR_GRAD1,"Евентът е затворен!");
if(eventmembers>eventlimit-1) return SendClientMessage(playerid,COLOR_GRAD1,"Достигнат е лимитър за влизане в евента!");
if(startedevent==0) return SendClientMessage(playerid,COLOR_GRAD1,"В момента няма евент!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти вече си в евент!");
if(GetPlayerVehicleID(playerid)!=0 && spawned[playerid]==1 && eev==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си пешеходец за да влзеш в евента!");
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш, докато си в дуел!");}
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш, докато си в DMON!");}
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(PlayerInfo[playerid][pADuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш, защото си ADMIN ON-DUTY!");
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pInDM]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш, докато си в Deathmatch!");}
if(PlayerInfo[playerid][pOrganisator]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш, защото си организатора му!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
inevent[playerid]=1;
ResetPlayerWeapons(playerid);
SetPlayerInterior(playerid, eventinterior);
SetPlayerColor(playerid,0x00FF00FF);
eventmembers+=1;
SetPlayerArmour(playerid,0); SetPlayerHealth(playerid,100);
//SendClientMessage(playerid, 0xFF9933FF, "CB Channel: Твоят CB Channel беше прехвърлен на 1, защото влезе в евент!");
SetPlayerPos(playerid,eventx,eventy,eventz);
SetPlayerVirtualWorld(playerid,1);
//cbchat[playerid] = 1;
if(efight==0 && eenter==0)
{
SendClientMessage(playerid, COLOR_RED , "ВНИМАНИЕ: Не удряй или стреляй и не натискай F, ENTER или TAB преди админа да е позволил !");
}
format(string, sizeof(string), "%s {80FF00}се пресъедини към евента. За да се пресъединиш и ти напиши {FF0000}/joinevent .", pname[playerid]);
SendClientMessageToAll(0xFF0000FF, string);
SendClientMessage(playerid, 0xFF0000FF, "[EVENT] Ако пожелаещ да напуснеш евента, използвай {ff0000}/leaveevent");
return 1;
}
else if(strcmp(cmd,"/leaveevent",true) == 0)
{
if(startedevent==0) return SendClientMessage(playerid,COLOR_GRAD1,"В момента няма евент!");
if(inevent[playerid]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в евент!");
SetPlayerHealth(playerid,0);
SendClientMessage(playerid, 0x80FF00FF, "Ти напусна евента!");
/*if(cbchat[playerid]>0)
{
SendClientMessage(playerid, 0xFF9933FF, "CB Chanel: Твоят CB Chanel беше изключен!");
cbchat[playerid] = 0;
}*/
return 1;
}
else if(strcmp(cmd, "/ramphelp", true)==0)
{
if(PlayerInfo[playerid][pVip]<3) return SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
SendClientMessage(playerid,0xFF0000FF,"- Информация за рампите -");
SendClientMessage(playerid,0xFFFFFFFF,"Използвай /ramping за да позволиш/забраниш рампите за себе си.");
SendClientMessage(playerid,0xFFFFFFFF,"Използвай /myramp [1-5] за да смениш твоята рампа.");
SendClientMessage(playerid,0xFFFFFFFF,"За да се появи рампа до теб натисни бутона за стреляне или опитай друг, които ти тръгва!");
return 1;
}
else if(strcmp(cmd, "/ramping", true)==0)
{
if(PlayerInfo[playerid][pVip]>=3 || freevip==1)
{
if(enabledramp[playerid]==0)
{
enabledramp[playerid]=1;
SendClientMessage(playerid,0xFFFF00FF,"Ти позволи рампите за себе си!");
SendClientMessage(playerid,0xFFFF00FF,"За да се появи рампа пред теб натисни бутона за стреляне или опитай друг, които ти тръгва!");
}
else
{
SendClientMessage(playerid,0xFFFF00FF,"Ти забрани рампите за себе си!"); DestroyDynamicObject(rampobject[playerid]);
enabledramp[playerid]=0;
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
}
return 1;
}
else if(strcmp(cmd, "/myramp", true)==0)
{
if(PlayerInfo[playerid][pVip]<3) return SendClientMessage(playerid,COLOR_GRAD1,"Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
if(enabledramp[playerid]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си позволил рампите за себе си!");
new ramp;
tmp = strtok(cmdtext, idx);
ramp = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ramp [1-5]");
return 1;
}
if(ramp<1||ramp>5)
{
SendClientMessage(playerid, COLOR_GRAD1, "Рампите са от 1 до 5!");
return 1;
}
if(enabledramp[playerid]==ramp) return SendClientMessage(playerid,COLOR_GRAD1,"Ти вече си избрал тази рампа!");
SendClientMessage(playerid,0xFFFF00FF,"Ти смени твоята рампа!");
enabledramp[playerid]=ramp;
return 1;
}
else if(strcmp(cmd, "/houseobject", true) == 0)
{
if(PlayerInfo[playerid][pAdmin]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Тази команда е в процес на обработка!");
if(PlayerInfo[playerid][pHouseO]==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате къща!");
return 1;
}
if(enteredhouse[playerid]!=PlayerInfo[playerid][pHouseO])
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да сте в своята къща за да използваш тази команда!");
return 1;
}
tmp = strtok(cmdtext, idx);
new objectid = strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /houseobject [ID]");
return 1;
}
if(HouseInfo[PlayerInfo[playerid][pHouseO]][hObjects]>14)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате повече от 14 мебела!");
return 1;
}
HouseInfo[PlayerInfo[playerid][pHouseO]][hObjects]++;
new i = HouseInfo[PlayerInfo[playerid][pHouseO]][hObjects];
new alh=enteredhouse[playerid];
HouseInfo[alh][hObjectID][i]=objectid;
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
//
editobject[playerid]=CreateDynamicObject(objectid,X[playerid],Y[playerid],Z[playerid],0.000,0.000,0.0,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
//
EditDynamicObject(playerid,editobject[playerid]);
SendClientMessage(playerid,0x00FF40FF,"Вие добавихте мебел към вашата къща за $35000!");
GivePlayerCash(playerid,-35000);
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
new housestring[60];
format(housestring,60,"hObjectID[%d]",HouseInfo[alh][hObjects]);
dini_IntSet(house,housestring,objectid);
dini_IntSet(house,"hObjects",HouseInfo[alh][hObjects]);
return 1;
}
else if(strcmp(cmd, "/househelp", true)==0)
{
SendClientMessage(playerid,0x00FF40FF,"Команди: /sellhouse /enter /exit /lockhouse /unlockhouse /health");
//	SendClientMessage(playerid,0x00FF40FF,"Команди: /housevsave /respawnveh /housev /housevcolor");
return 1;
}
else if(strcmp(cmd, "/ahelp", true)==0||strcmp(cmd, "/ah", true)==0)
{
new string2230[512];
new string2230result[1500];
if(PlayerInfo[playerid][pTest]==0 && PlayerInfo[playerid][pAdmin]==0)
{
new closeddialog=3500;
strcat(string2230result,"{B4B5B7}Нямаш достъп до тази административна команда!\n");
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{FF0000}АДМИН КОМАНДИ:",string2230result,"Изход","");
return 1;
}
if(PlayerInfo[playerid][pTest]==1)
{
format(string2230,512,"{FFFFFF}Команда{008000},\t{FF0000}Действие\n");
strcat(string2230result, string2230);
//
format(string2230,512,"{FFFFFF}/mute\t {008000}- {FF0000}заглушава играч по избор\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/muted\t {008000}- {FF0000}проверка на онлайн заглушените играчи\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/spec\t {008000}- {FF0000}наблюдение на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/specoff\t {008000}- {FF0000}спира наблюдение над играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/ta\t {008000}- {FF0000}тест админ чат\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/kick\t {008000}- {FF0000}изхвърля играч от сървъра(kick-ва)\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,3501,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}TEST {008000}ADMIN {FF0000}КОМАНДИ:",string2230result,"Изход","");
}
//other type - location - open
if(PlayerInfo[playerid][pAdmin]>=1)
{
TextDrawShowForPlayer(playerid, Intro[0]);
format(string2230,512,"{FFFFFF}Команда{008000},\t{FF0000}Действие\n");
strcat(string2230result, string2230);
format(string2230,512,"{40A044}Помощник\tCommands\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/mute\t {008000}- {FF0000}заглушава играч по избор\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/muted\t {008000}- {FF0000}проверка на онлайн заглушените играчи\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/unmute\t {008000}- {FF0000}премахва заглушаване на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/spec\t {008000}- {FF0000}наблюдение на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/specoff\t {008000}- {FF0000}спира наблюдение над играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/kick\t {008000}- {FF0000}изхвърля играч от сървъра(kick-ва)\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,96,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}HELPER {008000}ADMIN LEVEL {FF0000}КОМАНДИ\n",string2230result,"Напред","Изход");
}
return 1;
}
else if(strcmp(cmd, "/site", true) == 0)
{
if(sitec[playerid] == 0)
{
SendClientMessage(playerid, 0xFFFF00FF, "- Вие премахнахте сайта от екрана -");
TextDrawHideForPlayer(playerid, intensetext);
sitec[playerid] = 1;
return 1;
}
if(sitec[playerid] == 1)
{
SendClientMessage(playerid, 0xFFFF00FF, "- Вие сложихте сайта на екрана -");
TextDrawShowForPlayer(playerid, intensetext);
sitec[playerid] = 0;
return 1;
}
return 1;
}
else if(strcmp(cmd, "/time", true) == 0)
{
if(timec[playerid] == 0)
{
SendClientMessage(playerid, 0xFFFF00FF, "- Вие премахнахте вашия часовника и дата от екрана -");
TextDrawHideForPlayer(playerid, ClockDate);
timec[playerid] = 1;
return 1;
}
if(timec[playerid] == 1)
{
SendClientMessage(playerid, 0xFFFF00FF, "- Вие сложихте вашия часовник и дата на екрана -");
TextDrawShowForPlayer(playerid, ClockDate);
timec[playerid] = 0;
return 1;
}
return 1;
}
else if(strcmp(cmd, "/fixveh", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] < 4)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
return 1;
}
if(IsPlayerInAnyVehicle(playerid))
{
SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
RepairVehicle(GetPlayerVehicleID(playerid));
PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
SendClientMessage(playerid, 0xFFFFFFFF, "- Вие поправихте вашето превозно средство -");
}
return 1;
}
else if(strcmp(cmd, "/givecashall", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /givecashall [cash]");
return 1;
}
new money;
money = strval(tmp);
if (PlayerInfo[playerid][pAdmin] >= 5)
{
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
GivePlayerCash(i, money);
}
new string150[150];
format(string150,150, "[ADMIN] %s подари $%d на всички играчи в сървъра в момента", pname[playerid], money);
SendClientMessageToAll(COLOR_RED,string150);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/giveepall", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /giveepall [EP]");
return 1;
}
new exp;
exp = strval(tmp);
if (PlayerInfo[playerid][pAdmin] >= 5)
{
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
PlayerInfo[i][pEP] += exp;
GivePlayerEP(i,0);
}
new string150[150];
format(string150,150, "[ADMIN] %s подари %d EP на всички играчи в сървъра в момента", pname[playerid], exp);
SendClientMessageToAll(COLOR_RED,string150);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/settime", true) == 0)
{
if(IsPlayerConnected(playerid))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /settime [ID на играч] [time]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(para1[playerid] == INVALID_PLAYER_ID)
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е в сървъра!");
return 1;
}
if(inevent[playerid]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е в евента!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /settime [ID на играч] [time]");
return 1;
}
new hour;
hour = strval(tmp);
if(hour<0 || hour>23) return SendClientMessage(playerid, COLOR_GRAD1, "Часът трябва да бъде от 0 до 23!");
if (PlayerInfo[playerid][pEvent] >= 1)
{
SetPlayerTime(para1[playerid], hour, 0);
new string60[60];
format(string60,60, "- %s смени твоя час на %dч. -",pname[playerid], hour);
SendClientMessage(para1[playerid], 0xFF0000, string60);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
}
return 1;
}
else if(strcmp(cmd, "/settimeall", true) == 0)
{
if(IsPlayerConnected(playerid))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /settimeall [time]");
return 1;
}
new hour;
hour = strval(tmp);
if(hour<0 || hour>23) return SendClientMessage(playerid, COLOR_GRAD1, "Часът трябва да бъде от 0 до 23!");
if (PlayerInfo[playerid][pAdmin] >= 5)
{
SetWorldTime(hour);
new string90[90];
format(string90,90, "ADMIN: %s промени часа на сървъра, вече той е [%d ч.]",pname[playerid], hour);
SendClientMessageToAll(COLOR_RED, string90);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
}
return 1;
}
else if(strcmp(cmd, "/weather", true) == 0)
{
if(IsPlayerConnected(playerid))
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /weather [0-45]");
return 1;
}
new hour;
hour = strval(tmp);
if(hour<0 || hour>45) return SendClientMessage(playerid, COLOR_GRAD1, "Времето трябва да бъде от 0 до 45!");
if (PlayerInfo[playerid][pAdmin] >= 4)
{
SetWeather(hour); serverWeather=hour;
new string90[90];
format(string90,90, "Типът време беше сменено от %s на ID: %d",pname[playerid], hour);
SendClientMessageToAll(0xE60000FF, string90);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
}
return 1;
}
else if(strcmp(cmd, "/caskrescars", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >3 || PlayerInfo[playerid][pManage]==1)
{
if(respawncarsvote2==0) { return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма гласуване!"); }
new string100[100];
format(string100, 100, "[ВОТ] %s отмени гласуването за RESPAWN на превозните средства",pname[playerid]);
SendClientMessageToAll(0x61E0FFFF, string100);
respawncarsvote2 = 0;
for(new i=0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
PlayerInfo[i][pNone] = 0;
PlayerInfo[i][pYes] = 0;
PlayerInfo[i][pNo] = 0;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/crespawncars", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >3 || PlayerInfo[playerid][pManage]==1)
{
if(respawncarsvote==0) { return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма пуснат брояч за RESPAWN CARS!"); }
new string100[100];
format(string100, 100, "[ВОТ] %s отмени RESPAWN на превозните средства",pname[playerid]);
SendClientMessageToAll(0x61E0FFFF, string100);
respawncarsvote=0;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/endvote", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >3 || PlayerInfo[playerid][pEvent]==1)
{
if(votetime==0) { return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма гласуване!"); }
new string256[256];
format(string256, 256, "[ВОТ] %s отмени гласуването на въпрос %s",pname[playerid], votetext);
SendClientMessageToAll(0x61E0FFFF, string256);
votetime = 0;
for(new i=0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
PlayerInfo[i][pNone] = 0;
PlayerInfo[i][pYes] = 0;
PlayerInfo[i][pNo] = 0;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd,"/arefuel",true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 4)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481
&& GetVehicleModel(GetPlayerVehicleID(playerid)) == 509
&& GetVehicleModel(GetPlayerVehicleID(playerid)) == 510
&& GetVehicleModel(GetPlayerVehicleID(playerid)) == 481)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не може да бъде заредено с бензин!");
}
if(GetPlayerVehicleID(playerid) == 0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство!");
}
if(vehfuel[GetPlayerVehicleID(playerid)] == 100)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Твоето превозно средство има 100 литра бензин!");
}
if(PlayerInfo[playerid][pWanted] >= 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда, докато си заподозрян!");
return 1;
}
if(PlayerInfo[playerid][pARefuel]>0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Не са минали 6 минути от последното използване на командата!");
}
SendClientMessage(playerid,0xFFFF00FF,"Ти добави 100 литра бензин на твоето превозно средство");
vehfuel[GetPlayerVehicleID(playerid)] = 100; PlayerInfo[playerid][pARefuel] = 6*120;
return 1;
}
else if(strcmp(cmd,"/arefuelall",true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 4)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
new string120[120];
format(string120,120,"REFUEL CARS: %s презареди всички превозни средства !",pname[playerid]);
SendClientMessageToAll(0xE60000FF,string120);
yesrefuel=1; hhrefuel=hours; mmrefuel=minutes; ssrefuel=seconds; format(playerrefuel,115,"%s",pname[playerid]);
for(new cars = 0; cars < MAX_VEHICLES; cars++)
vehfuel[cars] = 100;
return 1;
}
else if(strcmp(cmd,"/checkfuelcars",true)==0)
{
if(PlayerInfo[playerid][pAdmin] < 4)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
if(yesrefuel==0) { return SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Днес REFUEL CARS не е бил правен."); }
new string256[256];
format(string256,256,"SERVER: Последният REFUEL CARS е направен от %s на %d.%d.%d г. в %d:%d:%d часа.",playerrefuel,day,month,year,hhrefuel,mmrefuel,ssrefuel);
SendClientMessage(playerid, 0xFFFFFFFF,string256);
return 1;
}
else if(strcmp(cmd, "/respawncars", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >3 || PlayerInfo[playerid][pManage]==1)
{
new string140[140];
format(string140, 140, "%s даде команда, всички превозни средства ще бъдат RESPAWN след 10 секунди",pname[playerid]);
SendClientMessageToAll(0xE60000FF, string140);
respawncarsvote=20;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/askrescars", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >3 || PlayerInfo[playerid][pManage]==1)
{
if(respawncarsvote!=0) { return SendClientMessage(playerid, COLOR_GRAD1, "В момента има очакване за Respawn Cars!"); }
if(respawncarsvote2!=0 || votetime!=0) { return SendClientMessage(playerid, COLOR_GRAD1, "В момента има гласуване!"); }
new string170[170];
format(string170, 170, "%s започна гласуване за RESPAWN на всички превозни средства!",pname[playerid]);
SendClientMessageToAll(0xE60000FF, string170);
SendClientMessageToAll(0xE60000FF, "--- Гласуването се извършва, чрез командата /vote ---");
respawncarsvote2 = 2*15;
for(new i=0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
PlayerInfo[i][pNone] = 0;
PlayerInfo[i][pYes] = 0;
PlayerInfo[i][pNo] = 0;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/startvote", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >3 || PlayerInfo[playerid][pEvent]==1)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /startvote [question]");
return 1;
}
if(votetime!=0) { return SendClientMessage(playerid, COLOR_GRAD1, "В момента има гласуване!"); }
if(respawncarsvote2!=0) { return SendClientMessage(playerid, COLOR_GRAD1, "В момента има гласуване!"); }
new string170[170];
format(string170, 170, "[ВОТ] %s зададе въпрос: %s, гласувайте сега",pname[playerid], result);
SendClientMessageToAll(0x61E0FFFF, string170);
SendClientMessageToAll(0x61E0FFFF, "--- Гласуването се извършва, чрез /poll в рамките на 2 минути ---");
votetime = 2*120;
format(votetext, 256, "%s", result);
for(new i=0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
PlayerInfo[i][pNone] = 0;
PlayerInfo[i][pYes] = 0;
PlayerInfo[i][pNo] = 0;
}
votetime = 2*60;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/c", true) == 0)
{
if(startedevent==1) return  SendClientMessage(playerid, COLOR_GRAD1, "В момента има евент и не можеш да пускаш брояч!");
if(activecount == 0)
{
new string70[70];
format(string70,70,"•• %s started count ••",pname[playerid]);
SendClientMessageToAll(0x33CCFFFF,string70);
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-~y~ 3 ~g~-", 1500, 3);
activecount = 1;
counttime0 = 3;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "В момента има активен брояч!");
}
return 1;
}
else if(strcmp(cmd, "/vote", true) == 0)
{
if(respawncarsvote2 <1)
{
SendClientMessage(playerid, COLOR_GRAD1, "В момента няма гласуване!");
return 1;
}
if(PlayerInfo[playerid][pYes] == 1 || PlayerInfo[playerid][pNo] == 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си гласувал за RESPAWN CARS!");
return 1;
}
ShowPlayerDialog(playerid,11,DIALOG_STYLE_MSGBOX,"{60FA00}VOTЕ:","{60FA00}Да бъдат ли RESPAWN-нати превозните средства ?","ДА","НЕ");
return 1;
}
else if(strcmp(cmd, "/poll", true) == 0)
{
if(votetime <1)
{
SendClientMessage(playerid, COLOR_GRAD1, "В момента няма гласуване!");
return 1;
}
if(PlayerInfo[playerid][pYes] == 1 || PlayerInfo[playerid][pNo] == 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си гласувал!");
return 1;
}
new string180[180];
format(string180, 180, "{60FA00}%s",votetext);
ShowPlayerDialog(playerid,11,DIALOG_STYLE_MSGBOX,"VOTЕ:",string180,"ДА","НЕ");
return 1;
}
else if(strcmp(cmd, "/destroycars", true)== 0)
{
if(PlayerInfo[playerid][pAdmin] >2){
if(spawnedcars>0)
{
SendClientMessage(playerid, COLOR_RED, "Ти унищожи всички SPAWNED превозни средства!"); }
if(spawnedcars==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Няма спаунати превозни средства!");
return 1;
}
for(new aveh=0;aveh<MAX_VEHICLES;aveh++)
{
if(VehicleInfo[aveh][vASpawn] !=-1)
{
spawnedcars=0;
DestroyVehicle(aveh);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/destroycar", true)== 0)
{
if(PlayerInfo[playerid][pAdmin] >2)
{
if(GetPlayerVehicleID(playerid)==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превозно средство!");
return 1;
}
if(VehicleInfo[GetPlayerVehicleID(playerid)][vASpawn] !=-1)
{
SendClientMessage(playerid, COLOR_RED, "Ти унищожи превозното средство!");
spawnedcars-=1;
DestroyVehicle(GetPlayerVehicleID(playerid));
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да унищожиш това превозно средство!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/plate", true) == 0)
{
if(IsPlayerInRangeOfPoint(playerid, 10, 1838.5139,-1856.2627,13.3828) || IsPlayerInRangeOfPoint(playerid, 10, -1786.8502,1205.3788,25.1250) || IsPlayerInRangeOfPoint(playerid, 10, 2005.9323,2298.5537,10.8203))
{
if(IsPlayerInRangeOfPoint(playerid, 10, 2005.9323,2298.5537,10.8203))
{
if(BizInfo[1][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да смениш текста на превозното си средство!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /plate [text]");
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шофьр!");
if(strlen(tmp)<1 || strlen(tmp)>8)
{
SendClientMessage(playerid,COLOR_GRAD1,"Символите трябва да са от 1 до 8!");
return 1;
}
if(PlayerInfo[playerid][pCash] >= 500)
{
GivePlayerCash(playerid, -500);
new vehicleid = GetPlayerVehicleID(playerid);
SetVehicleNumberPlate(vehicleid,tmp);
RemovePlayerFromVehicle(playerid);
new Float:x, Float:y, Float:z, Float:zr;
new vh;
vh = GetPlayerVehicleID(playerid);
GetVehiclePos(vh, x, y, z);
GetVehicleZAngle(vh, zr);
RemovePlayerFromVehicle(playerid);
SetVehicleToRespawn(vh);
SetVehiclePos(vh, x, y, z);
SetVehicleZAngle(vh, zr);
SendClientMessage(playerid, 0xFFFFFFFF, "Ти промени текста на твоята кола!");
BizInfo[2][bEarnings]+=350;
for(new i = GetVehiclePoolSize(); i > 0; i--)
{
SetVehicleToRespawn(playerid);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш $500 за да смениш символите на превозното си средство!");
}
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1786.8502,1205.3788,25.1250))
{
if(BizInfo[2][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да смениш текста на превозното си средство!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /plate [text]");
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шофьр!");
if(strlen(tmp)<1 || strlen(tmp)>8)
{
SendClientMessage(playerid,COLOR_GRAD1,"Символите трябва да са от 1 до 8!");
return 1;
}
if(PlayerInfo[playerid][pCash] >= 500)
{
GivePlayerCash(playerid, -500);
new vehicleid = GetPlayerVehicleID(playerid);
SetVehicleNumberPlate(vehicleid,tmp);
RemovePlayerFromVehicle(playerid);
new Float:x, Float:y, Float:z, Float:zr;
new vh;
vh = GetPlayerVehicleID(playerid);
GetVehiclePos(vh, x, y, z);
GetVehicleZAngle(vh, zr);
RemovePlayerFromVehicle(playerid);
SetVehicleToRespawn(vh);
SetVehiclePos(vh, x, y, z);
SetVehicleZAngle(vh, zr);
SendClientMessage(playerid, 0xFFFFFFFF, "Ти промени текста на твоята кола!");
BizInfo[2][bEarnings]+=350;
for(new i = GetVehiclePoolSize(); i > 0; i--)
{
SetVehicleToRespawn(playerid);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш $500 за да смениш символите на превозното си средство!");
}
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1838.5139,-1856.2627,13.3828))
{
if(BizInfo[3][bOwner]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма притежател и не можеш да смениш текста на превозното си средство!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /plate [text]");
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шофьр!");
if(strlen(tmp)<1 || strlen(tmp)>8)
{
SendClientMessage(playerid,COLOR_GRAD1,"Символите трябва да са от 1 до 8!");
return 1;
}
if(PlayerInfo[playerid][pCash] >= 500)
{
GivePlayerCash(playerid, -500);
new vehicleid = GetPlayerVehicleID(playerid);
SetVehicleNumberPlate(vehicleid,tmp);
RemovePlayerFromVehicle(playerid);
new Float:x, Float:y, Float:z, Float:zr;
new vh;
vh = GetPlayerVehicleID(playerid);
GetVehiclePos(vh, x, y, z);
GetVehicleZAngle(vh, zr);
RemovePlayerFromVehicle(playerid);
SetVehicleToRespawn(vh);
SetVehiclePos(vh, x, y, z);
SetVehicleZAngle(vh, zr);
SendClientMessage(playerid, 0xFFFFFFFF, "Ти промени текста на твоята кола!");
BizInfo[1][bEarnings]+=350;
for(new i = GetVehiclePoolSize(); i > 0; i--)
{
SetVehicleToRespawn(playerid);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш $500 за да смениш символите на превозното си средство!");
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си до бизнес за сменяне на номерата на колата!");
}
return 1;
}
else if(strcmp(cmd, "/driftveh", true) == 0)
{
if (indrift[playerid]==1)
{
new string22302[512];
new string22302result[2230];
format(string22302,512,"{FFFFFF}Elegy {00ff00} - Топ Избор за Дрифт\n");
strcat(string22302result, string22302);
format(string22302,512,"{FFFFFF}Tursimo {00ff00} - Топ Избор за Дрифт\n");
strcat(string22302result, string22302);
format(string22302,512,"{FFFFFF}Bullet {00ff00} - Топ Избор за Дрифт\n");
strcat(string22302result, string22302);
format(string22302,512,"{FFFFFF}Sultan {33aa33} - Добър за дрифт\n");
strcat(string22302result, string22302);
format(string22302,512,"{FFFFFF}Super GT {33aa33} - Добър за дрифт\n");
strcat(string22302result, string22302);
format(string22302,512,"{FFFFFF}Infernus {33aa33} - Добър за дрифт\n");
strcat(string22302result, string22302);
format(string22302,512,"{FFFFFF}Cheetah {ffff00} - Среден вариант\n");
strcat(string22302result, string22302);
format(string22302,512,"{FFFFFF}Jester {ffff00} - Среден вариант\n");
strcat(string22302result, string22302);
format(string22302,512,"{FFFFFF}Phoenix {ffff00} - Среден вариант\n");
strcat(string22302result, string22302);
format(string22302,512,"{FFFFFF}Uranus {ff0000} - Лош вариант\n");
strcat(string22302result, string22302);
format(string22302,512,"{FFFFFF}Club {ff0000} - Лош вариант\n");
strcat(string22302result, string22302);
ShowPlayerDialog(playerid,114,DIALOG_STYLE_LIST,"Cars",string22302result,"Избери","Излез");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в Drift за да използваш тази команда!");
}
return 1;
}
else if(strcmp(cmd, "/veh", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] < 2)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /veh [vehid] [color1] [color2]");
return 1;
}
new car;
car = strval(tmp);
if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GRAD1, "Номерата на превозните средства трябва да са от 400 до 612!"); return 1; }
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /veh [carid] [color1] [color2]");
return 1;
}
new color1;
color1 = strval(tmp);
if(color1 < 0 || color1 > 255) { SendClientMessage(playerid, COLOR_GRAD1, "Номерата на цветовете трябва да са от 0 до 255!"); return 1; }
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /veh [carid] [color1] [color2]");
return 1;
}
new color2;
color2 = strval(tmp);
if(color2 < 0 || color2 > 255) { SendClientMessage(playerid, COLOR_GRAD1, "Номерата на цветовете трябва да са от 0 до 255!"); return 1; }
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
new carid = AddStaticVehicle(car, X[playerid],Y[playerid],Z[playerid], 0.0, color1, color2);
LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
PutPlayerInVehicle(playerid, carid, 0);
VehicleInfo[carid][vASpawn]=playerid;
spawnedcars+=1;
new string50[50];
format(string50, 50, "Vehicle ID %d spawned!",GetPlayerVehicleID(playerid));
SendClientMessage(playerid, 0xFFFFFFFF, string50);
return 1;
}
else if(strcmp(cmd, "/unjail", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unjail [ID на играч]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
if(PlayerInfo[para1[playerid]][pJail] > 0)
{
PlayerInfo[para1[playerid]][pJail] = 0; SetPlayerHealth(para1[playerid],0);
new string140[140];
format(string140, 140, "%s беше освободен от затвора, благодарение на админ %s",pname[para1[playerid]] ,pname[playerid]);
SendClientMessageToAll(0x00E600FF,string140);
//0x40BF00FF
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е в админ затвора!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/unmute", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unmute [ID на играч]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
if(PlayerInfo[para1[playerid]][pMuted] > 0 || PlayerInfo[para1[playerid]][pADMINMute]==1)
{
PlayerInfo[para1[playerid]][pMuted] = 0; PlayerInfo[para1[playerid]][pADMINMute]=0; PlayerInfo[para1[playerid]][pLMuted] = 0;
new string130[130];
PlayerInfo[para1[playerid]][pMuted] = 0;
format(string130, 130, "%s беше отглушен в чата от %s",pname[para1[playerid]] ,pname[playerid]);
SendClientMessageToAll(0x00E600FF,string130);
//0x40BF00FF
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е заглушен!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
if (strcmp(cmdtext, "/muted", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
SendClientMessage(playerid, 0x40BF00FF, "Онлайн заглушени играчи:");
new muted = 0;
new string60[60];
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pMuted] > 0 || PlayerInfo[i][pADMINMute]==1)
{
format(string60, 60, "%s (ID:%d)", pname[i], i);
SendClientMessage(playerid,0xFFFFFFFF,string60);
muted = 1;
}
}
if (muted == 0) SendClientMessage(playerid,0xE60000FF,"Няма онлайн заглушени играчи.");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
if (strcmp(cmdtext, "/jailed", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
SendClientMessage(playerid, 0x40BF00FF, "Онлайн играчи в затвора:");
new muted = 0;
new string60[60];
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pJail] > 0)
{
format(string60, 60, "%s (ID:%d)", pname[i], i);
SendClientMessage(playerid,0xFFFFFFFF,string60);
muted = 1;
}
}
if (muted == 0) SendClientMessage(playerid,0xE60000FF,"Няма онлайн онлайн играчи в затвора.");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/specoff", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pTest] == 1 || brotheropen==1)
{
if(specing[playerid] == 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "В момента не наблюдаваш играч!");
return 1;
}
TogglePlayerSpectating(playerid, 0);
SetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
SetPlayerFacingAngle(playerid, Unspec[playerid][sAngle]);
SetPlayerInterior(playerid, Unspec[playerid][sPint]);
SetPlayerVirtualWorld(playerid, Unspec[playerid][sVw]);
specing[playerid] = 0;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/aka", true)==0)
{
if(PlayerInfo[playerid][pAdmin]<2) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /aka [ID на играч]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
new akafiles[35];
new allnicknames[500];
new ip[35]; GetPlayerIp(para1[playerid],ip,35);
new string2230result[1300];
format(akafiles, 35, "/Aka/%s.ini", PlayerInfo[para1[playerid]][pIP]);
if(dini_Exists(akafiles))
{
format(allnicknames,256,"%s",dini_Get(akafiles,"Nicknames"));
format(string2230result,1300,"{FFFFFF}Nicknames, използвани от IP-то на %s (ID: %d)\n{7ff61b}IP:%s  ,  Всички имена:\n{FF0000}%s",pname[para1[playerid]],para1[playerid],ip,allnicknames);
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"AKA",string2230result,"OK","");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Посоченото ID няма aka файл!");
}
//<----------------------------------------------->
return 1;
}
else if(strcmp(cmd, "/spec", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /spec [ID на играч]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
if(PlayerInfo[playerid][pTSpec]==0) { return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш позволение да наблюдаваш играчите!");}
if(playerid == para1[playerid])
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да наблюдаваш себе си!");
return 1;
}
if (PlayerInfo[para1[playerid]][pBSpec] == 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч е забранил да го наблюдават!");
return 1;
}
if(specing[playerid] == 0)
{
GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
Unspec[playerid][sPint] = GetPlayerInterior(playerid);
Unspec[playerid][sVw] = GetPlayerVirtualWorld(playerid);
GetPlayerFacingAngle(playerid, Unspec[playerid][sAngle]);
}
specing[playerid] = 1;
TogglePlayerSpectating(playerid, 1);
SetPlayerInterior(playerid, GetPlayerInterior(para1[playerid]));
SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(para1[playerid]));
if(IsPlayerInAnyVehicle(para1[playerid]))
{
new carid = GetPlayerVehicleID(para1[playerid]);
PlayerSpectateVehicle(playerid, carid);
}
else
{
PlayerSpectatePlayer(playerid, para1[playerid]);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/jail", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)//3
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /jail [ID на играч] [опция]");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 1: Пречи на хората да работят, Опции 2: Грешен Report, Опции 3: Опасен Glitch");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 4: Фалшиво оплакване във форума, Опции 5: Оплакване от играч");
SendClientMessage(playerid, 0xFFFF00FF, "Опции 6: Пречи на ADUTY админ, Опции 7: Друго нарушение");
return 1;
}
new level[32];
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /jail [ID на играч] [опция]");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 1: Пречи на хората да работят, Опции 2: Грешен Report, Опции 3: Опасен Glitch");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 4: Фалшиво оплакване във форума, Опции 5: Оплакване от играч");
SendClientMessage(playerid, 0xFFFF00FF, "Опции 6: Пречи на ADUTY админ, Опции 7: Друго нарушение");
return 1;
}
strmid(level, tmp, 0, 32);
if(para1[playerid] != INVALID_PLAYER_ID)//2
{
if(strval(level)<1||strval(level)>8)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /jail [ID на играч] [опция]");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 1: Пречи на хората да работят, Опции 2: Грешен Report,Опции 3: Опасен Glitch");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 4: Фалшиво оплакване във форума, Опции 5: Оплакване от играч");
SendClientMessage(playerid, 0xFFFF00FF, "Опции 6: Пречи на ADUTY админ, Опции 7: Друго нарушение");
return 1;
}
if(PlayerInfo[para1[playerid]][pJail] == 0)//1
{
new jailreasonStr[256];
switch(strval(level))
{
case 1:
format(jailreasonStr,256,"Пречи на хората да работят");
case 2:
format(jailreasonStr,256,"Грешен Report");
case 3:
format(jailreasonStr,256,"Опасен Glitch");
case 4:
format(jailreasonStr,256,"Фалшиво оплакване във форума");
case 5:
format(jailreasonStr,256,"Оплакване от играч");
case 6:
format(jailreasonStr,256,"Пречи на ADUTY админ");
case 7:
format(jailreasonStr,256,"Друго нарушение");
}
new strLevel=strval(level);
ResetPlayerWeapons(para1[playerid]);
SetPlayerVirtualWorld(para1[playerid],1);
SetPlayerInterior(para1[playerid],4);
SetPlayerPos(para1[playerid],299.7077,303.4193,999.1484);
SetPlayerAttachedObject(para1[playerid], 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977,-81.700035, 0.891999, 1.000000, 1.168000);
SetPlayerSpecialAction(para1[playerid], SPECIAL_ACTION_CUFFED);
new string256[256];
PlayerInfo[para1[playerid]][pJail] = (strLevel*8)*120;
format(string256, 256, "%s е наказан в ADMIN JAIL от %s [Причина: %s] за %d минути",pname[para1[playerid]], pname[playerid], jailreasonStr,strLevel*8);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pJailReason] = strLevel;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч вече е в затвора!");
}//1
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Играчът в момента не е онлайн!");
}//2
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}//3
return 1;
}
/*
else if(strcmp(cmd, "/ajail", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
new result[256];
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ajail [nickname] [опция]");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 1: Каране на Job Vehicle за собствени цели, 2: Биене/Крадене на кола в тунинг гараж, 3: Лъже играчите, 4: DB без шофьор");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 5: Пречи на хората да работят, 6: Грешен Report/Advert, 7: Биене на TFC служител On-Duty, 8: Glitch, 9: Оплакване във форума");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 10: Грешно използване на /me или /do, 11: AFK в Job Vehicle, 12: Биене на ADMIN ON-DUTY, 13: Самоубива се на DMON");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 14: Прочети правилата /rules");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
new level[32];
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ajail [nickname] [опция]");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 1: Каране на Job Vehicle за собствени цели, 2: Биене/Крадене на кола в тунинг гараж, 3: Лъже играчите, 4: DB без шофьор");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 5: Пречи на хората да работят, 6: Грешен Report/Advert, 7: Биене на TFC служител On-Duty, 8: Glitch, 9: Оплакване във форума");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 10: Грешно използване на /me или /do, 11: AFK в Job Vehicle, 12: Биене на ADMIN ON-DUTY, 13: Самоубива се на DMON");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 14: Прочети правилата /rules");
return 1;
}
strmid(level, tmp, 0, 32);
if(strval(level)<1||strval(level)>14)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ajail [nickname] [опция]");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 1: Каране на Job Vehicle за собствени цели, 2: Биене/Крадене на кола в тунинг гараж, 3: Лъже играчите, 4: DB без шофьор");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 5: Пречи на хората да работят, 6: Грешен Report/Advert, 7: Биене на TFC служител On-Duty, 8: Glitch, 9: Оплакване във форума");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 10: Грешно използване на /me или /do, 11: AFK в Job Vehicle, 12: Биене на ADMIN ON-DUTY, 13: Самоубива се на DMON");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 14: Прочети правилата /rules");
return 1;
}
new stringnickname[115];
format(stringnickname, 115, "%s.ini",result);
if (strcmp(level, "1", true) == 0 ||
strcmp(level, "2", true) == 0 ||
strcmp(level, "3", true) == 0 ||
strcmp(level, "4", true) == 0 ||
strcmp(level, "5", true) == 0 ||
strcmp(level, "6", true) == 0 ||
strcmp(level, "7", true) == 0 ||
strcmp(level, "8", true) == 0 ||
strcmp(level, "9", true) == 0 ||
strcmp(level, "10", true) == 0 ||
strcmp(level, "11", true) == 0 ||
strcmp(level, "12", true) == 0 ||
strcmp(level, "13", true) == 0 ||
strcmp(level, "14", true) == 0)
{
if(!dini_Exists(stringnickname))
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(strcmp(result,pname[i],true)==0)
{
if(PlayerInfo[i][pJail] == 1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч вече е в затвора!");
}
}
else
{
if(dini_Int(stringnickname, "pJail")>0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Този играч вече е в затвора!");
}
}
}
}
new string256[256];
if (strcmp(level, "1", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 1);
dini_IntSet(stringnickname, "pJail", 15*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 15 minutes. [Reason: Каране на Job Vehicle за собствени цели]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "2", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 2);
dini_IntSet(stringnickname, "pJail", 15*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 15 minutes. [Reason: Биене/Крадене на кола в тунинг гараж]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "3", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 3);
dini_IntSet(stringnickname, "pJail", 20*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 20 minutes. [Reason: Лъже играчите]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "4", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 4);
dini_IntSet(stringnickname, "pJail", 20*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 20 minutes. [Reason: DB без шофьор]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "5", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 5);
dini_IntSet(stringnickname, "pJail", 25*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 25 minutes. [Reason: Пречи на хората да работят]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "6", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 6);
dini_IntSet(stringnickname, "pJail", 25*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 25 minutes. [Reason: Грешен Report/Advert]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "7", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 7);
dini_IntSet(stringnickname, "pJail", 25*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 25 minutes. [Reason: Биене на TFC служител On-Duty]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "8", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 8);
dini_IntSet(stringnickname, "pJail", 35*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 35 minutes. [Reason: Glitch]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "9", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 9);
dini_IntSet(stringnickname, "pJail", 35*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 35 minutes. [Reason: Оплакване във форума]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "10", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 10);
dini_IntSet(stringnickname, "pJail", 35*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 35 minutes. [Reason: Грешно използване на /me или /do]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "11", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 11);
dini_IntSet(stringnickname, "pJail", 35*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 35 minutes. [Reason: AFK в Job Vehicle]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "12", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 12);
dini_IntSet(stringnickname, "pJail", 40*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 40 minutes. [Reason: Биене на ADMIN ON-DUTY]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "13", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 13);
dini_IntSet(stringnickname, "pJail", 15*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 15 minutes. [Reason: Самоубива се на DMON]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
if (strcmp(level, "14", true) == 0)
{
dini_IntSet(stringnickname, "pJailReason", 14);
dini_IntSet(stringnickname, "pJail", 20*120);
format(string256, 256, "ADMIN: %s was jailed by %s for 5 minutes. [Reason: Прочети правилата /rules]",result, pname[playerid]);
SendClientMessageToAll(0xE60000FF,string256);
}
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(strcmp(result,pname[i],true)==0)
{
PlayerInfo[i][pJailReason]= dini_Int(stringnickname, "pJailReason");
PlayerInfo[i][pJail]= dini_Int(stringnickname, "pJail");
ResetPlayerWeapons(i);
SetPlayerVirtualWorld(i,1);
SetPlayerInterior(i,4);
SetPlayerPos(i,299.7077,303.4193,999.1484);
SetPlayerAttachedObject(i, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977,-81.700035, 0.891999, 1.000000, 1.168000);
SetPlayerSpecialAction(i, SPECIAL_ACTION_CUFFED);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
*/
else if(strcmp(cmd, "/checkbank", true) == 0)
{
new stringbank[256];
if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /checkbank [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
format(stringbank, 256, "Играчът %s има $%d в неговата обща сума!", pname[para1[playerid]],PlayerInfo[para1[playerid]][pAccount]);
SendClientMessage(playerid, 0x40BF00FF, stringbank);
return 1;
}
else if(strcmp(cmd, "/checkwarns", true) == 0)
{
new stringbank[256];
if (PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /checkwarns [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
format(stringbank, 256, "%s има - %d Warns", pname[para1[playerid]],PlayerInfo[para1[playerid]][pWarns]);
SendClientMessage(playerid, 0xFFFFFFFF, stringbank);
return 1;
}
else if(strcmp(cmd, "/unmuteall", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
new string80[80];
format(string80, 80, "%s unmuted all players in The Server", pname[playerid]);
SendClientMessageToAll(COLOR_GREEN,string80);
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
PlayerInfo[i][pMuteReason] = 0; PlayerInfo[i][pMuted]=0;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/muteall", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
new string80[80];
format(string80, 80, "ADMIN: %s muted all players in The Server", pname[playerid]);
SendClientMessageToAll(COLOR_RED,string80);
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i)) PlayerInfo[i][pMuteReason] = 6;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/mute", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /mute [ID на играч] [опция]");
SendClientMessage(playerid, 0x00FF00FF, "Опции: 1: Спам, 2: Псуване/Обиждане, 3: Спам/Псуване/Обиждане");
SendClientMessage(playerid, 0x00FF00FF, "Опции: 4: Пречи на играта, 5: Друго");
return 1;
}
new level[32];
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /mute [ID на играч] [опция]");
SendClientMessage(playerid, 0x00FF00FF, "Опции: 1: Спам, 2: Псуване/Обиждане, 3: Спам/Псуване/Обиждане");
SendClientMessage(playerid, 0x00FF00FF, "Опции: 4: Пречи на играта, 5: Друго");
return 1;
}
strmid(level, tmp, 0, 32);
new string256[256];
if(strval(level)<1||strval(level)>5)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /mute [ID на играч] [опция]");
SendClientMessage(playerid, 0x00FF00FF, "Опции: 1: Спам, 2: Псуване/Обиждане, 3: Спам/Псуване/Обиждане");
SendClientMessage(playerid, 0x00FF00FF, "Опции: 4: Пречи на играта, 5: Друго");
return 1;
}
if(PlayerInfo[para1[playerid]][pMuted] == 0)
{
new levelStr=strval(level);
new mutereasonStr[256];
switch(levelStr)
{
case 1:
format(mutereasonStr,256,"Спам");
case 2:
format(mutereasonStr,256,"Псуване/Обиждане");
case 3:
format(mutereasonStr,256,"Спам/Псуване/Обиждане");
case 4:
format(mutereasonStr,256,"Пречи на играта");
case 5:
format(mutereasonStr,256,"Друго нарушение");
}
PlayerInfo[para1[playerid]][pMuted] = (15*levelStr)*120;
format(string256, 256, "%s беше заглушен от %s за %d минути [Причина: %s]",pname[para1[playerid]], pname[playerid],15*levelStr, mutereasonStr);
SendClientMessageToAll(0xE60000FF,string256);
PlayerInfo[para1[playerid]][pMuteReason] = levelStr;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч вече е заглушен!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/mute2", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /mute2 [ID на играч] [причина]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /mute2 [ID на играч] [причина]");
SendClientMessage(playerid, 0xFF0000FF, "[ВАЖНО] Този MUTE слага играчът да бъде завинаги заглушен");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /mute2 [ID на играч] [причина]");
SendClientMessage(playerid, 0xFF0000FF, "[ВАЖНО] Този MUTE слага играчът да бъде завинаги заглушен");
return 1;
}
if(strlen(result)<1 || strlen(result)>30)
{
SendClientMessage(playerid,COLOR_GRAD1,"Причината трябва да бъде с до 30 символа!");
return 1;
}
new string256[256];
PlayerInfo[para1[playerid]][pADMINMute] =1;
format(PlayerInfo[para1[playerid]][pReasonMute],256,"%s",result);
format(string256, 256, "[ВАЖНО] %s беше заглушен завинаги от %s с ПРИЧИНА: [ %s ]", pname[para1[playerid]], pname[playerid], (result));
SendClientMessageToAll(0xE60000FF, string256);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/unwarn", true) == 0)
{
if (PlayerInfo[playerid][pManage] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unwarn [ID на играч] [причина]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unwarn [ID на играч] [причина]");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unwarn [ID на играч] [причина]");
return 1;
}
if(PlayerInfo[para1[playerid]][pWarns]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч няма предупреждения!");
PlayerInfo[para1[playerid]][pWarns] -= 1;
new string256[256];
format(string256, 256, "[ВАЖНО] %s премахна едно от предупрежденията на %s -WARNS: %d/5- [Причина: %s]", pname[playerid], pname[para1[playerid]],PlayerInfo[para1[playerid]][pWarns], (result));
SendClientMessageToAll(0x00E600FF, string256);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/unawarn", true) == 0)
{
if (PlayerInfo[playerid][pManage] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unawarn [ID на играч] [причина]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unawarn [ID на играч] [причина]");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unawarn [ID на играч] [причина]");
return 1;
}
if(PlayerInfo[para1[playerid]][pAdmin]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е администратор!");
if(PlayerInfo[para1[playerid]][pAWarns]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч няма админ предупреждения!");
PlayerInfo[para1[playerid]][pAWarns] -= 1;
new string256[256];
format(string256, 256, "[ВАЖНО] %s премахна едно от админ предупрежденията на %s -AWARNS: %d/5- [Причина: %s]", pname[playerid], pname[para1[playerid]],PlayerInfo[para1[playerid]][pAWarns], (result));
SendClientMessageToAll(0x00E600FF, string256);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/awarn", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /awarn [ID на играч] [причина]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /awarn [ID на играч] [причина]");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /awarn [ID на играч] [причина]");
return 1;
}
if(PlayerInfo[para1[playerid]][pAdmin]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е администратор!");
PlayerInfo[para1[playerid]][pAWarns] += 1;
new string256[256];
format(string256, 256, "[ВАЖНО] %s сложи админ предупреждение на %s [%d/5] [Причина: %s]", pname[playerid], pname[para1[playerid]],PlayerInfo[para1[playerid]][pAWarns], (result));
SendClientMessageToAll(0xE60000FF, string256);
if(PlayerInfo[para1[playerid]][pAWarns]>=5)
{
format(string256[para1[playerid]], 256, "[GET ADMIN] %s събра 4 ADMIN предупреждения и остана без правата си!", pname[para1[playerid]]);
SendClientMessageToAll(0xE60000FF, string256[para1[playerid]]);
PlayerInfo[para1[playerid]][pTest]=0;
testmode[para1[playerid]]=0;
Act[playerid]=0;
PlayerInfo[para1[playerid]][pAdmin]=0;
PlayerInfo[para1[playerid]][pManage]=0; PlayerInfo[para1[playerid]][pEvent]=0;
PlayerInfo[para1[playerid]][pReadTA]=0;
PlayerInfo[para1[playerid]][pTimeMute]=0;PlayerInfo[para1[playerid]][pTSpec]=0;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/warn", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /warn [ID на играч] [причина]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /warn [ID на играч] [причина]");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /warn [ID на играч] [причина]");
return 1;
}
PlayerInfo[para1[playerid]][pWarns] += 1;
new string256[256];
format(string256, 256, "[WARN] %s сложи предупреждение на %s [%d/5] [Причина: %s]", pname[playerid], pname[para1[playerid]],PlayerInfo[para1[playerid]][pWarns], (result));
SendClientMessageToAll(0xE60000FF, string256);
if(PlayerInfo[para1[playerid]][pWarns]>=5)
{
format(string256[para1[playerid]], 256, "[ACCOUNT BLOCK] %s вече е блокиран профил, защото събра 5 предупреждения", pname[para1[playerid]]);
SendClientMessageToAll(0xE60000FF, string256[para1[playerid]]);
SendClientMessage(para1[playerid],0xFFFFFFFF,"[OWNERS] Пиши на притежателите за да проверят случая, Discords: danielandreevofficial#1084");
PlayerInfo[para1[playerid]][pKick]=1;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/acuff", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /acuff [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(acuffed[para1[playerid]]==1){return SendClientMessage(playerid,COLOR_GRAD1,"Този играч вече има сложени белезници на ръцете!");}
acuffed[para1[playerid]]=1;
SetPlayerAttachedObject(para1[playerid], 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977,-81.700035, 0.891999, 1.000000, 1.168000);
SetPlayerSpecialAction(para1[playerid], SPECIAL_ACTION_CUFFED);
new string120[120];
format(string120, 120, "ADMIN: %s ти сложи белезници на ръцете.", pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFFFFFF, string120);
format(string120, 120, "ADMIN: Ти сложи белезници на ръцете на %s.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF, string120);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/auncuff", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /auncuff [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(acuffed[para1[playerid]]==0){return SendClientMessage(playerid,COLOR_GRAD1,"Този играч няма белезници на ръцете!");}
RemovePlayerAttachedObject(para1[playerid], 1);
acuffed[para1[playerid]]=0;
SetPlayerSpecialAction(para1[playerid], SPECIAL_ACTION_NONE);
new string120[120];
format(string120, 120, "ADMIN: %s премахна твоите белезници от ръцете.", pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFFFFFF, string120);
format(string120, 120, "ADMIN: Ти премахна белезниците от ръцете на %s.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF, string120);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/god", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
if(PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си ADMIN ON-DUTY!");
return 1;
}
if(godmode[playerid]==0)
{
godmode[playerid]=1;
SetPlayerHealth(playerid, 99999);
SetPlayerArmour(playerid, 99999);
return SendClientMessage(playerid, 0x40BF00FF, "GODMODE: Tи активира безсмъртния режим.");
}
if(godmode[playerid]==1)
{
godmode[playerid]=0;
SetPlayerHealth(playerid, 100);
SetPlayerArmour(playerid, 100);
SendClientMessage(playerid, 0xE60000FF, "GODMODE: Tи деактивира безсмъртния режим.");
}
}else SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
return 1;
}
else if(strcmp(cmd, "/tgoto", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /tgoto [ID на играч]");
return 1;
}
//if(PlayerInfo[para1[playerid]][pAdmin]<3) {return  SendClientMessage(playerid,COLOR_GRAD1,"Този играч няма достатъчно голямо ниво админ!");}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new string160[160];
if(PlayerInfo[para1[playerid]][pTGoto]==0)
{
PlayerInfo[para1[playerid]][pTGoto] = 1;
format(string160, 160, "ADMIN: Ти позволи на %s да се телепортира до играчите.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xE60000FF, string160);
format(string160, 160, "ADMIN: %s ти позволи да се телепортираш до играчите.", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string160);
return 1;
}
if(PlayerInfo[para1[playerid]][pTGoto]==1)
{
PlayerInfo[para1[playerid]][pTGoto] = 0;
format(string160, 160, "ADMIN: Ти забрани на %s да се телепортира до играчите.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xE60000FF, string160);
format(string160, 160, "ADMIN: %s ти забрани да се телепортираш до играчите.", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string160);
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/tspec", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /tspec [ID на играч]");
return 1;
}
//if(PlayerInfo[para1[playerid]][pAdmin]<3) {return  SendClientMessage(playerid,COLOR_GRAD1,"Този играч няма достатъчно голямо ниво админ!");}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new string140[140];
if(PlayerInfo[para1[playerid]][pTSpec]==0)
{
PlayerInfo[para1[playerid]][pTSpec] = 1;
format(string140, 140, "ADMIN: Ти позволи на %s да наблюдава играчите.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xE60000FF, string140);
format(string140, 140, "ADMIN: %s ти позволи да наблюдаваш играчите.", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string140);
return 1;
}
if(PlayerInfo[para1[playerid]][pTSpec]==1)
{
PlayerInfo[para1[playerid]][pTSpec] = 0;
format(string140, 140, "ADMIN: Ти забрани на %s да наблюдава играчите.", pname[para1[playerid]]);
SendClientMessage(playerid, 0xE60000FF, string140);
format(string140, 140, "ADMIN: %s ти забрани да наблюдаваш играчите.", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string140);
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/timejail", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /timejail [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new string150[150];
if(PlayerInfo[para1[playerid]][pTimeJail]==0)
{
PlayerInfo[para1[playerid]][pTimeJail] = 1;
format(string150, 150, "ADMIN: Ти позволи на %s да вкарва играчи в затвора за време.", pname[playerid]);
SendClientMessage(playerid, 0xE60000FF, string150);
format(string150, 150, "ADMIN: %s ти позволи да вкарваш играчи в админ затвора за време.", pname[playerid]);
return SendClientMessage(para1[playerid], 0xE60000FF, string150);
}
if(PlayerInfo[para1[playerid]][pTimeJail]==1)
{
PlayerInfo[para1[playerid]][pTimeJail] = 0;
format(string150, 150, "ADMIN: Ти забрани на %s да вкарва играчи в затвора за време.", pname[playerid]);
SendClientMessage(playerid, 0xE60000FF, string150);
format(string150, 150, "ADMIN: %s ти забрани да вкарваш играчи в админ затвора за време.", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string150);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/timemute", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 4)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /timemute [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new string140[140];
if(PlayerInfo[para1[playerid]][pTimeMute]==0)
{
PlayerInfo[para1[playerid]][pTimeMute] = 1;
format(string140, 140, "ADMIN: Ти позволи на %s да заглушава за време.", pname[playerid]);
SendClientMessage(playerid, 0xE60000FF, string140);
format(string140, 140, "ADMIN: %s ти позволи да заглушаваш за време.", pname[playerid]);
return SendClientMessage(para1[playerid], 0xE60000FF, string140);
}
if(PlayerInfo[para1[playerid]][pTimeMute]==1)
{
PlayerInfo[para1[playerid]][pTimeMute] = 0;
format(string140, 140, "ADMIN: Ти забрани на %s да заглушава за време.", pname[playerid]);
SendClientMessage(playerid, 0xE60000FF, string140);
format(string140, 140, "ADMIN: %s ти забрани да заглушаваш за време.", pname[playerid]);
return SendClientMessage(para1[playerid], 0xE60000FF, string140);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/nban", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /nban [nickname]");
return 1;
}
if (PlayerInfo[playerid][pAdmin]>=3)
{
new string115[115];
format(string115, 115, "%s.ini",result);
if(dini_Exists(string115))
{
new registred=dini_Int(string115,"pRegistred");
if(registred==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч няма записано IP!");
return 1;
}
format(string115, 115, "%s.ini",result);
dini_IntSet(string115,"pBlock",1);
new hisIP[75];
format(hisIP,75,dini_Get(string115,"pIP"));
new formatban[256];
format(formatban,256,"banip %s",hisIP);
SendRconCommand(formatban);
format(string115,115,"[BLOCK] %s е блокиран с отдалечен достъп от %s", result,pname[playerid]);
SendClientMessageToAll(COLOR_RED,string115);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(strcmp(pname[i], result, true) == 0)
{
PlayerInfo[playerid][pKick]=2;
}
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/block", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /block [nickname]");
return 1;
}
if (PlayerInfo[playerid][pManage]>0)
{
new string115[115];
format(string115, 115, "%s.ini",result);
if(dini_Exists(string115))
{
if(dini_Int(string115,"pBlock")==1)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този nickname вече е блокиран!");
}
dini_IntSet(string115,"pBlock",1);
format(string115,115,"[BLOCK] %s е блокиран от администратор %s", result,pname[playerid]);
SendClientMessageToAll(COLOR_RED,string115);
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(strcmp(pname[i], result, true) == 0)
{
PlayerInfo[playerid][pKick]=2;
}
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/unblock", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unblock [nickname]");
return 1;
}
if (PlayerInfo[playerid][pManage]>0)
{
new string115[115];
format(string115, 115, "%s.ini",result);
if(dini_Exists(string115))
{
if(dini_Int(string115,"pBlock")==0)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не е блокиран!");
}
dini_IntSet(string115,"pBlock",0);
if(dini_Int(string115,"pWarns")==5)
{
dini_IntSet(string115,"pWarns",0);
}
format(string115,115,"[UNBLOCK] %s е отблокиран от администратор %s", result,pname[playerid]);
SendClientMessageToAll(0x00E600FF,string115);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/unban", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unban [nickname]");
return 1;
}
if(PlayerInfo[playerid][pManage]==1)
{
new string115[256];
format(string115, 115, "%s.ini",result);
if(dini_Exists(string115))
{
new string1152[115];
format(string1152, 256, "unbanip %s",dini_Int(string115, "pIP"));
SendRconCommand(string1152);
SendRconCommand("reloadbans");
format(string115,256,"[UNBAN] %s е UNBANNED от %s в [%d ч. %d м.]",result,pname[playerid],hours,minutes);
SendClientMessageToAll(0x00E600FF,string115);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/restartturfs", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
for(new i3;i3<MAX_TEAMS;i3++)
{
if(inturfmembers[i3]>0)
{
return SendClientMessage(playerid, COLOR_GRAD1, "В момента има Turf война и не можеш да използваш тази команда!");
}
}
for(new i3=18;i3<MAX_TURFS;i3++)
{
GangZoneStopFlashForAll(i3);
TurfInfo[i3][TurfOwner]=0;
GangZoneShowForAll(i3, 0x00000096);
}
for(new i3=1;i3<MAX_TEAMS;i3++)
{
TeamInfo[i3][tTurfs]=0;
}
TeamInfo[0][tTurfs]=300;
new string160[160];
format(string160, 160, "[TURFS] Всички територии бяха рестартирани от %s в [%d ч. %d м.]", pname[playerid],hours,minutes);
SendClientMessageToAll(0xFFFFFFFF, string160);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/nuninvite", true) == 0)
{
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /nuninvite [nickname]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
if(PlayerInfo[playerid][pRank] < 6)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
return 1;
}
if(strlen(nickname)<1 || strlen(nickname)>30)
{
SendClientMessage(playerid,COLOR_GRAD1,"Името трябва да бъде с до 30 символа!");
return 1;
}
new nickname2[64];
format(nickname2,32, "%s.ini", nickname);
new string256[256];
format(string256, 256, "[FACTION CHAT] %s изгони %s от %s!", pname[playerid],nickname,TeamInfo[PlayerInfo[playerid][pTeam]][tName]);
if(dini_Exists(nickname2))
{
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(strcmp(nickname,pname[i],true)==0)
{
if(playerid==i) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да изгониш себе си!");
for(new i2=0; i2<MAX_PLAYERS; i2++ && IsPlayerConnected(i2))
{
if(PlayerInfo[i2][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i2,0x33CCFFFF, string256);
}
else
{
return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
}
}
//
PlayerInfo[i][pFWarns]=0;
PlayerInfo[i][pDFDuty]=0;
dutypolice[i]=0;
if(turfmember[i]==2 && nospam2[i]==0)
{
inturfmembers[PlayerInfo[i][pTeam]]-=1;
turfmember[i]=0;
format(string256, 256, "Turf War: {FF0000}%s{008cff} напусна банда/мафията и отпадна от атаката!",pname[playerid]);
for(new i2=0; i2<MAX_PLAYERS; i2++ && IsPlayerConnected(i2))
{
if(PlayerInfo[i2][pTeam] == PlayerInfo[i][pTeam])
{
SendClientMessage(i2, 0x008cffFF, string256);
}
}
if(inturfmembers[PlayerInfo[i][pTeam]]==0)
{
format(string256, 256, "Turf War: {FF0000}%s{008cff} не успя да превземе %s територията на %s!",TeamInfo[PlayerInfo[i][pTeam]][tName],TurfInfo[TeamInfo[PlayerInfo[i][pTeam]][tWar]][TurfName],
TeamInfo[TurfInfo[TeamInfo[PlayerInfo[i][pTeam]][tWar]][TurfOwner]][tName]);
SendClientMessageToAll(0x008cffFF, string256);
turfwargang[TeamInfo[PlayerInfo[i][pTeam]][tWar]]=0;
//turfwargang[turfa]>0
turfattack[PlayerInfo[i][pTeam]]=0;
GangZoneStopFlashForAll(TeamInfo[PlayerInfo[i][pTeam]][tWar]);
TeamInfo[PlayerInfo[i][pTeam]][tWar]=0;
}
}
if(IsPlayerInAnyVehicle(i) == 1 && PlayerInfo[i][pADuty]==0)
{
SendClientMessage(i,0xFFFFFFFF, "- Твоят скин не се смени, защото не си пешеходец -");
}
else {
if(adutyskinchanged[i]==0){
RestartPlayerSkin(i);
}}
PlayerInfo[i][pSpawnO]=1; SendClientMessage(i, 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Civil spawn!");
if(PlayerInfo[i][pADuty]==0){SetPlayerColor(i,0xFFFFFFFF);}
PlayerInfo[i][pRank]=1;
PlayerInfo[i][pTeam]=0; GivePlayerEP(i,0);
if(PlayerInfo[i][pVip]>3 || freevip==1) SetPVarInt(i, "color", 0);
return 1;
//
}
else
{
format(string256, 256, "[FACTION CHAT] %s изгони %s от %s!", pname[playerid],nickname,TeamInfo[PlayerInfo[playerid][pTeam]][tName]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
dini_IntSet(nickname2, "pTeam", 0);
dini_IntSet(nickname2, "pRank", 0);
dini_IntSet(nickname2, "pFWarns", 0);
}
}
}
return 1;
}
else if(strcmp(cmd, "/nfwarn", true) == 0)
{
if (PlayerInfo[playerid][pRank] == 6)
{
//
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /nfwarn [nickname] [причина]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
if(strlen(nickname)<1 || strlen(nickname)>30)
{
SendClientMessage(playerid,COLOR_GRAD1,"Името трябва да бъде с до 30 символа!");
return 1;
}
new nickname2[64];
new fwarns=0;
new gang=0;
new string256[256];
format(nickname2,32, "%s.ini", nickname);
if(dini_Exists(nickname2))
{
fwarns=dini_Int(nickname2,"pFWarns");
gang=dini_Int(nickname2,"pTeam");
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(strcmp(nickname,pname[i],true)==0)
{
if(PlayerInfo[i][pTeam]!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
PlayerInfo[i][pFWarns]+=1;
dini_IntSet(nickname2, "pFWarns", PlayerInfo[i][pFWarns]);
if(PlayerInfo[i][pFWarns]==5)
{
PlayerInfo[i][pFWarns]=0;
dini_IntSet(nickname2, "pFWarns", PlayerInfo[i][pFWarns]);
PlayerInfo[playerid][pDFDuty]=0;
dutypolice[playerid]=0;
if(turfmember[i]==2 && nospam2[i]==0)
{
inturfmembers[PlayerInfo[i][pTeam]]-=1;
turfmember[i]=0;
format(string256, 256, "Turf War: {FF0000}%s{008cff} напусна банда/мафията и отпадна от атаката!",pname[playerid]);
for(new i2=0; i2<MAX_PLAYERS; i2++ && IsPlayerConnected(i2))
{
if(PlayerInfo[i2][pTeam] == PlayerInfo[i][pTeam])
{
SendClientMessage(i2, 0x008cffFF, string256);
}
}
if(inturfmembers[PlayerInfo[i][pTeam]]==0)
{
format(string256, 256, "Turf War: {FF0000}%s{008cff} не успя да превземе %s територията на %s!",TeamInfo[PlayerInfo[i][pTeam]][tName],TurfInfo[TeamInfo[PlayerInfo[i][pTeam]][tWar]][TurfName],
TeamInfo[TurfInfo[TeamInfo[PlayerInfo[i][pTeam]][tWar]][TurfOwner]][tName]);
SendClientMessageToAll(0x008cffFF, string256);
turfwargang[TeamInfo[PlayerInfo[i][pTeam]][tWar]]=0;
//turfwargang[turfa]>0
turfattack[PlayerInfo[i][pTeam]]=0;
GangZoneStopFlashForAll(TeamInfo[PlayerInfo[i][pTeam]][tWar]);
TeamInfo[PlayerInfo[i][pTeam]][tWar]=0;
}
}
if(IsPlayerInAnyVehicle(i) == 1 && PlayerInfo[i][pADuty]==0)
{
SendClientMessage(i,0xFFFFFFFF, "- Твоят скин не се смени, защото не си пешеходец -");
}
else {
if(adutyskinchanged[i]==0){
RestartPlayerSkin(i);
}}
PlayerInfo[i][pSpawnO]=1; SendClientMessage(i, 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Civil spawn!");
if(PlayerInfo[i][pADuty]==0){SetPlayerColor(i,0xFFFFFFFF);}
PlayerInfo[i][pRank]=1;
PlayerInfo[i][pTeam]=0; GivePlayerEP(i,0);
if(PlayerInfo[i][pVip]>3 || freevip==1) SetPVarInt(i, "color", 0);
}
}
}
if(gang!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
fwarns+=1;
if(fwarns==5)
{
dini_IntSet(nickname2, "pTeam", 0);
dini_IntSet(nickname2, "pRank", 0);
fwarns=0;
}
dini_IntSet(nickname2, "pFWarns", fwarns);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
new fwarns2;
fwarns2=dini_Int(nickname2,"pFWarns");
if(fwarns2==0)
{
format(string256, 256, "[FACTION CHAT] %s was FACTION warned by %s [5/5]",nickname, pname[playerid]);
}
else
format(string256, 256, "[FACTION CHAT] %s was FACTION warned by %s [%d/5]",nickname, pname[playerid],fwarns);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF, string256);
}
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/fwarn", true) == 0)
{
if (PlayerInfo[playerid][pRank] == 6)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /fwarn [ID на играч]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[para1[playerid]][pTeam]) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
new string256[256];
if(PlayerInfo[para1[playerid]][pFWarns]<4)
{
PlayerInfo[para1[playerid]][pFWarns]+=1;
format(string256, 256, "[FACTION CHAT] %s was FACTION warned by %s [%d/5]",pname[para1[playerid]] ,pname[playerid],PlayerInfo[para1[playerid]][pFWarns]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
//0x40BF00FF
}
else
{
PlayerInfo[para1[playerid]][pFWarns]+=1;
format(string256, 256, "[FACTION CHAT] %s was FACTION warned by %s [5/5]",pname[para1[playerid]] ,pname[playerid]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
format(string256, 256, "[FACTION CHAT] %s е изгнонен от банда/мафията заради 5 FACTION WARNS",pname[para1[playerid]]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
//
PlayerInfo[para1[playerid]][pDFDuty]=0;
dutypolice[para1[playerid]]=0;
if(turfmember[para1[playerid]]==2 && nospam2[para1[playerid]]==0)
{
inturfmembers[PlayerInfo[para1[playerid]][pTeam]]-=1;
turfmember[para1[playerid]]=0;
format(string256, 256, "Turf War: {FF0000}%s{008cff} напусна банда/мафията и отпадна от атаката!",pname[playerid]);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam] == PlayerInfo[para1[playerid]][pTeam])
{
SendClientMessage(i, 0x008cffFF, string256);
}
}
if(inturfmembers[PlayerInfo[para1[playerid]][pTeam]]==0)
{
format(string256, 256, "Turf War: {FF0000}%s{008cff} не успя да превземе %s територията на %s!",TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tName],TurfInfo[TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]][TurfName],
TeamInfo[TurfInfo[TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]][TurfOwner]][tName]);
SendClientMessageToAll(0x008cffFF, string256);
turfwargang[TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]]=0;
//turfwargang[turfa]>0
turfattack[PlayerInfo[para1[playerid]][pTeam]]=0;
GangZoneStopFlashForAll(TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]);
TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]=0;
}
}
if(IsPlayerInAnyVehicle(para1[playerid]) == 1 && PlayerInfo[para1[playerid]][pADuty]==0)
{
SendClientMessage(para1[playerid],0xFFFFFFFF, "- Твоят скин не се смени, защото не си пешеходец -");
}
else {
if(PlayerInfo[para1[playerid]][pADuty]==0){
RestartPlayerSkin(para1[playerid]);
}}
PlayerInfo[para1[playerid]][pSpawnO]=1; SendClientMessage(para1[playerid], 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Civil spawn!");
if(PlayerInfo[para1[playerid]][pADuty]==0){SetPlayerColor(para1[playerid],0xFFFFFFFF);}
PlayerInfo[para1[playerid]][pRank]=1;
PlayerInfo[para1[playerid]][pTeam]=0; GivePlayerEP(para1[playerid],0);
RestartPlayerColor(para1[playerid]);
if(PlayerInfo[para1[playerid]][pVip]>3 || freevip==1) SetPVarInt(para1[playerid], "color", 0);
//
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/unfwarn", true) == 0)
{
if (PlayerInfo[playerid][pRank] == 6)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unfwarn [ID на играч]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[para1[playerid]][pTeam]) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
if(PlayerInfo[para1[playerid]][pFWarns]==0)
{
PlayerInfo[para1[playerid]][pFWarns]-=1;
new string140[140];
format(string140, 140, "[FACTION CHAT] %s was FACTION unwarned by %s",pname[para1[playerid]] ,pname[playerid]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string140);
//0x40BF00FF
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч няма FACTION предупреждения!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/nunfwarn", true) == 0)
{
if (PlayerInfo[playerid][pRank] == 6)
{
//
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /nunfwarn [nickname]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
if(strlen(nickname)<1 || strlen(nickname)>30)
{
SendClientMessage(playerid,COLOR_GRAD1,"Името трябва да бъде с до 30 символа!");
return 1;
}
new nickname2[64];
new fwarns=0;
new gang=0;
format(nickname2,32, "%s.ini", nickname);
if(dini_Exists(nickname2))
{
fwarns=dini_Int(nickname2,"pFWarns");
gang=dini_Int(nickname2,"pTeam");
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(strcmp(nickname,pname[i],true)==0)
{
if(PlayerInfo[i][pTeam]!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
if(PlayerInfo[i][pFWarns]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч няма FACTION предупреждения!");
PlayerInfo[i][pFWarns]-=1;
}
}
if(gang!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
if(fwarns==0) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч няма FACTION предупреждения!");
fwarns-=1;
dini_IntSet(nickname2, "pFWarns", fwarns);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
new string190[190];
format(string190, 190, "[FACTION CHAT] %s was FACTION unwarned by %s",nickname, pname[playerid]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string190);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/nftmute", true) == 0)
{
if (PlayerInfo[playerid][pRank] == 6)
{
//
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /nftmute [nickname] [minutes] [причина]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
//
tmp = strtok(cmdtext, idx);
new result[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /nftmute [nickname] [minutes] [причина]");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
if(strlen(nickname)<1 || strlen(nickname)>30)
{
SendClientMessage(playerid,COLOR_GRAD1,"Името трябва да бъде с до 30 символа!");
return 1;
}
if(strlen(result)<1 || strlen(result)>30)
{
SendClientMessage(playerid,COLOR_GRAD1,"Причината трябва да бъде с до 30 символа!");
return 1;
}
new nickname2[64];
format(nickname2,32, "%s.ini", nickname);
if(dini_Exists(nickname2))
{
dini_IntSet(nickname2, "pFMute", 1000000);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(strcmp(nickname,pname[i],true)==0)
{
if(PlayerInfo[i][pTeam]!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
PlayerInfo[i][pFMuted]=1000000;
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
new string190[190];
format(string190, 190, "[FACTION CHAT] %s was FACTION muted by %s [Reason: %s]",nickname, pname[playerid],result);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string190);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/nfmute", true) == 0)
{
if (PlayerInfo[playerid][pRank] == 6)
{
//
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /nfmute [nickname] [причина]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
//
tmp = strtok(cmdtext, idx);
new minutesz;
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /nfmute [nickname] [причина]");
return 1;
}
minutesz = strval(tmp);
tmp = strtok(cmdtext, idx);
new result[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /nfmute [nickname] [причина]");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
if(strlen(nickname)<1 || strlen(nickname)>30)
{
SendClientMessage(playerid,COLOR_GRAD1,"Името трябва да бъде с до 30 символа!");
return 1;
}
if(strlen(result)<1 || strlen(result)>30)
{
SendClientMessage(playerid,COLOR_GRAD1,"Причината трябва да бъде с до 30 символа!");
return 1;
}
new nickname2[64];
format(nickname2,32, "%s.ini", nickname);
if(dini_Exists(nickname2))
{
dini_IntSet(nickname2, "pFMute", minutesz*120);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(strcmp(nickname,pname[i],true)==0)
{
if(PlayerInfo[i][pTeam]!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е от твоята банда/мафия!");
PlayerInfo[i][pFMuted]=minutesz*120;
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
new string256[256];
format(string256, 256, "[FACTION CHAT] %s was FACTION muted by %s [Reason: %s]",nickname, pname[playerid],result);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string256);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/animation", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
//
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /animation [Animation] [Animation]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
//
tmp = strtok(cmdtext, idx);
new result[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /animation [Animation] [Animation]");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
ApplyAnimation(playerid, nickname, result, 4.1, 1, 1, 1, 1, 1, 1);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/rban", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
//
tmp = strtok(cmdtext, idx);
new nickname[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /rban [nickname] [причина]");
return 1;
}
strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
//
tmp = strtok(cmdtext, idx);
new result[32];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /rban [nickname] [причина]");
return 1;
}
strmid(result, tmp, 0, sizeof(result), sizeof(result));
if(strlen(nickname)<1 || strlen(nickname)>30)
{
SendClientMessage(playerid,COLOR_GRAD1,"Името трябва да бъде с до 30 символа!");
return 1;
}
if(strlen(result)<1 || strlen(result)>30)
{
SendClientMessage(playerid,COLOR_GRAD1,"Причината трябва да бъде с до 30 символа!");
return 1;
}
new nickname2[64];
format(nickname2,32, "%s.ini", nickname);
if(dini_Exists(nickname2))
{
new string1152[115];
format(string1152, 115, "banip %s",dini_Int(nickname2, "pIP"));
SendRconCommand(string1152);
SendRconCommand("reloadbans");
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(strcmp(nickname,pname[i],true)==0)
{
PlayerInfo[i][pBan]=1;
}
}
}
else
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
}
new string256[256];
format(string256, 256, "[RBAN] %s е RBANNED(отдалечен BAN) от %s с [Причина: %s] в [%d ч. %d м.]", nickname, pname[playerid], result,hours,minutes);
SendClientMessageToAll(0xE60000FF, string256);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/getleader", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /getleader [ID на играч] ");
return 1;
}
new string256[256];
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
PlayerInfo[para1[playerid]][pDFDuty]=0;
if(turfattack[PlayerInfo[playerid][pTeam]]>0)
{
if(turfmember[para1[playerid]]==2 && nospam2[para1[playerid]]==0)
{
inturfmembers[PlayerInfo[para1[playerid]][pTeam]]-=1;
turfmember[para1[playerid]]=0;
format(string256, 256, "Turf War: {FF0000}%s{008cff} напусна банда/мафията и отпадна от атаката!",pname[para1[playerid]]);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam] == PlayerInfo[para1[playerid]][pTeam])
{
SendClientMessage(i, 0x008cffFF, string256);
}
}
if(inturfmembers[PlayerInfo[para1[playerid]][pTeam]]==0)
{
format(string256, 256, "Turf War: {FF0000}%s{008cff} не успя да превземе %s територията на %s!",TeamInfo[PlayerInfo[playerid][pTeam]][tName],TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfName],TeamInfo[TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfOwner]][tName]);
SendClientMessageToAll(0x008cffFF, string256);
turfwargang[TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]]=0;
turfattack[PlayerInfo[para1[playerid]][pTeam]]=0;
GangZoneStopFlashForAll(TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]);
TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]=0;
}
}
}
PlayerInfo[para1[playerid]][pRank]=1; PlayerInfo[para1[playerid]][pTeam]=0; GivePlayerEP(para1[playerid],0);
SendClientMessage(playerid,COLOR_RTRIADS, "Ти премахна лидерство!");
SendClientMessage(para1[playerid],COLOR_RTRIADS, "Твоето лидерство беше премахнато!");
RestartPlayerColor(para1[playerid]);
RestartPlayerSkin(para1[playerid]);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/ban", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ban [ID на играч] [причина]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pAdmin] > PlayerInfo[playerid][pAdmin])
{
new string190[190];
format(string190, 190, "[DEFENDER] %s беше KICKED, заради опита си да BAN играч с по-висок статут като администратор", pname[playerid]);
SendClientMessageToAll(0xE60000FF, string190);
PlayerInfo[playerid][pKick] = 1;
return 1;
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ban [ID на играч] [причина]");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ban [ID на играч] [причина]");
return 1;
}
if(strlen(result)<1 || strlen(result)>30)
{
SendClientMessage(playerid,COLOR_GRAD1,"Причината трябва да бъде с до 30 символа!");
return 1;
}
new string190[190];
format(string190, 190, "-- %s беше BANNED от сървъра %s с [Причина: %s] в [%d:%d ч.]  --", pname[para1[playerid]], pname[playerid], (result),hours,minutes);
SendClientMessageToAll(0xEA0F13FF, string190);
PlayerInfo[para1[playerid]][pBan] = 1;
PlayerInfo[para1[playerid]][pBlock]=1;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/kick", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /kick [ID на играч] [причина]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pAdmin] > PlayerInfo[playerid][pAdmin] && PlayerInfo[para1[playerid]][pAdmin]>3 && PlayerInfo[playerid][pAdmin]<3)
{
new string190[190];
format(string190, 190, "[DEFENDER] %s беше KICKED, защото се опита да KICK играч с по-висок статут на администратор", pname[playerid]);
SendClientMessageToAll(0xE60000FF, string190);
PlayerInfo[playerid][pKick] = 1;
return 1;
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /kick [ID на играч] [причина]");
return 1;
}
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /kick [ID на играч] [причина]");
return 1;
}
new string190[190];
format(string190, 190, "%s беше KICKED от %s [Причина: %s]", pname[para1[playerid]], pname[playerid], (result));
SendClientMessageToAll(0xE60000FF, string190);
PlayerInfo[para1[playerid]][pKick] = 1;
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/exit", true)==0)
{
if(enteredgarage[playerid]!=-5)
{
if(IsPlayerInRangeOfPoint(playerid,13.0,206.7556,37.1011,1068.5050))
{
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,GarageInfo[enteredgarage[playerid]][gX],GarageInfo[enteredgarage[playerid]][gY],GarageInfo[enteredgarage[playerid]][gZ]);
SetPlayerFacingAngle(playerid,1040.7969);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
enteredgarage[playerid]=-5;
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,-1444.0856,1087.5129,1040.7969) && GetPlayerInterior(playerid) == 15)
{
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,GarageInfo[enteredgarage[playerid]][gX],GarageInfo[enteredgarage[playerid]][gY],GarageInfo[enteredgarage[playerid]][gZ]);
SetPlayerFacingAngle(playerid,1040.7969);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
enteredgarage[playerid]=-5;
}
}
if(PlayerInfo[playerid][pHideIntro]>0)
{
return 1;
}
for(new alb=1; alb<maxbizz; alb++) // Dynamic Houses
{
//
if(IsPlayerInRangeOfPoint(playerid, 3, -27.3025,-57.6649,1003.5469)
|| IsPlayerInRangeOfPoint(playerid, 3, 501.980987,-69.150199,998.757812)
|| IsPlayerInRangeOfPoint(playerid, 3, -2026.9447,-103.6024,1035.1832)
|| IsPlayerInRangeOfPoint(playerid, 3, 296.8089,-112.0065,1001.5156)
|| IsPlayerInRangeOfPoint(playerid, 3, 1260.6464,-785.4418,1091.9063)
|| IsPlayerInRangeOfPoint(playerid, 3, -27.3512,-31.7518,1003.5573)
|| IsPlayerInRangeOfPoint(playerid, 3, 207.054992,-138.804992,1003.507812)
|| IsPlayerInRangeOfPoint(playerid, 3, 1494.4723,1303.5813,1093.2891)
|| IsPlayerInRangeOfPoint(playerid, 3, 362.8670,-75.1642,1001.5078)
|| IsPlayerInRangeOfPoint(playerid, 3, 834.6642,7.5311,1004.1870)
|| IsPlayerInRangeOfPoint(playerid, 3, -25.9455,-141.5480,1003.5469)
|| IsPlayerInRangeOfPoint(playerid, 3, 203.7447,-50.6649,1001.8047)
|| IsPlayerInRangeOfPoint(playerid, 3, 285.9084,-86.7750,1001.5229)
|| IsPlayerInRangeOfPoint(playerid, 3, 315.7523,-143.6341,999.6016)
|| IsPlayerInRangeOfPoint(playerid, 3, 493.4793,-24.9576,1000.6719)
|| IsPlayerInRangeOfPoint(playerid, 3, 744.6210,1436.3411,1102.7031)
|| IsPlayerInRangeOfPoint(playerid, 3, 773.9693,-78.8193,1000.6628)
|| IsPlayerInRangeOfPoint(playerid, 3, 774.1560,-50.4766,1000.5859)
|| IsPlayerInRangeOfPoint(playerid, 3, 1133.2222,-15.8171,1000.6797)
|| IsPlayerInRangeOfPoint(playerid, 3, 1204.7975,-13.8216,1000.9219)
|| IsPlayerInRangeOfPoint(playerid, 3, 1306.8253,3.2698,1001.0272)
|| IsPlayerInRangeOfPoint(playerid, 3, 2018.6144,1017.7792,996.8750)
|| IsPlayerInRangeOfPoint(playerid, 3, 2234.1011,1714.4489,1012.3828)
|| IsPlayerInRangeOfPoint(playerid, 3, -229.1534,1401.3180,27.7656)
|| IsPlayerInRangeOfPoint(playerid, 3, 377.0852,-193.3047,1000.6328)
|| IsPlayerInRangeOfPoint(playerid, 3, 364.9964,-11.8438,1001.8516)
|| IsPlayerInRangeOfPoint(playerid, 3, 460.5563,-88.6419,999.5547)
|| IsPlayerInRangeOfPoint(playerid, 3, 1727.7561,-1638.0088,20.2230)
|| IsPlayerInRangeOfPoint(playerid, 3, 2541.9399,-1304.0100,1025.0703)
|| IsPlayerInRangeOfPoint(playerid, 3, -1395.4200,1245.6000,1039.8672))
{
if(GetPlayerVirtualWorld(playerid) == alb+500)
{
if(BizInfo[alb][bLocked]==1)
{
GameTextForPlayer(playerid, "locked", 3000, 1);
return SendClientMessage(playerid,0x499BD4FF,"Бизнесът е заключен и не можеш да излезеш !");
}
SetPlayerPos(playerid,BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]);
SetPlayerInterior(playerid,0);
SetCameraBehindPlayer(playerid);
SetPlayerVirtualWorld(playerid, 0);
}
}
}
if(enteredap[playerid]!=-1)
{
for(new vvworld=0; vvworld<500; vvworld++)
{
if(IsPlayerInRangeOfPoint(playerid, 4, 2571.0122,573.5831,41.3469) && GetPlayerInterior(playerid)==2)
{
if(GetPlayerVirtualWorld(playerid)==ApartmentInfo[enteredap[playerid]][aVirtualWorld]+vvworld)
{
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,0);
SetPlayerPos(playerid,ApartmentInfo[enteredap[playerid]][aX],ApartmentInfo[enteredap[playerid]][aY],ApartmentInfo[enteredap[playerid]][aZ]);
enteredap[playerid]=-1;
break;
}
}
}
}
if(IsPlayerInRangeOfPoint(playerid,4,2006.8207,1167.4012,10.8203))
{
if(IsPlayerInAnyVehicle(playerid))
{
return SendClientMessage(playerid,0x00ff00ff,"За да излезеш с превозното средство, натисни {ff0000}Y{00ff00}след което натисни 'Излез' в Главното Меню(задължително)");
}
SetPlayerPos(playerid,GarageInfo[enteredgarage[playerid]][gX],GarageInfo[enteredgarage[playerid]][gY],GarageInfo[enteredgarage[playerid]][gZ]);
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
for(new alh=1; alh<maxhouses; alh++) // Dynamic Houses
{
//
if(IsPlayerInRangeOfPoint(playerid, 3, 2324.5479,-1149.5146,1050.7101)
|| IsPlayerInRangeOfPoint(playerid, 3, 2270.3855,-1210.4730,1047.5625)
|| IsPlayerInRangeOfPoint(playerid, 3, 2196.8506,-1204.2477,1049.0234)
|| IsPlayerInRangeOfPoint(playerid, 3, 2468.8413,-1698.4177,1013.5078)
|| IsPlayerInRangeOfPoint(playerid, 3, 1260.6464,-785.4418,1091.9063)
|| IsPlayerInRangeOfPoint(playerid, 3, 327.9635,1477.7430,1084.4375)
|| IsPlayerInRangeOfPoint(playerid, 3, 318.5932,1114.4792,1083.8828)
|| IsPlayerInRangeOfPoint(playerid, 3, 309.0916,313.6412,1003.3047)
|| IsPlayerInRangeOfPoint(playerid, 3, 261.0904,1284.2944,1080.2578)
|| IsPlayerInRangeOfPoint(playerid, 3, 226.2984,1114.3319,1080.9929)
|| IsPlayerInRangeOfPoint(playerid, 3, 225.8726,1021.4523,1084.0177)
|| IsPlayerInRangeOfPoint(playerid, 3, 223.1015,1287.0764,1082.1406)
|| IsPlayerInRangeOfPoint(playerid, 3, 140.2254,1365.9796,1083.8594)
|| IsPlayerInRangeOfPoint(playerid, 3, 83.0758,1322.2808,1083.8662)
|| IsPlayerInRangeOfPoint(playerid, 3, -68.7704,1352.9250,1080.2109)
|| IsPlayerInRangeOfPoint(playerid, 3, -42.5628,1405.5011,1084.4297)
|| IsPlayerInRangeOfPoint(playerid, 3, 2495.98,-1692.08,1014.74)
|| IsPlayerInRangeOfPoint(playerid, 3, 83.03,1322.28,1083.87)
|| IsPlayerInRangeOfPoint(playerid, 3, 2807.48,-1174.76,1025.57)
|| IsPlayerInRangeOfPoint(playerid, 3, 260.85,1237.24,1084.26)
|| IsPlayerInRangeOfPoint(playerid, 3, 2237.59,-1081.64,1049.02)
|| IsPlayerInRangeOfPoint(playerid, 3, 446.99,1397.07,1084.30)
|| IsPlayerInRangeOfPoint(playerid, 3, 377.15,1417.41,1081.33)
|| IsPlayerInRangeOfPoint(playerid, 3, 2308.77,-1212.94,1049.02)
|| IsPlayerInRangeOfPoint(playerid, 3, 243.72,304.91,999.15) || IsPlayerInRangeOfPoint(playerid, 3, 2283.04,-1140.28,1050.90)
|| IsPlayerInRangeOfPoint(playerid, 3, 225.4899,1021.4438,1084.0177))
{
if(GetPlayerVirtualWorld(playerid) == alh+50)
{
if(HouseInfo[alh][hLocked]==1)
{
GameTextForPlayer(playerid, "locked", 3000, 1);
return SendClientMessage(playerid,0x00FF40FF,"Къщата е заключена и не можеш да излезеш !");
}
SetPlayerPos(playerid,HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]);
SetPlayerInterior(playerid,HouseInfo[alh][hInterior2]);
SetCameraBehindPlayer(playerid);
SetPlayerVirtualWorld(playerid, HouseInfo[alh][hVirtualWorld]);
}
}
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,2467.6345,-1698.2460,1013.5078) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 2)
{
if(PlayerInfo[playerid][pTeam]!=8) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Eastern Boys!");
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,967.0475,2132.9785,10.8203);
SetPlayerFacingAngle(playerid,92.8459);
SetPlayerVirtualWorld(playerid,0);
SetCameraBehindPlayer(playerid);
}
return 1;
}
else if(strcmp(cmd, "/bizinfo", true) == 0)
{
if(PlayerInfo[playerid][pBizO]==-1)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Ти не притежаваш бизнес!");
}
if(BizInfo[PlayerInfo[playerid][pBizO]][bEarnings]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш оборот в бизнеса си!");
new string140[140];
format(string140,140,"Оборотът на твоя бизнес е $%d",BizInfo[PlayerInfo[playerid][pBizO]][bEarnings]);
SendClientMessage(playerid, 0x80BFFFFF, string140);
return 1;
}
else if(strcmp(cmd, "/earnings", true) == 0)
{
if(PlayerInfo[playerid][pBizO]==-1)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Ти не притежаваш бизнес!");
}
if(BizInfo[PlayerInfo[playerid][pBizO]][bEarnings]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш оборот в бизнеса си!");
SendClientMessage(playerid, 0x80BFFFFF, "Ти взе оборота от бизнеса си!");
GivePlayerCash(playerid,BizInfo[PlayerInfo[playerid][pBizO]][bEarnings]);
BizInfo[PlayerInfo[playerid][pBizO]][bEarnings]=0;
return 1;
}
else if(strcmp(cmd, "/buybiz", true) == 0)
{
if(specialpickupenter[playerid][PICKUPBIZ]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не се намираш близо до бизнес!");
return 1;
}
new alb=specialpickupenter[playerid][PICKUPBIZ];
if(PlayerInfo[playerid][pBizO]>-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти вече притежаваш бизнес!");
return 1;
}
if(BizInfo[alb][bOwner]==1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Този бизнес вече има притежател!");
return 1;
}
if(BizInfo[alb][bLevel]>PlayerInfo[playerid][pLevel])
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно голямо ниво за този бизнес!");
return 1;
}
if(BizInfo[alb][bPrice]>PlayerInfo[playerid][pCash])
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно пари за този бизнес!");
return 1;
}
PlayerInfo[playerid][pBizO]=alb;
format(BizInfo[alb][bOwnerName],256,"%s",pname[playerid]);
BizInfo[alb][bOwner]=1;
BizInfo[alb][bEarnings]=0;
GivePlayerCash(playerid,-BizInfo[alb][bPrice]);
new stringbiz[256];
format(stringbiz,256,"Честито, ти си купи бизнес на стойност $%d!",BizInfo[alb][bPrice]);
SendClientMessage(playerid, 0x80BFFFFF,stringbiz);
format(stringbiz,256,"~b~YOU'VE BOUGHT A BUSINESS~n~~g~FOR $%d~n~~y~~h~] CONGRATULATIONS ]",BizInfo[alb][bPrice]);
GameTextForPlayer(playerid, stringbiz, 3000, 5);
return 1;
}
else if(strcmp(cmd, "/sellbiz", true) == 0)
{
//if(isinhousepickup[playerid]==1)
//{
new housenoerror=0;
if(PlayerInfo[playerid][pBizO]==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не притежаваш бизнес!");
return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 3, BizInfo[PlayerInfo[playerid][pBizO]][bX], BizInfo[PlayerInfo[playerid][pBizO]][bY], BizInfo[PlayerInfo[playerid][pBizO]][bZ]))
{
housenoerror=1;
format(BizInfo[PlayerInfo[playerid][pBizO]][bOwnerName],256,"None");
BizInfo[PlayerInfo[playerid][pBizO]][bOwner]=0;
GivePlayerCash(playerid,BizInfo[PlayerInfo[playerid][pBizO]][bPrice]/2);
new string140[140];
format(string140,140,"Tи продаде бизнеса си за $%d!",BizInfo[PlayerInfo[playerid][pBizO]][bPrice]/2);
SendClientMessage(playerid, 0x80BFFFFF,string140);
PlayerInfo[playerid][pBizO]=-1;
return 1;
}
if(housenoerror==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не се намираш близо до бизнеса си!");
}
return 1;
}
else if(strcmp(cmd, "/sellhouse", true) == 0)
{
//if(isinhousepickup[playerid]==1)
//{
new housenoerror=0;
if(PlayerInfo[playerid][pHouseO]==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не притежаваш къща!");
return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[PlayerInfo[playerid][pHouseO]][hX], HouseInfo[PlayerInfo[playerid][pHouseO]][hY], HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]))
{
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
if(!dini_Exists(house))
{
SendClientMessage(playerid,COLOR_GRAD1,"Твоята къща е изтрита, свържи се с администратор!");
return 1;
}
if(dini_Exists(house))
{
housenoerror=1;
format(HouseInfo[PlayerInfo[playerid][pHouseO]][hOwnerName],256,"None");
HouseInfo[PlayerInfo[playerid][pHouseO]][hOwner]=0;
dini_IntSet(house, "hOwner",0);
dini_Set(house, "hOwnerName", "None");
GivePlayerCash(playerid,HouseInfo[PlayerInfo[playerid][pHouseO]][hPrice]/2);
new string140[140];
format(string140[playerid],140,"Ти продаде къщата си за $%d!",HouseInfo[PlayerInfo[playerid][pHouseO]][hPrice]/2);
SendClientMessage(playerid, 0x00FF40FF,string140);
PlayerInfo[playerid][pHouseO]=-1;
PlayerInfo[playerid][pArmour2]=0;
return 1;
}
}
if(housenoerror==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не се намираш близо до къщата си!");
}
return 1; }
else if(strcmp(cmd, "/gotohveh", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] < 3)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
return 1;
}
tmp=strtok(cmdtext, idx);
new level=strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /gotohveh [house id]");
return 1;
}
if(level<0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID на къща!");
return 1;
}
new house[64]; format(house, 64, "/Houses/%d.ini", level);
if(!dini_Exists(house))
{
SendClientMessage(playerid,COLOR_GRAD1,"Тази къща не съществува!");
return 1;
}
if(!IsValidVehicle(HouseInfo[level][hcVeh]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Тази къща няма превозно средство!");
return 1;
}
if(dini_Exists(house))
{
if(HouseInfo[level][hInterior]==29)
{
SendClientMessage(playerid, COLOR_GRAD1, "Това не е къща, а жилищен комплекс!");
return 1;
}
new stringhouse[150]; new Float:XX; new Float: YY; new Float: ZZ;
GetVehiclePos(HouseInfo[level][hcVeh],XX,YY,ZZ);
SetPlayerPos(playerid,XX,YY,ZZ+3.0);
format(stringhouse, 150, "- Ти успешно се телепортира до превозното средство на къща ID %d -", level);
return SendClientMessage(playerid, 0xFFFFFFFF, stringhouse);
}
return 1;
}
else if(strcmp(cmd, "/gotoveh", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] < 4)
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
return 1;
}
tmp=strtok(cmdtext, idx);
new level=strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /gotoveh [vehicle id]");
return 1;
}
if(level<0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID на превозно средство!");
return 1;
}
if(!IsValidVehicle(level))
{
SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не съществува!");
return 1;
}
new stringveh[256]; new Float:XX; new Float: YY; new Float: ZZ;
GetVehiclePos(level,XX,YY,ZZ);
SetPlayerPos(playerid,XX,YY,ZZ+3.0);
format(stringveh, 256, "- Ти успешно се телепортира до превозното средство ID %d -", level);
SendClientMessage(playerid, 0xFFFFFFFF, stringveh);
return 1;
}
else if(strcmp(cmd, "/sellshares", true) == 0)
{
tmp=strtok(cmdtext, idx);
new shares=strval(tmp);
if(specialpickupenter[playerid][PICKUPCOMPANY]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не се намираш близо до компания!");
return 1;
}
if(PlayerInfo[playerid][pCompany][specialpickupenter[playerid][PICKUPCOMPANY]]>0)
{
if(shares<1)
{
new formata[256];
format(formata,256,"Начин на използване: /sellshares [1-%d]",PlayerInfo[playerid][pCompany][specialpickupenter[playerid][PICKUPCOMPANY]]);
SendClientMessage(playerid, 0xFFFFFFFF, formata);
return 1;
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш акции в тази компания!");
return 1;
}
if(shares>PlayerInfo[playerid][pCompany][specialpickupenter[playerid][PICKUPCOMPANY]])
{
new formata[256];
format(formata,256,"Ти имаш %d акции в тази компания!",PlayerInfo[playerid][pCompany][specialpickupenter[playerid][PICKUPCOMPANY]]);
SendClientMessage(playerid,COLOR_GRAD1,formata);
return 1;
}
new alc=specialpickupenter[playerid][PICKUPCOMPANY];
new stringhouse[256];
new shares2=shares;
new price=CompanyInfo[alc][coPrice]*shares2/2;
PlayerInfo[playerid][pCompany][specialpickupenter[playerid][PICKUPCOMPANY]]-=shares2;
GivePlayerCash(playerid,price);
format(stringhouse,256,"{ff0000}[Акции] {00ff00}Ти продаде %d акции на цена - $%d!",shares,price);
SendClientMessage(playerid, 0x00ff00ff,stringhouse);
if(shares>500 && shares<700)
{
new randomgive=randomex(0,100);
if(randomgive>35)
{
CompanyInfo[alc][coPrice]-=1;
}
}
else if(shares>700 && shares<900)
{
new randomgive=randomex(0,100);
if(randomgive>24)
{
new randomshares=randomex(1,2);
CompanyInfo[alc][coPrice]-=randomshares;
}
}
else if(shares>700 && shares<900)
{
new randomgive=randomex(0,100);
if(randomgive>66)
{
new randomshares=randomex(1,3);
CompanyInfo[alc][coPrice]-=randomshares;
}
}
else if(shares>900 && shares<1500)
{
new randomgive=randomex(0,100);
if(randomgive>35)
{
new randomshares=randomex(1,3);
CompanyInfo[alc][coPrice]-=randomshares;
}
}
else if(shares>1500 && shares<2300)
{
new randomgive=randomex(0,100);
if(randomgive>32)
{
new randomshares=randomex(1,2);
CompanyInfo[alc][coPrice]-=randomshares;
}
}
else if(shares>2300 && shares<2700)
{
new randomgive=randomex(0,100);
if(randomgive>60)
{
new randomshares=randomex(1,3);
CompanyInfo[alc][coPrice]-=randomshares;
}
}
else if(shares>2700)
{
new randomgive=randomex(0,100);
if(randomgive>80)
{
new randomshares=randomex(1,4);
CompanyInfo[alc][coPrice]-=randomshares;
}
if(CompanyInfo[alc][coPrice]<=0)
{
CompanyInfo[alc][coPrice]=1;
}
}
return 1; }
else if(strcmp(cmd, "/buyshares", true) == 0)
{
tmp=strtok(cmdtext, idx);
new shares=strval(tmp);
new alc=specialpickupenter[playerid][PICKUPCOMPANY];
if(specialpickupenter[playerid][PICKUPCOMPANY]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не се намираш близо до компания!");
return 1;
}
if(shares<1)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /buyshares [брой акции]");
return 1;
}
if(shares>MAX_BUYSHARES)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да купиш повече от 10, 000 акции наведнъж!");
return 1;
}
if(CompanyInfo[alc][coPrice]*shares>PlayerInfo[playerid][pCash])
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно пари за толкова акции!");
return 1;
}
new stringhouse[256];
PlayerInfo[playerid][pCompany][specialpickupenter[playerid][PICKUPCOMPANY]]+=shares;
GivePlayerCash(playerid,-CompanyInfo[alc][coPrice]*shares);
format(stringhouse,256,"{ff0000}[Акции] {00ff00}Ти си купи %d акции на цена - $%d!",shares,CompanyInfo[alc][coPrice]*shares);
SendClientMessage(playerid, 0x00ff00ff,stringhouse);
if(shares>500 && shares<700)
{
new randomshares=randomex(1,4);
CompanyInfo[alc][coPrice]+=randomshares;
}
else if(shares>700 && shares<=900)
{
new randomshares=randomex(3,8);
CompanyInfo[alc][coPrice]+=randomshares;
}
else if(shares>900 && shares<=1500)
{
new randomshares=randomex(3,11);
CompanyInfo[alc][coPrice]+=randomshares;
}
else if(shares>1500 && shares<=2300)
{
new randomshares=randomex(4,13);
CompanyInfo[alc][coPrice]+=randomshares;
}
else if(shares>2300 && shares<=2700)
{
new randomshares=randomex(4,15);
CompanyInfo[alc][coPrice]+=randomshares;
}
else if(shares>2700)
{
new randomshares=randomex(2,16);
CompanyInfo[alc][coPrice]+=randomshares;
}
return 1; }
else if(strcmp(cmd, "/buyhouse", true) == 0)
{
if(specialpickupenter[playerid][PICKUPHOUSE]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не се намираш близо до къща!");
return 1;
}
new alh=specialpickupenter[playerid][PICKUPHOUSE];
if(PlayerInfo[playerid][pHouseO]>-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти вече притежаваш къща!");
return 1;
}
if(HouseInfo[alh][hOwner]==1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Тази къща вече има притежател!");
return 1;
}
if(HouseInfo[alh][hLevel]>PlayerInfo[playerid][pLevel])
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно голямо ниво за тази къща!");
return 1;
}
if(HouseInfo[alh][hPrice]>PlayerInfo[playerid][pCash])
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно пари за тази къща!");
return 1;
}
if(HouseInfo[alh][hInterior]==29)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си близо до къща!");
return 1;
}
new stringhouse[256];
PlayerInfo[playerid][pHouseO]=alh;
format(HouseInfo[alh][hOwnerName],256,"%s",pname[playerid]);
HouseInfo[alh][hOwner]=1;
GivePlayerCash(playerid,-HouseInfo[alh][hPrice]);
format(stringhouse,256,"Честито, ти си купи къща на стойност $%d!",HouseInfo[alh][hPrice]);
SendClientMessage(playerid, 0x00FF40FF,stringhouse);
return 1; }
else if(strcmp(cmd, "/enter", true) == 0)
{
if(specialpickupenter[playerid][PICKUPAPARTMENTS]!=0)
{
new ala=specialpickupenter[playerid][PICKUPAPARTMENTS];
if(IsPlayerInRangeOfPoint(playerid, 3, ApartmentInfo[ala][aX], ApartmentInfo[ala][aY], ApartmentInfo[ala][aZ]))
{
TogglePlayerControllable(playerid,0);
PlayerInfo[playerid][pTimeFreeze]=5;
SetPlayerInterior(playerid,2);
enteredap[playerid]=ala;
SetPlayerVirtualWorld(playerid,ApartmentInfo[ala][aVirtualWorld]);
SetPlayerPos(playerid,2571.0122,573.5831,41.3469);
}
}
else if(specialpickupenter[playerid][PICKUPBIZ]!=0)
{
new alb=specialpickupenter[playerid][PICKUPBIZ];
if(IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
{
if(BizInfo[alb][bLocked]==1)
{
GameTextForPlayer(playerid, "locked", 3000, 1);
return SendClientMessage(playerid,0x499BD4FF,"Бизнесът е заключен и не можеш да влезеш !");
}
if(BizInfo[alb][bFee]>PlayerInfo[playerid][pCash] && PlayerInfo[playerid][pBizO]!=alb)
{
return SendClientMessage(playerid,0xFFFFFFFF,"Нямаш достатъчно пари за да влезеш в бизнеса !");
}
if(PlayerInfo[playerid][pBizO]!=alb)
{
GivePlayerCash(playerid,-BizInfo[alb][bFee]);
BizInfo[alb][bEarnings]+=BizInfo[alb][bFee];
}
enteredbiz[playerid]=alb;
if(BizInfo[alb][bType] == 1) // 24/7 Business
{
//format(string, sizeof(string), "- %s pushes the door and enters the shop.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, -27.3025,-57.6649,1003.5469);
SetPlayerFacingAngle(playerid, 357.5915);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s's ? ??????? ?? (( /buy )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
else if(BizInfo[alb][bType] == 2) // Bar Business
{
//format(string, sizeof(string), "- %s pushes the door and enters the shop.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 501.980987,-69.150199,998.757812);
SetPlayerFacingAngle(playerid, 179.826400);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 11);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s's ? ???? ?? (( /drinks )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else if(BizInfo[alb][bType] == 3) // Ammunation Business
{
//format(string, sizeof(string), "- %s pushes the door and enters the shop.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 296.8089,-112.0065,1001.5156);
SetPlayerFacingAngle(playerid, 76.7251);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s's ? ???????? ?? ?? ?????? (( /Buyweapon )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
else if(BizInfo[alb][bType] == 4) // + Club Business
{
//format(string, sizeof(string), "- %s pushes the door and enters the shop.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, -2026.9447,-103.6024,1035.1832);
SetPlayerFacingAngle(playerid, 183.4428);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 3);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s's ? ?????????? ?? (( /buyvehicle )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else if(BizInfo[alb][bType] == 5) // Advertisement Agency
{
//format(string, sizeof(string), "- %s pushes the door and enters the shop.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, -27.3512,-31.7518,1003.5573);
SetPlayerFacingAngle(playerid, 86.7239);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 4);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s's ? ?????????? ?? ??????? (( /buyfishtools )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else if(BizInfo[alb][bType] == 6) // Fast Food
{
//format(string, sizeof(string), "- %s pushes the door and enters the shop.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 207.054992,-138.804992,1003.507812);
SetPlayerFacingAngle(playerid, 182.1137);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 3);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s's ? ???????? ?? ?? ????? (( /buyclothes )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
else if(BizInfo[alb][bType] == 7) // Casino
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 1494.4723,1303.5813,1093.2891);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 3);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ?????? (( /dmv )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//return 1;
}
else  if(BizInfo[alb][bType] == 8) // Casino
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 362.8670,-75.1642,1001.5078);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 10);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ????? ??????? (( /buy )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
else  if(BizInfo[alb][bType] == 9) // Casino
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 834.6642,7.5311,1004.1870);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 3);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
}
else  if(BizInfo[alb][bType] == 10) // 24/7
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, -25.9455,-141.5480,1003.5469);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 16);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
else  if(BizInfo[alb][bType] == 11) // 24/7
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 203.7447,-50.6649,1001.8047);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 1);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else if(BizInfo[alb][bType] == 12) // 24/7
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 285.9084,-86.7750,1001.5229);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 4);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else if(BizInfo[alb][bType] == 13) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 315.7523,-143.6341,999.6016);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 7);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//   return 1;
}
else  if(BizInfo[alb][bType] == 14) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 493.4793,-24.9576,1000.6719);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 17);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
else  if(BizInfo[alb][bType] == 15) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 744.6210,1436.3411,1102.7031);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else  if(BizInfo[alb][bType] == 16) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 773.9693,-78.8193,1000.6628);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 7);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
else   if(BizInfo[alb][bType] == 17) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 774.1560,-50.4766,1000.5859);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
else  if(BizInfo[alb][bType] == 18) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 1133.2222,-15.8171,1000.6797);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 12);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
else   if(BizInfo[alb][bType] == 19) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 1204.7975,-13.8216,1000.9219);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 2);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
// return 1;
}
else  if(BizInfo[alb][bType] == 20) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 1306.8253,3.2698,1001.0272);
SetPlayerFacingAngle(playerid, 90.3947);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 18);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else  if(BizInfo[alb][bType] == 21) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 2018.6144,1017.7792,996.8750);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 10);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else  if(BizInfo[alb][bType] == 22) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 2234.1011,1714.4489,1012.3828);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 1);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//return 1;
}
else  if(BizInfo[alb][bType] == 23) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, -229.1534,1401.3180,27.7656);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 18);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else  if(BizInfo[alb][bType] == 24) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 377.0852,-193.3047,1000.6328);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 17);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else   if(BizInfo[alb][bType] == 25) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 364.9964,-11.8438,1001.8516);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 9);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else  if(BizInfo[alb][bType] == 26) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 460.5563,-88.6419,999.5547);
SetPlayerFacingAngle(playerid, 0.4216);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 4);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else if(BizInfo[alb][bType] == 28) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 1727.7561,-1638.0088,20.2230);
SetPlayerFacingAngle(playerid, 172.4654);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 18);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else if(BizInfo[alb][bType] == 29) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, 2541.9399,-1304.0100,1025.0703);
SetPlayerFacingAngle(playerid, 345.3745);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 2);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else if(BizInfo[alb][bType] == 30) // ammo
{
//format(string, sizeof(string), "- %s pushes the door and enters the casino.", RPN(playerid));
//SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
SetPlayerPos(playerid, -1395.4200,1245.6000,1039.8672);
SetPlayerFacingAngle(playerid, 92.1224);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 16);
SetPlayerVirtualWorld(playerid, alb+500);
//format(string, sizeof(string), "•• ????? ????? ??? %s ??? ??????? ?? ?? ????????? (( /bet )) ••", BizInfo[b][bOwner]);
//SendClientMessage(playerid, COLOR_ORANGE, string);
//  return 1;
}
else if(BizInfo[alb][bType] == 27) // 24/7 Business
{
SendClientMessage(playerid,0x499BD4FF,"В този бизнес не може да се влиза !");
}}}
else if(specialpickupenter[playerid][PICKUPHOUSE]!=0)
{
new alh=specialpickupenter[playerid][PICKUPHOUSE];
if(IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
{
if(GetPlayerInterior(playerid)==HouseInfo[alh][hInterior2] && GetPlayerVirtualWorld(playerid)==HouseInfo[alh][hVirtualWorld])
{
if(HouseInfo[alh][hLocked]==1 && PlayerInfo[playerid][pHouseO]!=alh)
{
GameTextForPlayer(playerid, "locked", 3000, 1);
return SendClientMessage(playerid,0x00FF40FF,"Къщата е заключена и не можеш да влезеш!");
}
SetPlayerVirtualWorld(playerid, alh+50);
enteredhouse[playerid]=alh;
if(HouseInfo[alh][hInterior] == 1)
{
SetPlayerPos(playerid, 2283.04,-1140.28,1050.90);
SetPlayerFacingAngle(playerid, 267.0980);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 11);
}
else if(HouseInfo[alh][hInterior] == 2)
{
SetPlayerPos(playerid, 243.72,304.91,999.15);
SetPlayerFacingAngle(playerid, 267.3974);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 1);
}
else if(HouseInfo[alh][hInterior] == 3)
{
SetPlayerPos(playerid, 2308.77,-1212.94,1049.02);
SetPlayerFacingAngle(playerid, 359.8550);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
}
else if(HouseInfo[alh][hInterior] == 4)
{
SetPlayerPos(playerid, 377.15,1417.41,1081.33);
SetPlayerFacingAngle(playerid, 1.6415);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 15);
}
else if(HouseInfo[alh][hInterior] == 5)
{
SetPlayerPos(playerid, 446.99,1397.07,1084.30);
SetPlayerFacingAngle(playerid, 359.1347);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 2);
}
else if(HouseInfo[alh][hInterior] == 6)
{
SetPlayerPos(playerid, 2237.59,-1081.64,1049.02);
SetPlayerFacingAngle(playerid, 89.1791);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 2);
}
else if(HouseInfo[alh][hInterior] == 7)
{
SetPlayerPos(playerid, 260.85,1237.24,1084.26);
SetPlayerFacingAngle(playerid, 359.8550);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 9);
}
else if(HouseInfo[alh][hInterior] == 8)
{
SetPlayerPos(playerid, 2807.48,-1174.76,1025.57);
SetPlayerFacingAngle(playerid, 89.4224);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 8);
}
else if(HouseInfo[alh][hInterior] == 9)
{
SetPlayerPos(playerid, 83.03,1322.28,1083.87);
SetPlayerFacingAngle(playerid, 0.7248);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 9);
}
else if(HouseInfo[alh][hInterior] == 10)
{
SetPlayerPos(playerid, 2495.98,-1692.08,1014.74);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 3);
}
else if(HouseInfo[alh][hInterior] == 11)
{
SetPlayerPos(playerid, -42.5628,1405.5011,1084.4297);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 8);
}
else if(HouseInfo[alh][hInterior] == 12)
{
SetPlayerPos(playerid, -68.7704,1352.9250,1080.2109);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
}
else if(HouseInfo[alh][hInterior] == 13)
{
SetPlayerPos(playerid, 83.0758,1322.2808,1083.8662);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 9);
}
else if(HouseInfo[alh][hInterior] == 14)
{
SetPlayerPos(playerid, 140.2254,1365.9796,1083.8594);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 5);
}
else if(HouseInfo[alh][hInterior] == 15)
{
SetPlayerPos(playerid, 223.1015,1287.0764,1082.1406);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 1);
}
else if(HouseInfo[alh][hInterior] == 16)
{
SetPlayerPos(playerid, 225.8726,1021.4523,1084.0177);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 7);
}
else if(HouseInfo[alh][hInterior] == 17)
{
SetPlayerPos(playerid, 226.2984,1114.3319,1080.9929);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 5);
}
else if(HouseInfo[alh][hInterior] == 18)
{
SetPlayerPos(playerid, 261.0904,1284.2944,1080.2578);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 4);
}
else if(HouseInfo[alh][hInterior] == 19)
{
SetPlayerPos(playerid, 309.0916,313.6412,1003.3047);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 4);
}
else if(HouseInfo[alh][hInterior] == 20)
{
SetPlayerPos(playerid, 318.5932,1114.4792,1083.8828);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 5);
}
else if(HouseInfo[alh][hInterior] == 21)
{
SetPlayerPos(playerid, 327.9635,1477.7430,1084.4375);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 15);
}
else if(HouseInfo[alh][hInterior] == 22)
{
SetPlayerPos(playerid, 1260.6464,-785.4418,1091.9063);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 5);
}
else if(HouseInfo[alh][hInterior] == 23)
{
SetPlayerPos(playerid, 2468.8413,-1698.4177,1013.5078);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 2);
}
else if(HouseInfo[alh][hInterior] == 24)
{
SetPlayerPos(playerid, 2196.8506,-1204.2477,1049.0234);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 6);
}
else if(HouseInfo[alh][hInterior] == 25)
{
SetPlayerPos(playerid, 2270.3855,-1210.4730,1047.5625);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 10);
}
else if(HouseInfo[alh][hInterior] == 26)
{
SetPlayerPos(playerid, 2324.5479,-1149.5146,1050.7101);
SetPlayerFacingAngle(playerid, 359.5183);
SetCameraBehindPlayer(playerid);
SetPlayerInterior(playerid, 12);
}
}
}
}
////////////////////
else if(specialpickupenter[playerid][2]!=0)
{
new ala=specialpickupenter[playerid][2];
if(IsPlayerInRangeOfPoint(playerid,2,GarageInfo[ala][gX],GarageInfo[ala][gY],GarageInfo[ala][gZ]))
{
if(GarageInfo[ala][gGarage]==1)
{
enteredgarage[playerid]=ala;
SetPlayerInterior(playerid,15);
SetPlayerPos(playerid,-1444.0856,1087.5129,1040.7969);
SetPlayerVirtualWorld(playerid,ala);
SetCameraBehindPlayer(playerid);
}
}
if(GarageInfo[ala][gGarage]==2)
{
if(IsPlayerInAnyVehicle(playerid))
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие трябва да сте извън превозно средство.");
return 1;
}
if(PlayerInfo[playerid][pPrivateVehs]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате лични превозни средства, елате пак, когато си купите.");
return 1;
}
if(testmode[playerid]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"В момента се обработват гаражите, очаквайте скоро.");
return 1;
}
PlayerInfo[playerid][pTimeFreeze]=5;
SetPlayerPos(playerid,206.7556,37.1011,1068.5050);
SetPlayerVirtualWorld(playerid,ala+playerid);
SetCameraBehindPlayer(playerid);
TogglePlayerControllable(playerid,0);
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,ala+playerid);
SetCameraBehindPlayer(playerid);
enteredgarage[playerid]=ala;
SendClientMessage(playerid,0x00ff00ff,"За да добавите части към превозното си средство, натиснете {ff0000}Y{00ff00}, а за превозно средство - {ff0000}/myveh{00ff00}.");
}
}
/////////////////////
else if(IsPlayerInRangeOfPoint(playerid, 3.0,967.0475,2132.9785,10.8203) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
if(PlayerInfo[playerid][pTeam]!=8) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Eastern Boys!");
SetPlayerInterior(playerid,2);
SetPlayerVirtualWorld(playerid,1);
SetPlayerPos(playerid,2467.6345,-1698.2460,1013.5078);
SetPlayerFacingAngle(playerid,92.8459);
SetCameraBehindPlayer(playerid);
}
return 1;
}
else if(strcmp(cmd, "/unignore", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unignore [ID на играч]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
if(playerid==para1[playerid])
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да премахнеш игнориране от себе си!");
return 1;
}
if(ignore[playerid][para1[playerid]]==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си игнорирал този играч!");
return 1;
}
ignore[playerid][para1[playerid]]=0;
new togapmstring[256];
format(togapmstring, 256, "- Ти позволи на %s да ти изпраща лични съобщения -", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFF00FF, togapmstring);
format(togapmstring, 256, "- %s ти позволи да му изпращаш лични съобщения -", pname[playerid]);
SendClientMessage(para1[playerid],  0xFFFF00FF, togapmstring);
return 1;
}
else if(strcmp(cmd, "/ignore", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /ignore [ID на играч]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
if(playerid==para1[playerid])
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да игнорираш себе си!");
return 1;
}
if(ignore[playerid][para1[playerid]]==1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си игнорирал този играч!");
return 1;
}
ignore[playerid][para1[playerid]]=1;
new togapmstring[256];
format(togapmstring, 256, "Ти забрани на %s да ти изпраща лични съобщения!", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFF00FF, togapmstring);
format(togapmstring, 256, "- %s ти забрани да му изпращаш лични съобщения!", pname[playerid]);
SendClientMessage(para1[playerid],  0xFFFF00FF, togapmstring);
return 1;
}
else if(strcmp(cmd, "/report", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /report [ID на играч] [text]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
if(playerid==para1[playerid])
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изпратиш Report за себе си!");
return 1;
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /report [ID на играч] [text]");
return 1;
}
new string256[256];
SendClientMessage(playerid,  0xFFFF00FF, "Ти успешно изпрати своя доклад до онлайн администраторите!");
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTest] == 1 || PlayerInfo[i][pAdmin]>0)
{
format(string256, 256, "Report от %s(%d) за %s(%d) Причина: %s", pname[playerid],playerid , pname[para1[playerid]], para1[playerid], result);
SendClientMessage(i,  0xF7AEC2FF, string256);//to6o
}
}
return 1;
}
else if(strcmp(cmd, "/r", true) == 0)
{
if(typedpm[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си изпратил лично съобщение до никого!");
if(!IsPlayerConnected(PlayerInfo[playerid][pLastPM]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
if(PlayerInfo[PlayerInfo[playerid][pLastPM]][pIgnorePM] == 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Играчът е игнорирал своите лични съобщения!");
return 1;
}
if(PlayerInfo[playerid][pVip]<2 && freevip==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
return 1;
}
if(PlayerInfo[playerid][pIgnorePM] == 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си игнорирал своите лични съобщения!");
return 1;
}
if(ignore[typedpm[playerid]][playerid]==1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч ти е забранил да му изпращаш съобщения!");
return 1;
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /r [text]");
return 1;
}
new togapmstring[256];
format(togapmstring, 256, "- PM from %s(ID: %d): %s", pname[playerid], playerid, result);
SendClientMessage(PlayerInfo[playerid][pLastPM], 0xFFFF00FF, togapmstring);
format(togapmstring, 256, "- PM to %s(ID: %d): %s", pname[PlayerInfo[playerid][pLastPM]],PlayerInfo[playerid][pLastPM], result);
SendClientMessage(playerid,  0xFFFF00FF, togapmstring);
if(PlayerInfo[PlayerInfo[playerid][pLastPM]][pAFK]>0){
SendClientMessage(playerid, 0x636363FF, "Играчът е AFK и може да не види твоето съобщение!"); }
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTogPM] == 1)
{
new togapmstring2[256];
format(togapmstring2, 256, "- PM from %s(ID: %d) to %s(ID: %d): %s", pname[playerid], playerid, pname[PlayerInfo[playerid][pLastPM]], PlayerInfo[playerid][pLastPM], result);
SendClientMessage(i,  0xFFFF00FF, togapmstring2);//to6o
}
}
return 1;
}
else if(strcmp(cmd, "/pm", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /pm [ID на играч] [text]");
return 1;
}
para1[playerid] = strval(tmp);
if(!IsPlayerConnected(para1[playerid]))
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
return 1;
}
if(PlayerInfo[para1[playerid]][pIgnorePM] == 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Играчът е игнорирал своите лични съобщения!");
return 1;
}
if(PlayerInfo[playerid][pIgnorePM] == 1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си игнорирал своите лични съобщения!");
return 1;
}
if(playerid==para1[playerid])
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изпратиш лично съобщение до себе си!");
return 1;
}
if(ignore[para1[playerid]][playerid]==1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч ти е забранил да му изпращаш съобщения!");
return 1;
}
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /pm [ID на играч] [text]");
return 1;
}
new togapmstring[256];
typedpm[playerid]=1;
PlayerInfo[playerid][pLastPM] = para1[playerid];
format(togapmstring, 256, "- PM from %s(ID: %d): %s", pname[playerid], playerid, result);
SendClientMessage(para1[playerid], 0xFFFF00FF, togapmstring);
format(togapmstring, 256, "- PM to %s(ID: %d): %s", pname[para1[playerid]],para1[playerid], result);
SendClientMessage(playerid,  0xFFFF00FF, togapmstring);
if(PlayerInfo[para1[playerid]][pAFK]>0){
SendClientMessage(playerid, 0x636363FF, "Играчът е AFK и може да не види твоето съобщение!"); }
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTogPM] == 1)
{
new togapmstring2[256];
format(togapmstring2, 256, "- PM from %s(ID: %d) to %s(ID: %d): %s", pname[playerid], playerid, pname[para1[playerid]], para1[playerid], result);
SendClientMessage(i,  0xFFFF00FF, togapmstring2);//to6o
}
}
return 1;
}
else if(strcmp(cmd, "/vehid", true)==0)
{
if(PlayerInfo[playerid][pAdmin]>4)
{
new string8[18];
format(string8, 18, "ID: %d!",GetPlayerVehicleID(playerid));
SendClientMessage(playerid, 0xBFFF80FF, string8);
}
return 1;
}
else if(strcmp(cmd, "/park", true)==0)
{
if(driver[playerid] == 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си шофьор!");
return 1;
}
if(privatecars[GetPlayerVehicleID(playerid)]!=1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не е лично!");
return 1;
}
if(GetPlayerVirtualWorld(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можете да паркирате в този Virtual World!");
if(GetPlayerInterior(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можете да паркирате в този Interior!");
if(strcmp(privatecarowner[GetPlayerVehicleID(playerid)], pname[playerid], true)==0)
{
if(PlayerInfo[playerid][pPrivateVehs]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате лично превозно средство!");
new vehicle=GetPlayerVehicleID(playerid);
new Float:angleveh;
GetVehicleZAngle(vehicle,angleveh);
new Float:vehx,Float:vehy,Float:vehz;
GetVehiclePos(vehicle,vehx,vehy,vehz);
privatecarX[vehicle]=vehx;
privatecarY[vehicle]=vehy;
privatecarZ[vehicle]=vehz;
privatecarA[vehicle]=angleveh;
privatecarsparked[vehicle]=1;
SetVehicleToRespawn(GetPlayerVehicleID(playerid));
SendClientMessage(playerid, 0x00FF40FF,"Вие запаметихте позицията на вашето превозно средство.");
PutPlayerInVehicle(playerid, vehicle, 0);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не е твое!");
}
return 1;
}
else if(strcmp(cmd, "/respawnv", true)==0)
{
if(GetPlayerVehicleID(playerid)<1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превозно средство!");
if (PlayerInfo[playerid][pAdmin] >= 5)
{
SetVehicleToRespawn(GetPlayerVehicleID(playerid));
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/dfcars", true) == 0)
{
if(sfpermission==0)
{
if(PlayerInfo[playerid][pTeam]!=15 && PlayerInfo[playerid][pRank]<6) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Delta Force!");
sfpermission=1;
new string170[170];
format(string170, 170, "[FACTION CHAT] %s позволи да се карат Special Force превозните средства!",pname[playerid]);
SendFactionMessage(15,0xA4A400FF,string170);
}
else
{
sfpermission=0;
new string170[170];
format(string170, 170, "[FACTION CHAT] %s забрани да се карат Special Force превозните средства!",pname[playerid]);
SendFactionMessage(15,0xA4A400FF,string170);
}
return 1;
}
if (strcmp(cmd, "/dfduty", true)==0)
{
if(!IsPlayerInRangeOfPoint(playerid,3.0,211.5823,1812.2897,21.8594) && !IsPlayerInRangeOfPoint(playerid,3.0,881.8779,-2252.2192,12.8527))
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на мястото за влизане в служба!");
}
if(PlayerInfo[playerid][pADuty] > 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pTeam]!=15) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Delta Force!");
if(PlayerInfo[playerid][pSpecialForce]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Special Force!");
if(PlayerInfo[playerid][pDFDuty]==1)
{
SendClientMessage(playerid, 0xA4A400FF, "[FACTION CHAT] Ти излезе от Special Force смяна!");
PlayerInfo[playerid][pDFDuty]=0;
}
else
{
SendClientMessage(playerid, 0xA4A400FF, "[FACTION CHAT] Ти влезе в Special Force смяна!");
PlayerInfo[playerid][pDFDuty]=1;
}
return 1;
}
else if(strcmp(cmd, "/specialforce", true)==0)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /specialforce [ID на играч]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pTeam]==15)
{
if(PlayerInfo[para1[playerid]][pTeam]!=15)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е член на Delta Force!");
}
if(PlayerInfo[para1[playerid]][pSpecialForce]==1)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е Special Force!");
}
if(PlayerInfo[para1[playerid]][pRank]<5)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този играч трябва първо да бъде 5 ранг!");
}
PlayerInfo[para1[playerid]][pSpecialForce]=1;
new string180[180];
format(string180, 180, "%s добави %s към Special Force членовете на Delta Force!",pname[playerid],pname[para1[playerid]]);
SendFactionMessage(15,0xA4A400FF,string180);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
return 1;
}
else if(strcmp(cmd, "/unspecialforce", true)==0)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /unspecialforce [ID на играч]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pTeam]!=15)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е член на Delta Force!");
}
if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pTeam]==15)
{
if(PlayerInfo[para1[playerid]][pSpecialForce]==0)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е Special Force!");
}
PlayerInfo[para1[playerid]][pSpecialForce]=0;
PlayerInfo[para1[playerid]][pDFDuty]=0;
new string180[180];
format(string180, 180, "%s премахна %s от Special Force членовете на Delta Force!",pname[playerid],pname[para1[playerid]]);
SendFactionMessage(15,0xA4A400FF,string180);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
return 1;
}
else if(strcmp(cmd, "/makegleader", true)==0)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /makegleader [ID на играч]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
if(PlayerInfo[para1[playerid]][pGLeader]==1)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е главен лидер!");
}
if(PlayerInfo[para1[playerid]][pRank]<6)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Този играч трябва първо да бъде лидер!");
}
PlayerInfo[para1[playerid]][pGLeader]=1;
PlayerInfo[para1[playerid]][pRank]=6;
if(PlayerInfo[playerid][pAchievement][2]==0)
{
PlayerInfo[para1[playerid]][pAchievement][2]=1;
SendClientMessage(para1[playerid], 0x00FF00FF, "Achievement: Вие спечелихте постижението 'Главният' и получавате 2 EP и $1300!");
PlayerInfo[para1[playerid]][pHideAchievement]=10*2;
PlayerInfo[para1[playerid]][pEP]+=2;
GivePlayerCash(para1[playerid],1300);
TextDrawShowForPlayer(para1[playerid], AchievementText);
PlayerPlaySound(para1[playerid], 1056, 0.0, 0.0, 0.0);
}
new string256[256];
if(PlayerInfo[para1[playerid]][pTeam]==1)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия VIP •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==2)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия Grove Street Famillies •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==3)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия Rolling Heights Ballas •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==4)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия Los Santos Vagos •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==5)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия Varrio Los Aztecas •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==6)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия Vinewood Cripz •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==7)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия San Fierro Triads •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==8)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия Eastern Boys •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==9)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия Sons Of Anarchy •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==10)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия Da Nang Boys •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==11)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия Italian Mafia •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==12)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия Bounty Hunters •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==13)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия San Andreas Police •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==14)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия FBI •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
if(PlayerInfo[para1[playerid]][pTeam]==15)
{
format(string256,256, "••• %s беше назначен за главен лидер на банда/мафия Delta Force •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF, string256);
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
return 1;
}
else if(strcmp(cmd, "/makeleader", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /makeleader [ID на играч] [team 1-22]");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 1: VIP, 2: Grove Street Families, 3: Rolling Heights Ballas");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 4: Los Santos Vagos, 5: Varrio Los Aztecas, 6: Vinewood Cripz");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 7: San Fierro Triads, 8: Eastern Boys, 9: Sons Of Anarchy");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 10: Da Nang Boys, 11: Italian Mafia, 12: Bounty Hunters");
SendClientMessage(playerid, 0xFFFFFFFF, "Опции: 13: San Andreas Police, 14: FBI, 15: Delta Force");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 16: Soldier Boys, 17: Yakuza 18: Syndicate Texas, 19: Blood Mafia");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 20: MS-13, 21: Bulgarian Mafia, 22: 343 Black Street");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1||level>22)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /makeleader [ID на играч] [team 1-22]");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 1: VIP, 2: Grove Street Families, 3: Rolling Heights Ballas");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 4: Los Santos Vagos, 5: Varrio Los Aztecas, 6: Vinewood Cripz");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 7: San Fierro Triads, 8: Eastern Boys, 9: Sons Of Anarchy");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 10: Da Nang Boys, 11: Italian Mafia, 12: Bounty Hunters");
SendClientMessage(playerid, 0xFFFFFFFF, "Опции: 13: San Andreas Police, 14: FBI, 15: Delta Force");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 16: Soldier Boys, 17: Yakuza 18: Syndicate Texas, 19: Blood Mafia");
SendClientMessage(playerid, 0xFFFF00FF, "Опции: 20: MS-13, 21: Bulgarian Mafia, 22: 343 Black Street");
return 1;
}
new string256[256];
if(level!=15)
{
PlayerInfo[para1[playerid]][pDFDuty]=0;
if(turfattack[PlayerInfo[playerid][pTeam]]>0)
{
if(turfmember[para1[playerid]]==2 && nospam2[para1[playerid]]==0)
{
inturfmembers[PlayerInfo[para1[playerid]][pTeam]]-=1;
turfmember[para1[playerid]]=0;
format(string256, 256, "Turf War: {FF0000}%s{008cff} напусна банда/мафията и отпадна от атаката!",pname[para1[playerid]]);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam] == PlayerInfo[para1[playerid]][pTeam])
{
SendClientMessage(i, 0x008cffFF, string256);
}
}
if(inturfmembers[PlayerInfo[para1[playerid]][pTeam]]==0)
{
format(string256, 256, "Turf War: {FF0000}%s{008cff} не успя да превземе %s територията на %s!",TeamInfo[PlayerInfo[playerid][pTeam]][tName],TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfName],TeamInfo[TurfInfo[TeamInfo[PlayerInfo[playerid][pTeam]][tWar]][TurfOwner]][tName]);
SendClientMessageToAll(0x008cffFF, string256);
turfwargang[TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]]=0;
turfattack[PlayerInfo[para1[playerid]][pTeam]]=0;
GangZoneStopFlashForAll(TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]);
TeamInfo[PlayerInfo[para1[playerid]][pTeam]][tWar]=0;
}
}
}
}
if(level==15)
{
PlayerInfo[para1[playerid]][pSpecialForce]=1;
}
if(PlayerInfo[playerid][pAchievement][1]==0)
{
PlayerInfo[para1[playerid]][pAchievement][1]=1;
SendClientMessage(para1[playerid], 0x00FF00FF, "Achievement: Вие спечелихте постижението 'Началник' и получавате 2 EP и $1300!");
PlayerInfo[para1[playerid]][pHideAchievement]=10*2;
PlayerInfo[para1[playerid]][pEP]+=2;
GivePlayerCash(para1[playerid],1300);
TextDrawShowForPlayer(para1[playerid], AchievementText);
PlayerPlaySound(para1[playerid], 1056, 0.0, 0.0, 0.0);
}
PlayerInfo[para1[playerid]][pTeam]=level;
PlayerInfo[para1[playerid]][pRank]=6;
GivePlayerEP(para1[playerid],0);
PlayerInfo[para1[playerid]][pGLeader]=0;
format(string256,256, "••• %s беше назначен за лидер на банда/мафия %s •••",pname[para1[playerid]],TeamInfo[level][tName]);
SendClientMessageToAll(0xF97804FF, string256);
format(string256, 256, "Ти беше назначен за лидер в %s от %s.",TeamInfo[level][tName],pname[playerid]);
SendClientMessage(para1[playerid], 0xF97804FF, string256);
RestartVIPLaser(playerid); if(PlayerInfo[para1[playerid]][pADuty]==0) RestartPlayerColor(para1[playerid]);
if(PlayerInfo[para1[playerid]][pADuty]==0 && GetPlayerVehicleID(para1[playerid])>0)
{
return SendClientMessage(para1[playerid],0xFFFFFFFF, "- Твоят скин не се смени, защото не си пешеходец -");
}
RestartPlayerSkin(para1[playerid]);
if(PlayerInfo[para1[playerid]][pSpawnO]!=2)
{
PlayerInfo[para1[playerid]][pSpawnO]=2; SendClientMessage(para1[playerid], 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Faction spawn!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/dm", true)==0)
{
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(getmbid==playerid)
{
SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да използваш тази команда, докато си с куфара!");
return 1;
}
new Float:pHealth;
GetPlayerHealth(playerid,pHealth);
new Float:pArmour;
GetPlayerArmour(playerid,pArmour);
if(pHealth <= 99 && pArmour<=99)
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да се телепортираш, докато си под 100 жилетка и 100 кръв!");
return 1;
}
SetPlayerPos(playerid, 2391.9109,1038.5081,10.8203);
SetPlayerFacingAngle(playerid,177.0329);
SetPlayerInterior(playerid, 0);
SetPlayerVirtualWorld(playerid, 0);
SendClientMessage(playerid, 0xFFFFFFFF, "Ти успешно се телепортира на DM");
SetCameraBehindPlayer(playerid);
return 1;
}
else if(strcmp(cmd, "/dm2", true)==0)
{
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да се телепортираш!");
return 1;
}
if(getmbid==playerid)
{
SendClientMessage(playerid, COLOR_GRAD1,"Не можеш да използваш тази команда, докато си с куфара!");
return 1;
}
new Float:pHealth;
GetPlayerHealth(playerid,pHealth);
new Float:pArmour;
GetPlayerArmour(playerid,pArmour);
if(pHealth <= 99 && pArmour<=99)
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да се телепортираш, докато си под 100 жилетка и 100 кръв!");
return 1;
}
SetPlayerPos(playerid, 1135.5582,1335.1517,10.8203);
SetPlayerFacingAngle(playerid,177.0329);
SetPlayerInterior(playerid, 0);
SetPlayerVirtualWorld(playerid, 0);
SendClientMessage(playerid, 0xFFFFFFFF, "Ти успешно се телепортира на DM 2");
SetCameraBehindPlayer(playerid);
return 1;
}
else if(strcmp(cmd, "/hitman", true)==0)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /hitman [ID на играч] [cash]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(para1[playerid]==playerid)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да заложиш пари за себе си !");
return 1;
}
if(level<1000000||level>100000000)
{
SendClientMessage(playerid,COLOR_GRAD1,"Парите трябва да са от 1 000 000 до 100 000 000 !");
return 1;
}
if(level>PlayerInfo[playerid][pCash])
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш толкова пари !");
return 1;
}
hitmanprice[para1[playerid]]+=level;
hitmanby[para1[playerid]]=playerid;
hitmaner[playerid]=para1[playerid];
GivePlayerCash(playerid,-level);
new string256[256];
format(string256, 256, "Hitman: %s заложи $%d за главата на %s", pname[playerid], level,pname[para1[playerid]]);
SendClientMessageToAll(0xA4A400FF, string256);
format(string256, 256, "Hitman: Ти заложи $%d за главата на %s",level, pname[para1[playerid]]);
SendClientMessage(playerid, 0xA4A400FF, string256);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
return 1;
}
else if(strcmp(cmd, "/pay", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /pay [ID на играч] [стойност]");
return 1;
}
new giveplayerid = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /pay [ID на играч] [стойност]");
return 1;
}
new moneys = strval(tmp);
if(moneys < 1 || moneys > 100000000)
{
SendClientMessage(playerid, COLOR_GRAD1, "Парите трябва да са от 1 до 100 000 000.");
return 1;
}
if (IsPlayerConnected(giveplayerid))
{
if(giveplayerid!=playerid)
{
if (CorDetector(4.0, playerid, giveplayerid))
{
if(PlayerInfo[playerid][pCash]<moneys) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш толкова пари!");
GivePlayerCash(playerid, -moneys);
GivePlayerCash(giveplayerid, moneys);
new stringpay[500];
format(stringpay, 500, "{FFFFFF}Ти даде пари на {FFFFFF}%s {FFFFFF}на стойност {40BF00}$%s.", pname[giveplayerid], FormatNumber(moneys));
SendClientMessage(playerid, 0xFFFFFFFF, stringpay);
format(stringpay, 500, "{FFFFFF}Ти получи пари на стойност {40BF00}$%s {FFFFFF}от {FFFFFF}%s.",  FormatNumber(moneys), pname[playerid]);
SendClientMessage(giveplayerid, 0xFFFFFFFF, stringpay);
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е близо до теб!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да дадеш пари на себе си!");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
return 1;
}
else if(strcmp(cmd, "/makevip", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /makevip [ID на играч] [level 1-6]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1||level>6)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /makevip [ID на играч] [level 1-6]");
return 1;
}
PlayerInfo[para1[playerid]][pVip]=level;
new string90[90];
format(string90, 90, "- Честито, %s те направи VIP Level %d -", pname[playerid], level);
SendClientMessage(para1[playerid], 0x27cc63FF, string90);
format(string90, 90, "- Ти направи %s VIP левел %d -", pname[para1[playerid]],level);
SendClientMessage(playerid, 0x27cc63FF, string90);
if(PlayerInfo[para1[playerid]][pAchievement][5]==0)
{
PlayerInfo[para1[playerid]][pAchievement][5]=1;
SendClientMessage(para1[playerid], 0x00FF00FF, "Achievement: Вие спечелихте постижението 'VIP' и получавате 2 EP и $1300!");
PlayerInfo[para1[playerid]][pHideAchievement]=10*2;
PlayerInfo[para1[playerid]][pEP]+=2;
GivePlayerCash(para1[playerid],1300);
TextDrawShowForPlayer(para1[playerid], AchievementText);
PlayerPlaySound(para1[playerid], 1056, 0.0, 0.0, 0.0);
}
if(level<2)
{
PlayerInfo[playerid][pCNos] = 0;
if(IsPlayerInAnyVehicle(playerid) && PlayerInfo[playerid][pCNos] == 1)
{
AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
}
}
if(level>3)
{
if(PlayerInfo[para1[playerid]][pTeam]==1)
{
PlayerInfo[para1[playerid]][pLaser]=1;
SetPVarInt(para1[playerid], "color", 18643);
}
if(PlayerInfo[para1[playerid]][pTeam]==2)
{
PlayerInfo[para1[playerid]][pLaser]=1;
SetPVarInt(para1[playerid], "color", 19083);
}
if(PlayerInfo[para1[playerid]][pTeam]==13 || PlayerInfo[para1[playerid]][pTeam]==14 || PlayerInfo[para1[playerid]][pTeam]==6)
{
PlayerInfo[para1[playerid]][pLaser]=1;
SetPVarInt(para1[playerid], "color", 19080);
}
if(PlayerInfo[para1[playerid]][pTeam]==8)
{
PlayerInfo[para1[playerid]][pLaser]=1;
SetPVarInt(para1[playerid], "color", 18643);
}
if(PlayerInfo[para1[playerid]][pTeam]==15)
{
SetPVarInt(para1[playerid], "color", 19084);
}
}
else
{
SetPVarInt(para1[playerid], "color", 0);
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/giveep", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /giveep [ID на играч] [ep]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(startedevent==0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма евент!");
if(startedevent<2) return  SendClientMessage(playerid, COLOR_GRAD1, "Евентът е без награда!");
if(inevent[para1[playerid]]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът не е от евента!");
PlayerInfo[para1[playerid]][pEP]+=level;
format(stringstatistic[para1[playerid]], 115, "~g~Reputation: ~w~%d   ~b~EP: ~r~%d~w~/~g~%d", PlayerInfo[para1[playerid]][pLevel],PlayerInfo[para1[playerid]][pEP],PlayerInfo[para1[playerid]][pLevel]+6);
TextDrawSetString(statistic[para1[playerid]], stringstatistic[para1[playerid]]);
new string115[115];
format(string115, 115, "[ADMIN] %s даде %d EP на %s",pname[playerid],level,pname[para1[playerid]]);
SendClientMessageToAll(COLOR_RED,string115);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/saveserver", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ADMIN SAVE~n~~w~PLEASE WAIT", 3500, 3);
SaveServer();
GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ADMIN SAVE~n~~g~completed", 3500, 3);
SendClientMessageToAll( 0xE60000FF, "SERVER: Всичко се запамети успешно, благодарим за вашето търпение!");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/saveserver", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ADMIN SAVE~n~~w~PLEASE WAIT", 3500, 3);
}
SaveServer();
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ADMIN AUTO SAVE~n~~g~completed", 3500, 3);
}
SendClientMessageToAll( 0xE60000FF, "SERVER: Всичко се запамети успешно, благодарим за вашето търпение!");
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/setcash", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setcash [ID на играч] [cash]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
PlayerInfo[para1[playerid]][pCash]=level;
GivePlayerCash(para1[playerid],0);
new string115[115];
format(string115, 115, "- Ти сложи парите на %s да са $%d -",pname[para1[playerid]],level);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
format(string115, 115, "- %s сложи твоите пари да са $%d -",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/getcash", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /getcash [ID на играч] [cash]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Парите трябва да са по-големи от 0!");
return 1;
}
GivePlayerCash(para1[playerid],-level);
new string115[115];
format(string115, 115, "- Ти взе $%d от %s -",level,pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
format(string115, 115, "- %s взе $%d от теб -",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/givecash", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /givecash [ID на играч] [cash]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1)
{
SendClientMessage(playerid, COLOR_GRAD1, "Парите трябва да са по-големи от 0!");
return 1;
}
GivePlayerCash(para1[playerid],level);
new string115[115];
format(string115, 115, "- Ти даде $%d на %s -",level,pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
format(string115, 115, "- %s ти даде $%d -",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/giveep", true)==0)
{
if (PlayerInfo[playerid][pEvent] == 1)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /giveep [ID на играч] [level]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(level<1 || level>10)
{
SendClientMessage(playerid, COLOR_GRAD1, "EP трябва да е по-голямо от 0 и по-малко от 10!");
return 1;
}
if(inevent[playerid]==0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е от евента!");
PlayerInfo[para1[playerid]][pEP]+=level;
new string115[115];
GivePlayerEP(para1[playerid], level);
format(string115, 115, "- Ти увеличи с %d левела на %s -",level,pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
if(level>1)
{
format(string115, 115, "- %s ти даде %d EP -",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115); }
if(level==1)
{
format(string115, 115, "- %s ти даде %d EP -",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115); }
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
/*
tmp = strtok(cmdtext, idx);
if(!strlen(tmp)) return SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /gotocor [coor x] [coor y] [coor z]");
new coorx;
coorx = strval(tmp);
tmp = strtok(cmdtext, idx);
*/
else if(strcmp(cmd, "/givegangcash", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /givegangcash [ID на Gang, провери /gangs] [Cash]");
return 1;
}
new level;
para1[playerid]=strval(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid]<1 || para1[playerid]>22) return SendClientMessage(playerid, COLOR_GRAD1, "Това не е GANG ID, виж /gangs!");
GiveTeamCash2(para1[playerid],level);
if(level>0)
{
new string115[115];
format(string115, 115, "- Ти даде $%d Cash на %s -",level,TeamInfo[para1[playerid]][tName]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
new stringformatFac[256];
format(stringformatFac,256,"[GANG Cash] Администратор %s даде $%d Cash на организацията ви!",pname[playerid],level);
SendFactionMessage(para1[playerid],0xb67bedFF,stringformatFac);
}
else
{
new string115[115];
format(string115, 115, "- Ти взе $%d Cash от %s -",level,TeamInfo[para1[playerid]][tName]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
new stringformatFac[256];
format(stringformatFac,256,"[GANG Cash] Администратор %s взе $%d Cash от организацията ви!",pname[playerid],level);
SendFactionMessage(para1[playerid],0xb67bedFF,stringformatFac);
}
//stock SendFactionMessage(TEAM,color,string[])
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/giveganglevel", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /giveganglevel [ID на Gang, провери /gangs] [Level]");
return 1;
}
new level;
para1[playerid]=strval(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid]<1 || para1[playerid]>22) return SendClientMessage(playerid, COLOR_GRAD1, "Това не е GANG ID, виж /gangs!");
new string115[115];
format(string115, 115, "- Ти даде %d Level на %s -",level,TeamInfo[para1[playerid]][tName]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
GiveTeamLevel2(para1[playerid],level);
new stringformatFac[256];
format(stringformatFac,256,"[GANG LEVEL] Администратор %s даде %d Level на организацията ви!",pname[playerid],level);
SendFactionMessage(para1[playerid],0xb67bedFF,stringformatFac);
//stock SendFactionMessage(TEAM,color,string[])
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/givegangep", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /givegangep [ID на Gang, провери /gangs] [EP]");
return 1;
}
new level;
para1[playerid]=strval(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid]<1 || para1[playerid]>22) return SendClientMessage(playerid, COLOR_GRAD1, "Това не е GANG ID, виж /gangs!");
new string115[115];
format(string115, 115, "- Ти даде %d EP на %s -",level,TeamInfo[para1[playerid]][tName]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
GiveTeamEP2(para1[playerid],level);
new stringformatFac[256];
format(stringformatFac,256,"[GANG EP] Администратор %s даде %d EP на организацията ви!",pname[playerid],level);
SendFactionMessage(para1[playerid],0xb67bedFF,stringformatFac);
//stock SendFactionMessage(TEAM,color,string[])
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/givelevel", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5)
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /givelevel [ID на играч] [level]");
return 1;
}
new level;
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
level=strval(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
GivePlayerLevel(para1[playerid],level);
new string115[115];
SetPlayerScore(para1[playerid], PlayerInfo[para1[playerid]][pLevel]);
format(string115, 115, "- Ти увеличи с %d левела на %s -",level,pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF,string115);
if(level>1)
{
format(string115, 115, "- %s ти даде %d левела -",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115); }
if(level==1)
{
format(string115, 115, "- %s ти даде %d левел -",pname[playerid],level);
SendClientMessage(para1[playerid], 0xFFFF00FF,string115); }
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/lastonline", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 3)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /lastonline [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
new nameofmounth[15];
if(PlayerInfo[para1[playerid]][pMonth]==1) { nameofmounth="Януари"; }
else if(PlayerInfo[para1[playerid]][pMonth]==2) { nameofmounth="февруари"; }
else if(PlayerInfo[para1[playerid]][pMonth]==3) { nameofmounth="Март"; }
else if(PlayerInfo[para1[playerid]][pMonth]==4) { nameofmounth="Април"; }
else if(PlayerInfo[para1[playerid]][pMonth]==5) { nameofmounth="Май"; }
else if(PlayerInfo[para1[playerid]][pMonth]==6) { nameofmounth="Юни"; }
else if(PlayerInfo[para1[playerid]][pMonth]==7) { nameofmounth="Юли"; }
else if(PlayerInfo[para1[playerid]][pMonth]==8) { nameofmounth="Август"; }
else if(PlayerInfo[para1[playerid]][pMonth]==9) { nameofmounth="Септември"; }
else if(PlayerInfo[para1[playerid]][pMonth]==10) { nameofmounth="Октомври"; }
else if(PlayerInfo[para1[playerid]][pMonth]==11) { nameofmounth="Ноември"; }
else if(PlayerInfo[para1[playerid]][pMonth]==12) { nameofmounth="Декември"; }
new string2562[256];
new noonline=0;
if(PlayerInfo[para1[playerid]][pRegistred]==0)
{
SendClientMessage(playerid, 0x00E600FF,"Този играч не е влязъл в профила си!");
return 1;
}
if(PlayerInfo[para1[playerid]][pMonth]==0)
{
noonline=1;
}
if(noonline==1)
{
SendClientMessage(playerid, 0x00E600FF,"В този профил е влизано за пръв път!");
return 1;
}
format(string2562,256,"В акаунта %s е влизано последно на %d.%d.%d г. в %d:%d:%d часа!",pname[para1[playerid]],PlayerInfo[para1[playerid]][pYear], PlayerInfo[para1[playerid]][pDay],PlayerInfo[para1[playerid]][pMonth], PlayerInfo[para1[playerid]][pHours], PlayerInfo[para1[playerid]][pMinutes] ,PlayerInfo[para1[playerid]][pSeconds]);
SendClientMessage(playerid, 0x00E600FF,string2562);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/tog", true) == 0)
{
tmp = strtok(cmdtext, idx);
new tmp2=strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /tog [chat number]");
SendClientMessage(playerid, 0xFFFF00FF, "Chat Numbers: 1: Global, 2: Admin, 3: Test Admin, 4: Faction, 5: Leader");
return 1;
}
if(tmp2<1||tmp2>5)
{
SendClientMessage(playerid,COLOR_GRAD1,"Тази опция не съществува!");
}
if(tmp2==1)
{
if(togchat[playerid]==0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега няма да можеш да виждаш какво пишат в главния чат!");
togchat[playerid]=1;
}
else
{
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега ще можеш да виждаш какво пишат в главния чат!");
togchat[playerid]=0;
}
}
if(tmp2==2)
{
if(PlayerInfo[playerid][pAdmin]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
if(PlayerInfo[playerid][pAHide]==0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега няма да можеш да виждаш какво пишат в ADMIN чата!");
PlayerInfo[playerid][pAHide]=1;
}
else
{
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега ще можеш да виждаш какво пишат в ADMIN чата!");
PlayerInfo[playerid][pAHide]=0;
}
}
if(tmp2==3)
{
if(PlayerInfo[playerid][pTest]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
if(PlayerInfo[playerid][pAHide]==0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега няма да можеш да виждаш какво пишат в TEST ADMIN чата!");
PlayerInfo[playerid][pAHide]=1;
}
else
{
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Сега ще можеш да виждаш какво пишат в TEST ADMIN чата!");
PlayerInfo[playerid][pAHide]=0;
}
}
if(tmp2==4)
{
if(PlayerInfo[playerid][pTeam]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в банда/мафия!");
if(PlayerInfo[playerid][pTogFaction]==0)
{
SendClientMessage(playerid, 0x33CCFFFF, "SERVER: Сега няма да виждаш какво пишат във FACTION чата!");
PlayerInfo[playerid][pTogFaction]=1;
}
else
{
SendClientMessage(playerid, 0x33CCFFFF, "SERVER: Сега ще виждаш какво пишат във FACTION чата!");
PlayerInfo[playerid][pTogFaction]=0;
}
}
if(tmp2==5)
{
if(PlayerInfo[playerid][pRank]<6) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
if(PlayerInfo[playerid][pTogLeader]==0)
{
SendClientMessage(playerid, 0xD9CCC8FF, "SERVER: Сега няма да виждаш какво пишат във LEADER чата!");
PlayerInfo[playerid][pTogLeader]=1;
}
else
{
SendClientMessage(playerid, 0xD9CCC8FF, "SERVER: Сега ще виждаш какво пишат във LEADER чата!");
PlayerInfo[playerid][pTogLeader]=0;
}
}
return 1;
}
else if(strcmp(cmd, "/spawn", true) == 0)
{
tmp = strtok(cmdtext, idx);
new tmp2=strval(tmp);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /spawn [1-5]");
SendClientMessage(playerid, 0xFFFF00FF, "1: Civil, 2: Faction, 3: IFC, 4: House, 5: Bizz, 6: Clan");
return 1;
}
if(tmp2<1||tmp2>6)
{
SendClientMessage(playerid,COLOR_GRAD1,"Тази опция не съществува!");
}
if(tmp2==1)
{
if(PlayerInfo[playerid][pSpawnO]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Твоят spawn вече е на Civil!");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя spawn на Civil spawn!");
}
if(tmp2==2)
{
if(PlayerInfo[playerid][pTeam]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в банда/мафия!");
return 1;
}
if(PlayerInfo[playerid][pSpawnO]==2) return SendClientMessage(playerid,COLOR_GRAD1,"Твоят spawn вече е на Faction!");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя spawn на Faction spawn!");
}
if(tmp2==3)
{
if(PlayerInfo[playerid][pSpawnO]==3) return SendClientMessage(playerid,COLOR_GRAD1,"Твоят spawn вече е на Intense Fuel Company!");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя spawn на IFC spawn!");
}
if(tmp2==4)
{
if(PlayerInfo[playerid][pSpawnO]==4) return SendClientMessage(playerid,COLOR_GRAD1,"Твоят spawn вече е на къща!");
if(PlayerInfo[playerid][pHouseO]==-1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не притежаваш къща!");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя spawn на House spawn!");
}
if(tmp2==5)
{
if(PlayerInfo[playerid][pSpawnO]==5) return SendClientMessage(playerid,COLOR_GRAD1,"Твоят spawn вече е на бизнес!");
if(PlayerInfo[playerid][pBizO]==-1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не притежаваш бизнес!");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя spawn на Bizz spawn!");
}
if(tmp2==6)
{
if(PlayerInfo[playerid][pClan]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в клан!");
return 1;
}
if(PlayerInfo[playerid][pSpawnO]==6) return SendClientMessage(playerid,COLOR_GRAD1,"Твоят spawn вече е на Clan!");
SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя spawn на Clan spawn!");
}
PlayerInfo[playerid][pSpawnO]=tmp2;
return 1;
}
else if(strcmp(cmd, "/akill", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /akill [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
SetPlayerHealth(para1[playerid], 0);
new string115[115];
format(string115, 115, "You have been admin killed by %s", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string115);
format(string115, 115, "You killed %s", pname[para1[playerid]]);
SendClientMessage(playerid, 0xE60000FF, string115);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/togtestadmin", true) == 0)
{
if(PlayerInfo[playerid][pTest] == 1)
{
if(PlayerInfo[playerid][pAHide] == 0)
{
PlayerInfo[playerid][pAHide] = 1;
SendClientMessage(playerid, COLOR_RED, "Сега няма да можеш да виждаш какво пишат в TEST ADMIN чата!");
}
else
{
PlayerInfo[playerid][pAHide] = 0;
SendClientMessage(playerid, COLOR_RED, "Сега ще виждаш какво пишат в TEST ADMIN чата!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/togadmin", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 1)
{
if(PlayerInfo[playerid][pAHide] == 0)
{
PlayerInfo[playerid][pAHide] = 1;
SendClientMessage(playerid, COLOR_RED, "Сега няма да можеш да виждаш какво пишат в ADMIN чата!");
}
else
{
PlayerInfo[playerid][pAHide] = 0;
SendClientMessage(playerid, COLOR_RED, "Сега ще виждаш какво пишат в ADMIN чата!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/gethere", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /gethere [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid]==playerid)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да телепортираш себе си!");
return 1;
}
if(para1[playerid] != INVALID_PLAYER_ID)
{
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
SetPlayerInterior(para1[playerid], GetPlayerInterior(playerid));
new string115[115];
SetPlayerVirtualWorld(para1[playerid], GetPlayerVirtualWorld(playerid));
SetPlayerPos(para1[playerid],X[playerid], Y[playerid]+2, Z[playerid]);
format(string115, 115, "- Ти беше телепортиран до %s -", pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFFFFFF, string115);
format(string115, 115, "- Ти телепортира %s до теб -", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF, string115);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "[ADMIN] %s телепортира %s до себе си!", pname[playerid] ,pname[para1[playerid]]);
SendClientMessage(i,COLOR_RED, string115);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/af", true) == 0 || strcmp(cmd, "/acceptfaction", true) == 0)
{
new string115[115];
if(TeamInvite[playerid]==-1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш покана за банда/мафия!");
PlayerInfo[playerid][pTeam]=TeamInvite[playerid];
TeamInvite[playerid]=-1;
PlayerInfo[playerid][pSpecialForce]=0;
PlayerInfo[playerid][pRank]=1;
format(string115,115,"[FACTION CHAT] %s влезе в твоята банда/мафия.",pname[playerid]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string115);
RestartPlayerColor(playerid); RestartVIPLaser(playerid);
if(PlayerInfo[playerid][pAchievement][0]==0)
{
PlayerInfo[playerid][pAchievement][0]=1;
SendClientMessage(playerid, 0x00FF00FF, "Achievement: Вие спечелихте постижението 'Вход към света' и получавате 2 EP и $1300!");
PlayerInfo[playerid][pHideAchievement]=10*2;
TextDrawShowForPlayer(playerid, AchievementText);
PlayerInfo[playerid][pEP]+=2;
GivePlayerEP(playerid,0);
GivePlayerCash(playerid,1300);
PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
}
if(PlayerInfo[playerid][pTeam]==15)
{
SendClientMessage(playerid, COLOR_RDF, "SERVER: Вие влязохте в Delta Force, ако желаете вашия SPAWN да бъде в LS/LV/SF, използвайте /dflv, /dfls, / dfsf!");
}
if(IsPlayerInAnyVehicle(playerid) == 1 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xFFFFFFFF, "- Твоят скин не се смени, защото не си пешеходец -");
}
if(PlayerInfo[playerid][pSpawnO]!=2)
{
PlayerInfo[playerid][pSpawnO]=2; SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Faction spawn!");
}
if(IsPlayerInAnyVehicle(playerid) == 1 && PlayerInfo[playerid][pADuty]==0)
{
return 1;
}
RestartPlayerSkin(playerid);
return 1;
}
else if(strcmp(cmd, "/joinbg", true) == 0)
{
if(PlayerInfo[playerid][pClan]!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти вече си в клан!");
PlayerInfo[playerid][pClan]=1;
PlayerInfo[playerid][pRank]=1;
new string115[115];
SendClientMessage(playerid,0x33CCFFFF, "Ти влезе в клан, вече зад името ти ще пише [BG]!");
format(string115,115,"[FACTION CHAT] JOINBG: %s влезе в твоя клан.",pname[playerid]);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pClan] == PlayerInfo[playerid][pClan])
{
SendClientMessage(i, 0x33CCFFFF,string115);
}
}
return 1;
}
else if(strcmp(cmd, "/joinvip", true) == 0)
{
if(PlayerInfo[playerid][pLevel]>20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти не можеш да влезеш във VIP, защото си над 20 левел!");
if(PlayerInfo[playerid][pTeam]!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти вече си в банда/мафия!");
PlayerInfo[playerid][pTeam]=1;
PlayerInfo[playerid][pRank]=1;
new string115[115];
SendClientMessage(playerid,0x33CCFFFF, "Ти влезе в банда/мафия VIP, Честито!");
format(string115,115,"[FACTION CHAT] JOINVIP: %s влезе в твоята банда/мафия.",pname[playerid]);
GivePlayerEP(playerid,0);
if(IsPlayerInAnyVehicle(playerid) == 1 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,0xFFFFFFFF, "- Твоят скин не се смени, защото не си пешеходец -");
}
else
{
RestartPlayerSkin(playerid);
}
if(PlayerInfo[playerid][pSpawnO]!=2)
{
PlayerInfo[playerid][pSpawnO]=2; SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Faction spawn!");
}
if(IsPlayerInAnyVehicle(playerid) == 1 && PlayerInfo[playerid][pADuty]==0)
{
return 1;
}
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string115);
if(PlayerInfo[playerid][pVip]>3 || freevip==1)
{
SetPVarInt(playerid, "color", 0);
PlayerInfo[playerid][pLaser]=1;
}
if(PlayerInfo[playerid][pADuty]==0)
{
SetPlayerColor(playerid,0xFF3737FF);
}
return 1;
}
else if(strcmp(cmd, "/cf", true) == 0 || strcmp(cmd, "/cancelfaction", true) == 0)
{
new string115[115];
if(TeamInvite[playerid]==-1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш покана за банда/мафия!");
format(string115,115,"%s отказа да влезе в твоята банда/мафия.",pname[playerid]);
SendFactionMessage(TeamInvite[playerid],0x33CCFFFF,string115);
TeamInvite[playerid]=-1;
return 1;
}
else if(strcmp(cmd, "/cduel", true) == 0)
{
if(duelsend[playerid]>-1)
{
new duelstring[256];
format(duelstring,256,"Duel: Ти отмени поканата за дуел, която изпрати на %s",pname[duelsend[playerid]]);
SendClientMessage(playerid, 0xFFE400FF,duelstring);
format(duelstring, 256, "Duel: %s отказа поканата си за дуел", pname[duelsender[duelsend[playerid]]]);
SendClientMessage(duelsender[playerid], 0xFFE400FF,duelstring);
duelsender[duelsend[playerid]]= -1;
duelsend[playerid]= -1;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си поканил никого на дуел!");
}
return 1;
}
else if(strcmp(cmd, "/yes", true) == 0)
{
if(duelsender[playerid]>-1)
{
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(PlayerInfo[playerid][pADuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да играеш дуел, докато си ADMIN ON-DUTY!");
if(PlayerInfo[playerid][pAFK]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да играеш дуел!");
return 1;
}
if(PlayerInfo[playerid][pJail]> 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в админ затвора и не можеш да играеш дуел!");
return 1;
}
if(cmn1[playerid]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да играеш дуел, докато си CMN1!"); }
if(getmbid==playerid){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да играеш дуел, докато си с куфара!");}
if(induel[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да играеш пак, докато си в дуел!");}
if(indmon[playerid]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не да играеш, докато си в DMON!");}
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в евент!");
if(PlayerInfo[playerid][pInDM]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да играеш дуел, докато си в Deathmatch!");}
if(PlayerInfo[playerid][pADuty]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не да играеш, докато си ADMIN ON-DUTY!");}
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(cmn1[duelsender[playerid]]>0) { return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да играеш дуел, докато играчът е CMN1!"); }
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pWanted]>=1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, защото си издирван!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(getmbid==duelsender[playerid]){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да играеш дуел, докато играчът е с куфара!");}
if(induel[duelsender[playerid]]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да играеш, докато играчът е в дуел!");}
if(indmon[duelsender[playerid]]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да играеш, играчът е в DMON!");}
if(PlayerInfo[duelsender[playerid]][pADuty]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не да играеш, играчът е ADMIN ON-DUTY!");}
if(PlayerInfo[duelsender[playerid]][pInDM]==1){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да играеш играчът е в Deathmatch!");}
format(string,256,"Duel: Ти прие поканата за дуел на %s",pname[duelsender[playerid]]);
SendClientMessage(playerid, 0xFFE400FF,string);
format(string, 256, "Duel: %s прие поканата ти за дуел", pname[playerid]);
SendClientMessage(duelsender[playerid], 0xFFE400FF,string);
induel[playerid]=1;
induel[duelsender[playerid]]=1;
duelprotivnik[playerid]=duelsender[playerid];
duelprotivnik[duelsender[playerid]]=playerid;
PlayerInfo[duelsender[playerid]][pDuelTimer]=2;
duelzalog[playerid]=0;
rankformula[playerid]=1;
rankformula[duelsender[playerid]]=1;
BeforeDuel(playerid);
BeforeDuel(duelsender[playerid]);
SetCameraBehindPlayer(playerid);
SetCameraBehindPlayer(duelsender[playerid]);
dueltype[playerid]=dueltype[duelsender[playerid]];
SetPlayerArmedWeapon(playerid,0); SetPlayerArmedWeapon(duelsender[playerid],0);
SetPlayerInterior(playerid,1);
SetPlayerInterior(duelsender[playerid],1);
SetPlayerPos(duelsender[playerid],1373.1509,-33.9499,1000.9219);
SetPlayerPos(playerid,1410.3407,-1.3358,1000.9233);
SetPlayerFacingAngle(playerid,123.8814);
SetPlayerFacingAngle(duelsender[playerid],313.3936);
SetPlayerVirtualWorld(playerid,500+playerid);
SetPlayerVirtualWorld(duelsender[playerid],500+playerid);
SetPlayerHealth(playerid,100); SetPlayerHealth(duelsender[playerid],100);
SetPlayerArmour(playerid,100); SetPlayerArmour(duelsender[playerid],100);
SetPlayerColor(duelsender[playerid],0xFF9068FF);SetPlayerColor(playerid,0xFF9068FF);
TogglePlayerControllable(playerid,0);
TogglePlayerControllable(duelsender[playerid],0);
dueltype[playerid]=dueltype[duelsender[playerid]];
if(dueltype[playerid]==1)
{
dueltimer[playerid]=2*120;
new stringdueltest[256];
format(stringdueltest,256,"[Duel Test] %s прие поканата на %s, те имат 2 минути да играят дуел!",pname[playerid],pname[duelsender[playerid]]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,stringdueltest);
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Никой не ти е пратил покана за дуел!");
}
return 1;
}
else if(strcmp(cmd, "/no", true) == 0)
{
if(duelsender[playerid]==-1)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Никой не ти е пратил покана за дуел!");
}
new string356[356];
format(string356,356,"Duel: Ти отказа поканата за дуел на %s",pname[duelsender[playerid]]);
SendClientMessage(playerid, 0xFFE400FF,string356);
format(string356, 356, "Duel: %s отказа поканата ти за дуел", pname[playerid]);
SendClientMessage(duelsender[playerid], 0xFFE400FF,string356);
new duelsendera=duelsender[playerid];
duelsender[playerid]=-1;
duelsend[duelsendera]=-1;
return 1;
}
else if(strcmp(cmd, "/duelranks", true)==0)
{
if(PlayerInfo[playerid][pTeam]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в банда/мафия!");
return 1;
}
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /duelranks [ID на играч] [duel 1-3]");
return 1;
}
new test = strval(tmp);
new giveplayerid = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
test = strval(tmp);
if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GRAD1,"Невалидно ID!");
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[giveplayerid][pTeam])
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва играчът да е член на твоята банда/мафия!");
return 1;
}
if(test<1 || test>3)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /duelranks [ID на играч] [duel 1-3]");
return 1;
}
if(duelpoints[giveplayerid][test-1]==-1)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е нанасял Damage!");
}
new strasd[256];
format(strasd,256,"Duel Test: %d, Damage: %.0f, Rank: %d",test,duelpoints[giveplayerid][test-1],rankformula2[giveplayerid][test-1]);
SendClientMessage(playerid,0x33CCFFFF,strasd);
return 1;
}
else if(strcmp(cmd, "/duelrank", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /duelrank [ID на играч]");
return 1;
}
if(PlayerInfo[playerid][pRank]<5)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си поне 5 Rank за да използваш тази команда!");
return 1;
}
new giveplayerid = ReturnUser(tmp);
if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GRAD1,"Невалидно ID!");
if(PlayerInfo[playerid][pTeam]!=PlayerInfo[giveplayerid][pTeam])
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва играчът да е член на твоята банда/мафия!");
return 1;
}
if(induel[giveplayerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента играчът е в друг дуел!");
if(induel[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в друг дуел!");
if(giveplayerid==playerid) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да поканиш себе си на дуел!");
if(PlayerInfo[giveplayerid][pADuty]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч в момента е ADMIN ON-DUTY!");
if(PlayerInfo[playerid][pADuty]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да играеш дуел, докато си ADMIN ON-DUTY!");
if(duelsender[playerid]>-1) return SendClientMessage(playerid,COLOR_GRAD1,"Вече си изпратил покана за дуел на друг играч!");
if(duelsend[playerid]>-1) return SendClientMessage(playerid,COLOR_GRAD1,"Имаш показа за дуел от друг играч в момента!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в DMON!");
format(string,256,"Duel Test: Ти изпрати покана за дуел на %s. Ако искаш да отмениш поканата напиши /cduel",pname[giveplayerid]);
SendClientMessage(playerid, 0xFFE400FF,string);
format(string, 256, "Duel Test: %s те покани на дуел за Rank. Напиши /yes за да приемеш или /no за да откажеш!", pname[playerid]);
SendClientMessage(giveplayerid, 0xFFE400FF,string);
duelsender[giveplayerid]=playerid;
duelsend[playerid]=giveplayerid;
dueltype[playerid]=1;
new stringdueltest[256];
format(stringdueltest,256,"[Duel Test] %s покани %s на тест за Rank",pname[playerid],pname[giveplayerid]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,stringdueltest);
return 1;
}
else if(strcmp(cmd, "/duel", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /duel [ID на играч] [money]");
return 1;
}
new zalog = strval(tmp);
new giveplayerid = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
zalog = strval(tmp);
if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GRAD1,"Невалидно ID!");
if(induel[giveplayerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента играчът е в друг дуел!");
if(induel[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в друг дуел!");
if(giveplayerid==playerid) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да поканиш себе си на дуел!");
if(PlayerInfo[giveplayerid][pADuty]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч в момента е ADMIN ON-DUTY!");
if(PlayerInfo[playerid][pADuty]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да играеш дуел, докато си ADMIN ON-DUTY!");
if(zalog<100 || zalog> 1000000) return SendClientMessage(playerid,COLOR_GRAD1,"Залогът трябва да е между $100 и $1,00,000!");
if(PlayerInfo[playerid][pCash]<zalog) return SendClientMessage(playerid,COLOR_GRAD1,"Нямаш толкова пари за залог!");
if(PlayerInfo[playerid][pWanted]>=1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, защото си издирван!");
if(PlayerInfo[giveplayerid][pCash]<zalog) return SendClientMessage(playerid,COLOR_GRAD1,"Играчът няма толкова пари за залог!");
if(duelsender[playerid]>-1) return SendClientMessage(playerid,COLOR_GRAD1,"Вече си изпратил покана за дуел на друг играч!");
if(duelsend[playerid]>-1) return SendClientMessage(playerid,COLOR_GRAD1,"Имаш показа за дуел от друг играч в момента!");
if(indmon[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в DMON!");
format(string,256,"Duel: Ти изпрати покана за дуел на %s. Ако искаш да отмениш поканата напиши /cduel",pname[giveplayerid]);
SendClientMessage(playerid, 0xFFE400FF,string);
format(string, 256, "Duel: %s те покани на дуел със залог $%d. Напиши /yes за да приемеш или /no за да откажеш!", pname[playerid] ,zalog);
SendClientMessage(giveplayerid, 0xFFE400FF,string);
duelsender[giveplayerid]=playerid;
duelsend[playerid]=giveplayerid;
duelzalog[playerid]=zalog;
return 1;
}
else if(strcmp(cmd, "/cinvite", true) == 0)
{
if (PlayerInfo[playerid][pRank]==6)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /cinvite [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(TeamInvite[para1[playerid]]!=PlayerInfo[playerid][pTeam]) return SendClientMessage(playerid,COLOR_GRAD1,"Този човек няма покана от теб за влизане в банда/мафия!");
TeamInvite[para1[playerid]]=-1;
new string115[115];
format(string115,115,"[FACTION CHAT] %s отказа поканата до %s да влезе в твоята банда/мафия.",pname[playerid],pname[para1[playerid]]);
SendFactionMessage(PlayerInfo[playerid][pTeam],0x33CCFFFF,string115);
format(string115,115,"%s отказа поканата си да влезеш в %s.",pname[playerid],TeamInfo[PlayerInfo[playerid][pTeam]][tName]);
SendClientMessage(para1[playerid], 0x33CCFFFF,string115);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/cancelclan", true) == 0 || strcmp(cmd, "/cancelc", true) == 0)
{
if(ClanInvite[playerid]==-1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш покана за клан!");
new string115[115];
ClanInvite[playerid]=-1;
format(string115,115,"[CLAN CHAT] %s отказа да влезе в твоя клан.",pname[playerid]);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pClan] == PlayerInfo[playerid][pClan])
{
SendClientMessage(i, 0x009BCEFF,string115);
}
}
return 1;
}
else if(strcmp(cmd, "/acceptc", true) == 0 || strcmp(cmd, "/acceptclan", true) == 0)
{
if(ClanInvite[playerid]==-1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш покана за клан!");
new string115[115];
PlayerInfo[playerid][pClan]=ClanInvite[playerid];
ClanInvite[playerid]=-1;
format(string115,115,"[CLAN CHAT] %s влезе в твоя клан.",pname[playerid]);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pClan] == PlayerInfo[playerid][pClan])
{
SendClientMessage(i, 0x009BCEFF,string115);
}
}
return 1;
}
else if(strcmp(cmd, "/cl", true)==0||strcmp(cmd, "/clan", true)==0)
{
new length=strlen(cmdtext);
while ((idx<length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset=idx;
new result[256];
while ((idx<length) && ((idx - offset)<(sizeof(result) - 1)))
{
result[idx - offset]=cmdtext[idx];
idx++;
}
result[idx - offset]=EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /clan(/cl) [text]");
return 1;
}
if (PlayerInfo[playerid][pClan] >= 1)
{
new string256[256];
format(string256, 256, "[CLAN CHAT] %s(ID:%d): %s",pname[playerid], playerid, result);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pClan] == PlayerInfo[playerid][pClan] && PlayerInfo[i][pTogFaction]==0)
{
if(PlayerInfo[playerid][pClanRank]==ClanInfo[PlayerInfo[playerid][pClan]][cRanks])
{
SendClientMessage(i, COLOR_RTRIADS, string256);
}
else
{
SendClientMessage(i, 0x009BCEFF, string256);
}
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в клан!");
}
return 1;
}
else if(strcmp(cmd, "/clanuninvite", true) == 0)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /clanuninvite [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[playerid][pClanRank] !=ClanInfo[PlayerInfo[playerid][pClan]][cRanks])
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
return 1;
}
if(PlayerInfo[para1[playerid]][pClanRank] == ClanInfo[PlayerInfo[playerid][pClan]][cRanks])
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да изгониш лидер!");
return 1;
}
if(para1[playerid]==playerid)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да изгониш себе си!");
return 1;
}
if(PlayerInfo[para1[playerid]][pClan]==PlayerInfo[playerid][pClan])
{
PlayerInfo[para1[playerid]][pClan]=0;
new string140[140];
format(string140, 140, "[CLAN CHAT] %s изгони %s!", pname[playerid],pname[para1[playerid]]);
SendClanMessage(PlayerInfo[playerid][pClan],0x009BCEFF,string140);
if(PlayerInfo[para1[playerid]][pSpawnO]==6)
{
PlayerInfo[para1[playerid]][pSpawnO]=1; SendClientMessage(para1[playerid], 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Civil spawn!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Човекът, който искаш да изгониш не е от твоя клан!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
return 1;
}
else if(strcmp(cmd, "/clanmembers",true)==0)
{
if(PlayerInfo[playerid][pClan] != 0)
{
SendClientMessage(playerid, 0x40BF00FF,"Онлайн членове на клана:");
new string110[110];
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pClan]==PlayerInfo[playerid][pClan])
{
if(PlayerInfo[i][pClanRank]<6)
{
format(string110, 110, "%s (ID: %d) Rank: %d",pname[i], i,PlayerInfo[i][pClanRank]);
SendClientMessage(playerid, 0x009BCEFF, string110);
}
if(PlayerInfo[i][pClanRank]==6)
{
format(string110, 110, "{FF8200}Лидер:{33CCFF} %s (ID: %d) Rank: %d",pname[i], i,PlayerInfo[i][pClanRank]);
SendClientMessage(playerid, COLOR_RTRIADS, string110);
}
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в клан!");
}
return 1;
}
else if(strcmp(cmd, "/leaveclan", true) == 0)
{
new length = strlen(cmdtext);
while ((idx < length) && (cmdtext[idx] <= ' '))
{
idx++;
}
new offset = idx;
new result[256];
while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
{
result[idx - offset] = cmdtext[idx];
idx++;
}
result[idx - offset] = EOS;
if(!strlen(result))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /leaveclan [confirm]");
SendClientMessage(playerid, 0x00E600FF, "SERVER: confirm действа като потвърждение, напишете /leaveclan confirm");
return 1;
}
if(strcmp(result, "confirm", true) != 0)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /leaveclan [confirm]");
SendClientMessage(playerid, 0x00E600FF, "SERVER: confirm действа като потвърждение, напишете /leaveclan confirm");
return 1;
}
if(PlayerInfo[playerid][pClan]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в клан!");
return 1;
}
new string140[140];
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pClan] == PlayerInfo[playerid][pClan])
{
format(string140, 140, "[CLAN CHAT] %s напусна твоя клан по негово желание!", pname[playerid]);
SendClientMessage(i,0x009BCEFF, string140);
}
}
PlayerInfo[playerid][pClan]=0;
if(PlayerInfo[playerid][pSpawnO]==6)
{
PlayerInfo[playerid][pSpawnO]=1; SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Твоят spawn беше променен на Civil spawn!");
}
return 1;
}
else if(strcmp(cmd, "/setclanrank", true) == 0)
{
if (PlayerInfo[playerid][pClan]!=0 && PlayerInfo[playerid][pClanRank]==ClanInfo[PlayerInfo[playerid][pClan]][cRanks])
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /setclanrank [ID на играч] [rank]");
return 1;
}
new level23;
para1[playerid] = ReturnUser(tmp);
tmp = strtok(cmdtext, idx);
level23 = strval(tmp);
if(PlayerInfo[para1[playerid]][pClan]!=PlayerInfo[playerid][pClan]) return SendClientMessage(playerid,COLOR_GRAD1,"Този играч не е от твоя клан!");
if(para1[playerid]==playerid) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да смениш своя ранк!");
if(level23>ClanInfo[PlayerInfo[playerid][pClan]][cRanks]-1||level23<1) return SendClientMessage(playerid,COLOR_GRAD1,"Невалиден ранк!");
PlayerInfo[para1[playerid]][pRank]=level23;
new string140[140];
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pClan] == PlayerInfo[playerid][pClan])
{
format(string140, 140, "[CLAN CHAT] %s промени ранка на %s на %d", pname[playerid],pname[para1[playerid]],level23);
SendClientMessage(i,0x009BCEFF, string140);
}
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на клан!");
}
return 1;
}
//
else if(strcmp(cmd,"/claninvite", true) == 0)
{
if (PlayerInfo[playerid][pClan]!=0 && PlayerInfo[playerid][pClanRank]==ClanInfo[PlayerInfo[playerid][pClan]][cRanks])
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /claninvite [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pClan]>=1) return SendClientMessage(playerid,COLOR_GRAD1,"Този човек вече има клан!");
ClanInvite[para1[playerid]]=PlayerInfo[playerid][pClan];
new string115[115];
format(string115,115,"[CLAN CHAT] %s покани %s да влезе в [%s].",pname[playerid],pname[para1[playerid]],ClanInfo[PlayerInfo[playerid][pClan]][cName]);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pClan] == PlayerInfo[playerid][pClan])
{
SendClientMessage(i, 0x009BCEFF,string115);
}
}
format(string115,115,"%s те покани да влезеш в клан [%s]",pname[playerid],ClanInfo[PlayerInfo[playerid][pClan]][cName]);
SendClientMessage(para1[playerid], 0x009BCEFF,string115);
SendClientMessage(para1[playerid], 0x009BCEFF,"Напиши /acceptclan(/acceptc) за да влезеш или /cancelclan(/cancelc) за да откажеш!");
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на клан!");
}
return 1;
}
else if(strcmp(cmd, "/invite", true) == 0)
{
if (PlayerInfo[playerid][pRank]==6)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /invite [ID на играч]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pTeam]>=1) return SendClientMessage(playerid,COLOR_GRAD1,"Този човек вече има банда/мафия!");
TeamInvite[para1[playerid]]=PlayerInfo[playerid][pTeam];
new string115[115];
format(string115,115,"[FACTION CHAT] %s покани %s да влезе в твоята банда/мафия.",pname[playerid],pname[para1[playerid]]);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam] == PlayerInfo[playerid][pTeam])
{
SendClientMessage(i, 0x33CCFFFF,string115);
}
}
format(string115,115,"%s те покани да влезеш в банда/мафия %s",pname[playerid],TeamInfo[PlayerInfo[playerid][pTeam]][tName]);
SendClientMessage(para1[playerid], 0x33CCFFFF,string115);
SendClientMessage(para1[playerid], 0x33CCFFFF,"Напиши /acceptfaction(/af) за да влезеш или /cancelfaction(/cf) за да откажеш!");
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на банда/мафия!");
}
return 1;
}
else if(strcmp(cmd, "/goto", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 2)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /goto [ID на играч]");
return 1;
}
new Float:plocx,Float:plocy,Float:plocz;
para1[playerid] = ReturnUser(tmp);
if(para1[playerid]==playerid)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да се телепортираш до себе си!");
return 1;
}
if(PlayerInfo[playerid][pTGoto]==0) { return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш позволение да се телепортираш до играчите!");}
if(para1[playerid] != INVALID_PLAYER_ID)
{
GetPlayerPos(para1[playerid], plocx, plocy, plocz);
SetPlayerInterior(playerid, GetPlayerInterior(para1[playerid]));
SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(para1[playerid]));
new string115[115];
if (GetPlayerState(playerid) == 2)
{
SetVehiclePos(GetPlayerVehicleID(playerid), plocx, plocy+4, plocz);
}
else
{
SetPlayerPos(playerid,plocx,plocy+2, plocz);
}
format(string115, 115, "- %s се телепортира до теб -", pname[playerid]);
SendClientMessage(para1[playerid], 0xFFFF00FF, string115);
format(string115, 115, "- Ти се телепортира до %s -", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF, string115);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAHide]==0)
{
format(string115, 115, "[ADMIN] %s се телепортира до %s", pname[playerid] ,pname[para1[playerid]]);
SendClientMessage(i,COLOR_RED, string115);
}
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/readta", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 3)
{
if(PlayerInfo[playerid][pReadTA]==1)
{
SendClientMessage(playerid,0xE60000FF,"Ти сега няма да виждаш какво пишат в TEST ADMIN чата!");
return PlayerInfo[playerid][pReadTA]=0;
}
else
{
SendClientMessage(playerid,0xE60000FF,"Ти сега ще виждаш какво пишат в TEST ADMIN чата!");
PlayerInfo[playerid][pReadTA]=1;
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/policeskin", true) == 0)
{
if(PlayerInfo[playerid][pTeam]!=13)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на San Andreas Police Department!");
return 1;
}
if(PlayerInfo[playerid][pADuty]==1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да не си ADMIN ON-DUTY!");
return 1;
}
if(PlayerInfo[playerid][pRank]<2)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си поне 2 ранг!");
return 1;
}
if(dutypolice[playerid]==0)
{
SendClientMessage(playerid,0xB8860BFF,"Изберете си дрехи!");
SetPVarInt(playerid, "skinc_active", 1);
DestroySelectionMenu(playerid);
CreateSelectionMenu(playerid);
SelectTextDraw(playerid, 0xACCBF1FF);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си извън смяна за си смениш дрехите!");
}
return 1;
}
else if(strcmp(cmd,"/getspikes",true)==0)
{
if(PlayerInfo[playerid][pTeam]!=13)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на San Andreas Police Department!");
return 1;
}
if(spikes2[playerid]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате поставена преграда!");
return 1;
}
spikes2[playerid]=0;
DestroyDynamicObject(spikes21[playerid]);
SendClientMessage(playerid,0xB8860BFF,"Вие взехте вашата преграда и отново можете да поставите преграда, където решите!");
maxspikes-=1;
spikes[playerid]=1;
return 1;
}
else if(strcmp(cmd,"/spikes",true)==0)
{
if(PlayerInfo[playerid][pTeam]!=13)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на San Andreas Police Department!");
return 1;
}
if(maxspikes>=30)
{
SendClientMessage(playerid,COLOR_GRAD1,"Достигнат е лимитът на всички полицаи от 30 прегради!");
return 1;
}
if(GetPlayerVirtualWorld(playerid)!=0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да създадете преграда в този Virtual World!");
return 1;
}
if(GetPlayerInterior(playerid)!=0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да създадете преграда в този Virtual World!");
return 1;
}
if(spikes[playerid]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате преграда!");
return 1;
}
new Float:Angleto;
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
GetPlayerFacingAngle(playerid,Angleto);
spikes2[playerid]=1;
spikes[playerid]=0;
selectedspike[playerid]=maxspikes;
spikes21[playerid]=CreateDynamicObject(2892,X[playerid],Y[playerid],Z[playerid]-1,180,180,180 ,0,0);
EditDynamicObject(playerid,spikes21[playerid]);
SendClientMessage(playerid,0xB8860BFF,"Вие поставихте шипове, наместете ги!");
SendClientMessage(playerid,0xB8860BFF,"Можете да си вземете преградата чрез /getspikes!");
maxspikes+=1;
return 1;
}
else if(strcmp(cmd,"/cuffme",true)==0)
{
if(PlayerInfo[playerid][pWanted]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си заподозрян!");
return 1;
}
if(PlayerInfo[playerid][pFreezed2]!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Ти вече си вдигна ръцете!");
new closechenge=-1;
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
if(i!=playerid)
{
if(PlayerInfo[i][pTeam]==13)
{
if(CorDetector(330,playerid,i))
{
SendClientMessage(playerid,0xB8860BFF,"[POLICE] Престъпник се предаде и ще ви бъде отбелязан червен маркер на картата, където се намира той!");
closechenge=i;
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
predalmarker2[playerid]=predalmarker[i]=CreateDynamicMapIcon(X[playerid],Y[playerid],Z[playerid], 20, -1, -1, -1, -1, 600);
}
}
}
}
if(closechenge==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да има полицай наблизо!");
return 1;
}
PlayerInfo[playerid][pClearAnimation]=120*2;
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
PlayerInfo[playerid][pFreezed2]=120*2;
SendClientMessage(playerid,0xB8860BFF,"Вие се предадохте, ще бъдете с вдигнати ръце 2 минути!");
SendClientMessage(playerid,0xB8860BFF,"След като си свалите ръцете, ще можете да избягате пак от полицайте!");
return 1;
}
else if(strcmp(cmd, "/cuff", true) == 0)
{
if(PlayerInfo[playerid][pTeam]!=13)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на San Andreas Police Department!");
return 1;
}
if(dutypolice[playerid]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си на смяна!");
return 1;
}
new cuffed2=0;
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
if(i!=playerid)
{
if(PlayerInfo[i][pFreezed2]>0 && PlayerInfo[i][pWanted]>0 && PlayerInfo[i][pFollowPolice]==0)
{
if(cuffedwho[playerid]==-1)
{
if (CorDetector(10.0, playerid, i))
{
cuffed2=1;
cuffedby[i]=playerid;
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
PlayerLabel[i] = CreateDynamic3DTextLabel(VipText3D[i], 0xCC0000FF, 0.0, 0.0, 0.0, 15.0, i, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(i), GetPlayerInterior(i), -1, 15.0);
SetPlayerAttachedObject(i, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977,-81.700035, 0.891999, 1.000000, 1.168000);
SetPlayerSpecialAction(i, SPECIAL_ACTION_CUFFED);
TogglePlayerControllable(i, 0);
if(PlayerInfo[i][pWanted]==1)
{
SendClientMessage(i,COLOR_RLSPD,"Вие сте задържан в полицията за 5 минути и са ви взети $1400!");
PlayerInfo[i][pPJail]=5*60;
GivePlayerCash(playerid,-1400);
GivePlayerCash(i,1400);
}
else if(PlayerInfo[i][pWanted]==2)
{
SendClientMessage(i,COLOR_RLSPD,"Вие сте задържан в полицията за 7 минути и са ви взети $2400!");
PlayerInfo[i][pPJail]=7*60;
GivePlayerCash(playerid,-2400);
GivePlayerCash(i,2400);
}
else if(PlayerInfo[i][pWanted]>=3)
{
SendClientMessage(i,COLOR_RLSPD,"Вие сте задържан в полицията за 10 минути и са ви взети $3400!");
GivePlayerCash(playerid,-3400);
PlayerInfo[i][pPJail]=10*60;
GivePlayerCash(i,3400);
}
PlayerInfo[i][pFollowPolice]=2;
PlayerInfo[i][pWanted]=0;
SetPlayerWantedLevel(i,PlayerInfo[i][pWanted]);
cuffedwho[playerid]=i;
//
if(IsValidDynamicMapIcon(predalmarker[playerid]))
{
DestroyDynamicMapIcon(predalmarker[playerid]);
}
//
}
}
}
}
}
if(cuffed2==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да се намираш до неутрализиран или предал се враг!");
return 1;
}
SendClientMessage(playerid,COLOR_RLSPD,"Вие закопчахте престъпник и вече нямате право да го биете!");
SendClientMessage(playerid,COLOR_RLSPD,"Влезте с него в някое полицейско управление и той ще бъде автоматично заключен!");
return 1;
}
else if(strcmp(cmd, "/duty", true) == 0)
{
if(PlayerInfo[playerid][pTeam]!=13)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на San Andreas Police Department!");
return 1;
}
if(PlayerInfo[playerid][pADuty]==1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да не си ADMIN ON-DUTY!");
return 1;
}
if(dutypolice[playerid]==0)
{
if(PlayerInfo[playerid][pWanted]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш на смяна, докато си издирван!");
SetPlayerColor(playerid,COLOR_RLSPD);
SendClientMessage(playerid,COLOR_RLSPD,"Вие влязохте на смяна!");
dutypolice[playerid]=1;
if(PlayerInfo[playerid][pRank]==1)
{
SetPlayerSkin(playerid,282);
}
if(PlayerInfo[playerid][pRank]==2)
{
SetPlayerSkin(playerid,284);
}
if(PlayerInfo[playerid][pRank]==3)
{
SetPlayerSkin(playerid,300);
}
if(PlayerInfo[playerid][pRank]==4)
{
SetPlayerSkin(playerid,283);
}
if(PlayerInfo[playerid][pRank]==5)
{
SetPlayerSkin(playerid,288);
}
if(PlayerInfo[playerid][pRank]==6)
{
SetPlayerSkin(playerid,301);
}
return 1;
}
if(dutypolice[playerid]==1)
{
if(PlayerInfo[playerid][pRank]>1)
{
SendClientMessage(playerid,COLOR_RLSPD,"Изберете си дрехи, преди да излезете от смяна!");
SetPVarInt(playerid, "skinc_active", 1);
DestroySelectionMenu(playerid);
CreateSelectionMenu(playerid);
SelectTextDraw(playerid, 0xACCBF1FF);
SetPlayerColor(playerid,COLOR_WHITE);
}
}
if(PlayerInfo[playerid][pRank]==1)
{
dutypolice[playerid]=0;
SetPlayerSkin(playerid,PlayerInfo[playerid][pNSkin]);
SendClientMessage(playerid,COLOR_RLSPD,"Вие излязохте от смяна!");
SetPlayerColor(playerid,COLOR_WHITE);
}
return 1;
}
else if(strcmp(cmd, "/aduty", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pADuty]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си издирван!");
return 1;
}
if(PlayerInfo[playerid][pIFCDuty]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си IFC ON-DUTY!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(inevent[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в евент!");
if(indrift[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift!");
if(sdelkaSelected[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си в играта!");
if(dutypolice[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна!");
if(PlayerInfo[playerid][pRobber]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(PlayerInfo[playerid][pRobberyATM]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!");
if(turfmember[playerid]==2){ return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в атака на територия!");}
if(PlayerInfo[playerid][pADuty] == 0)
{
SetPlayerONAduty(playerid);
}
else
{
SetPlayerOFFAduty(playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
/*
else if(strcmp(cmd, "/aduty", true) == 0)
{
if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pTest] == 1)
{
if(PlayerInfo[playerid][pADuty] == 0)
{
PlayerInfo[playerid][pADuty] = 1;
SendClientMessage(playerid, 0xE60000FF, "Сега няма да можеш да виждаш какво пишат в ADMIN чата!");
}
else
{
PlayerInfo[playerid][pADuty] = 0;
SendClientMessage(playerid, 0xE60000FF, "Сега ще виждаш какво пишат в ADMIN чата!");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}*/
else if(strcmp(cmd, "/slap", true) == 0)
{
if (PlayerInfo[playerid][pAdmin] >= 1)
{
tmp = strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /slap [ID на играч]");
return 1;
}
new Float:slx, Float:sly, Float:slz;
para1[playerid] = ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
GetPlayerPos(para1[playerid], slx, sly, slz);
SetPlayerPos(para1[playerid], slx, sly, slz+5);
new string115[115];
format(string115, 115, "you have been slapped by %s", pname[playerid]);
SendClientMessage(para1[playerid], 0xE60000FF, string115);
format(string115, 115, "you slapped %s", pname[para1[playerid]]);
SendClientMessage(playerid, 0xE60000FF, string115);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/listguns", true) == 0)
{
if (PlayerInfo[playerid][pVip]<1 && freevip==0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Все още не разполагаш с тази команда, защото нямаш достатъчно голямо ниво VIP!");
return 1;
}
tmp = strtok(cmdtext,idx);
if (!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /listguns [playerid/partOfName]");
return 1;
}
para1[playerid] = ReturnUser(tmp);
if (para1[playerid] == INVALID_PLAYER_ID)
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
return 1;
}
new sweapon, sammo, gunname[100];
new string115[115];
format(string115, 115, "••• Оръжията на %s •••", pname[para1[playerid]]);
SendClientMessage(playerid, 0xFFFFFFFF, string115);
for (new i=0; i<12; i++)
{
GetPlayerWeaponData(para1[playerid], i, sweapon, sammo);
GetWeaponName(sweapon, gunname, 100);
if(sweapon != 0)
{
format(string115, 115, "%s (%d)", i, gunname, sammo);
SendClientMessage(playerid, 0xFFFF00FF, string115);
}
}
return 1;
}
else if(strcmp(cmd, "/makemanage", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5||IsPlayerAdmin(playerid))
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /makemanage [ID на играч]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
PlayerInfo[para1[playerid]][pManage]=1;
new string115[115];
format(string115, 115, "- Ти даде Manage Admin на %s.",pname[para1[playerid]]);
SendClientMessage(playerid, 0x66ccffFF, string115);
format(string115, 115, "- %s те направи Manage Admin, честито. -",pname[playerid]);
SendClientMessage(para1[playerid], 0x66ccffFF, string115);
format(string115, 115, "••• %s вече е Manage Admin, честито •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/makeobjectadmin", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5||IsPlayerAdmin(playerid))
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /makeobjectadmin [ID на играч]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
PlayerInfo[para1[playerid]][pObjectAdmin]=1;
new string115[115];
format(string115, 115, "- Ти даде Object Admin на %s.",pname[para1[playerid]]);
SendClientMessage(playerid, 0x66ccffFF, string115);
format(string115, 115, "- %s те направи Object Admin, честито. -",pname[playerid]);
SendClientMessage(para1[playerid], 0x66ccffFF, string115);
format(string115, 115, "••• %s вече е Object Admin, честито •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/makeevent", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5||IsPlayerAdmin(playerid))
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /makeevent [ID на играч]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
PlayerInfo[para1[playerid]][pEvent]=1;
new string115[115];
format(string115, 115, "- Ти даде Event Admin на %s.",pname[para1[playerid]]);
SendClientMessage(playerid, 0x66ccffFF, string115);
format(string115, 115, "- %s те направи Event Admin, честито. -",pname[playerid]);
SendClientMessage(para1[playerid], 0x66ccffFF, string115);
format(string115, 115, "••• %s вече е Event Admin, честито •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/getadmin", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5||IsPlayerAdmin(playerid))
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /getadmin [ID на играч]");
return 1;
}
para1[playerid]=ReturnUser(tmp);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(PlayerInfo[para1[playerid]][pAdmin]== 0 && PlayerInfo[para1[playerid]][pTest]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч няма администраторски права!");
return 1;
}
if(fly[para1[playerid]]==1)
{
fly[para1[playerid]] = 0;
TogglePlayerControllable(para1[playerid],true);
}
if(Jump[para1[playerid]] == 1)
{
Jump[para1[playerid]]=0;
}
if(Speed[para1[playerid]] == 1)
{
Speed[para1[playerid]]=0;
}
new string115[115];
PlayerInfo[para1[playerid]][pTest]=0;
testmode[para1[playerid]]=0;
Act[playerid]=0;
PlayerInfo[para1[playerid]][pAdmin]=0;
PlayerInfo[para1[playerid]][pManage]=0; PlayerInfo[para1[playerid]][pEvent]=0;
PlayerInfo[para1[playerid]][pReadTA]=0;
PlayerInfo[para1[playerid]][pTimeMute]=0;PlayerInfo[para1[playerid]][pTSpec]=0;
format(string115, 115, "- Ти премахна админ правата на %s.",pname[para1[playerid]]);
SendClientMessage(playerid, 0x66ccffFF, string115);
format(string115, 115, "- %s премахна твоите админ права. -",pname[playerid]);
SendClientMessage(para1[playerid], 0x66ccffFF, string115);
format(string115, 115, "••• %s вече не е част от администраторския екип •••",pname[para1[playerid]]);
SendClientMessageToAll(0xF97804FF,string115);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
else if(strcmp(cmd, "/makeadmin", true)==0)
{
if (PlayerInfo[playerid][pAdmin] >= 5||IsPlayerAdmin(playerid))
{
tmp=strtok(cmdtext, idx);
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /makeadmin [ID на играч] [опция]");
SendClientMessage(playerid, 0x00FF00FF, "Опции: 1: Тестов, 2: Помощник, 3: Администратор, 4: Висш Администратор");
SendClientMessage(playerid, 0x00FF00FF, "Опции: 5: Главен Администратор, 6: Притежател, 7: Scripter");
return 1;
}
para1[playerid]=ReturnUser(tmp);
tmp=strtok(cmdtext, idx);
new level[5];
if(!strlen(tmp))
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /makeadmin [ID на играч] [опция]");
SendClientMessage(playerid, 0x00FF00FF, "Опции: 1: Тестов, 2: Помощник, 3: Администратор, 4: Висш Администратор");
SendClientMessage(playerid, 0x00FF00FF, "Опции: 5: Главен Администратор, 6: Притежател, 7: Scripter");
return 1;
}
strmid(level, tmp, 0, 5, 5);
if(para1[playerid] != INVALID_PLAYER_ID)
{
if(strval(level)<1||strval(level)>7)
{
SendClientMessage(playerid, 0xFFFFFFFF, "Начин на използване: /makeadmin [ID на играч] [опция]");
SendClientMessage(playerid, 0x00FF00FF, "Опции: 1: Тестов, 2: Помощник, 3: Администратор, 4: Висш Администратор");
SendClientMessage(playerid, 0x00FF00FF, "Опции: 5: Главен Администратор, 6: Притежател, 7: Scripter");
return 1;
}
new string115[115];
if (strcmp(level, "1", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
if(fly[para1[playerid]]==1)
{
fly[para1[playerid]] = 0;
TogglePlayerControllable(para1[playerid],true);
}
if(Jump[para1[playerid]] == 1)
{
Jump[para1[playerid]]=0;
}
if(Speed[para1[playerid]] == 1)
{
Speed[para1[playerid]]=0;
}
PlayerInfo[para1[playerid]][pTest]=1;
PlayerInfo[para1[playerid]][pAdmin]=0;
testmode[para1[playerid]]=0;
Act[playerid]=0;
PlayerInfo[para1[playerid]][pTSpec]=1;
format(string115, 115, "- Ти направи %s тест админ.",pname[para1[playerid]]);
SendClientMessage(playerid, COLOR_ORANGE, string115);
format(string115, 115, "- %s те направи тест админ, поздравления. -",pname[playerid]);
SendClientMessage(para1[playerid], COLOR_ORANGE, string115);
format(string115, 115, "• %s беше присъединен към администраторския екип •",pname[para1[playerid]]);
SendClientMessageToAll(COLOR_ORANGE,string115);
}
if (strcmp(level, "2", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
if(fly[para1[playerid]]==1)
{
fly[para1[playerid]] = 0;
TogglePlayerControllable(para1[playerid],true);
}
if(Jump[para1[playerid]] == 1)
{
Jump[para1[playerid]]=0;
}
if(Speed[para1[playerid]] == 1)
{
Speed[para1[playerid]]=0;
}
PlayerInfo[para1[playerid]][pTest]=0;
PlayerInfo[para1[playerid]][pAdmin]=1;
testmode[para1[playerid]]=0;
Act[playerid]=0;
PlayerInfo[para1[playerid]][pTSpec]=1;
format(string115, 115, "- Ти направи %s 1 админ левел. -",pname[para1[playerid]]);
SendClientMessage(playerid, COLOR_ORANGE, string115);
format(string115, 115, "- %s ти даде статут на помощник в екипа -",pname[playerid]);
SendClientMessage(para1[playerid], COLOR_ORANGE, string115);
format(string115, 115, "• %s вече е в екипа със статут на помощник •",pname[para1[playerid]]);
SendClientMessageToAll(COLOR_ORANGE,string115);
}
if (strcmp(level, "3", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
if(fly[para1[playerid]]==1)
{
fly[para1[playerid]] = 0;
TogglePlayerControllable(para1[playerid],true);
}
if(Jump[para1[playerid]] == 1)
{
Jump[para1[playerid]]=0;
}
if(Speed[para1[playerid]] == 1)
{
Speed[para1[playerid]]=0;
}
PlayerInfo[para1[playerid]][pTest]=0;
PlayerInfo[para1[playerid]][pAdmin]=2;
testmode[para1[playerid]]=0;
PlayerInfo[para1[playerid]][pTSpec]=1;
Act[playerid]=0;
format(string115, 115, "- Ти направи %s 2 админ левел. -",pname[para1[playerid]]);
SendClientMessage(playerid, COLOR_ORANGE, string115);
format(string115, 115, "- %s те направи Administrator -",pname[playerid]);
SendClientMessage(para1[playerid], COLOR_ORANGE, string115);
format(string115, 115, "• %s вече е в екипа със статут Administrator •",pname[para1[playerid]]);
SendClientMessageToAll(COLOR_ORANGE,string115);
}
if (strcmp(level, "4", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
PlayerInfo[para1[playerid]][pTest]=0;
testmode[para1[playerid]]=0;
Act[playerid]=0;
PlayerInfo[para1[playerid]][pAdmin]=3;
PlayerInfo[para1[playerid]][pTimeMute]=1; PlayerInfo[para1[playerid]][pTimeJail]=1;
format(string115, 115, "- Ти направи %s 3 админ левел. -",pname[para1[playerid]]);
SendClientMessage(playerid, COLOR_ORANGE, string115);
format(string115, 115, "- %s те направи Висш Administrator -",pname[playerid]);
SendClientMessage(para1[playerid], COLOR_ORANGE, string115);
format(string115, 115, "• %s вече със статут на Висш Administrator •",pname[para1[playerid]]);
SendClientMessageToAll(COLOR_ORANGE,string115);
}
if (strcmp(level, "5", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
PlayerInfo[para1[playerid]][pTest]=0;
testmode[para1[playerid]]=0;
PlayerInfo[para1[playerid]][pAdmin]=4;
PlayerInfo[para1[playerid]][pTimeMute]=1; PlayerInfo[para1[playerid]][pTimeJail]=1;
format(string115, 115, "- Ти направи %s 4 админ левел. -",pname[para1[playerid]]);
SendClientMessage(playerid, COLOR_ORANGE, string115);
format(string115, 115, "- %s те направи Главен Администратор -",pname[playerid]);
SendClientMessage(para1[playerid], COLOR_ORANGE, string115);
format(string115, 115, "• %s вече е Главен Администратор •",pname[para1[playerid]]);
SendClientMessageToAll(COLOR_ORANGE,string115);
}
if (strcmp(level, "6", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
PlayerInfo[para1[playerid]][pTest]=0;
PlayerInfo[para1[playerid]][pAdmin]=5;
PlayerInfo[para1[playerid]][pTimeMute]=1; PlayerInfo[para1[playerid]][pTimeJail]=1;
format(string115, 115, "- Ти направи %s 5 админ левел. -",pname[para1[playerid]]);
SendClientMessage(playerid, COLOR_ORANGE, string115);
format(string115, 115, "- %s те направи Притежател на сървъра -",pname[playerid]);
SendClientMessage(para1[playerid], COLOR_ORANGE, string115);
format(string115, 115, "• %s вече е администратор със статут Притежател •",pname[para1[playerid]]);
SendClientMessageToAll(COLOR_ORANGE,string115);
}
if (strcmp(level, "7", true)==0)
{
if(PlayerInfo[playerid][pTest]==1) PlayerInfo[playerid][pAHide] = 0;
PlayerInfo[para1[playerid]][pTest]=0;
PlayerInfo[para1[playerid]][pAdmin]=6;
PlayerInfo[para1[playerid]][pTimeMute]=1; PlayerInfo[para1[playerid]][pTimeJail]=1;
format(string115, 115, "- Ти направи %s 5 админ левел. -",pname[para1[playerid]]);
SendClientMessage(playerid, COLOR_ORANGE, string115);
format(string115, 115, "- %s те направи Scripter на сървъра -",pname[playerid]);
SendClientMessage(para1[playerid], COLOR_ORANGE, string115);
format(string115, 115, "• %s вече е администратор със статут на Scripter •",pname[para1[playerid]]);
SendClientMessageToAll(COLOR_ORANGE,string115);
}
if(PlayerInfo[para1[playerid]][pTest]==1) { adminprefix[para1[playerid]]="Тестов"; }
else if(PlayerInfo[para1[playerid]][pAdmin]==1) { adminprefix[para1[playerid]]="Помощник"; }
else if(PlayerInfo[para1[playerid]][pAdmin]==2) { adminprefix[para1[playerid]]="Администратор"; }
else if(PlayerInfo[para1[playerid]][pAdmin]==3) { adminprefix[para1[playerid]]="Висш Администратор"; }
else if(PlayerInfo[para1[playerid]][pAdmin]==4) { adminprefix[para1[playerid]]="Главен Администратор"; }
else if(PlayerInfo[para1[playerid]][pAdmin]==5) { adminprefix[para1[playerid]]="Притежател";}
else if(PlayerInfo[para1[playerid]][pAdmin]==6) { adminprefix[para1[playerid]]="Scripter";}
//                        new stringSaveAdmin[256];
//SaveAsAdmin(para1[playerid],PlayerInfo[para1[playerid]][pAdmin]);
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Този играч, който сте въвели не в онлайн в момента");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достъп до тази административна команда!");
}
return 1;
}
return SendClientMessage(playerid,COLOR_WHITE,"SERVER: Грешна команда!");
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
drive[vehicleid]=1;
if(vehicleid==lottoveh)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid,COLOR_GRAD1,"Това превозно средство е награда за победителя и не можеш да го караш!");
return 1;
}
/* if(vehicleid==taxivehs[7])
{
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x636363FF, "Не можете да карате това такси!");
return 0;
}
if(ispassenger)
{
if(PlayerInfo[playerid][pTeam]!=18)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return SendClientMessage(playerid, 0x636363FF, "Това е личното такси на Eastern Boys!");
}
SetPlayerPos(playerid,-2150.2986,-221.4941,35.3203);
return 0;
}
}
if(vehicleid==taxivehs[6])
{
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x636363FF, "Не можете да карате това такси!");
return 0;
}
if(ispassenger)
{
if(PlayerInfo[playerid][pTeam]!=18)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return SendClientMessage(playerid, 0x636363FF, "Това е личното такси на Eastern Boys!");
}
SetPlayerPos(playerid,-2150.2385,-221.9314,35.3203);
return 0;
}
}
if(vehicleid==taxivehs[5])
{
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x636363FF, "Не можете да карате това такси!");
return 0;
}
if(ispassenger)
{
if(PlayerInfo[playerid][pTeam]!=18)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return SendClientMessage(playerid, 0x636363FF, "Това е личното такси на Eastern Boys!");
}
SetPlayerPos(playerid,1001.4345,2127.1543,10.8203);
return 0;
}
}
if(vehicleid==taxivehs[4])
{
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x636363FF, "Не можете да карате това такси!");
return 0;
}
if(ispassenger)
{
if(PlayerInfo[playerid][pTeam]!=18)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return SendClientMessage(playerid, 0x636363FF, "Това е личното такси на Eastern Boys!");
}
SetPlayerPos(playerid,1001.4345,2127.1543,10.8203);
return 0;
}
}
*/
if(vehicleid==taxivehs[3])
{
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x636363FF, "Не можете да карате това такси!");
return 0;
}
if(ispassenger)
{
if(PlayerInfo[playerid][pCash]<350)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return SendClientMessage(playerid, 0x636363FF, "Цената за Las Venturas Police e $350.");
}
SetPlayerPos(playerid,2267.9490,2419.0920,10.8203);
InterpolateCameraPos(playerid,1517.9312, -1766.4351, 79.4344,1981.4781, 2262.4624, 155.6145,23000,CAMERA_MOVE);
InterpolateCameraLookAt(playerid,1517.9926, -1765.4325, 79.4494,1982.3510, 2262.9573, 155.6246,23000,CAMERA_MOVE);
GivePlayerCash(playerid,-350);
PlayerInfo[playerid][pLSTaxi]=35;
TogglePlayerControllable(playerid, 0);
return 0;
}
}
if(vehicleid==taxivehs[2])
{
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x636363FF, "Не можете да карате това такси!");
return 1;
}
if(ispassenger)
{
if(PlayerInfo[playerid][pCash]<350)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return SendClientMessage(playerid, 0x636363FF, "Цената за Los Santos Police e $350.");
}
SetPlayerPos(playerid,1535.1051,-1700.9636,13.5469);
InterpolateCameraPos(playerid,2333.0786, 2454.9326, 76.7292,       1601.4285, -1552.9078, 85.1442,23000,CAMERA_MOVE);
InterpolateCameraLookAt(playerid,2332.8113, 2453.9629, 76.7842,    1601.4247, -1553.9100, 85.1141,23000,CAMERA_MOVE);
GivePlayerCash(playerid,-350);
PlayerInfo[playerid][pLSTaxi]=35;
TogglePlayerControllable(playerid, 0);
return 1;
}
}
if(vehicleid==taxivehs[1])
{
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x636363FF, "Не можете да карате това такси!");
return 1;
}
if(ispassenger)
{
if(PlayerInfo[playerid][pCash]<350)
{
return SendClientMessage(playerid, 0x636363FF, "Цената за VIP Gang e $350.");
}
SetPlayerPos(playerid,1302.2976,-2049.2859,58.4524);
InterpolateCameraPos(playerid,1795.6082, 1332.5623, 30.7208,1601.4285, -1552.9078, 85.1442,23000,CAMERA_MOVE);
InterpolateCameraLookAt(playerid,1795.6384, 1331.5604, 30.7857,1601.4247, -1553.9100, 85.1141,23000,CAMERA_MOVE);
GivePlayerCash(playerid,-350);
PlayerInfo[playerid][pLSTaxi]=35;
TogglePlayerControllable(playerid, 0);
return 1;
}
}
if(vehicleid==taxivehs[0])
{
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x636363FF, "Не можете да карате това такси!");
return 0;
}
if(ispassenger)
{
if(PlayerInfo[playerid][pCash]<350)
{
return SendClientMessage(playerid, 0x636363FF, "Цената за Los Santos Police e $350.");
}
SetPlayerPos(playerid,1535.1051,-1700.9636,13.5469);
InterpolateCameraPos(playerid,1795.6082, 1332.5623, 30.7208,     1601.4285, -1552.9078, 85.1442,23000,CAMERA_MOVE);
InterpolateCameraLookAt(playerid,1795.6384, 1331.5604, 30.7857,  1601.4247, -1553.9100, 85.1141,23000,CAMERA_MOVE);
GivePlayerCash(playerid,-350);
PlayerInfo[playerid][pLSTaxi]=34;
TogglePlayerControllable(playerid, 0);
return 1;
}
}
if(eev==0 && inevent[playerid]==1)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return SendClientMessage(playerid, COLOR_GRAD1, "Влизането в превозни средства в евента е забранено !");
}
//-----------------------------
new stringprivate[256];
//vipgang cars
if(ordervehicles[vehicleid]==952)
{
if(PlayerInfo[playerid][pTeam]!=6) {
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid,0x636363FF,"Това превозно средство може да бъде купено само от член на Vinewood Cripz!");
return 1;
}
if(ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x336BFFff, "[CRIPZ SHOP] Натиснете {00ff00}Y{336BFF} до превозното средство за да си го купите!");
return 1;//46973
}
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x336BFFff, "[CRIPZ SHOP] Натиснете {00ff00}Y{336BFF} до превозното средство за да си го купите!");
return 1;
}
}
if(ordervehicles[vehicleid]==951)
{
if(PlayerInfo[playerid][pTeam]!=2) {
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid,0x636363FF,"Това превозно средство може да бъде купено само от член на Grove Street Families!");
return 1;
}
if(ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x336BFFff, "[GSF SHOP] Натиснете {00ff00}Y{336BFF} до превозното средство за да си го купите!");
return 1;
}
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x336BFFff, "[GSF SHOP] Натиснете {00ff00}Y{336BFF} до превозното средство за да си го купите!");
return 1;
}
}
if(ordervehicles[vehicleid]==950)
{
if(PlayerInfo[playerid][pTeam]!=1) {
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid,0x636363FF,"Това превозно средство може да бъде купено само от член на VIP!");
return 1;
}
////////////////////////////////////////////////////////////////////////////
if(ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x336BFFff, "[VIP SHOP] Натиснете {00ff00}Y{336BFF} до превозното средство за да си го купите!");
return 1;
}
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x336BFFff, "[VIP SHOP] Натиснете {00ff00}Y{336BFF} до превозното средство за да си го купите!");
return 1;
}
}
//vipgang cars
if(enteredgarage[playerid]!=-5)
{
if(ordervehicle[vehicleid]==1)
{
if(ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x336BFFff, "Натиснете {00ff00}Y{336BFF} до превозното средство за да си го купите!");
return 1;
}
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x336BFFff, "Натиснете {00ff00}Y{336BFF} до превозното средство за да си го купите!");
return 1;
}
}
}
if(privatecars[vehicleid]==1)
{
if(!ispassenger)
{
if(strcmp(privatecarowner[vehicleid], pname[playerid], false))
{
if(privatecarlocked[vehicleid]==1)
{
if(vClan[vehicleid]==0)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
format(stringprivate,256,"Това превозно средство принадлежи на %s",privatecarowner[vehicleid]);
SendClientMessage(playerid, 0x636363FF, stringprivate);
return 1;
}
else if(vClan[vehicleid]!=0)
{
if(vLockedClan[vehicleid]==1 && PlayerInfo[playerid][pClan]==vClan[vehicleid])
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
format(stringprivate,256,"Това превозно средство в момента е заключено от лидера на клана");
SendClientMessage(playerid, 0x636363FF, stringprivate);
return 1;
}
else if(PlayerInfo[playerid][pClan]!=vClan[vehicleid])
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
format(stringprivate,256,"Това превозно средство принадлежи на клан [%s]",ClanInfo[vClan[vehicleid]][cName]);
SendClientMessage(playerid, 0x636363FF, stringprivate);
return 1;
}
}
}
}
}
}
//-----------------------------
for(new i2=0; i2<9; i2++)
{
if(vehicleid==carshopcars[i2])
{
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return SendClientMessage(playerid, 0x636363FF, "Купи си превозното средство и ще го караш !");
}
}
if(vehicleid==carshopcars2[i2])
{
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return SendClientMessage(playerid, 0x636363FF, "Купи си превозното средство и ще го караш !");
}
}
}
//
for(new i2=52; i2<=59; i2++)
{
if(vehicleid==gangcars[13][i2])
{
if(PlayerInfo[playerid][pTeam]!=13)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return SendClientMessage(playerid, 0x636363FF, "Това превозно средство принадлежи на San Andreas Police Department");
}
}
}
//
if(vehicleid==gangcars[5][10])
{
if(PlayerInfo[playerid][pTeam]!=5)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на Varrio Los Aztecas");
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
if(vehicleid==gangcars[3][10])
{
if(PlayerInfo[playerid][pTeam]!=3)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на Rolling Heights Ballas");
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
if(vehicleid==gangcars[6][9])
{
if(PlayerInfo[playerid][pTeam]!=6)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на Vinewood Cripz");
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
if(vehicleid==gangcars[6][9])
{
if(PlayerInfo[playerid][pTeam]!=6)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на Vinewood Cripz");
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
if(ispassenger)
{
}
/*
gangvehicle[gangcars[i][i2]]=i;
*/
if(!ispassenger)
{
if(gangvehicle[vehicleid]>=1 && gangvehicle[vehicleid]<MAX_TEAMS)
{
if (PlayerInfo[playerid][pTeam] != gangvehicle[vehicleid])
{
if(PlayerInfo[playerid][pFirstWays5]==0)
{
SendClientMessage(playerid,0xccccffFF,"[Наръчник за начинаещи] • Ако все още не знаете, {ff0000}колите на организация могат да бъдат карани само от членовете й{ccccff} •");
PlayerInfo[playerid][pFirstWays5]=1;
}
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
new string256z[256];
format(string256z,256,"Това превозно средство принадлежи на %s",TeamInfo[gangvehicle[vehicleid]][tName]);
return SendClientMessage(playerid, 0x636363FF, string256z);
}
}
if(vehicleid==gangcars[13][49] || vehicleid==gangcars[13][48])
{
if(PlayerInfo[playerid][pRank]<2)
{
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return SendClientMessage(playerid, 0x636363FF, "Това превозно средство е за 2 ранг!");
}
}
}
}
if(vehicleid==gangcars[13][11]
|| vehicleid==gangcars[13][12]
|| vehicleid==gangcars[13][13]
|| vehicleid==gangcars[13][14]
|| vehicleid==gangcars[13][26]
|| vehicleid==gangcars[13][27]
|| vehicleid==gangcars[13][28]
|| vehicleid==gangcars[13][29])
{
if(PlayerInfo[playerid][pRank]<3)
{
if(!ispassenger)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return SendClientMessage(playerid, 0x636363FF, "Това превозно средство е за 3 ранг!");
}
}
}
if (GetVehicleModel(vehicleid) == 454 || GetVehicleModel(vehicleid) == 472 || GetVehicleModel(vehicleid) == 473 || GetVehicleModel(vehicleid) == 484 || GetVehicleModel(vehicleid) == 430 || GetVehicleModel(vehicleid) == 446 || GetVehicleModel(vehicleid) == 452 || GetVehicleModel(vehicleid) == 453 || GetVehicleModel(vehicleid) == 493 || GetVehicleModel(vehicleid) == 595)
{
if(!ispassenger)
{
if(PlayerInfo[playerid][pLodka]==0)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid,0x636363FF, "Ти нямаш шофьорска книжка за лодка!"); return 0;
}
}
}
if (GetVehicleModel(vehicleid) == 460 || GetVehicleModel(vehicleid) == 476 || GetVehicleModel(vehicleid) == 511 || GetVehicleModel(vehicleid) == 512 || GetVehicleModel(vehicleid) == 513 || GetVehicleModel(vehicleid) == 519 || GetVehicleModel(vehicleid) == 520 || GetVehicleModel(vehicleid) == 553 || GetVehicleModel(vehicleid) == 577 || GetVehicleModel(vehicleid) == 592)
{
if(!ispassenger)
{
if(PlayerInfo[playerid][pSamolet]==0)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid,0x636363FF, "Ти нямаш шофьорска книжка за самолет!"); return 0;
}
}
}
if (GetVehicleModel(vehicleid) == 417 || GetVehicleModel(vehicleid) == 425 || GetVehicleModel(vehicleid) == 447 || GetVehicleModel(vehicleid) == 460 || GetVehicleModel(vehicleid) == 469 || GetVehicleModel(vehicleid) == 487 || GetVehicleModel(vehicleid) == 488 || GetVehicleModel(vehicleid) == 497 || GetVehicleModel(vehicleid) == 548 || GetVehicleModel(vehicleid) == 563)
{
if(!ispassenger)
{
if(PlayerInfo[playerid][pHelikopter]==0)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid,0x636363FF, "Ти нямаш шофьорска книжка за хеликоптер!"); return 0;
}
}
}
if (GetVehicleModel(vehicleid) == 537 || GetVehicleModel(vehicleid) == 538)
{
if(!ispassenger)
{
if(PlayerInfo[playerid][pVlak]==0)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid,0x636363FF, "Ти нямаш шофьорска книжка за влак!"); return 0;
}
}
}
if(!ispassenger)
{
for(new i2=0; i2<42; i2++)
{
if(vehicleid==afterwork[i2])
{
if (PlayerInfo[playerid][pAfterWork]==0)
{
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SendClientMessage(playerid, 0x636363FF, "Не можеш да караш това превозно средство, защото не си завършил скоро работа!");
return 1;
}
}
}
}
if(!ispassenger)
{
for(new i2=0; i2<=sfcarsmax; i2++)
{
if(vehicleid==sfcars[i2])
{
if (PlayerInfo[playerid][pTeam] != 15)
{
SendClientMessage(playerid, 0x636363FF, "Това превозно средство принадлежи на Delta Force");
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return 1;
}
if (PlayerInfo[playerid][pSpecialForce] ==0)
{
SendClientMessage(playerid, 0x636363FF, "Трябва да бъдеш Special Force за да караш това превозно средство");
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return 1;
}
if (PlayerInfo[playerid][pDFDuty] ==0)
{
SendClientMessage(playerid, 0x636363FF, "Трябва да бъдеш на Special Force смяна за да караш това превозно средство");
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return 1;
}
if(sfpermission==0)
{
SendClientMessage(playerid, 0x636363FF, "Special Force превозните средства са заключени");
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
return 1;
}
}
}
}
if(isSweepJobVeh[vehicleid] == true)
{
SendClientMessage(playerid, COLOR_WHITE, "За да започнеш работа, като чистач на улици напиши {e7905e}/sweep {ffffff}(Rule: Не използвай чистача за лични цели)");
return 1;
}
if(isCoalmineJobVeh[vehicleid] == true)
{
SendClientMessage(playerid, COLOR_WHITE, "За да започнеш работа, като шофьор на самосвал напиши {e7905e}/coalmine {ffffff}(Rule: Не използвай самосвала за лични цели)");
return 1;
}
if(isPilotJobVeh[vehicleid] == true)
{
SendClientMessage(playerid, COLOR_WHITE, "За да започнеш работа, като пилот на самолет напиши {e7905e}/pilot {ffffff}(Rule: Не използвай самолета за лични цели)");
return 1;
}
if(isBusJobVeh[vehicleid] == true)
{
SendClientMessage(playerid, COLOR_WHITE, "За да започнеш работа, като шофьор на бус напиши {e7905e}/bus {ffffff}(Rule: Не използвай буса за лични цели)");
return 1;
}
if(isBoatJobVeh[vehicleid] == true)
{
SendClientMessage(playerid, COLOR_WHITE, "За да започнеш работа, като шофьор на лодка напиши {e7905e}/boat {ffffff}(Rule: Не използвай лодката за лични цели)");
return 1;
}
if(isDeliverJobVeh[vehicleid] == true)
{
SendClientMessage(playerid, COLOR_WHITE, "За да започнеш да разнасяш стока, напиши {e7905e}/deliver {ffffff}(Rule: Не използвай буса за лични цели)");
return 1;
}
return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
if(driver[playerid]==1)
{
drive[vehicleid]=0;
}
if(radioveh[vehicleid]>0)
{
StopAudioStreamForPlayer(playerid);
}
if(onwork[playerid]==1 && onfootwork[playerid]==0)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
SetPlayerPos(playerid, cx, cy, cz);
PutPlayerInVehicle(playerid, vehicleid, 0);
}
TextDrawHideForPlayer(playerid,vehstatus[playerid]);
//TextDrawHideForPlayer(playerid,SpeedoLine[0]); TextDrawHideForPlayer(playerid,SpeedoLine[1]);
return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
if(newstate == PLAYER_STATE_DRIVER)
{
drive[GetPlayerVehicleID(playerid)]=1;
}
if(newstate!=PLAYER_STATE_PASSENGER)
{
passenger[playerid]=0;
}
if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
{
oldvehid[playerid]=GetPlayerVehicleID(playerid);
}
if(newstate == PLAYER_STATE_ONFOOT)
{
if(radioveh[oldvehid[playerid]]>0)
{
StopAudioStreamForPlayer(playerid);
}
}
if(newstate == PLAYER_STATE_DRIVER)
{
if(PlayerInfo[playerid][pFirstWays]==0)
{
PlayerInfo[playerid][pFirstWays]=1;
new closeddialog=3500;
new string2230result[2230];
strcat(string2230result,"{7cd60a}______| Наръчник за превознисте средства |______\n\n");
strcat(string2230result,"{FFFF00}1. {FFFFFF}Всяко превозно средство има радиа от истинския живот\n");
strcat(string2230result,"{FFFF00}2. {FFFFFF}За да навигираш радиото нагоре и надолу, използвай {FF0000}Num 8 и Num 2\n");
strcat(string2230result,"{FFFF00}3. {FFFFFF}За да спреш радиото, натисни {FF0000}Num 2{FFFFFF}, няколко пъти, докато превъртиш радиостанциите\n");
strcat(string2230result,"{7cd60a}_______________________________________________________________\n");
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{7cd60a}Наръчник за начинаещи:",string2230result,"Изход","");
}
}
if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
{
new vehicleid=GetPlayerVehicleID(playerid);
if(radioveh[vehicleid]==0)
{
PlayAudioStreamForPlayer(playerid, "www.google.com");
//StopAudioStreamForPlayer(playerid);
GameTextForPlayer(playerid, "~r~~h~RADIO OFF", 650, 1);
if(driver[playerid]==0)
{
}
}
else
{
if(radion[playerid]>0)
{
radion[playerid]=0;
SendClientMessage(playerid,0xccccffFF,"• Докато сте в това ПС ще слушате музиката, която е пусната в него •");
}
if(PlayerInfo[playerid][pFirstWays]<4)
{
PlayerInfo[playerid][pFirstWays]+=1;
if(PlayerInfo[playerid][pFirstWays]==4)
{
SendClientMessage(playerid,0xccccffFF,"• Ако все още не сте спрели надписите, при радиото, използвайте {ff0000}/audiomsg{ccccff}, за да не ви излизат •");
}
}
new stringRadio[50];
format(stringRadio,50,"~b~~h~RADIO %s",radioAudioStreamNames[radioveh[vehicleid]]);
GameTextForPlayer(playerid, stringRadio, 650, 1);
PlayAudioStreamForPlayer(playerid, radioAudioStream[radioveh[vehicleid]]);
}
}
//drift system - open
if(newstate == PLAYER_STATE_DRIVER)
{
driver[playerid]=1;
if (indrift[playerid]==1)
{
new Float:h;
GetVehicleHealth(GetPlayerVehicleID(playerid), h);
Drifting[playerid][CarHealth] = h;
Drifting[playerid][FixMode] = true;
TimerInfo[playerid][FixTimer] = SetTimerEx("AutoFix", 1000, true, "i", playerid);
TimerInfo[playerid][StateTimer] = SetTimerEx("CheckPlayerState", 100, true, "i", playerid);
}
}
else if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER)
{
KillTimer(TimerInfo[playerid][FixTimer]);
KillTimer(TimerInfo[playerid][StateTimer]);
TextDrawHideForPlayer(playerid, TDLabels[0]);
TextDrawHideForPlayer(playerid, TDLabels[1]);
TextDrawHideForPlayer(playerid, TDLabels[2]);
PlayerTextDrawHide(playerid, TDValueDrift[playerid]);
PlayerTextDrawHide(playerid, TDValueBonus[playerid]);
PlayerTextDrawHide(playerid, TDValueCash[playerid]);
Drifting[playerid][CurrentPoints] = 0;
Drifting[playerid][DriftBonus] = 1;
}
//drift system - close
if(newstate==PLAYER_STATE_DRIVER)
{
PlayerInfo[playerid][pFuel]=20*2;
driver[playerid] = 1;
}
if(newstate==PLAYER_STATE_ONFOOT)
{
driver[playerid] = 0;
}
if(newstate==PLAYER_STATE_ONFOOT || PLAYER_STATE_SPECTATING)
{
TextDrawHideForPlayer(playerid,vehstatus[playerid]);
//TextDrawHideForPlayer(playerid,SpeedoLine[0]); TextDrawHideForPlayer(playerid,SpeedoLine[1]);
}
if(newstate==PLAYER_STATE_DRIVER || newstate==PLAYER_STATE_PASSENGER)
{
if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 481
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 509
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 510
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
{
invehicletype[playerid]=1;
TextDrawShowForPlayer(playerid,vehstatus[playerid]);
//TextDrawShowForPlayer(playerid,SpeedoLine[0]); TextDrawShowForPlayer(playerid,SpeedoLine[1]);
}
else
{
invehicletype[playerid]=0;
TextDrawShowForPlayer(playerid,vehstatus[playerid]);
//TextDrawShowForPlayer(playerid,SpeedoLine[0]);
}
}
if(newstate==PLAYER_STATE_DRIVER)
{
if(GetPlayerVehicleID(playerid)==jobtaxivehs[0]
|| GetPlayerVehicleID(playerid)==jobtaxivehs[1]
|| GetPlayerVehicleID(playerid)==jobtaxivehs[2]
|| GetPlayerVehicleID(playerid)==jobtaxivehs[3]
|| GetPlayerVehicleID(playerid)==jobtaxivehs[4]
|| GetPlayerVehicleID(playerid)==jobtaxivehs[5])
{
SendClientMessage(playerid, COLOR_WHITE, "За да започнеш работа, като таксиджия напиши {e7905e}/pizza {ffffff}(Rule: Не използвай таксито за лични цели)");
}
//
if(GetPlayerVehicleID(playerid)==carpizza[1]
|| GetPlayerVehicleID(playerid)==carpizza[2]
|| GetPlayerVehicleID(playerid)==carpizza[3]
|| GetPlayerVehicleID(playerid)==carpizza[4]
|| GetPlayerVehicleID(playerid)==carpizza[5])
{
SendClientMessage(playerid, COLOR_WHITE, "За да започнеш работа, като разносвач на пица напиши {e7905e}/pizza {ffffff}(Rule: Не използвай мотора за лични цели)");
}
}
if(newstate==PLAYER_STATE_DRIVER)
{
if(PlayerInfo[playerid][pMission]==0)
{
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
if(GetPlayerVehicleID(playerid)==missionprivate[playerid][0]|| GetPlayerVehicleID(playerid)==missionprivate[playerid][1])
{
SendClientMessage(playerid,	0x92E4F4FF,"Ти си избра първата кола, тя ти е подарък от бандата по случай твоето завръщане.");
SendClientMessage(playerid,	0xFF3737FF,"[Мисия 1] Твоята мисия свърши.");
SendClientMessage(playerid,	0x00FF00FF,"SERVER: Това е първото ти лично превозно средство !");
SendClientMessage(playerid,	0x00FF00FF,"SERVER: За да го отключиш/заключиш за останалите играчи, използвай /vehlock !");
SetPlayerVirtualWorld(playerid, 0);
PlayerInfo[playerid][pSelectCarMission1]=0;
PlayerInfo[playerid][pMission]+=1;
GameTextForPlayer(playerid, "~w~Mission~n~~g~completed", 2000, 1);
GiveFirstCar(playerid);
}
}
return 1;
}
if(locker[playerid]!=-1)
{
if(newstate == PLAYER_STATE_PASSENGER || newstate == PLAYER_STATE_ONFOOT)
{
for(new i=0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
SetVehicleParamsForPlayer(locker[playerid],i,0,0);
}
}
}
if (newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER || newstate == PLAYER_STATE_ONFOOT) {
locker[playerid]=-1;
}
if (newstate == PLAYER_STATE_DRIVER) {
SetPlayerArmedWeapon(playerid,0);
g_veh[playerid] = GetPlayerVehicleID(playerid);
}
if(Act[playerid]==1)
{
if(GetVehicleModel(g_veh[playerid]) == 509 || GetVehicleModel(g_veh[playerid]) == 510 || GetVehicleModel(g_veh[playerid]) == 481)
{
new Float:Health; GetPlayerHealth(playerid,Health);
if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER && lastkey[playerid]!=16 && Health>0.0)
{
PutPlayerInVehicle(playerid, g_veh[playerid], 0);
}
}
}
if(newstate==PLAYER_STATE_DRIVER || newstate==PLAYER_STATE_PASSENGER)
{
drive[GetPlayerVehicleID(playerid)]=1;
}
if (newstate==PLAYER_STATE_PASSENGER)
{
passenger[playerid]=1;
if(GetVehicleModel(GetPlayerVehicleID(playerid))==431
|| GetVehicleModel(GetPlayerVehicleID(playerid))==437
|| GetVehicleModel(GetPlayerVehicleID(playerid))==508
|| GetVehicleModel(GetPlayerVehicleID(playerid))==431
|| GetVehicleModel(GetPlayerVehicleID(playerid))==573
|| GetVehicleModel(GetPlayerVehicleID(playerid))==428)
{
SetPlayerInterior(playerid,98);
TogglePlayerControllable(playerid,0);
PlayerInfo[playerid][pTimeFreeze]=5;
SetPlayerVirtualWorld(playerid,GetPlayerVehicleID(playerid));
SetPlayerPos(playerid,2021.8448,2235.1274,2103.9536);
SetPlayerFacingAngle(playerid,180.7037);
SetCameraBehindPlayer(playerid);
}
}
return 1;
}
public OnPlayerEnterCheckpoint(playerid)
{
if(IsPlayerInRangeOfPoint(playerid,4.0, 1458.9838,-1721.0509,13.0068))
{
if(onwork[playerid]==1 && PlayerInfo[playerid][pPizzaTimer]>0)
{
SetVehicleToRespawn(GetPlayerVehicleID(playerid));
onwork[playerid]=0;
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
PlayerInfo[playerid][pPizzaTimer]=0;
SendClientMessage(playerid, COLOR_JOB, "Ти остави своята работа и трябва да чакаш за нова 20 минути!");
PlayerInfo[playerid][pPizzaTimer1]=20*120;
RestartPlayerColor(playerid);
RemovePlayerFromVehicle(playerid);
}
return 1;
}
if(IsPlayerInRangeOfPoint(playerid,4.0, 2416.8391,-670.5904,127.1158))
{
DisablePlayerCheckpoint(playerid);
enteredInMissionCP[playerid]=1;
SendClientMessage(playerid,0xFF3737FF,"[Мисия 7] Оглеждайте се наоколо в радиус от 500 метра има нещо необичайно.");
return 1;
}
if(PlayerInfo[playerid][pMission]==5)
{
if(IsPlayerInRangeOfPoint(playerid,4.0,595.8715,-1251.4767,18.3255))
{
if(enteredInMissionCP[playerid]==0)
{
enteredInMissionCP[playerid]=1;
SendClientMessage(playerid,0xFF3737FF,"[Мисия 6] Отидете да си купите бандана, която ще ви показва вашата принадлежност към банда.");
return 1;
}
}
}
if(IsPlayerInRangeOfPoint(playerid, 15, 2411.9626,-1735.1606,13.1312))
{
Mission5WaitForRace(playerid);
return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 7, 2081.0134,-1804.7849,13.3828))
{
if(enteredInMissionCP[playerid]==0)
{
SendClientMessage(playerid,0xFF3737FF,"[Мисия 4] Вие достигнахте Pizza Job, напишете /pizza в някой мотор за да започне работата ви.");
enteredInMissionCP[playerid]=1;
return 1;
}
}
if(IsPlayerInRangeOfPoint(playerid,4.0,2194.2742,1986.2155,12.2969))
{
if(enteredInMissionCP[playerid]==0)
{
enteredInMissionCP[playerid]=1;
if(PlayerInfo[playerid][pBombs]==0)
{
PlayerInfo[playerid][pBombs]+=1;
}
SendClientMessage(playerid,0xFF3737FF,"[Мисия 3] Вие имате бомба, използвайте я.");
SendClientMessage(playerid,0xFF3737FF,"[Мисия 3] Използвайте /robbomb за да направите обира.");
}
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,1082.5488,-2038.1836,69.0078))
{
PlayerInfo[playerid][pMissionMessage] = 1;
missionchat[playerid][0][0]=1;
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,1265.9982,-2055.6228,59.2726))
{
SendClientMessage(playerid,	0x92E4F4FF,"Ти се завърна обратно вкъщи, избери си кола");
SendClientMessage(playerid,	0x92E4F4FF,"Можеш да си вземеш Bullet или Sultan за твоя първа лична кола, само се качи в едната");
SetPlayerVirtualWorld(playerid,playerid+1);
PlayerInfo[playerid][pSelectCarMission1]=36*2;
enabledcar[playerid]=1;
if(IsValidVehicle(missionprivate[playerid][0]))
{
SetVehiclePos(missionprivate[playerid][0],1249.0751,-2052.1958,59.4497);
SetVehicleZAngle(missionprivate[playerid][0],87.8631);
}
else
{
missionprivate[playerid][0]=AddStaticVehicleEx(560,1249.0751,-2052.1958,59.4497,87.8631,181,181, -1); // sultan
}
if(IsValidVehicle(missionprivate[playerid][1]))
{
SetVehiclePos(missionprivate[playerid][1],1248.7474,-2058.3977,59.3671);
SetVehicleZAngle(missionprivate[playerid][1],87.8631);
}
else
{
missionprivate[playerid][1]=AddStaticVehicleEx(541,1248.7474,-2058.3977,59.3671,89.8374,1,1, -1); // bullet
}
SetVehicleVirtualWorld(missionprivate[playerid][0], playerid+1);
SetVehicleVirtualWorld(missionprivate[playerid][1], playerid+1);
availableStore++;
DisablePlayerCheckpoint(playerid);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineJob)
|| IsPlayerInRangeOfPoint(playerid, 4.0,SweeperJob)
|| IsPlayerInRangeOfPoint(playerid, 4.0,DeliverJob)
|| IsPlayerInRangeOfPoint(playerid, 4.0,PilotJob)
|| IsPlayerInRangeOfPoint(playerid, 4.0,BusJob)
|| IsPlayerInRangeOfPoint(playerid, 4.0,PizzaJob)
|| IsPlayerInRangeOfPoint(playerid, 4.0,Fishing)
|| IsPlayerInRangeOfPoint(playerid, 4.0,Shop)
|| IsPlayerInRangeOfPoint(playerid, 4.0,Casino)
|| IsPlayerInRangeOfPoint(playerid, 4.0,TaxiJob)
|| IsPlayerInRangeOfPoint(playerid, 4.0,Bank)
|| IsPlayerInRangeOfPoint(playerid, 4.0,LotteryShow)
|| IsPlayerInRangeOfPoint(playerid, 4.0,SdelkaIliNe)
|| IsPlayerInRangeOfPoint(playerid, 4.0,CarShop)
|| IsPlayerInRangeOfPoint(playerid, 4.0,Knijki)
|| IsPlayerInRangeOfPoint(playerid, 4.0,SpecialCar))
{
withgps[playerid]=0;
DisablePlayerCheckpoint(playerid);
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ти пристигна до избраното от теб място!");
LoadMission(playerid);
return 1;
}
if(onwork[playerid]==1)
{
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 431)
{
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint2_1))
{
SetPlayerCheckpoint(playerid, BusCheckPoint2, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint2_2))
{
SetPlayerCheckpoint(playerid, BusCheckPoint3, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint2_3))
{
SetPlayerCheckpoint(playerid, BusCheckPoint4, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint2_4))
{
SetPlayerCheckpoint(playerid, BusCheckPoint5, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint2_5))
{
SetPlayerCheckpoint(playerid, BusCheckPoint6, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint2_6))
{
SetPlayerCheckpoint(playerid, BusCheckPoint7, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint2_7))
{
SetPlayerCheckpoint(playerid, BusCheckPoint8, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint2_8))
{
SetPlayerCheckpoint(playerid, BusCheckPoint7, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint2_9))
{
SetPlayerCheckpoint(playerid, BusCheckPoint8, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint2_10))
{
SetPlayerCheckpoint(playerid, BusTakePoint2, 4.0);
SendClientMessage(playerid, COLOR_JOB, "Ти премина през всички червени маркери, сега трябва да върнеш буса.");
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusTakePoint2))
{
PlayerInfo[playerid][pAfterWork]=30*120;
DisablePlayerCheckpoint(playerid);
SendClientMessage(playerid,COLOR_JOB,"Ти премина през всички маркери и получаваш 5,000$ и 5 EP.");
SendClientMessage(playerid,COLOR_JOB,"Твоето време за чакане до нова работа е 20 минути.");
GameTextForPlayer(playerid, "~w~bus~n~~b~+ $5 000, 5 ep", 2000, 1);
GivePlayerCash(playerid, 5000);
GivePlayerEP(playerid,5);
onwork[playerid]=0;
new randomgiveco=randomex(1,15);
if(randomgiveco>8)
{
new randomgiveco2=randomex(1,5);
CompanyInfo[1][coPrice]+=randomgiveco2;
}
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF); vehEngineStatusON[GetPlayerVehicleID(playerid)]=0;
PlayerInfo[playerid][pBusTimer1]=20*120;
RestartPlayerColor(playerid);
LoadMission(playerid);
}
//
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint1))
{
SetPlayerCheckpoint(playerid, BusCheckPoint2, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint2))
{
SetPlayerCheckpoint(playerid, BusCheckPoint3, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint3))
{
SetPlayerCheckpoint(playerid, BusCheckPoint4, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint4))
{
SetPlayerCheckpoint(playerid, BusCheckPoint5, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint5))
{
SetPlayerCheckpoint(playerid, BusCheckPoint6, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint6))
{
SetPlayerCheckpoint(playerid, BusCheckPoint7, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint7))
{
SetPlayerCheckpoint(playerid, BusCheckPoint8, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusCheckPoint8))
{
SetPlayerCheckpoint(playerid, BusTakePoint, 4.0);
SendClientMessage(playerid, COLOR_JOB, "Ти премина през всички червени маркери, сега трябва да върнеш буса.");
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,BusTakePoint))
{
PlayerInfo[playerid][pAfterWork]=30*120;
DisablePlayerCheckpoint(playerid);
SendClientMessage(playerid,COLOR_JOB,"Ти премина през всички маркери и получаваш 5,000$ и 5 EP.");
SendClientMessage(playerid,COLOR_JOB,"Твоето време за чакане до нова работа е 20 минути.");
GameTextForPlayer(playerid, "~w~bus~n~~b~+ $5 000, 5 ep", 2000, 1);
GivePlayerCash(playerid, 5000);
GivePlayerEP(playerid,5);
onwork[playerid]=0;
new randomgiveco=randomex(1,15);
if(randomgiveco>8)
{
new randomgiveco2=randomex(1,5);
CompanyInfo[1][coPrice]+=randomgiveco2;
}
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF); vehEngineStatusON[GetPlayerVehicleID(playerid)]=0;
PlayerInfo[playerid][pBusTimer1]=20*120;
RestartPlayerColor(playerid);
LoadMission(playerid);
}
}
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 406)
{
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint1))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint2, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint2))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint3, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint3))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint4, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint4))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint5, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint5))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint6, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint6))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint7, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint7))
{
SetPlayerCheckpoint(playerid, CoalmineCheckPoint8, 4.0);
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineCheckPoint8))
{
SetPlayerCheckpoint(playerid, CoalmineTakePoint, 4.0);
SendClientMessage(playerid, COLOR_JOB, "Ти премина през всички червени маркери, сега трябва да върнеш самосвала.");
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,CoalmineTakePoint))
{
//
DisablePlayerCheckpoint(playerid);PlayerInfo[playerid][pAfterWork]=30*120;
//
SendClientMessage(playerid,COLOR_JOB,"Ти премина през всички маркери и получаваш 5,000$ и 5 EP.");
GivePlayerCash(playerid, 5000);
GivePlayerEP(playerid,5);
GameTextForPlayer(playerid, "~w~coalmine~n~~g~+ $5 000, 5 ep", 2000, 1);
onwork[playerid]=0;
new randomgiveco=randomex(1,15);
if(randomgiveco>8)
{
new randomgiveco2=randomex(1,5);
CompanyInfo[2][coPrice]+=randomgiveco2;
}
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF); vehEngineStatusON[GetPlayerVehicleID(playerid)]=0;
SendClientMessage(playerid,COLOR_JOB,"Твоето време за чакане до нова работа е 20 минути.");
PlayerInfo[playerid][pCoalmineTimer1]=20*120;
RestartPlayerColor(playerid);
LoadMission(playerid);
}
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepCheckPoint1))
{
SetPlayerCheckpoint(playerid, SweepCheckPoint2, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepCheckPoint2))
{
SetPlayerCheckpoint(playerid, SweepCheckPoint3, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepCheckPoint3))
{
SetPlayerCheckpoint(playerid, SweepCheckPoint4, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepCheckPoint4))
{
SetPlayerCheckpoint(playerid, SweepCheckPoint5, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepCheckPoint5))
{
SetPlayerCheckpoint(playerid, SweepCheckPoint6, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepCheckPoint6))
{
SetPlayerCheckpoint(playerid, SweepCheckPoint7, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepCheckPoint7))
{
SetPlayerCheckpoint(playerid, SweepTakePoint, 4.0);
SendClientMessage(playerid, COLOR_JOB, "Ти премина през всички червени маркери, сега трябва да върнеш превозното средство.");
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,SweepTakePoint))
{
//
DisablePlayerCheckpoint(playerid);PlayerInfo[playerid][pAfterWork]=30*120;
SendClientMessage(playerid,COLOR_JOB,"Ти почисти всички улици и получаваш 4,000$ и 4 EP.");
GivePlayerCash(playerid, 4000);
GivePlayerEP(playerid,4);
onwork[playerid]=0;
new randomgiveco=randomex(1,15);
if(randomgiveco>8)
{
new randomgiveco2=randomex(1,5);
CompanyInfo[3][coPrice]+=randomgiveco2;
}
GameTextForPlayer(playerid, "~w~sweep~n~~y~+ $4 000, 3 ep", 2000, 1);
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF); vehEngineStatusON[GetPlayerVehicleID(playerid)]=0;
SendClientMessage(playerid,COLOR_JOB,"Твоето време за чакане до нова работа е 20 минути.");
PlayerInfo[playerid][pSweeperTimer1]=20*120;
RestartPlayerColor(playerid);
LoadMission(playerid);
GameTextForPlayer(playerid, "~w~sweep~n~~y~+ $4 000, 4 ep", 2000, 1);
}
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 511)
{
if (IsPlayerInRangeOfPoint(playerid, 5.0,PilotCheckPoint1))
{
DisablePlayerCheckpoint(playerid);
SetPlayerCheckpoint(playerid, PilotCheckPoint2, 5.0);
}
if (IsPlayerInRangeOfPoint(playerid, 5.0,PilotCheckPoint2))
{
DisablePlayerCheckpoint(playerid);
SetPlayerCheckpoint(playerid, PilotCheckPoint3, 5.0);
}
if (IsPlayerInRangeOfPoint(playerid, 5.0,PilotCheckPoint3))
{
DisablePlayerCheckpoint(playerid);
SetPlayerCheckpoint(playerid, PilotTakePoint, 5.0);
SendClientMessage(playerid, COLOR_JOB, "Ти премина през всички червени маркери, сега трябва да върнеш самолета.");
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 10.0,PilotTakePoint))
{
//
DisablePlayerCheckpoint(playerid);PlayerInfo[playerid][pAfterWork]=30*120;
SendClientMessage(playerid,COLOR_JOB,"Ти достави всички пратки и получаваш 5,000$ и 5 EP.");
GivePlayerCash(playerid, 5000);
GivePlayerEP(playerid,7);
onwork[playerid]=0;
new randomgiveco=randomex(1,15);
if(randomgiveco>8)
{
new randomgiveco2=randomex(1,5);
CompanyInfo[4][coPrice]+=randomgiveco2;
}
GameTextForPlayer(playerid, "~w~pilot~n~~p~+ $10 000, 7 ep", 2000, 1);
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF); vehEngineStatusON[GetPlayerVehicleID(playerid)]=0;
SendClientMessage(playerid,COLOR_JOB,"Твоето време за чакане до нова работа е 20 минути.");
PlayerInfo[playerid][pPilotTimer1]=20*120;
RestartPlayerColor(playerid);
LoadMission(playerid);
}
}
if (IsPlayerInRangeOfPoint(playerid, 4.0, DeliverCheckPoint1))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint2, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint2))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint3, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint3))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint4, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint4))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint5, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint5))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint6, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint6))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint7, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint7))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint8, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint8))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint9, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint9))
{
SetPlayerCheckpoint(playerid, DeliverCheckPoint10, 4.0);
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0,DeliverCheckPoint10))
{
SetPlayerCheckpoint(playerid, DeliverTakePoint, 4.0);
SendClientMessage(playerid, COLOR_JOB, "Ти премина през всички червени маркери, сега трябва да върнеш превозното средство.");
return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0, DeliverTakePoint))
{
//
DisablePlayerCheckpoint(playerid);PlayerInfo[playerid][pAfterWork]=30*120;
GameTextForPlayer(playerid, "~w~deliver~n~~g~+ $7 000, 7 ep", 2000, 1);
SendClientMessage(playerid,COLOR_JOB,"Ти достави всички пратки и получаваш 7,000$ и 7 EP.");
SendClientMessage(playerid,COLOR_JOB,"Твоето време за чакане до нова работа е 20 минути.");
PlayerInfo[playerid][pDeliverTimer1]=20*120;
new randomgiveco=randomex(1,15);
if(randomgiveco>8)
{
new randomgiveco2=randomex(1,5);
CompanyInfo[5][coPrice]+=randomgiveco2;
}
GivePlayerCash(playerid, 7000);
GivePlayerEP(playerid,7);
onwork[playerid]=0;
ToggleEngine(GetPlayerVehicleID(playerid), VEHICLE_PARAMS_OFF); vehEngineStatusON[GetPlayerVehicleID(playerid)]=0;
PlayerInfo[playerid][pDeliverTimer1]=20*120;
RestartPlayerColor(playerid);
LoadMission(playerid);
}
}
return 1;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{
if(IsPlayerInRangeOfPoint(playerid,4.0,BizInfo[selectedBiz2[playerid]][bX],BizInfo[selectedBiz2[playerid]][bY],BizInfo[selectedBiz2[playerid]][bZ]))
{
SendClientMessage(playerid,COLOR_WHITE,"Biz GPS: Вие достигнахте до избрания от вас бизнес!");
DisablePlayerRaceCheckpoint(playerid);
LoadMission(playerid);
}
if(IsPlayerInRangeOfPoint(playerid,4.0,1025.1523,-955.8716,42.3311))
{
if(joinedrace[playerid]==1)
{
SetPlayerHealth(playerid,0);
}
if(joinedrace[playerid]==1)
{
joinedrace[playerid]=0;
if(fightForFinishRaceGame==1)
{
new string120[120];
format(string120,120,"Street Race: %s финишира пръв и спечели $4000 и 4 EP!",pname[playerid]);
SendClientMessageToAll(0x0092ffFF,string120);
GivePlayerEP(playerid,4);
GivePlayerCash(playerid,4000);
fightForFinishRaceGame+=1;
}
else if(fightForFinishRaceGame==2)
{
new string120[120];
format(string120,120,"Street Race: %s финишира втори и спечели $2000 и 2 EP!",pname[playerid]);
SendClientMessageToAll(0x0092ffFF,string120);
GivePlayerEP(playerid,2);
GivePlayerCash(playerid,2000);
fightForFinishRaceGame+=1;
}
else if(fightForFinishRaceGame==3)
{
new string120[120];
format(string120,120,"Street Race: %s финишира трети в състезанието!",pname[playerid]);
SendClientMessageToAll(0x0092ffFF,string120);
fightForFinishRaceGame+=1;
}
else if(fightForFinishRaceGame==4)
{
new string120[120];
racetimer=0;
format(string120,120,"Street Race: %s финишира четвърти в състезанието!",pname[playerid]);
SendClientMessageToAll(0x0092ffFF,string120);
SendClientMessageToAll(0x0092ffFF,"Състезанието приключи, поздравления на победителите!");
racestarted=0;
joinedinrace=0;
fightForFinishRaceGame=0;
}
}
if(joinedrace[playerid]==1)
{
if(PlayerInfo[playerid][pMission]==4)
{
enteredInMissionCP[playerid]=0;
PlayerInfo[playerid][pMission]+=1;
PlayerInfo[playerid][pMPMission]=0;
SendClientMessage(playerid,	0xFF3737FF,"[Мисия 5] Твоята мисия свърши.");
GameTextForPlayer(playerid, "~w~Mission~n~~b~completed", 2000, 1);
}
}
}
if(PlayerInfo[playerid][pMission]==1)
{
if(IsPlayerInRangeOfPoint(playerid,4.0,1352.1747,-1757.5778,13.5078))
{
if(enteredInMissionCP[playerid]==0)
{
enteredInMissionCP[playerid]=1;
SendClientMessage(playerid,0xFF3737FF,"[Мисия 2] Отидете да си купите телефон.");
}
else if(enteredInMissionCP[playerid]==2)
{
SendClientMessage(playerid,0xFF3737FF,"[Мисия 2] Твоята мисия свърши.");
DisablePlayerRaceCheckpoint(playerid);
PlayerInfo[playerid][pMission]+=1;
PlayerInfo[playerid][pMPMission]=0;
enteredInMissionCP[playerid]=0;
GameTextForPlayer(playerid, "~w~Mission~n~~b~completed", 2000, 1);
}
}
}
if(IsPlayerInRangeOfPoint(playerid,4.0,HouseInfo[selectedHouse2[playerid]][hX],HouseInfo[selectedHouse2[playerid]][hY],HouseInfo[selectedHouse2[playerid]][hZ]))
{
new stringr[256];
selectedHouse2Suma[playerid]=HouseInfo[selectedHouse2[playerid]][hLevel]*5+2200;
GivePlayerCash(playerid,selectedHouse2Suma[playerid]);
format(stringr,256,"Pizza Job: Ти достави пица и получи $%d",selectedHouse2Suma[playerid]);
SendClientMessage(playerid,0xB55900FF,stringr);
if(PlayerInfo[playerid][pMission]==3)
{
SendClientMessage(playerid,0xFF3737FF,"[Мисия 4] Твоята мисия свърши.");
DisablePlayerRaceCheckpoint(playerid);
PlayerInfo[playerid][pMission]+=1;
PlayerInfo[playerid][pMPMission]=0;
enteredInMissionCP[playerid]=0;
GameTextForPlayer(playerid, "~w~Mission~n~~g~completed", 2000, 1);
}
DisablePlayerRaceCheckpoint(playerid);
houseminato[selectedHouse2[playerid]]=1;
deliverpizza[playerid]+=1;
if(deliverpizza[playerid]>=3)
{
SendClientMessage(playerid,0xB55900FF,"Ти достави 3 пакета с пица и спечели $1500 и 4 EP");
GivePlayerEP(playerid,4);
GivePlayerCash(playerid,1500);
}
}
return 1;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
if(isvalidbomb==1)
{
if(pickupid==bombata)
{
DestroyDynamicPickup(bombata);
isvalidbomb=0;
SendClientMessage(playerid,COLOR_WHITE,"Bomb: Ти взе бомбата!");
bomber=playerid;
SetPlayerAttachedObject(playerid, 7,1252,1, -0.027000, -0.251999, 0.095000 , 1.000000, 90.000000, 1.000000 );
return 1;
}
}
if(pickupmoney[pickupid]==1)
{
if(PlayerInfo[playerid][pVip]==6)
{
GivePlayerCash(playerid,67);
DestroyDynamicPickup(pickupid);
PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
return 1;
}
if(PlayerInfo[playerid][pVip]>=1)
{
GivePlayerCash(playerid,23);
DestroyDynamicPickup(pickupid);
PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
return 1;
}
else
{
GivePlayerCash(playerid,11);
DestroyDynamicPickup(pickupid);
PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
return 1;
}
}
new Float:health;
GetPlayerHealth(playerid,health);
new Float:armour;
GetPlayerArmour(playerid,armour);
//if(pickupid==lodkacheck[0]) SetPlayerVirtualWorld(playerid,1); SendClientMessage(playerid,0xC600C6FF,"Ти беше прехвърлен в другия Virtual World!");
//if(pickupid==lodkacheck[1]) SetPlayerVirtualWorld(playerid,0); SendClientMessage(playerid,0xC600C6FF,"Ти се върна в главния Virtual World!");
if(pickupid==EShealarmour[0] && PlayerInfo[playerid][pTeam] == 8 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==EShealarmour[1] && PlayerInfo[playerid][pTeam] == 8 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==dfhealarmour[0] && PlayerInfo[playerid][pTeam] == 15 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==dfhealarmour[1] && PlayerInfo[playerid][pTeam] == 15 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==dfhealarmour2[0] && PlayerInfo[playerid][pTeam] == 15 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==dfhealarmour2[1] && PlayerInfo[playerid][pTeam] == 15 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==dfhealarmour3[0] && PlayerInfo[playerid][pTeam] == 15 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==dfhealarmour3[1] && PlayerInfo[playerid][pTeam] == 15 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==viphealarmour[0] && PlayerInfo[playerid][pTeam]== 1 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==viphealarmour[1] && PlayerInfo[playerid][pTeam]== 1 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==grovehealarmour[0] && PlayerInfo[playerid][pTeam]== 2 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==grovehealarmour[1] && PlayerInfo[playerid][pTeam]== 2 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==soldierhealarmour[0] && PlayerInfo[playerid][pTeam]== 16 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==soldierhealarmour[1] && PlayerInfo[playerid][pTeam]== 16 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==cripzhealarmour[0] && PlayerInfo[playerid][pTeam]== 6 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==cripzhealarmour[1] && PlayerInfo[playerid][pTeam]== 6 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==bgmhealarmour[0] && PlayerInfo[playerid][pTeam]== 21 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==bgmhealarmour[1] && PlayerInfo[playerid][pTeam]== 21 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==yakuzahealarmour[0] && PlayerInfo[playerid][pTeam]== 17 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==yakuzahealarmour[1] && PlayerInfo[playerid][pTeam]== 17 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==blackstreethealarmour[0] && PlayerInfo[playerid][pTeam]== 22 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==blackstreethealarmour[1] && PlayerInfo[playerid][pTeam]== 22 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==syndicatehealarmour[0] && PlayerInfo[playerid][pTeam]== 18 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==syndicatehealarmour[1] && PlayerInfo[playerid][pTeam]== 18 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==bloodhealarmour[0] && PlayerInfo[playerid][pTeam]== 19 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==bloodhealarmour[1] && PlayerInfo[playerid][pTeam]== 19 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==ms13healarmour[0] && PlayerInfo[playerid][pTeam]== 20 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==ms13healarmour[1] && PlayerInfo[playerid][pTeam]== 20 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==vagoshealarmour[0] && PlayerInfo[playerid][pTeam]== 4 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==vagoshealarmour[1] && PlayerInfo[playerid][pTeam]== 4 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==triadshealarmour[0] && PlayerInfo[playerid][pTeam]== 4 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==triadshealarmour[1] && PlayerInfo[playerid][pTeam]== 4 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==italianhealarmour[0] && PlayerInfo[playerid][pTeam]== 4 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==italianhealarmour[1] && PlayerInfo[playerid][pTeam]== 4 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==nanghealarmour[0] && PlayerInfo[playerid][pTeam]== 10 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==nanghealarmour[1] && PlayerInfo[playerid][pTeam]== 10 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==bountyhealarmour[0] && PlayerInfo[playerid][pTeam]== 12 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==bountyhealarmour[1] && PlayerInfo[playerid][pTeam]== 12 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==sapdhealarmour[0] && PlayerInfo[playerid][pTeam]== 13 && health<100.0) SetPlayerHealth(playerid,100);
if(pickupid==sapdhealarmour[1] && PlayerInfo[playerid][pTeam]== 13 && armour<100.0) SetPlayerArmour(playerid,100);
if(pickupid==VIPPick1)
{
GameTextForPlayer(playerid,"~g~~h~TELEPORT~n~~w~TAXI JOB", 1500, 3);
}
if(pickupid==VIPPick2)
{
GameTextForPlayer(playerid,"~g~~h~TELEPORT~n~~w~BUS JOB", 1500, 3);
}
if(pickupid==VIPPick3)
{
GameTextForPlayer(playerid,"~g~~h~TELEPORT~n~~w~PIZZA JOB", 1500, 3);
}
if(pickupid==VIPPick4)
{
GameTextForPlayer(playerid,"~g~~h~TELEPORT~n~~w~LOTTERY SHOW", 1500, 3);
}
if(pickupid==VIPPick5)
{
GameTextForPlayer(playerid,"~g~~h~TELEPORT~n~~w~COALMINE JOB", 1500, 3);
}
if(pickupid==VIPPick6)
{
GameTextForPlayer(playerid,"~g~~h~TELEPORT~n~~w~SWEEPER JOB", 1500, 3);
}
if(pickupid==VIPPick7)
{
GameTextForPlayer(playerid,"~g~~h~TELEPORT~n~~w~PILOT JOB", 1500, 3);
}
if(pickupid==VIPPick8)
{
GameTextForPlayer(playerid,"~g~~h~TELEPORT~n~~w~FISH", 1500, 3);
}
if(pickupid==VIPPick9)
{
GameTextForPlayer(playerid,"~g~~h~TELEPORT~n~~w~DELIVER JOB", 1500, 3);
}
if(specialpickup[pickupid][PICKUPGARAGE]!=0)
{
//specialpickup[pickupid][2]=1;
new ala=specialpickup[pickupid][PICKUPGARAGE];
specialpickupenter[playerid][PICKUPGARAGE]=ala;
PlayerInfo[playerid][pHidePickup]=3;
if(GarageInfo[ala][gGarage]==1)
{
new aparstring[356];
format(aparstring, 356, "~b~%s CAR SHOP~n~~w~type ~r~/enter", GarageInfo[ala][gName]);
GameTextForPlayer(playerid,aparstring, 1500, 3);
return 1;
}
else if(GarageInfo[ala][gGarage]==2)
{
new aparstring[356];
format(aparstring, 356, "~b~%s GARAGE~n~~w~type ~r~ /enter", GarageInfo[ala][gName]);
GameTextForPlayer(playerid,aparstring, 1500, 3);
return 1;
}
}
if(specialpickup[pickupid][PICKUPCOMPANY]!=0)
{
new alc=specialpickup[pickupid][PICKUPCOMPANY];
specialpickupenter[playerid][PICKUPCOMPANY]=alc;
new apcrstring[356];
format(apcrstring, 356, "~p~~h~]%s]~n~YOU OWN %d shares~n~~g~~h~PRICE FOR A SHARE: ~b~~h~$%d~n~~w~USE: ~n~~g~/buyshares, /sellshares", CompanyInfo[alc][coName], PlayerInfo[playerid][pCompany][alc], CompanyInfo[alc][coPrice]);
GameTextForPlayer(playerid,apcrstring, 1500, 3);
return 1;
}
if(specialpickup[pickupid][PICKUPAPARTMENTS]!=0)
{
new ala=specialpickup[pickupid][PICKUPAPARTMENTS];
specialpickupenter[playerid][PICKUPAPARTMENTS]=ala;
PlayerInfo[playerid][pHidePickup]=3;
new aparstring[356];
format(aparstring, 356, "~b~COOPERATION~n~~p~%s~n~~w~Floors: %d", ApartmentInfo[ala][aName],ApartmentInfo[ala][aFloors]);
GameTextForPlayer(playerid,aparstring, 1500, 3);
return 1;
}
if(specialpickup[pickupid][PICKUPBIZ]!=0)
{
new alb=specialpickup[pickupid][PICKUPBIZ];
specialpickupenter[playerid][PICKUPBIZ]=alb;
PlayerInfo[playerid][pHidePickup]=3;
new bizstring[356];
if(BizInfo[alb][bOwner]==0 && BizInfo[alb][bFee]==0)
{
format(bizstring, 356, "~y~Bussines For Sale~n~~r~%s~n~~w~PRICE:~g~ $%d~n~ ~w~Level: ~b~%d ~n~~w~PAYOUT: ~g~$%d", BizInfo[alb][bName],BizInfo[alb][bPrice],BizInfo[alb][bLevel],BizInfo[alb][bPayOut]);
GameTextForPlayer(playerid,bizstring, 1500, 3);
return 1;
}
else if(BizInfo[alb][bOwner]==0 && BizInfo[alb][bFee]>0)
{
format(bizstring, 356, "~y~Bussines For Sale~n~~r~%s~n~~w~PRICE:~g~ $%d~n~ ~w~Level: ~b~%d ~n~~w~ENTER FEE: ~y~$%d ~n~~w~PAYOUT: ~g~$%d", BizInfo[alb][bName],BizInfo[alb][bPrice],BizInfo[alb][bLevel],BizInfo[alb][bFee],BizInfo[alb][bPayOut]);
GameTextForPlayer(playerid,bizstring, 1500, 3);
return 1;
}
else if(BizInfo[alb][bOwner]==1 && BizInfo[alb][bFee]==0)
{
format(bizstring, 356, "~r~%s~n~~w~Owner:~g~ %s ~n~~w~Level: ~b~%d ~n~~w~PAYOUT: ~g~$%d",BizInfo[alb][bName], BizInfo[alb][bOwnerName],BizInfo[alb][bLevel],BizInfo[alb][bPayOut]);
GameTextForPlayer(playerid,bizstring, 1500, 3);
return 1;
}
else if(BizInfo[alb][bOwner]==1 && BizInfo[alb][bFee]>0)
{
format(bizstring, 356, "~r~%s~n~~w~Owner:~g~ %s ~n~~w~Level: ~b~%d ~w~~n~ENTER FEE: ~y~$%d ~n~~w~PAYOUT: ~g~$%d",BizInfo[alb][bName], BizInfo[alb][bOwnerName],BizInfo[alb][bLevel],BizInfo[alb][bFee],BizInfo[alb][bPayOut]);
GameTextForPlayer(playerid,bizstring, 1500, 3);
return 1;
}
}
new housestring[256];
if(specialpickup[pickupid][PICKUPHOUSE]!=0)
{
new alh=specialpickup[pickupid][PICKUPHOUSE];
specialpickupenter[playerid][PICKUPHOUSE]=alh;
PlayerInfo[playerid][pHidePickup]=3;
if(HouseInfo[alh][hOwner]==1)
{
format(housestring, 256, "~w~Owner:~g~ %s~n~~w~Level: ~b~ %d~n~", HouseInfo[alh][hOwnerName], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
return 1;
}
else if(HouseInfo[alh][hOwner]==0)
{
if(HouseInfo[alh][hInterior]==1)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==2)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 1 ROOM~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==3)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 1 ROOM~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==4)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==5)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 6 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==6)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==7)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==8)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==9)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==10)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==11)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==12)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==13)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==14)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==15)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==16)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 9 ROOM~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==17)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 9 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==18)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==19)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 2 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==20)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==21)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==22)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 22 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==23)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==24)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==25)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
else if(HouseInfo[alh][hInterior]==26)
{
format(housestring, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[alh][hPrice], HouseInfo[alh][hLevel]);
GameTextForPlayer(playerid,housestring, 1500, 3);
}
return 1;
}
}
if(pickupid == BankPickup[5] && GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid)==0)
{
SetPlayerPos(playerid,2307.1792,-15.6580,28.3014);
SetPlayerFacingAngle(playerid,267.51);
SetCameraBehindPlayer(playerid);
SetPlayerVirtualWorld(playerid,3);
return 1;
}
if(pickupid == BankPickup[0] && GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid)==0)
{
SetPlayerPos(playerid,2307.1792,-15.6580,28.3014);
SetPlayerFacingAngle(playerid,267.51);
SetCameraBehindPlayer(playerid);
SetPlayerVirtualWorld(playerid,1);
return 1;
}
//other bank pickups - location - open
//other bank pickups - location - close
if(pickupid == BankPickup[1] && GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid)==0)
{
SetPlayerPos(playerid,2307.1792,-15.6580,28.3014);
SetPlayerFacingAngle(playerid,267.51);
SetCameraBehindPlayer(playerid);
SetPlayerVirtualWorld(playerid,2);
return 1;
}
if(pickupid == BankPickup[2] && GetPlayerVirtualWorld(playerid)==1 && GetPlayerInterior(playerid)==0)
{
SetPlayerPos(playerid,1481.3755,-1769.8796,18.7958);
SetPlayerFacingAngle(playerid,0.3163);
SetCameraBehindPlayer(playerid);
SetPlayerVirtualWorld(playerid,0);
return 1;
}
if(pickupid == BankPickup[3] && GetPlayerVirtualWorld(playerid)==2 && GetPlayerInterior(playerid)==0)
{
SetPlayerPos(playerid,2414.5371,1123.8458,10.8203);
SetPlayerFacingAngle(playerid,272.9833);
SetCameraBehindPlayer(playerid);
SetPlayerVirtualWorld(playerid,0);
return 1;
}
if(pickupid == BankPickup[4] && GetPlayerVirtualWorld(playerid)==3 && GetPlayerInterior(playerid)==0)
{
SetPlayerPos(playerid,-1494.9438,920.4615,7.1875);
SetPlayerFacingAngle(playerid,92.1882);
SetCameraBehindPlayer(playerid);
SetPlayerVirtualWorld(playerid,0);
return 1;
}
if(pickupid == BankCommandPickup[0])
{
PlayerNearATM[playerid]=9999; //PlayerNear [Bank ID]
GameTextForPlayer(playerid, "~g~LOS SANTOS BANK ~n~~w~/bank /transfer~n~/credit", 2000, 3);
return 1;
}
if(pickupid == BankCommandPickup[1])
{
PlayerNearATM[playerid]=9999; //PlayerNear [Bank ID]
GameTextForPlayer(playerid, "~g~LAS VENTURAS BANK ~n~~w~/bank /transfer~n~/credit", 2000, 3);
return 1;
}
if(pickupid == BankCommandPickup[2])
{
PlayerNearATM[playerid]=9999; //PlayerNear [Bank ID]
GameTextForPlayer(playerid, "~g~SAN FIERRO BANK ~n~~w~/bank /transfer~n~/credit", 2000, 3);
return 1;
}
if(pickupid==IFCDUTY)
{
GameTextForPlayer(playerid, "~g~INTENSE FUEL COMPANY~n~~w~USE ~r~/ifchelp~w~ For information", 2000, 3);
return 1;
}
if(pickupid==DFDUTY || pickupid==DFDUTY2)
{
GameTextForPlayer(playerid, "~y~SPECIAL FORCE DUTY~n~~w~/dfduty", 2000, 3);
return 1;
}
if(pickupid==SDELKAEXIT)
{
GameTextForPlayer(playerid, "~y~SDELKA ILI NE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==ESPickup[0])
{
GameTextForPlayer(playerid, "~b~~h~~h~~h~ES HOUSE~n~~w~TYPE ~r~/ENTER", 2000, 3);
return 1;
}
if(pickupid==ESPickup[4])
{
GameTextForPlayer(playerid, "~b~~h~~h~~h~ES HOUSE~n~~w~TYPE ~r~/exit", 2000, 3);
return 1;
}
if(pickupid==ESPickup[3])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==GSFPickup[3])
{
GameTextForPlayer(playerid, "~g~GROVE HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==GSFPickup[2])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==GSFPickup[0])
{
GameTextForPlayer(playerid, "~g~GROVE DM BIZ~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==GSFPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==CripzPickup[4])
{
GameTextForPlayer(playerid, "~b~SAN FIERRO CRIPZ~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==CripzPickup[5])
{
GameTextForPlayer(playerid, "~b~VCRIPZ HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==CripzPickup[0])
{
GameTextForPlayer(playerid, "~b~VCRIPZ HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==CripzPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BGMPickup[2])
{
GameTextForPlayer(playerid, "~p~BGMAFIA DM BIZ~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BGMPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BGMPickup[0])
{
GameTextForPlayer(playerid, "~p~BGMAFIA HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BountyPickup[0])
{
GameTextForPlayer(playerid, "~g~BOUNTY HUNTERS HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BountyPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BGMPickup[3])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==SoldierPickup[0])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==SoldierPickup[1])
{
GameTextForPlayer(playerid, "~p~SOLDIER HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BallasPickup[0])
{
GameTextForPlayer(playerid, "~p~BALLAS HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BallasPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==LSPDPickup[8])
{
GameTextForPlayer(playerid, "~b~SAPD~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==CripzPickup[6])
{
GameTextForPlayer(playerid, "~b~CRIPZ'S CAR SHOP~n~~w~TYPE: /MYVEH", 2000, 3);
return 1;
}
if(pickupid==LotteryPickup[1])
{
GameTextForPlayer(playerid, "~r~LOTTERY SHOW~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==LotteryPickup[0])
{
if(openlottery==1)
{
GameTextForPlayer(playerid, "~g~OPEN~n~~r~LOTTERY SHOW~n~~w~PRESS ~r~ENTER", 2000, 3);
}
if(openlottery==0)
{
GameTextForPlayer(playerid, "~g~CLOSED~n~~r~LOTTERY SHOW", 2000, 3);
}
return 1;
}
if(pickupid==GrovePickup)
{
GameTextForPlayer(playerid, "~g~GROVE'S CAR SHOP~n~~w~TYPE: /MYVEH", 2000, 3);
return 1;
}
if(pickupid==VIPPickup)
{
GameTextForPlayer(playerid, "~r~VIP'S CAR SHOP~n~~w~TYPE: /MYVEH", 2000, 3);
return 1;
}
if(pickupid==CripzPickup[2])
{
GameTextForPlayer(playerid, "~b~VCRIPZ DM BIZ~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==CripzPickup[3])
{
GameTextForPlayer(playerid, "~b~VCRIPZ~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==LSPDPickup[6])
{
GameTextForPlayer(playerid, "~b~SAPD DM BIZ~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==LSPDPickup[7])
{
GameTextForPlayer(playerid, "~b~SAPD~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==ESPickup[1])
{
GameTextForPlayer(playerid, "~r~ES DM BIZ~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==ESPickup[2])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BloodPickup[0])
{
GameTextForPlayer(playerid, "~r~BLOOD MAFIA DM BIZ~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==BloodPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==YakuzaPickup[0])
{
GameTextForPlayer(playerid, "~y~YAKUZA DM BIZ~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==YakuzaPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==SyndicatePickup[0])
{
GameTextForPlayer(playerid, "~b~SYNDICATE TEXAS HOUSE~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==SyndicatePickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==LSPDPickup[5])
{
GameTextForPlayer(playerid, "~b~SAPD~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==LSPDPickup[0])
{
GameTextForPlayer(playerid, "~b~SAPD~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==LSPDPickup[3])
{
GameTextForPlayer(playerid, "~b~SAN FIERRO POLICE~n~~w~PRESS ~r~enter", 2000, 3);
return 1;
}
if(pickupid==LSPDPickup[4])
{
GameTextForPlayer(playerid, "~b~LAS VENTURAS POLICE~n~~w~PRESS ~r~enter", 2000, 3);
return 1;
}
if(pickupid==LSPDPickup[1])
{
GameTextForPlayer(playerid, "~b~LOS SANTOS POLICE~n~~w~press ~r~enter", 2000, 3);
return 1;
}
if(pickupid==TowerPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==TowerPickup[0])
{
GameTextForPlayer(playerid, "~g~LOS SANTOS TOWER~n~~n~~w~PRESS ~r~ENTER", 2000, 3);
return 1;
}
if(pickupid==ElevatorPickup[1])
{
GameTextForPlayer(playerid, "~w~PRESS ~r~enter", 2000, 3);
return 1;
}
if(pickupid==ElevatorPickup[0])
{
GivePlayerWeapon(playerid, WEAPON_PARACHUTE, 1);
SetPlayerPos(playerid,1803.9323,-1300.1918,131.7344);
return 1;
}
if(pickupid==CarShopPickup)
{
GameTextForPlayer(playerid, "~w~TYPE: ~r~/EXIT", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP2[0])
{
if(PlayerInfo[playerid][pTimerBizPickups2]<=0)
{
GameTextForPlayer(playerid, "~b~FIGHTING CLOTHES~n~~n~~n~~w~WARDROBE", 2000, 3);
SetPlayerSkin(playerid,204);
PlayerInfo[playerid][pTimerBizPickups2]=5;
}
return 1;
}
if(pickupid==BIZPICKUP2[1])
{
if(PlayerInfo[playerid][pTimerBizPickups2]<=0)
{
GameTextForPlayer(playerid, "~b~NORMAL CLOTHES~n~~n~~n~~w~WARDROBE", 2000, 3);
RestartPlayerSkin(playerid);
TogglePlayerControllable(playerid, 1);
PlayerInfo[playerid][pTimerBizPickups2]=5;
}
return 1;
}
if(pickupid==BIZPICKUP2[2])
{
if(PlayerInfo[playerid][pTimerBizPickups2]<=0)
{
GameTextForPlayer(playerid, "~r~BOXING CLOTHES~n~~n~~n~~w~WARDROBE", 2000, 3);
SetPlayerSkin(playerid,80);
PlayerInfo[playerid][pTimerBizPickups2]=5;
}
return 1;
}
if(pickupid==BIZPICKUP2[3])
{
if(PlayerInfo[playerid][pTimerBizPickups2]<=0)
{
GameTextForPlayer(playerid, "~b~NORMAL CLOTHES~n~~n~~n~~w~WARDROBE", 2000, 3);
RestartPlayerSkin(playerid);
TogglePlayerControllable(playerid, 1);
PlayerInfo[playerid][pTimerBizPickups2]=5;
}
return 1;
}
if(pickupid==BIZPICKUP[0])
{
GameTextForPlayer(playerid, "~b~BAR~n~~w~/DRINK", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[1])
{
GameTextForPlayer(playerid, "~g~Ammu-nation~n~~w~/buy~n~/HEAL~r~ FOR ARMOUR ONLY $100", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[2])
{
GameTextForPlayer(playerid, "~b~DRIVING SCHOOL~n~~w~/DMV", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[3])
{
GameTextForPlayer(playerid, "~g~GENERAL STORE~n~~w~/BUY", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[4])
{
GameTextForPlayer(playerid, "~r~CLOTHES SHOP~n~~w~/buy", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[5])
{
GameTextForPlayer(playerid, "~y~BURGER SHOT~n~~w~/BUY", 2000, 3);
return 1;
}
//if(pickupid==BIZPICKUP[6])
//{
//GameTextForPlayer(playerid, "~b~BETTING~n~~w~/BET", 2000, 3);
//return 1;
//}
if(pickupid==BIZPICKUP[7])
{
GameTextForPlayer(playerid, "~r~CLOTHES SHOP~n~~w~/buy", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[8])
{
GameTextForPlayer(playerid, "~g~DISCO~n~~w~/DRINK", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[9])
{
GameTextForPlayer(playerid, "~p~SEX SHOP~n~~w~/BUY", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[10])
{
GameTextForPlayer(playerid, "~w~LEARN NEW WAYS TO ~g~FIGHT!~n~~n~~b~/train", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[16])
{
GameTextForPlayer(playerid, "~w~LEARN NEW WAYS TO ~g~FIGHT!~n~~n~~b~/train" ,2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[18])
{
GameTextForPlayer(playerid, "~r~DRUG & BOMB STORE~n~~w~/buy /buybomb" ,2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[19])
{
GameTextForPlayer(playerid, "~b~BAR~n~~w~/DRINK", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[20])
{
GameTextForPlayer(playerid, "~b~DRUGS/GUNS/HEAL~n~~w~/BUYDRUG ~g~/BUY ~r~/HEAL", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[11])
{
GameTextForPlayer(playerid, "~g~STRIP CLUB~n~~w~/DRINK", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[12])
{
GameTextForPlayer(playerid, "~y~CLUCKIN' BELL~n~~w~/BUY", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[13])
{
GameTextForPlayer(playerid, "~r~Restaurant~n~~w~/BUY", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[14])
{
GameTextForPlayer(playerid, "~g~ADVERTISIMENT~n~~w~/ADVERT", 2000, 3);
return 1;
}
if(pickupid==BIZPICKUP[15])
{
GameTextForPlayer(playerid, "~g~GENERAL STORE~n~~w~/BUY", 2000, 3);
return 1;
}
if(pickupid==SDELKAPICKUP)
{
GameTextForPlayer(playerid, "~y~SDELKA ILI NE~n~~r~PRESS ~w~Y", 2000, 3);
return 1;
}
/*	if(pickupid==BUYOFFICEPICKUP)
{
GameTextForPlayer(playerid, "~g~LOS SANTOS OFFICES~n~~r~PRESS ~w~Y", 2000, 3);
return 1;
}
*/
if(pickupid==VILNAPICKUP)
{
GameTextForPlayer(playerid, "~y~village zone~n~~r~PRESS ~w~ENTER", 2000, 3);
return 1;
}
if(pickupid==FISHING)
{
GameTextForPlayer(playerid, "~p~FISHING STORE~n~~w~Use ~r~/buy /sellfish /sellcrate", 2000, 3);
return 1;
}
new ATMString[256];
for(new i2=0; i2 <=13; i2++)
{
if(pickupid==ATMPICKUP[i2])
{
PlayerNearATM[playerid]=i2;
format(ATMString,256,"~w~USE ~g~Y ~w~TO WITHDRAW~n~~n~TO STEAL USE ~r~/ROBBOMB",ATMCASH[i2]);
GameTextForPlayer(playerid, ATMString, 2000, 3);
return 1;
}
}
for(new i2=18; i2 <=26; i2++)
{
if(pickupid==ATMPICKUP[i2])
{
PlayerNearATM[playerid]=i2;
format(ATMString,256,"~w~USE ~g~Y ~w~TO WITHDRAW~n~~n~TO STEAL USE ~r~/ROBBOMB",ATMCASH[i2]);
GameTextForPlayer(playerid, ATMString, 2000, 3);
return 1;
}
}
if(pickupid==ATMPICKUP[14])
{
PlayerNearATM[playerid]=14;
format(ATMString,256,"~w~USE ~g~Y ~w~TO WITHDRAW",ATMCASH[14]);
GameTextForPlayer(playerid, ATMString, 2000, 3);
return 1;
}
if(pickupid==ATMPICKUP[15])
{
PlayerNearATM[playerid]=15;
format(ATMString,256,"~w~USE ~g~Y ~w~TO WITHDRAW",ATMCASH[15]);
GameTextForPlayer(playerid, ATMString, 2000, 3);
return 1;
}
if(pickupid==ATMPICKUP[16])
{
PlayerNearATM[playerid]=16;
format(ATMString,256,"~w~USE ~g~Y ~w~TO WITHDRAW",ATMCASH[16]);
GameTextForPlayer(playerid, ATMString, 2000, 3);
return 1;
}
if(pickupid==ATMPICKUP[17])
{
PlayerNearATM[playerid]=17;
format(ATMString,256,"~w~USE ~g~Y ~w~TO WITHDRAW",ATMCASH[17]);
GameTextForPlayer(playerid, ATMString, 2000, 3);
return 1;
}
PlayerNearATM[playerid]=-1;
return 1;
}
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
return 1;
}
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
return 1;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
new Menu:Current = GetPlayerMenu(playerid);
if(Current == TuningMenu)
{
switch(row)
{
case 0:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Paintjobs, playerid);
}
case 1:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Colors, playerid);
}
case 2:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Exhausts, playerid);
}
case 3:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Frontbumper, playerid);
}
case 4:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Rearbumper, playerid);
}
case 5:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Roof, playerid);
}
case 6:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Spoilers, playerid);
}
case 7:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Sideskirts, playerid);
}
case 8:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Wheels, playerid);
}
case 9:
if(IsPlayerConnected(playerid))
{
ShowMenuForPlayer(Others, playerid);
}
}
}
if(Current == Paintjobs)
{
switch(row)
{
case 0:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehiclePaintjob(car,0);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
ShowMenuForPlayer(TuningMenu, playerid);
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehiclePaintjob(car,1);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
ShowMenuForPlayer(TuningMenu, playerid);
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehiclePaintjob(car,2);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
ShowMenuForPlayer(TuningMenu, playerid);
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehiclePaintjob(car,3);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
ShowMenuForPlayer(TuningMenu, playerid);
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehiclePaintjob(car,4);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
ShowMenuForPlayer(TuningMenu, playerid);
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 5:
{
ShowMenuForPlayer(TuningMenu, playerid);
}
}
}
if(Current == Colors)
{
switch(row)
{
case 0:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,0,0);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,1,1);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,3,3);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,79,79);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,86,86);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 5:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,6,6);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 6:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,126,126);
ShowMenuForPlayer(Colors, playerid);
}
else
{
ShowMenuForPlayer(TuningMenu, playerid);
}
case 7:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,66,66);
ShowMenuForPlayer(Colors, playerid);
}
case 8:ShowMenuForPlayer(Colors1, playerid);
}
}
if(Current == Colors1)
{
switch(row){
case 0:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,24,24);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,123,123);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,53,53);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,93,93);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,83,83);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 5:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,60,60);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 6:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,126,126);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 7:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
ChangeVehicleColor(car,110,110);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
ShowMenuForPlayer(Colors1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 8:ShowMenuForPlayer(TuningMenu, playerid);
}
}
if(Current == Exhausts)
{
switch(row)
{
case 0:
{
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
{
AddVehicleComponent(car,1034);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Elegy");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
{
AddVehicleComponent(car,1046);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Flash");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
{
AddVehicleComponent(car,1065);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Jetser");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
{
AddVehicleComponent(car,1064);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Stratum");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
AddVehicleComponent(car,1028);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Sultan");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
AddVehicleComponent(car,1089);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Uranus");
ShowMenuForPlayer(Exhausts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
{
AddVehicleComponent(car,1037);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Elegy");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
{
AddVehicleComponent(car,1045);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Flash");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
{
AddVehicleComponent(car,1066);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow exaust component on Jester");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
{
AddVehicleComponent(car,1059);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Stratum");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
AddVehicleComponent(car,1029);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Sultan");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
{
AddVehicleComponent(car,1092);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Uranus");
ShowMenuForPlayer(Exhausts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1044);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Brodway");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
{
AddVehicleComponent(car,1126);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Remington");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
{
AddVehicleComponent(car,1129);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Savana");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1104);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Blade");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1113);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Slamvan");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1136);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Tornado");
ShowMenuForPlayer(Exhausts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1043);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Brodway");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
{
AddVehicleComponent(car,1127);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Remingon");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
{
AddVehicleComponent(car,1132);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Savana");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1105);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Blade");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1114);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Slamvan");
ShowMenuForPlayer(Exhausts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1135);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Tornado");
ShowMenuForPlayer(Exhausts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:ShowMenuForPlayer(TuningMenu, playerid);
}
}
if(Current == Frontbumper)
{
switch(row)
{
case 0:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1171);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Elegy");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1153);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Flash");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
{
AddVehicleComponent(car,1160);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Jester");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1155);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Stratum");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1169);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Sultan");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
{
AddVehicleComponent(car,1166);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Uraus");
ShowMenuForPlayer(Frontbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1172);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow front bumper component on Elegy");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1152);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Flash");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
{
AddVehicleComponent(car,1173);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Jester");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1157);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Stratum");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1170);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Sultan");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
{
AddVehicleComponent(car,1165);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Uranus");
ShowMenuForPlayer(Frontbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1174);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Brodway");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
{
AddVehicleComponent(car,1179);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Remington");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
{
AddVehicleComponent(car,1189);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Savana");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1182);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Blade");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1115);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Slamvan");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1191);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Tornado");
ShowMenuForPlayer(Frontbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1175);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Brodway");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
{
AddVehicleComponent(car,1185);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Remington");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
{
AddVehicleComponent(car,1188);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Savana");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1181);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Blade");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1116);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Slamvan");
ShowMenuForPlayer(Frontbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1190);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Tornado");
ShowMenuForPlayer(Frontbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:ShowMenuForPlayer(TuningMenu, playerid);
}
}
if(Current == Rearbumper)
{
switch(row)
{
case 0:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1149);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Elegy");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1150);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Flash");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
{
AddVehicleComponent(car,1159);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Jester");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1154);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Stratum");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1141);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Sultan");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
{
AddVehicleComponent(car,1168);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Uranus");
ShowMenuForPlayer(Rearbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1148);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Elegy");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1151);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Flash");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
{
AddVehicleComponent(car,1161);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Jester");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1156);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Stratum");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1140);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Sultan");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
{
AddVehicleComponent(car,1167);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Uranus");
ShowMenuForPlayer(Rearbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1176);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Brodway");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
{
AddVehicleComponent(car,1180);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Remington");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
{
AddVehicleComponent(car,1187);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Savana");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1184);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Blade");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1109);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Slamvan");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1192);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Tornado");
ShowMenuForPlayer(Rearbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1177);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Brodway");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
{
AddVehicleComponent(car,1178);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Remington");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
{
AddVehicleComponent(car,1186);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Savana");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1183);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Blade");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1110);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Slamvan");
ShowMenuForPlayer(Rearbumper, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1193);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Tornado");
ShowMenuForPlayer(Rearbumper, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:ShowMenuForPlayer(TuningMenu, playerid);
}
}
//==============================================================================
//==============================================================================
if(Current == Roof)
{
switch(row)
{
case 0:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1035);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Elegy");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1054);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Flash");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
{
AddVehicleComponent(car,1067);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Jester");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1055);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Stratum");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1032);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Sultan");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
{
AddVehicleComponent(car,1088);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Uranus");
ShowMenuForPlayer(Roof, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1035);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Elegy");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1053);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Flash");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
{
AddVehicleComponent(car,1068);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Jester");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1061);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Stratum");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1033);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Sultan");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
{
AddVehicleComponent(car,1091);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Uranus");
ShowMenuForPlayer(Roof, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567) // Savana
{
AddVehicleComponent(car,1130);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Hardtop Roof component on Brodway");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1128);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Hardtop Roof component on Blade");
ShowMenuForPlayer(Roof, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types Savana and Blade");
ShowMenuForPlayer(Roof, playerid);
}
case 3:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567) // Savana
{
AddVehicleComponent(car,1131);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Softtop Roof component on Brodway");
ShowMenuForPlayer(Roof, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1103);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Softtop Roof component on Blade");
ShowMenuForPlayer(Roof, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types Savana and Blade");
ShowMenuForPlayer(Roof, playerid);
}
case 4:
{
ShowMenuForPlayer(TuningMenu, playerid);
}
}
}
if(Current == Spoilers)
{
switch(row)
{
case 0:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1147);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Elegy");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1049);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Flash");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
{
AddVehicleComponent(car,1162);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Jester");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1158);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Stratum");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1138);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Sultan");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
{
AddVehicleComponent(car,1164);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Uranus");
ShowMenuForPlayer(Spoilers, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1146);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Elegy");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1150);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Flash");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
{
AddVehicleComponent(car,1158);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Jester");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1060);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Stratum");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1139);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Sultan");
ShowMenuForPlayer(Spoilers, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
{
AddVehicleComponent(car,1163);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Uranus");
ShowMenuForPlayer(Spoilers, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to X-Flow Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
{
ShowMenuForPlayer(TuningMenu, playerid);
}
}
}
if(Current == Sideskirts)
{
switch(row)
{
case 0:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1036);
AddVehicleComponent(car,1040);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts component on Elegy");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1047);
AddVehicleComponent(car,1051);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Sideskirts vent component on Flash");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
{
AddVehicleComponent(car,1069);
AddVehicleComponent(car,1071);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts component on Jester");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1056);
AddVehicleComponent(car,1062);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts component on Stratum");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1026);
AddVehicleComponent(car,1027);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts bumper component on Sultan");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
{
AddVehicleComponent(car,1090);
AddVehicleComponent(car,1094);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts component on Uranus");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
{
AddVehicleComponent(car,1039);
AddVehicleComponent(car,1041);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Elegy");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
{
AddVehicleComponent(car,1048);
AddVehicleComponent(car,1052);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Flash");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
{
AddVehicleComponent(car,1070);
AddVehicleComponent(car,1072);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Jester");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
{
AddVehicleComponent(car,1057);
AddVehicleComponent(car,1063);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Stratum");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
{
AddVehicleComponent(car,1031);
AddVehicleComponent(car,1030);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Sultan");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
{
AddVehicleComponent(car,1093);
AddVehicleComponent(car,1095);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Uranus");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
{
AddVehicleComponent(car,1042);
AddVehicleComponent(car,1099);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Strip Side Skirts component on Brodway");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567) // Savana
{
AddVehicleComponent(car,1102);
AddVehicleComponent(car,1133);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Strip Side Skirts component on Savana");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
{
AddVehicleComponent(car,1134);
AddVehicleComponent(car,1137);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Strip Side Skirts component on Tornado");
ShowMenuForPlayer(Sideskirts, playerid);
}
else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
{
AddVehicleComponent(car,1108);
AddVehicleComponent(car,1107);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Strip Side Skirts component on Blade");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types Brodway, Savana Tornado and Blade");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534) // Remington
{
AddVehicleComponent(car,1122);
AddVehicleComponent(car,1101);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Flames Side Skirts component on Remington");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car type Remington ");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 4:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534) // Remington
{
AddVehicleComponent(car,1106);
AddVehicleComponent(car,1124);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Arches Side Skirts component on Remington");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car type Remington ");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 5:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1118);
AddVehicleComponent(car,1120);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Trim Side Skirts component on Slamvan");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car type Slamvan ");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 6:
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
{
new car = GetPlayerVehicleID(playerid);
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
{
AddVehicleComponent(car,1119);
AddVehicleComponent(car,1121);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Wheelcovers component on Slamvan");
ShowMenuForPlayer(Sideskirts, playerid);
}
}
else
{
SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car type Slamvan ");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 7:ShowMenuForPlayer(TuningMenu, playerid);
}
}
if(Current == Wheels) {
switch(row){
case 0:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1025);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Offroad Wheels ");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1074);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Mega Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1076);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wires Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 3:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1078);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Twist Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(Wheels, playerid);
}
case 4:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1081);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Grove Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 5:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1082);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Import Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 6:
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1085);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Atomic Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
case 7:
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1096);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Ahab Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
case 8:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1097);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Virtual Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 9:
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1098);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Access Wheels");
ShowMenuForPlayer(Wheels, playerid);
}
case 10:
{
ShowMenuForPlayer(Wheels1, playerid);
}
case 11:
{
ShowMenuForPlayer(TuningMenu, playerid);
}
}
}
if(Current == Wheels1)
{
switch(row)
{
case 0:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1084);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Trance Wheels ");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 1:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1073);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Shadow Wheels");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 2:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1075);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Rimshine Wheels");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 3:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1077);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Classic Wheels");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(Wheels, playerid);
}
}
case 4:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1079);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Cutter Wheels");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 5:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1080);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Switch Wheels");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 6:
{
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1083);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Dollar Wheels");
ShowMenuForPlayer(Wheels1, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
}
case 7:
{
{
ShowMenuForPlayer(TuningMenu, playerid);
}
}
}
}
if(Current == Nitro)
{
switch(row)
{
case 0:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1008);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added 2x Nitro to car ");
ShowMenuForPlayer(Others, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
if(GetPlayerMoney(playerid) >= -100000000000000)
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1009);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added 5x Nitro to car");
ShowMenuForPlayer(Others, playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Not enough money!");
ShowMenuForPlayer(Others, playerid);
}
case 2:
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1010);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added 10x Nitro to car");
ShowMenuForPlayer(Others, playerid);
}
case 3:
{
ShowMenuForPlayer(Others, playerid);
}
}
}
if(Current == Others)
{
switch(row)
{
case 0:
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1087);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Hydraulics to car ");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 1:
{
new car = GetPlayerVehicleID(playerid);
AddVehicleComponent(car,1086);
SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Stereo Bass bost system ");
ShowMenuForPlayer(TuningMenu, playerid);
}
case 2:
{
ShowMenuForPlayer(Nitro, playerid);
}
case 3:
{
ShowMenuForPlayer(TuningMenu, playerid);
}
}
}
return 0;
}
public OnPlayerExitedMenu(playerid)
{
return 1;
}
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
return 1;
}
//phone system - location - open
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
if(playertextid == PhoneGUI[playerid][37])//Call
{
if(PlayerInfo[playerid][pValcher]<2) return SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно пари в сметката си, за да се обадите на полицията!");
if(calls>=10)
{
SendClientMessage(playerid,COLOR_GRAD1,"Полицията в момента разследва повече от 10 случая, обадете се по-късно!");
return 1;
}
new stringut1[256];
new stringut2[256];
new suspectid=-1;
new turfsusid=-1;
for (new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(i!=playerid)
{
if(markersuspect[i]>0)
{
if(PlayerInfo[i][pWanted]>0)
{
if(CorDetector(30,playerid,i))
{
suspectid=i;
}
}
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Вече има доклад за този човек!");
return 1;
}
}
if(suspectid==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Близо до вас няма престъпници!");
return 1;
}
format(stringut1,256,"[ОБАЖДАНЕ] %s се намира близо до заподозрения %s и изпрати местоположението си!",pname[playerid],pname[suspectid]);
for (new t = 0; t < MAX_TURFS; t++)
{
if (IsPlayerInTurf(suspectid, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]))
{
turfsusid=t;
}
}
if(turfsusid!=-1)
{
format(stringut1,256,"[МЕСТОПОЛОЖЕНИЕ: %s] Местоположението му ще бъде показано на картата ви в червено!",TurfInfo[turfsusid][TurfName]);
}
else
{
format(stringut2,256,"[МЕСТОПОЛОЖЕНИЕ] Местоположението му ще бъде показано на картата ви в червено за 5 минути!");
}
for(new i=0; i<MAX_PLAYERS;i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pTeam]==13)
{
SendClientMessage(i,COLOR_RLSPD,stringut1);
SendClientMessage(i,COLOR_RLSPD,stringut2);
}
}
SendClientMessage(playerid,COLOR_RLSPD,"Вие изпратихте локацията си до полицията и те ще разследват случая.");
calls++;
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
callsmarker[calls]=CreateDynamicMapIcon(X[suspectid],Y[suspectid],Z[suspectid], 55, -1, -1, -1, -1, 300);
premahwanemarker[calls]=5*120;
PlayerInfo[playerid][pValcher]-=2;
markersuspect[suspectid]=5*120;
}
if(playertextid == PhoneGUI[playerid][41])//Camera
{
if(inselfie[playerid]==0)
{
new Float: Degree;
const Float: Radius = 1.4;
const Float: Speed2  = 1.25;
const Float: Height = 0.78;
inselfie[playerid]=1;
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
static Float: n1X, Float: n1Y;
if(Degree >= 360) Degree = 0;
Degree -= Speed2;
n1X = X[playerid] + Radius * floatcos(Degree, degrees);
n1Y = Y[playerid] + Radius * floatsin(Degree, degrees);
SetPlayerCameraPos(playerid, n1X, n1Y, Z[playerid] + Height);
SetPlayerCameraLookAt(playerid, X[playerid], Y[playerid], Z[playerid]+Height);
SetPlayerFacingAngle(playerid, Degree - 90.0);
TogglePlayerControllable(playerid,0);
ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
ApplyAnimation(playerid, "PED", "gang_gunstand", 4.1, 1, 1, 1, 1, 1, 1);
inselfie[playerid]=1;
SendClientMessage(playerid, 0x80BFFFFF, "iPhone: За да снимате, натиснете F8.");
SendClientMessage(playerid, 0x80BFFFFF, "iPhone: За да скриете камерата, натиснете отново Camera в менюто на вашия телефон.");
}
else
{
HideWholePhone(playerid);
ClearAnimations(playerid);
TogglePlayerControllable(playerid,true);
ClearAnimations(playerid);
SetCameraBehindPlayer(playerid);
ClearAnimations(playerid);
inselfie[playerid]=0;
HideWholePhone(playerid);
PhoneShow[playerid] = false;
PhoneLocked[playerid] = 0;
TogglePlayerControllable(playerid, 1);
CancelSelectTextDraw(playerid);
}
}
if(GetPVarInt(playerid, "skinc_active") == 0) return 0;
new curpage = GetPVarInt(playerid, "skinc_page");
if(playertextid == gNextButtonTextDrawId[playerid]) {
if(curpage < (GetNumberOfPages() - 1)) {
SetPVarInt(playerid, "skinc_page", curpage + 1);
ShowPlayerModelPreviews(playerid);
UpdatePageTextDraw(playerid);
PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
} else {
PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
}
return 1;
}
if(playertextid == gPrevButtonTextDrawId[playerid]) {
if(curpage > 0) {
SetPVarInt(playerid, "skinc_page", curpage - 1);
ShowPlayerModelPreviews(playerid);
UpdatePageTextDraw(playerid);
PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
} else {
PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
}
return 1;
}
new x=0;
while(x != SELECTION_ITEMS) {
if(playertextid == gSelectionItems[playerid][x]) {
HandlePlayerItemSelection(playerid, x);
PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
DestroySelectionMenu(playerid);
CancelSelectTextDraw(playerid);
SetPVarInt(playerid, "skinc_active", 0);
return 1;
}
x++;
}
return 1;
}
//============================================================
//--->>> Stocks
//============================================================
stock PhoneModeInit(playerid)
{
PhoneGUI[playerid][0] = CreatePlayerTextDraw(playerid,543.000000, 300.000000, "_");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][0], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][0], 1);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][0], 0.500000, 13.300001);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][0], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][0], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][0], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][0], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][0], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][0], 255);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][0], 621.000000, 0.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][0], 0);
PhoneGUI[playerid][1] = CreatePlayerTextDraw(playerid,534.000000, 238.000000, "LD_BEAT:chit");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][1], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][1], 4);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][1], 0.500000, 1.000000);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][1], 255);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][1], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][1], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][1], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][1], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][1], 255);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][1], 19.000000, 21.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][1], 0);
PhoneGUI[playerid][2] = CreatePlayerTextDraw(playerid,611.000000, 238.000000, "LD_BEAT:chit");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][2], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][2], 4);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][2], 0.500000, 1.000000);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][2], 255);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][2], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][2], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][2], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][2], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][2], 255);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][2], 19.000000, 21.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][2], 0);
PhoneGUI[playerid][3] = CreatePlayerTextDraw(playerid,611.000000, 404.000000, "LD_BEAT:chit");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][3], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][3], 4);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][3], 0.500000, 1.000000);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][3], 255);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][3], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][3], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][3], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][3], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][3], 255);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][3], 19.000000, 21.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][3], 0);
PhoneGUI[playerid][4] = CreatePlayerTextDraw(playerid,534.000000, 404.000000, "LD_BEAT:chit");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][4], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][4], 4);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][4], 0.500000, 1.000000);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][4], 255);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][4], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][4], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][4], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][4], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][4], 255);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][4], 19.000000, 21.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][4], 0);
PhoneGUI[playerid][5] = CreatePlayerTextDraw(playerid,539.000000, 248.000000, "_");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][5], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][5], 1);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][5], 0.500000, 18.400001);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][5], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][5], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][5], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][5], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][5], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][5], 255);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][5], 625.000000, 0.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][5], 0);
PhoneGUI[playerid][6] = CreatePlayerTextDraw(playerid,545.000000, 243.000000, "_");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][6], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][6], 1);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][6], 0.500000, 18.100000);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][6], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][6], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][6], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][6], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][6], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][6], 255);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][6], 619.000000, 1.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][6], 0);
PhoneGUI[playerid][7] = CreatePlayerTextDraw(playerid,542.000000, 246.000000, "ld_spac:backgnd");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][7], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][7], 4);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][7], 0.500000, 1.000000);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][7], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][7], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][7], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][7], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][7], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][7], 255);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][7], 80.000000, 148.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][7], 0);
PhoneGUI[playerid][27] = CreatePlayerTextDraw(playerid,550.000000, 349.000000, "Press ~h~~g~Y ~w~to unlock.");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][27], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][27], 1);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][27], 0.200000, 1.000000);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][27], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][27], 1);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][27], 1);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][27], 0);
PhoneGUI[playerid][28] = CreatePlayerTextDraw(playerid,624.000000, 350.000000, "_");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][28], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][28], 1);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][28], 0.500000, 0.799998);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][28], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][28], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][28], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][28], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][28], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][28], 102);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][28], 540.000000, 0.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][28], 0);
PhoneGUI[playerid][30] = CreatePlayerTextDraw(playerid,622.000000, 249.000000, "_");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][30], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][30], 1);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][30], 0.500000, 0.199998);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][30], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][30], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][30], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][30], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][30], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][30], -1);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][30], 617.000000, -1.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][30], 0);
PhoneGUI[playerid][31] = CreatePlayerTextDraw(playerid,547.000000, 276.000000, "Error:404 ~n~Page not found!");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][31], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][31], 2);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][31], 0.189998, 1.100000);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][31], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][31], 1);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][31], 1);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][31], 0);
PhoneGUI[playerid][32] = CreatePlayerTextDraw(playerid,616.000000, 250.000000, "_");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][32], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][32], 1);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][32], 0.500000, 0.099998);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][32], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][32], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][32], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][32], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][32], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][32], -1);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][32], 616.000000, -1.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][32], 0);
PhoneGUI[playerid][33] = CreatePlayerTextDraw(playerid,545.000000, 249.000000, "_");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][33], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][33], 1);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][33], 0.500000, 0.199998);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][33], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][33], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][33], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][33], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][33], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][33], 102);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][33], 554.000000, -1.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][33], 0);
PhoneGUI[playerid][34] = CreatePlayerTextDraw(playerid,545.000000, 249.000000, "_");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][34], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][34], 1);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][34], 0.500000, 0.199998);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][34], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][34], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][34], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][34], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][34], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][34], -1);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][34], 548.000000, -1.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][34], 0);
/*
PhoneGUI[playerid][26] = CreatePlayerTextDraw(playerid,542.000000, 246.000000, "LD_BEAT:square");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][36], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][36], 1);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][36], 0.200000, 1.000000);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][36], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][36], 1);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][36], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][36], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][36], 0);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][36], 8, 8.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][36], 1);
*/
PhoneGUI[playerid][35] = CreatePlayerTextDraw(playerid,580.000000, 456.000000, "ld_beat:square");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][35], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][35], 4);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][35], 0.500000, 1.000000);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][35], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][35], 0);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][35], 1);
PlayerTextDrawSetShadow(playerid,PhoneGUI[playerid][35], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][35], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][35], 255);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][35], 32.000000, 30.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][35], 0);
PhoneGUI[playerid][37] = CreatePlayerTextDraw(playerid,549.000000, 261.000000, "Police");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][37], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][37], 2);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][37], 0.209999, 1.100000);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][37], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][37], 1);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][37], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][37], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][37], 0);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][37], 571.000000, 10.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][37], 1);
PhoneGUI[playerid][41] = CreatePlayerTextDraw(playerid,549.000000, 274.000000, "Camera");
PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid][41], 255);
PlayerTextDrawFont(playerid,PhoneGUI[playerid][41], 2);
PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid][41], 0.209999, 1.100000);
PlayerTextDrawColor(playerid,PhoneGUI[playerid][41], -1);
PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid][41], 1);
PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid][41], 1);
PlayerTextDrawUseBox(playerid,PhoneGUI[playerid][41], 1);
PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid][41], 0);
PlayerTextDrawTextSize(playerid,PhoneGUI[playerid][41], 585.000000, 10.000000);
PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid][41], 1);
return 1;
}
stock ShowPlayerPhone(playerid)
{
PlayerTextDrawShow(playerid, PhoneGUI[playerid][0]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][1]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][2]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][3]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][4]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][5]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][6]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][7]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][8]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][9]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][10]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][11]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][12]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][13]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][14]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][15]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][16]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][17]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][18]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][19]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][20]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][21]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][22]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][23]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][24]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][25]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][26]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][27]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][28]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][29]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][30]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][32]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][33]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][34]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][43]);
return 1;
}
stock HidePlayerPhone(playerid)
{
PlayerTextDrawHide(playerid, PhoneGUI[playerid][0]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][1]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][2]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][3]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][4]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][5]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][6]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][7]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][8]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][9]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][10]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][11]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][12]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][13]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][14]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][15]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][16]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][17]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][18]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][19]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][20]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][21]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][22]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][23]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][24]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][25]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][26]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][27]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][28]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][29]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][31]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][30]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][32]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][33]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][34]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][43]);
return 1;
}
stock ShowPlayerPhoneMenu(playerid)
{
PlayerTextDrawHide(playerid, PhoneGUI[playerid][43]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][29]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][27]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][0]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][1]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][2]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][3]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][4]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][5]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][6]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][7]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][8]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][9]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][10]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][11]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][12]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][13]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][14]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][15]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][16]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][17]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][18]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][19]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][20]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][21]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][22]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][23]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][24]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][25]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][26]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][28]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][30]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][32]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][33]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][34]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][35]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][36]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][37]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][38]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][39]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][40]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][41]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][42]);
return 1;
}
stock HidePlayerPhoneMenu(playerid)
{
PlayerTextDrawHide(playerid, PhoneGUI[playerid][35]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][36]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][37]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][38]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][39]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][40]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][41]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][42]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][0]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][1]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][2]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][3]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][4]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][5]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][6]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][7]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][8]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][9]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][10]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][11]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][12]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][13]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][14]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][15]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][16]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][17]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][18]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][19]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][20]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][21]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][22]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][23]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][24]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][25]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][26]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][27]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][28]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][29]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][30]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][32]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][33]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][34]);
PlayerTextDrawShow(playerid, PhoneGUI[playerid][43]);
return 1;
}
stock HideWholePhone(playerid)
{
PlayerTextDrawHide(playerid, PhoneGUI[playerid][35]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][36]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][37]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][38]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][39]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][40]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][41]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][42]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][0]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][1]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][2]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][3]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][4]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][5]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][6]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][7]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][8]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][9]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][10]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][11]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][12]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][13]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][14]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][15]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][16]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][17]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][18]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][19]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][20]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][21]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][22]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][23]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][24]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][25]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][26]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][27]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][28]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][29]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][30]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][32]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][33]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][34]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][43]);
PlayerTextDrawHide(playerid, PhoneGUI[playerid][31]);
return 1;
}
//phone system - location - close
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
if(newkeys==131072)
{
if(IsPlayerInAnyVehicle(playerid) && driver[playerid]==1)
{
if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 481
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 509
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 510
&& GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
{
new string256[256];
format(string256,256,"{88C864}Багажник\n{88C864}Фарове\n{88C864}Аларма\n{88C864}Капак");
ShowPlayerDialog(playerid,DIALOG_VEHMENU,DIALOG_STYLE_LIST,"         ",string256,"Напред","Излез");
}
}
if(!IsPlayerInAnyVehicle(playerid))
{
if(PlayerInfo[playerid][pJail]>0 || PlayerInfo[playerid][pPJail]>0) return 1;
new string2230[512]; new string2230result[2230];
format(string2230,512,"{ff0000}Премахни движенията\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Смей се\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Огледай се\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Кръстосай ръце\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Гнуси се\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Псувай\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Разговаряй\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Танцувай ID 1\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Танцувай ID 2\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Танцувай ID 3\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,DIALOG_SELECT_ANIMATION,DIALOG_STYLE_LIST,"{FFFFFF}Движения {33aa33}на {ff0000}героя",string2230result,"{ffffff}Направи го","Отказ");
}
}
if(newkeys==16)
{
if(GetPlayerVehicleID(playerid)== ufoVehicle[0]
|| GetPlayerVehicleID(playerid)== ufoVehicle[1]
|| GetPlayerVehicleID(playerid)== ufoVehicle[2])
{
GetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]+5);
}
}
if(newkeys==16)
{
if(IsPlayerInRangeOfVehicle(playerid,ufoVehicle[0],4.5))
{
PutPlayerInVehicle(playerid, ufoVehicle[0], 0);
}
else if(IsPlayerInRangeOfVehicle(playerid,ufoVehicle[1],4.5))
{
PutPlayerInVehicle(playerid, ufoVehicle[1], 0);
}
else if(IsPlayerInRangeOfVehicle(playerid,ufoVehicle[2],4.5))
{
PutPlayerInVehicle(playerid, ufoVehicle[2], 0);
}
}
if(driver[playerid]>0)
{
new vehicleid=GetPlayerVehicleID(playerid);
if(newkeys & KEY_ANALOG_UP && VehicleInfo[vehicleid][vRadioChange]==0)
{
if(radioveh[vehicleid]<sizeof(radioAudioStreamNames))
{
PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
radioveh[vehicleid]++;
VehicleInfo[vehicleid][vRadioChange]=2;
}
else
{
PlayerPlaySound(playerid,1055,0.0,0.0,0.0);
}
}
else if(newkeys & KEY_ANALOG_DOWN && VehicleInfo[vehicleid][vRadioChange]==0)
{
if(radioveh[vehicleid]>0)
{
PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
radioveh[vehicleid]--;
VehicleInfo[vehicleid][vRadioChange]=2;
}
else
{
PlayerPlaySound(playerid,1055,0.0,0.0,0.0);
}
}
}//driver[playerid]>0 //>>> close
if(newkeys & KEY_YES)
{
if(driver[playerid]==1 && enteredgarage[playerid]==-5)
{
if(PlayerInfo[playerid][pVip]==6 || freevip==1)
{
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
new Float:zAngleVeh; GetVehicleZAngle(GetPlayerVehicleID(playerid), zAngleVeh);
SetVehiclePos(GetPlayerVehicleID(playerid),X[playerid],Y[playerid],Z[playerid]);
SetVehicleZAngle(GetPlayerVehicleID(playerid),zAngleVeh);
}
}
if(joinedincounter[playerid]==1)
{
if(policecs[playerid]==1)
{
PlayerInfo[playerid][pDefuse]=30*2;
}
}
else if(joinedincounter[playerid]==1)
{
if(bomber==playerid)
{
if(policecs[playerid]==0)
{
isvalidbomb=0;
SendClientMessageToAll(0x0092ffFF,"Counter Strike: Бомбата е поставена, тя ще гръмне след 2 минути!");
bombgurmi=2*120;
GetPlayerPos(playerid,X[playerid],Y[playerid],Z[playerid]);
bombataX=X[playerid];
bombataY=Y[playerid];
bombataZ=Z[playerid];
}
}
}
else if(IsPlayerInRangeOfPoint(playerid,3.0,2236.3701,1650.7100,1008.3594))
{
if(lottoopen>0)
{
ShowPlayerDialog(playerid,110,DIALOG_STYLE_LIST,"Стъпки","{0040FF}Една\n{0040FF}Две","Избери","");
}
}
else if(IsPlayerInRangeOfPoint(playerid,3.0,1723.3337,-1665.7500,20.2293))
{
if(opensdelka>0)
{
if(sdelkaselected==playerid)
{
ShowPlayerDialog(playerid,117,DIALOG_STYLE_LIST,"{00FF00}Кутии:","{FF0000}Номер 1\n{FF0000}Номер 2\n{FF0000}Номер 3\n{FF0000}Номер 4\n{FF0000}Номер 5\n{FF0000}Номер 6\n{FF0000}Номер 7\n{FF0000}Номер 8\n{FF0000}Номер 9","Избери","");
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"В момента играта 'Сделка или не' е затворена");
}
}
else if(IsPlayerInRangeOfPoint(playerid,5.0,2233.9548,1677.4158,1008.3594) && lotariqselected==playerid)
{
if(numberlotto!=-1)
{
if(openlottery>0)
{
ShowPlayerDialog(playerid,109,DIALOG_STYLE_LIST,"Колело","{0040FF}Нагоре\n{FF0000}Надолу","Избери","");
}
}
}
else if(joinedincounter[playerid]==1)
{
if(csroundtimer>0)
{
ShowPlayerDialog(playerid, 106, DIALOG_STYLE_LIST, "BUY MENU", "Health {$1000}\nArmour {$1500}\n9mm {$2000}\nSilence 9mm {$2500}\nDesert Eagle {$3000}\nShotgun {$5000}\nSawn-Off Shotgun {$6000}\nCombat Shotgun {$6500}\nMicro SMG {$3000}\nMP5 {$4000}\nTec-9 {$5500}\nAK-47 {$4500}\nM4 {$6000}\nCountry Rifle {$6500}\nSniper Rifle {$7000}", "Купи", "Откажи");
}
}
else if(IsPlayerInRangeOfPoint(playerid, 2, 258.5221,77.5805,1003.6406))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на San Andreas Police Department!");
return 1;
}
if(PlayerInfo[playerid][pRank]<2)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно голям ранг за да си купите щит!");
return 1;
}
if(PlayerInfo[playerid][pCash]<500)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно пари за да си купите щит!");
return 1;
}
if(shield[playerid]>0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вашият щит е все-още здрав!");
return 1;
}
SendClientMessage(playerid,0xB8860BFF,"Щитът ще ви предпазва от куршуми!");
shield[playerid]=100;
SetPlayerAttachedObject(playerid, 6, 18637, 13, 0.35, 0.0,  0.0,  0.0,   0.0, 180.0);
GivePlayerCash(playerid,-500);
}
else if(IsPlayerInRangeOfPoint(playerid, 2, 253.2789,78.0299,1003.6406))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на San Andreas Police Department!");
return 1;
}
if(PlayerInfo[playerid][pRank]<3)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно голям ранг за да си купите шипове!");
return 1;
}
if(PlayerInfo[playerid][pCash]<5000)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно пари за да си купите шипове!");
return 1;
}
if(spikes[playerid]==1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да си купите повече от една преграда!");
return 1;
}
if(PlayerInfo[playerid][pADuty]==1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да не си ADMIN ON-DUTY!");
return 1;
}
SendClientMessage(playerid,0xB8860BFF,"Вие купихте шипове за пукане на гуми, поставете ги чрез /spikes!");
SendClientMessage(playerid,0xB8860BFF,"За да си ги вземете обратно, напишете /getspikes!");
spikes[playerid]=1;
GivePlayerCash(playerid,-5000);
}
else if(IsPlayerInRangeOfPoint(playerid, 5, 252.6609,62.8114,1003.6406))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на San Andreas Police Department!");
return 1;
}
if(PlayerInfo[playerid][pRank]<4)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно голям ранг за да си купите електрошок!");
return 1;
}
if(PlayerInfo[playerid][pCash]<15000)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно пари за да си купите електрошок!");
return 1;
}
if(electro[playerid]==1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да си купите повече от един изстрел за електрошока!");
return 1;
}
if(PlayerInfo[playerid][pADuty]==1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да не си ADMIN ON-DUTY!");
return 1;
}
SendClientMessage(playerid,0xB8860BFF,"Вие си купихте електрошок, използвайте оръжието което получихте за да неутрализирате враг!");
SendClientMessage(playerid,0xB8860BFF,"Електрошокът е пистолет със заглушител!");
GivePlayerWeapon(playerid, 23, 100);
electro[playerid]=1;
GivePlayerCash(playerid,-15000);
}
else if(PhoneShow[playerid] == true && PhoneLocked[playerid] == 1)
{
ShowPlayerPhoneMenu(playerid);
SelectTextDraw(playerid, 0xFFD900FF);
PhoneLocked[playerid] = 2;
}
if(IsPlayerInRangeOfPoint(playerid,13.0,206.7556,37.1011,1068.5050))
{
if(driver[playerid] == 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в личното си превозно средство като шофьор!");
return 1;
}
ShowPlayerDialog(playerid,85,DIALOG_STYLE_LIST,"Части","{FFFFFF}Наместване\nНов обект","Избери","Излезте");
}
else if(enteredgarage[playerid]==-5)
{
new countcars=0;
new nextid=0;
for(new i2=0; i2<8; i2++)
{
if(IsPlayerInRangeOfVehicle(playerid,ordervehicles2[952][i2],4.0) && ordervehicle[ordervehicles2[952][i2]]==1)
{
countcars++;
if(countcars>1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Доближете се само до едно превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pMission]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да минете първата мисия, за да си купите превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pLevel]<orderlevel[952][i2])
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно репутация за да си поръчате това превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pCash]<orderprice[952][i2])
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно пари за да си поръчате това превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pTeam]!=6)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на Vinewood Cripz за да си поръчваш превозни средства от тук!");
return 1;
}
if(PlayerInfo[playerid][pAdmin]>=5)
{
if(PlayerInfo[playerid][pPrivateVehs]>7)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече достигнахте вашия ADMIN OWNER лимит за лични превозни средства.");
return 1;
}
}
else
{
if(PlayerInfo[playerid][pPrivateVehs]>=4)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече достигнахте вашия лимит за лични превозни средства.");
return 1;
}
}
if(nextid>=2 &&  nextid<=5 && PlayerInfo[playerid][pLevel]<=3 && PlayerInfo[playerid][pLevel]<=10)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=5 &&  nextid<=7 && PlayerInfo[playerid][pLevel]<=10 && PlayerInfo[playerid][pLevel]<=15)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=8 &&  nextid<=9 && PlayerInfo[playerid][pLevel]<=15 && PlayerInfo[playerid][pLevel]<=25)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=9 &&  nextid<=12 && PlayerInfo[playerid][pLevel]<=25 && PlayerInfo[playerid][pLevel]<=35)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=12 &&  nextid<=14 && PlayerInfo[playerid][pLevel]<=35 && PlayerInfo[playerid][pLevel]<=50)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(availableStore>0) return SendClientMessage(playerid,COLOR_GRAD1,"Магазинът в момента не приема поръчки, подайте я малко по-късно. Приятен ден.");
new VehIDPuruchase=ordervehicles2[951][i2];
myprivateid[playerid]=maximumPrivateVehsID;
privatecarC1[maximumPrivateVehsID]=1;
privatecarlocked[maximumPrivateVehsID]=1;
privatecarC2[maximumPrivateVehsID]=1;
format(privatecarowner[maximumPrivateVehsID],40,"%s",pname[playerid]);
privatecarID[maximumPrivateVehsID]=GetVehicleModel(VehIDPuruchase);
ShowPlayerDialog(playerid, 82, DIALOG_STYLE_LIST, "Цвят", "Черен\nБял\nСин\nЖълт\nЗелен\nЧервен", "Избери", "Изход");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"- Честито, вие си поръчахте чисто ново превозно средство, изберете си цвят -");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"- Ако желаете да му сложите неон или специални екстри, то го тунинговайте в гараж -");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"Пуснете си го, чрез /myveh, за да го паркирате напишете /park");
GivePlayerCash(playerid,-orderprice[951][i2]);
PlayerInfo[playerid][pPrivateVehs]+=1;
maximumPrivateVehsID++;
}
}
for(new i2=0; i2<8; i2++)
{
if(IsPlayerInRangeOfVehicle(playerid,ordervehicles2[951][i2],4.0))
{
countcars++;
if(countcars>1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Доближете се само до едно превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pMission]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да минете първата мисия, за да си купите превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pLevel]<orderlevel[951][i2])
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно репутация за да си поръчате това превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pCash]<orderprice[951][i2])
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно пари за да си поръчате това превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pTeam]!=2)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на Grove Street Families за да си поръчваш превозни средства от тук!");
return 1;
}
if(PlayerInfo[playerid][pPrivateVehs]>7)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече достигнахте лимита от 4 превозни средства.");
return 1;
}
if(nextid>=2 &&  nextid<=5 && PlayerInfo[playerid][pLevel]<=3 && PlayerInfo[playerid][pLevel]<=10)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=5 &&  nextid<=7 && PlayerInfo[playerid][pLevel]<=10 && PlayerInfo[playerid][pLevel]<=15)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=8 &&  nextid<=9 && PlayerInfo[playerid][pLevel]<=15 && PlayerInfo[playerid][pLevel]<=25)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=9 &&  nextid<=12 && PlayerInfo[playerid][pLevel]<=25 && PlayerInfo[playerid][pLevel]<=35)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=12 &&  nextid<=14 && PlayerInfo[playerid][pLevel]<=35 && PlayerInfo[playerid][pLevel]<=50)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(availableStore>0) return SendClientMessage(playerid,COLOR_GRAD1,"Магазинът в момента не приема поръчки, подайте я малко по-късно. Приятен ден.");
new VehIDPuruchase=ordervehicles2[951][i2];
myprivateid[playerid]=maximumPrivateVehsID;
privatecarC1[maximumPrivateVehsID]=1;
privatecarlocked[maximumPrivateVehsID]=1;
privatecarC2[maximumPrivateVehsID]=1;
format(privatecarowner[maximumPrivateVehsID],40,"%s",pname[playerid]);
privatecarID[maximumPrivateVehsID]=GetVehicleModel(VehIDPuruchase);
ShowPlayerDialog(playerid, 82, DIALOG_STYLE_LIST, "Цвят", "Черен\nБял\nСин\nЖълт\nЗелен\nЧервен", "Избери", "Изход");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"- Честито, вие си поръчахте чисто ново превозно средство, изберете си цвят -");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"- Ако желаете да му сложите неон или специални екстри, то го тунинговайте в гараж -");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"Пуснете си го, чрез /myveh, за да го паркирате напишете /park");
GivePlayerCash(playerid,-orderprice[951][i2]);
PlayerInfo[playerid][pPrivateVehs]+=1;
maximumPrivateVehsID++;
}
}
for(new i2=0; i2<8; i2++)
{
if(IsPlayerInRangeOfVehicle(playerid,ordervehicles2[950][i2],4.0))
{
countcars++;
if(countcars>1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Доближете се само до едно превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pMission]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да минете първата мисия, за да си купите превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pLevel]<orderlevel[950][i2])
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно репутация за да си поръчате това превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pCash]<orderprice[950][i2])
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно пари за да си поръчате това превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pTeam]!=1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на VIP за да си поръчваш превозни средства от тук!");
return 1;
}
if(PlayerInfo[playerid][pPrivateVehs]>7)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече достигнахте лимита от 4 превозни средства.");
return 1;
}
if(nextid>=2 &&  nextid<=5 && PlayerInfo[playerid][pLevel]<=3 && PlayerInfo[playerid][pLevel]<=10)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=5 &&  nextid<=7 && PlayerInfo[playerid][pLevel]<=10 && PlayerInfo[playerid][pLevel]<=15)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=8 &&  nextid<=9 && PlayerInfo[playerid][pLevel]<=15 && PlayerInfo[playerid][pLevel]<=25)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=9 &&  nextid<=12 && PlayerInfo[playerid][pLevel]<=25 && PlayerInfo[playerid][pLevel]<=35)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=12 &&  nextid<=14 && PlayerInfo[playerid][pLevel]<=35 && PlayerInfo[playerid][pLevel]<=50)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(availableStore>0) return SendClientMessage(playerid,COLOR_GRAD1,"Магазинът в момента не приема поръчки, подайте я малко по-късно. Приятен ден.");
new VehIDPuruchase=ordervehicles2[950][i2];
myprivateid[playerid]=maximumPrivateVehsID;
privatecarC1[maximumPrivateVehsID]=1;
privatecarlocked[maximumPrivateVehsID]=1;
privatecarC2[maximumPrivateVehsID]=1;
format(privatecarowner[maximumPrivateVehsID],40,"%s",pname[playerid]);
privatecarID[maximumPrivateVehsID]=GetVehicleModel(VehIDPuruchase);
printf("%d",VehIDPuruchase);
printf("%d = ? privatecarID: %d",GetVehicleModel(VehIDPuruchase),privatecarID[maximumPrivateVehsID]);
ShowPlayerDialog(playerid, 82, DIALOG_STYLE_LIST, "Цвят", "Черен\nБял\nСин\nЖълт\nЗелен\nЧервен", "Избери", "Изход");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"- Честито, вие си поръчахте чисто ново превозно средство, изберете си цвят -");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"- Ако желаете да му сложите неон или специални екстри, то го тунинговайте в гараж -");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"Пуснете си го, чрез /myveh, за да го паркирате напишете /park");
GivePlayerCash(playerid,-orderprice[950][i2]);
PlayerInfo[playerid][pPrivateVehs]+=1;
maximumPrivateVehsID++;
}
}
}
else if(IsPlayerInRangeOfPoint(playerid,50.0,-1427.7009,1090.6588,1040.7969) && GetPlayerInterior(playerid)==15)
{
new countcars=0;
new nextid=0;
for(new i2=0; i2<8; i2++)
{
if(IsPlayerInRangeOfVehicle(playerid,ordervehicles2[enteredgarage[playerid]][i2],4.0))
{
countcars++;
if(countcars>1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Доближете се само до едно превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pMission]==0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да минете първата мисия, за да си купите превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pLevel]<orderlevel[enteredgarage[playerid]][i2])
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно репутация за да си поръчате това превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pCash]<orderprice[enteredgarage[playerid]][i2])
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате достатъчно пари за да си поръчате това превозно средство!");
return 1;
}
if(PlayerInfo[playerid][pPrivateVehs]>7)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече достигнахте лимита от 4 превозни средства.");
return 1;
}
if(nextid>=2 &&  nextid<=5 && PlayerInfo[playerid][pLevel]<=3 && PlayerInfo[playerid][pLevel]<=10)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=5 &&  nextid<=7 && PlayerInfo[playerid][pLevel]<=10 && PlayerInfo[playerid][pLevel]<=15)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=8 &&  nextid<=9 && PlayerInfo[playerid][pLevel]<=15 && PlayerInfo[playerid][pLevel]<=25)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=9 &&  nextid<=12 && PlayerInfo[playerid][pLevel]<=25 && PlayerInfo[playerid][pLevel]<=35)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(nextid>=12 &&  nextid<=14 && PlayerInfo[playerid][pLevel]<=35 && PlayerInfo[playerid][pLevel]<=50)
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямате достатъчно репутация за да си купите още едно превозно средство.");
return 1;
}
if(availableStore>0) return SendClientMessage(playerid,COLOR_GRAD1,"Магазинът в момента не приема поръчки, подайте я малко по-късно. Приятен ден.");
new VehIDPuruchase=ordervehicles2[enteredgarage[playerid]][i2];
myprivateid[playerid]=maximumPrivateVehsID;
privatecarC1[maximumPrivateVehsID]=1;
privatecarlocked[maximumPrivateVehsID]=1;
privatecarC2[maximumPrivateVehsID]=1;
format(privatecarowner[maximumPrivateVehsID],40,"%s",pname[playerid]);
privatecarID[maximumPrivateVehsID]=GetVehicleModel(VehIDPuruchase);
ShowPlayerDialog(playerid, 82, DIALOG_STYLE_LIST, "Цвят", "Черен\nБял\nСин\nЖълт\nЗелен\nЧервен", "Избери", "Изход");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"- Честито, вие си поръчахте чисто ново превозно средство, изберете си цвят -");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"- Ако желаете да му сложите неон или специални екстри, то го тунинговайте в гараж -");
SendClientMessage(playerid,COLOR_PRIVATEVEH,"Пуснете си го отвън, чрез /myveh, за да го паркирате напишете /park");
GivePlayerCash(playerid,-orderprice[enteredgarage[playerid]][i2]);
PlayerInfo[playerid][pPrivateVehs]+=1;
maximumPrivateVehsID++;
}
}
}
if(enteredap[playerid]!=-1)
{
if(IsPlayerInRangeOfPoint(playerid, 4, 2571.0122,573.5831,41.3469) && GetPlayerInterior(playerid)==2)
{
new FloorNames[2100];
for(new i=1; i<=ApartmentInfo[enteredap[playerid]][aFloors];i++)
{
new stringfloor[256];
format(stringfloor,256,"{00ff00}%d {ffffff}етаж\n",i);
strcat(FloorNames, stringfloor);
}
ShowPlayerDialog(playerid, 81, DIALOG_STYLE_LIST, ApartmentInfo[enteredap[playerid]][aName], FloorNames, "Избери", "Изход");
}
}
else if(IsPlayerInRangeOfPoint(playerid, 3, 1539.162475, -1613.974609, 13.134112)
|| IsPlayerInRangeOfPoint(playerid, 3,387.170196, -1827.512084, 7.415833)
|| IsPlayerInRangeOfPoint(playerid, 3, 378.918457, -2060.627929, 7.453046)
|| IsPlayerInRangeOfPoint(playerid, 3, 672.134521, -503.247589, 15.964093)
|| IsPlayerInRangeOfPoint(playerid, 3, 2490.404541, 923.318664, 10.840134)
|| IsPlayerInRangeOfPoint(playerid, 3, 2181.033691, 2462.734130, 10.424777)
|| IsPlayerInRangeOfPoint(playerid, 3, -174.470657, 1138.796386, 19.313276)
|| IsPlayerInRangeOfPoint(playerid, 3, -1486.528686, 2583.155517, 55.317409)
|| IsPlayerInRangeOfPoint(playerid, 3, -2492.394775, 2366.457519, 9.587511)
|| IsPlayerInRangeOfPoint(playerid, 3, 1239.006103, -2041.014038, 59.432590)
|| IsPlayerInRangeOfPoint(playerid, 3, 210.3416,1808.8025,21.8672)
|| IsPlayerInRangeOfPoint(playerid, 3, 2194.2756,1986.2014,12.2969)
|| IsPlayerInRangeOfPoint(playerid, 3, 398.4085,-1805.4634,7.8379)
|| IsPlayerInRangeOfPoint(playerid, 3, 256.7464,70.0793,1003.6406)
|| IsPlayerInRangeOfPoint(playerid, 3, 142.7404,1381.5952,1088.3672)
|| IsPlayerInRangeOfPoint(playerid, 3, 2491.4697,-1697.2418,1014.7531) && GetPlayerVirtualWorld(playerid)==1
|| IsPlayerInRangeOfPoint(playerid, 3, 884.3392,-2255.4385,12.8527) && GetPlayerVirtualWorld(playerid)==0
|| IsPlayerInRangeOfPoint(playerid, 3, 2088.5652,1285.0544,10.8128) || IsPlayerInRangeOfPoint(playerid, 3, 1940.9657,764.1401,10.8203) || IsPlayerInRangeOfPoint(playerid, 3, 369.4242,-1352.7485,14.5682)
|| IsPlayerInRangeOfPoint(playerid, 3, 512.8521,-1552.2284,16.4595) || IsPlayerInRangeOfPoint(playerid, 3, 828.5903,-1386.0410,13.5804) || IsPlayerInRangeOfPoint(playerid, 3, 646.4356,-1764.3721,12.9817)
|| IsPlayerInRangeOfPoint(playerid, 3, 2498.6228,-1759.1406,13.5243) || IsPlayerInRangeOfPoint(playerid, 3, 1832.2898,-1837.7346,13.5781) || IsPlayerInRangeOfPoint(playerid, 3, 1346.1368,-1758.5430,13.5156))
{
ShowPlayerDialog(playerid, 5, DIALOG_STYLE_LIST, "Банкомат", "Обща сума\nИзтегли пари\nПлати нарушение", "Избери", "Назад");
}
else if(IsPlayerInRangeOfPoint(playerid,4.0,2033.8187,1334.7651,10.8203))
{
ShowPlayerDialog(playerid, 80, DIALOG_STYLE_LIST, "Лотария", "Лотария на момента\nВечерна лотария", "Избери", "Затвори");
}
else if(IsPlayerInRangeOfPoint(playerid,4.0,2079.3628,938.8993,9.8557))
{
ShowPlayerDialog(playerid, 80, DIALOG_STYLE_LIST, "Лотария", "Лотария на момента\nВечерна лотария", "Избери", "Затвори");
}
else if(IsPlayerInRangeOfPoint(playerid,4.0,2245.7480,2407.6499,10.8203))
{
ShowPlayerDialog(playerid, 80, DIALOG_STYLE_LIST, "Лотария", "Лотария на момента\nВечерна лотария", "Избери", "Затвори");
}
else if(IsPlayerInRangeOfPoint(playerid,4.0,1537.0028,-1722.1549,13.5469))
{
ShowPlayerDialog(playerid, 80, DIALOG_STYLE_LIST, "Лотария", "Лотария на момента\nВечерна лотария", "Избери", "Затвори");
}
}
if(newkeys & 4)
{
if(inevent[playerid]==1 && efight==0)
{
if(PlayerInfo[playerid][pEvent]==0)
{
SetPlayerHealth(playerid,0);
}
}
if(enabledramp[playerid]==1)
{
if(GetPlayerVehicleID(playerid)>0)
{
new Float:XX; new Float: YY; new Float: ZZ; new Float:AA;
GetVehicleZAngle(GetPlayerVehicleID(playerid), AA);
GetVehiclePos(GetPlayerVehicleID(playerid),XX,YY,ZZ);
GetPosInFrontOfPoint(XX, YY, AA, 15.0);
DestroyDynamicObject(rampobject[playerid]);
rampobject[playerid] = CreateDynamicObject(1655, XX,YY,ZZ-0.2, 0.0, 0.0 ,AA, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
}
}
if(enabledramp[playerid]==2)
{
if(GetPlayerVehicleID(playerid)>0)
{
new Float:XX; new Float: YY; new Float: ZZ; new Float:AA;
GetVehicleZAngle(GetPlayerVehicleID(playerid), AA);
GetVehiclePos(GetPlayerVehicleID(playerid),XX,YY,ZZ);
GetPosInFrontOfPoint(XX, YY, AA, 15.0);
DestroyDynamicObject(rampobject[playerid]);
rampobject[playerid] = CreateDynamicObject(1634, XX,YY,ZZ-0.2, 0.0, 0.0 ,AA, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
}
}
if(enabledramp[playerid]==3)
{
if(GetPlayerVehicleID(playerid)>0)
{
new Float:XX; new Float: YY; new Float: ZZ; new Float:AA;
GetVehicleZAngle(GetPlayerVehicleID(playerid), AA);
GetVehiclePos(GetPlayerVehicleID(playerid),XX,YY,ZZ);
GetPosInFrontOfPoint(XX, YY, AA, 15.0);
DestroyDynamicObject(rampobject[playerid]);
rampobject[playerid] = CreateDynamicObject(1631, XX,YY,ZZ-0.2, 0.0, 0.0 ,AA, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
}
}
if(enabledramp[playerid]==4)
{
if(GetPlayerVehicleID(playerid)>0)
{
new Float:XX; new Float: YY; new Float: ZZ; new Float:AA;
GetVehicleZAngle(GetPlayerVehicleID(playerid), AA);
GetVehiclePos(GetPlayerVehicleID(playerid),XX,YY,ZZ);
GetPosInFrontOfPoint(XX, YY, AA, 15.0);
DestroyDynamicObject(rampobject[playerid]);
rampobject[playerid] = CreateDynamicObject(8302, XX,YY,ZZ-0.2, 0.0, 0.0 ,AA, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
}
}
if(enabledramp[playerid]==5)
{
if(GetPlayerVehicleID(playerid)>0)
{
new Float:XX; new Float: YY; new Float: ZZ; new Float:AA;
GetVehicleZAngle(GetPlayerVehicleID(playerid), AA);
GetVehiclePos(GetPlayerVehicleID(playerid),XX,YY,ZZ);
GetPosInFrontOfPoint(XX, YY, AA, 15.0);
DestroyDynamicObject(rampobject[playerid]);
rampobject[playerid] = CreateDynamicObject(1503, XX,YY,ZZ-0.2, 0.0, 0.0 ,AA, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
}
}
//CreateDynamicObject(modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 300.0);
}
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0,1047.5492,1006.7177,11.0000) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
if(openlottery==0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да шоуто да е отворено!");
SetPlayerInterior(playerid,1);
SetPlayerVirtualWorld(playerid,1);
SetPlayerPos(playerid,2233.7991,1714.6870,1012.3828);
SetPlayerFacingAngle(playerid,90.9424);
SetCameraBehindPlayer(playerid);
}
else   	if(IsPlayerInRangeOfPoint(playerid, 3.0,2233.7991,1714.6870,1012.3828) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 1)
{
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,0);
SetPlayerPos(playerid,1047.5492,1006.7177,11.0000);
SetPlayerFacingAngle(playerid,90.9424);
SetCameraBehindPlayer(playerid);
}
if(IsPlayerInRangeOfPoint(playerid, 3.0,1419.1731,-1615.2067,13.5395) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
{
if(opensdelka==0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да шоуто да е отворено!");
SetPlayerPos(playerid,1727.1481,-1638.8367,20.2234);
SetPlayerInterior(playerid,18);
SetPlayerVirtualWorld(playerid,1);
SetPlayerFacingAngle(playerid,90.9424);
SetCameraBehindPlayer(playerid);
}
else   	if(IsPlayerInRangeOfPoint(playerid, 3.0,1727.1481,-1638.8367,20.2234) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 18)
{
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,0);
SetPlayerPos(playerid,1419.1731,-1615.2067,13.5395);
SetPlayerFacingAngle(playerid,90.9424);
SetCameraBehindPlayer(playerid);
}
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>
/*if(IsPlayerInRangeOfPoint(playerid, 4.0, 237.1826,-1823.5160,4.1039))
{
if(balloonGone==false)
{
ActivateBalloon(objectBalloon,  237.08794, -1823.41284, 178.03970);
SendClientMessage(playerid,0x33AA33FF,"Балонът потегли. До няколко минути, след като приключи пътуването, ще се върне пак тук.");
balloonGone=true;
}
}*/
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//stock TeleportTo(playerid,TEAM,Float:pos1x,Float:pos1y,Float:pos1z,Float:pos2x,Float:pos2y,Float:pos2z,virtualworld,interior,bvw,bint)
TeleportTo(playerid,1,1230.0413,-2032.9204,63.1250,     PilotJob,0,0,0,0);
TeleportTo(playerid,1,1229.7527,-2041.2668,63.1250,     Fishing,0,0,0,0);
TeleportTo(playerid,1,1249.9390,-2003.0155,59.8920,     SweeperJob,0,0,0,0);
TeleportTo(playerid,1,1252.6222,-2003.0173,59.8055,     CoalmineJob,0,0,0,0);
TeleportTo(playerid,1,1262.8815,-2003.0593,59.4757,     LotteryShow,0,0,0,0);
TeleportTo(playerid,1,1265.7859,-2003.0634,59.3821,     PizzaJob,0,0,0,0);
TeleportTo(playerid,1,1276.3033,-2003.1194,59.0443,     BusJob,0,0,0,0);
TeleportTo(playerid,1,1279.8812,-2003.1205,58.9289,     TaxiJob,0,0,0,0);
TeleportTo(playerid,1,1246.4418,-2061.7073,59.9934,     DeliverJob,0,0,0,0);
TeleportTo(playerid,15,211.6035,1814.6014,17.6406,     882.4497,-2257.9644,12.8527,0,0,0,0);
TeleportTo(playerid,15,882.4497,-2257.9644,12.8527,     211.6035,1814.6014,17.6406,0,0,0,0);
TeleportTo(playerid,15,-2450.7051,505.0456,30.0820,     215.1642,1814.8489,17.6406,0,0,0,0);
TeleportTo(playerid,15,215.1642,1814.8489,17.6406,     -2450.7051,505.0456,30.0820,0,0,0,0);
TeleportTo(playerid,15,879.4335,-2257.6353,12.8527,     -2453.3984,505.0079,30.0804,0,0,0,0);
TeleportTo(playerid,15,-2453.3984,505.0079,30.0804,     879.4335,-2257.6353,12.8527,0,0,0,0);
TeleportTo(playerid,1,PilotJob,     1230.0413,-2032.9204,63.1250,0,0,0,0);
TeleportTo(playerid,1,Fishing,     1229.7527,-2041.2668,63.1250,0,0,0,0);
TeleportTo(playerid,1,SweeperJob,     1249.9390,-2003.0155,59.8920,0,0,0,0);
TeleportTo(playerid,1,CoalmineJob,     1252.6222,-2003.0173,59.8055,0,0,0,0);
TeleportTo(playerid,1,LotteryShow,     1262.8815,-2003.0593,59.4757,0,0,0,0);
TeleportTo(playerid,1,PizzaJob,     1265.7859,-2003.0634,59.3821,0,0,0,0);
TeleportTo(playerid,1,BusJob,     1276.3033,-2003.1194,59.0443,0,0,0,0);
TeleportTo(playerid,1,TaxiJob,     1279.8812,-2003.1205,58.9289,0,0,0,0);
TeleportTo(playerid,1,DeliverJob,     1246.4418,-2061.7073,59.9934,0,0,0,0);
TeleportTo(playerid,2,2491.7954,-1710.7678,1014.7422,     2818.5259,2140.8853,14.6615,0,0,1,3);
TeleportTo(playerid,2,2818.5259,2140.8853,14.6615,     2491.7954,-1710.7678,1014.7422,1,3,0,0);
TeleportTo(playerid,13,246.7372,63.0483,1003.6406,    1555.2531,-1675.6143,16.1953,0,0,1,6);
TeleportTo(playerid,13,246.4561,88.0090,1003.6406,    -1605.5037,710.2720,13.8672,0,0,1,6);
TeleportTo(playerid,13,242.9772,66.3348,1003.6406,    2287.1206,2432.2830,10.8203,0,0,1,6);
TeleportTo(playerid,13,-1605.5037,710.2720,13.8672,    246.5928,87.8075,1003.6406,1,6,0,0);
TeleportTo(playerid,13,1555.2531,-1675.6143,16.1953,    246.6557,65.1160,1003.6406,1,6,0,0);
TeleportTo(playerid,13,2287.1206,2432.2830,10.8203,    242.9772,66.3348,1003.6406,1,6,0,0);
TeleportTo(playerid,12,691.5796,-1275.8766,13.5607,    1261.3009,-785.4238,1091.9063,2,5,0,0);
TeleportTo(playerid,12,1261.3009,-785.4238,1091.9063,    691.5796,-1275.8766,13.5607,0,0,2,5);
TeleportTo(playerid,21,1259.6387,-785.5069,92.0313,    1261.3009,-785.4238,1091.9063,1,5,0,0);
TeleportTo(playerid,21,1261.3009,-785.4238,1091.9063,    1259.6387,-785.5069,92.0313,0,0,1,5);
TeleportTo(playerid,6,140.2198,1365.9974,1083.8594,    300.2113,-1154.4961,81.3665,0,0,1,5);
TeleportTo(playerid,6,300.2113,-1154.4961,81.3665,    140.1744,1366.1003,1083.8594,1,5,0,0);
TeleportTo(playerid,6,-2396.5078,1132.7018,55.7333,    134.6402,1371.5256,1083.8650,1,5,0,0);
TeleportTo(playerid,6,134.6402,1371.5256,1083.8650,    -2396.5078,1132.7018,55.7333,0,0,1,5);
TeleportTo(playerid,3,2146.7976,-1470.4761,26.0426,    318.5974,1115.6239,1083.8828,1,5,0,0);
TeleportTo(playerid,3,318.5974,1115.6239,1083.8828,    2146.7976,-1470.4761,26.0426,0,0,1,5);
TeleportTo(playerid,16,-1754.2659,964.0753,24.8906,    2324.4341,-1149.4835,1050.7101,1,12,0,0);
TeleportTo(playerid,16,2324.4341,-1149.4835,1050.7101,    -1754.2659,964.0753,24.8906,0,0,1,12);
TeleportTo(playerid,19,1083.0112,-1226.7196,15.8203,    1416.6842,3.6414,1000.9269,3,1,0,0);
TeleportTo(playerid,19,1416.6842,3.6414,1000.9269,    1083.0112,-1226.7196,15.8203,0,0,3,1);
TeleportTo(playerid,17,2595.7300,2790.6204,10.8203,    1416.6842,3.6414,1000.9269,2,1,0,0);
TeleportTo(playerid,17,1416.6842,3.6414,1000.9269,    2595.7300,2790.6204,10.8203,0,0,2,1);
TeleportTo(playerid,6,134.6400,1379.8944,1088.3672,    1416.6842,3.6414,1000.9269,6,1,1,5);
TeleportTo(playerid,6,1416.6842,3.6414,1000.9269,    134.6400,1379.8944,1088.3672,1,5,6,1);
TeleportTo(playerid,13,238.0065,72.9034,1005.0391,    1416.6842,3.6414,1000.9269,5,1,1,6);
TeleportTo(playerid,13,1416.6842,3.6414,1000.9269,    238.0065,72.9034,1005.0391,1,6,5,1);
TeleportTo(playerid,8,966.2453,2160.7446,10.8203,    1416.6842,3.6414,1000.9269,8,1,0,0);
TeleportTo(playerid,8,1416.6842,3.6414,1000.9269,    966.2453,2160.7446,10.8203,0,0,8,1);
TeleportTo(playerid,2,1416.6842,3.6414,1000.9269,    2490.5693,-1699.8517,1014.7422,1,3,7,1);
TeleportTo(playerid,2,2490.5693,-1699.8517,1014.7422,    1416.6842,3.6414,1000.9269,7,1,1,3);
TeleportTo(playerid,21,1260.7024,-781.2197,1091.9063,    1416.6842,3.6414,1000.9269,4,1,1,5);
TeleportTo(playerid,21,1416.6842,3.6414,1000.9269,    1260.7024,-781.2197,1091.9063,1,5,4,1);
TeleportTo(playerid,18,2496.049804,-1695.238159,1014.742187,    1733.4287,2814.9548,14.2735,0,0,2,3);
TeleportTo(playerid,18,1733.4287,2814.9548,14.2735,    2496.049804,-1695.238159,1014.742187,2,3,0,0);
TeleportTo(playerid,2,2496.049804,-1695.238159,1014.742187,    2495.3496,-1690.8401,14.7656,0,0,1,3);
TeleportTo(playerid,2,2495.3496,-1690.8401,14.7656,    2496.049804,-1695.238159,1014.742187,1,3,0,0);
TeleportTo(playerid,15,279.1491,1833.1394,18.0874,    -2250.2004,2344.7747,4.9807,0,0,0,0);
if(IsPlayerInRangeOfPoint(playerid,25.0,2022.0209,2235.1313,2103.9536) && GetPlayerInterior(playerid)==98)
{
SetPlayerInterior(playerid,0);
new Float:vehx,Float:vehy,Float:vehz;
new vehicleto=GetPlayerVirtualWorld(playerid);
SetPlayerVirtualWorld(playerid,GetVehicleVirtualWorld(vehicleto));
GetVehiclePos(vehicleto,vehx,vehy,vehz);
SetPlayerInterior(playerid,0);
SetPlayerPos(playerid,vehx-2,vehy,vehz);
}
if(IsPlayerInRangeOfPoint(playerid,1.0,2176.9324,1990.1615,10.8203))
{
if(GetPlayerVirtualWorld(playerid)==0)
{
SendClientMessage(playerid,0xC600C6FF,"Ти беше прехвърлен в другия Virtual World!");
return SetPlayerVirtualWorld(playerid,1);
}
if(GetPlayerVirtualWorld(playerid)==1)
{
SendClientMessage(playerid,0xC600C6FF,"Ти се върна в главния Virtual World!");
return SetPlayerVirtualWorld(playerid,0);
}
}
if(inevent[playerid]==1 && eenter==0)
{
if(PlayerInfo[playerid][pEvent]==0)
{
SetPlayerHealth(playerid,0);
}
}
}
if(newkeys & KEY_SUBMISSION)
{
if(IsPlayerInAnyVehicle(playerid))
{
new Float:vehealth;
GetVehicleHealth(GetPlayerVehicleID(playerid),vehealth);
if(vehealth<100)
{
if(PlayerInfo[playerid][pVip]>=2 || freevip==1)
{
if(PlayerInfo[playerid][pFixT]==0)
{
SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
RepairVehicle(GetPlayerVehicleID(playerid));
PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
PlayerInfo[playerid][pFixT] = 30*120;
}
}
}
}
}
new Car, State, Float:x, Float:y, Float:z;
Car = GetPlayerVehicleID(playerid);
State = GetPlayerState(playerid);
if(RELEASED(KEY_FIRE))
{
if(State == PLAYER_STATE_DRIVER)
{
if(Speed[playerid] == 1)
{
GetVehicleVelocity(Car, x, y, z);
SetVehicleVelocity(Car, x*2, y*2, z*2);
}
}
}
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid, 2.5,1247.4009,-2047.2445,59.9852))
{
if(PlayerInfo[playerid][pTeam]!=1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си член на VIP!");
return 1;
}
new cmds[656];
new closeddialog=3500;
format(cmds,656,"{FFFFFF}Модът е изработен изцяло от sTrIx (C) 2018-2020\n{008800}Екипът, който стои зад сървъра:\n\n\n{FF0000}» sTrIx - програмист на сървъра\n");
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{00FF00}CREDITS",cmds,"Изход","");
}
else if(IsPlayerInRangeOfPoint(playerid, 2.5,267.1508,82.2370,1001.0391))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на San Andreas Police Department!");
}
if(PlayerInfo[playerid][pRank]<4)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си 4 ранг за да отвориш/затвориш килията!");
}
if(PlayerInfo[playerid][pPJail]>0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си в затвора!");
if(lspdk1open == 0)
{
MoveDynamicObject(lspdk1, 266.352783, 83.219932, 1001.280395, 3);
lspdk1open = 1;
}
else
{
MoveDynamicObject(lspdk1, 266.282501, 80.981002, 1001.280395, 3);
lspdk1open = 0;
}
}
}
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid, 2.5,267.0193,86.9113,1001.0391))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на San Andreas Police Department!");
}
if(PlayerInfo[playerid][pPJail]>0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си в затвора!");
if(lspdk2open==0)
{
MoveDynamicObject(lspdk2, 266.486785, 87.487892, 1001.280395, 3);
lspdk2open = 1;
}
else
{
MoveDynamicObject(lspdk2, 266.434112, 85.750198, 1001.271728, 3);
lspdk2open = 0;
}
}
}
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid, 4.5,259.6782,90.6767,1002.3298))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на San Andreas Police Department!");
}
if(PlayerInfo[playerid][pPJail]>0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си в затвора!");
if(lspdd1open==0)
{
MoveDynamicObject(lspdd1, 259.046081, 92.134429, 1001.138366, 2, 0.000000, 0.000000, -90.699882);
lspdd1open = 1;
}
else
{
MoveDynamicObject(lspdd1,259.046081, 92.134429, 1001.138366, 2, 0.000000, 0.000000, -158.699905);
lspdd1open = 0;
}
}
}
///
if(newkeys & KEY_SUBMISSION)
{
if(IsPlayerInRangeOfPoint(playerid, 15.0, 2448.5400,-1650.9452,13.4048))
{
if(PlayerInfo[playerid][pTeam]!=2)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Grove Street Families!");
}
groveb1timer=20;
MoveDynamicObject(groveb1, 2451.77979, -1648.77783, 13.54984, 2,  0.00000, 0.00000, 0.00000);
SendClientMessage(playerid,COLOR_RGROVE,"Grove Заграждение: Достъпът ще бъде затворен отново след 10 секунди");
}
/////////////
if(IsPlayerInRangeOfPoint(playerid, 15.0, 1355.8478,-2048.7498,56.6921))
{
if(PlayerInfo[playerid][pTeam]!=1)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на VIP!");
}
vipp1timer=20;
MoveDynamicObject(vipp1, 1341.79736, -2049.01465, 59.41744,16.0,   0.00000, 0.00000, 4.00000);
vipp2timer=20;
MoveDynamicObject(vipp2, 1366.25281, -2045.44141, 59.11782,16.0,   0.00000, 0.00000, 9.00000);
SendClientMessage(playerid,0xFF3737FF,"VIP Gates: Портите ще се затворят след 10 секунди!");
}
/////////////
if(IsPlayerInRangeOfPoint(playerid, 2.0, 1583.2278,-1636.9800,13.3905))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на San Andreas Police Department!");
}
lspdp2timer=20;
MoveDynamicObject(lspdp2, 1581.937133, -1637.983764, 9.981795,3.0,  0.000000, 0.000000, -87.099975); //-1.600025, -89.499954
SendClientMessage(playerid,0x0040FFFF,"SAPD Заграждение: Достъпът ще бъде затворен отново след 10 секунди");
}
///
if(IsPlayerInRangeOfPoint(playerid, 15.0, 1588.5579,-1636.7866,13.4154))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на San Andreas Police Department!");
}
lspdp1timer=20;
MoveDynamicObject(lspdp1, 1588.668334, -1638.399414, 9.457103,3.0 , 0.000000, 0.000000, -90.600067); //-1.600025, -89.499954
SendClientMessage(playerid,0x0040FFFF,"SAPD Заграждение: Достъпът ще бъде затворен отново след 10 секунди");
}
if(IsPlayerInRangeOfPoint(playerid, 15.0, -1630.9307,687.8662,7.1875))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на San Andreas Police Department!");
}
sfpdp1timer=20;
MoveDynamicObject(sfpdp1,  -1627.72546, 688.88586, -3.75153,3); //-1.600025, -89.499954
SendClientMessage(playerid,0x0040FFFF,"SAPD Заграждение: Достъпът ще бъде затворен отново след 10 секунди");
}
if(IsPlayerInRangeOfPoint(playerid, 15.0, 321.13589, -1188.31604, 75.33490))
{
if(PlayerInfo[playerid][pTeam]!=6)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Vinewood Cripz!");
}
cripzp1timer=20;
MoveDynamicObject(cripzp1, 321.13589, -1188.31604, 69.73343,5,   0.00000, 0.00000, 39.00000); //-1.600025, -89.499954
SendClientMessage(playerid,0x000099FF,"Cripz Заграждение: Достъпът ще бъде затворен отново след 10 секунди");
}
if(IsPlayerInRangeOfPoint(playerid, 15.0, 1544.3254,-1627.6206,13.3828))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на San Andreas Police Department!");
}
lspdb1timer=20;
MoveDynamicObject(lspdb1, 1544.746337, -1630.744995, 13.016739,2.0, 1.000004, 0.500076, -89.200096); //-1.600025, -89.499954
SendClientMessage(playerid,0x0040FFFF,"SAPD Заграждение: Достъпът ще бъде затворен отново след 10 секунди");
}
if(IsPlayerInRangeOfPoint(playerid, 15.0, 2237.7688,2453.5955,10.7848))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на San Andreas Police Department!");
}
lvpd1timer=20;
MoveDynamicObject(lvpd1,2238.197509, 2450.464599, 10.341962,5.00, -4.799997, -1.600025, -89.499954); //-1.600025, -89.499954
SendClientMessage(playerid,0x0040FFFF,"SAPD Заграждение: Достъпът ще бъде затворен отново след 10 секунди");
}
if(IsPlayerInRangeOfPoint(playerid, 15.0, 285.2253,1820.8843,17.6406))
{
if(PlayerInfo[playerid][pTeam]!=15)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Delta Force!");
}
dfp2timer=20;
MoveDynamicObject(dfp2,285.723236, 1820.534057, 13.034932,5.00, 0, 0, 89.800071);
SendClientMessage(playerid,0xA4A400FF,"Delta Force Заграждение: Достъпът ще бъде затворен отново след 10 секунди");
}
if(IsPlayerInRangeOfPoint(playerid, 15.0, 136.5198,1941.1293,19.3139))
{
if(PlayerInfo[playerid][pTeam]!=15)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Delta Force!");
}
dfp1timer=20;
MoveDynamicObject(dfp1,135.142593, 1941.479492, 15.087491,5.00, 0, 0, 0);
SendClientMessage(playerid,0xA4A400FF,"Delta Force Заграждение: Достъпът ще бъде затворен отново след 10 секунди");
}
if(IsPlayerInRangeOfPoint(playerid, 15.0, 837.3369,-2074.3181,12.8527))
{
if(PlayerInfo[playerid][pTeam]!=15)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Delta Force!");
}
dfp3timer=20;
MoveDynamicObject(dfp3,836.487792, -2069.757812, 1.618954,5.00, 0, 0, 0);
SendClientMessage(playerid,0xA4A400FF,"Delta Force Заграждение: Достъпът ще бъде затворен отново след 10 секунди");
}
if(IsPlayerInRangeOfPoint(playerid, 15.0, 837.2773,-2030.8582,12.8672))
{
if(PlayerInfo[playerid][pTeam]!=15)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Delta Force!");
}
dfp4timer=20;
MoveDynamicObject(dfp4,836.365417, -2027.369750, 1.646684,5.00, 0, 0, 0);
SendClientMessage(playerid,0xA4A400FF,"Delta Force Заграждение: Достъпът ще бъде затворен отново след 10 секунди");
}
if(IsPlayerInRangeOfPoint(playerid, 15.0, 2336.8582,2443.3186,6.1081))
{
if(PlayerInfo[playerid][pTeam]!=13)
{
return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на San Andreas Police Department!");
}
lvpd2timer=20;
MoveDynamicObject(lvpd2,2335.417236, 2444.029785, 0.557772,2.00, 0.000000, 0.000000, 59.200016);
SendClientMessage(playerid,0x0040FFFF,"SAPD Заграждение: Достъпът ще бъде затворен отново след 10 секунди");
}
}
if(newkeys & 512)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 1083.3113,-1231.9309,15.8203) && GetPlayerVirtualWorld(playerid)==0)
{
if(PlayerInfo[playerid][pTeam] != 19) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Blood Mafia!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{E52020}Blood Mafia's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
if(IsPlayerInRangeOfPoint(playerid, 3.0, 1230.4954,-2005.5513,60.8984) && GetPlayerVirtualWorld(playerid)==0)
{
if(PlayerInfo[playerid][pTeam] != 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на VIP!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{FF0000}VIP's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
else if(IsPlayerInRangeOfPoint(playerid, 3.0, 137.8699,1381.5940,1088.3672) && GetPlayerVirtualWorld(playerid)==1)
{
if(PlayerInfo[playerid][pTeam] != 6) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Vinewood Cripz!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{000099}Cripz's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
else if(IsPlayerInRangeOfPoint(playerid, 3.0, -691.5956,935.6432,13.6328) && GetPlayerVirtualWorld(playerid)==0)
{
if(PlayerInfo[playerid][pTeam] != 11) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Italian Mafia!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{33998f}Italian Mafia's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
else if(IsPlayerInRangeOfPoint(playerid, 3.0, 254.6961,63.4460,1003.6406) && GetPlayerVirtualWorld(playerid)==1)
{
if(PlayerInfo[playerid][pTeam] != 13) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на San Andreas Police Department!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{0040FF}SAPD's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1969.2216,953.4484,10.8203) && GetPlayerVirtualWorld(playerid)==0)
{
if(PlayerInfo[playerid][pTeam] != 7) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на San Fierro Triads!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{F97804}Triads's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
else if(IsPlayerInRangeOfPoint(playerid, 3.0, 213.2412,1806.7898,17.6406) && GetPlayerVirtualWorld(playerid)==0
|| IsPlayerInRangeOfPoint(playerid, 3.0, 880.5287,-2255.5732,12.8527) && GetPlayerVirtualWorld(playerid)==0
|| IsPlayerInRangeOfPoint(playerid, 3.0, -2446.6365,504.5200,30.0893) && GetPlayerVirtualWorld(playerid)==0)
{
if(PlayerInfo[playerid][pTeam] != 15) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Delta Force!");
ShowPlayerDialog(playerid, 52, DIALOG_STYLE_LIST, "{A4A400}Delta Force's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle\nRPG\nHeatseeker\nBomb", "Избери", "Излез");
}
else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2497.0251,-1703.2537,1014.7422)&& GetPlayerVirtualWorld(playerid)==1)
{
if(PlayerInfo[playerid][pTeam] != 2) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Grove Street Families!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{33AA33}Grove's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2497.0251,-1703.2537,1014.7422)&& GetPlayerVirtualWorld(playerid)==2)
{
if(PlayerInfo[playerid][pTeam] != 18) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Syndicate Texas!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{276BA9}Syndicate Texas's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2449.6282,-1696.3843,1013.5078)&& GetPlayerVirtualWorld(playerid)==1)
{
if(PlayerInfo[playerid][pTeam] != 8) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Eastern Boys!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{d9d9d9}ES's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1267.0983,-784.8137,1091.9063)&& GetPlayerVirtualWorld(playerid)==1)
{
if(PlayerInfo[playerid][pTeam] != 21) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Bulgarian Mafia!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{FF40FF}Bulgarian Mafia's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
else if(IsPlayerInRangeOfPoint(playerid, 3.0, -38.7398,1078.9197,20.2060)&& GetPlayerVirtualWorld(playerid)==0)
{
if(PlayerInfo[playerid][pTeam] != 20) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Mara Salvatrucha 13!");
ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "{B7E1FF}Mara Salvatrucha 13's Gunmachine:", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
}
}
//---------------------ballons--------------------------------
//------------------ballons-------------------------------
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 1801.0879,-1303.3047,131.7344))
{
SetPlayerFacingAngle(playerid,269.5069);
SetPlayerPos(playerid,1791.7509,-1303.8427,125.7266);
}
}
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 1570.4105,-1337.3629,16.4844) && GetPlayerVirtualWorld(playerid)==0)
{
GivePlayerWeapon(playerid, WEAPON_PARACHUTE, 1);
SetPlayerFacingAngle(playerid,172.0359);
SetPlayerPos(playerid,1548.6501,-1363.8597,326.2183);
}
}
if(newkeys & 16)
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 1548.6501,-1363.8597,326.2183) && GetPlayerVirtualWorld(playerid)==0)
{
SetPlayerPos(playerid,1570.4105,-1337.3629,16.4844);
}
}
return 1;
}
public OnRconLoginAttempt(ip[], password[], success)
{
if(!success)
{
new pip[30];
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
GetPlayerIp(i, pip, 30);
if(!strcmp(ip, pip, true))
{
SendClientMessage(i,0xE60000FF,"SERVER: Ти се опита да влезеш с RCON паролата на сървъра и сега си KICKED!");
PlayerInfo[i][pKick] = 1;
}
}
}
return 1;
}
encode_tires(tire1, tire2, tire3, tire4) {
return tire1 | (tire2 << 1) | (tire3 << 2) | (tire4 << 3);
}
public OnPlayerStreamIn(playerid, forplayerid)
{
return 1;
}
public OnPlayerStreamOut(playerid, forplayerid)
{
return 1;
}
public OnVehicleStreamIn(vehicleid, forplayerid)
{
return 1;
}
public OnVehicleStreamOut(vehicleid, forplayerid)
{
return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
new vehid = GetPlayerVehicleID(playerid);
new vehmd = GetVehicleModel(GetPlayerVehicleID(playerid));
//tune
if(dialogid == 1111 && response)
{
switch(listitem)
{
case 0: AddVehicleComponent(vehid,1010),CarmodDialog(playerid), PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
case 1: ShowPlayerDialog(playerid,1112,DIALOG_STYLE_LIST,"Choose primary color:","White\nBlack\nOrange\nLight Blue\nDark Blue\nPurple\nRed\nDark Red\nGrey","Ok","Cancle");
case 2: ShowPlayerDialog(playerid,1113,DIALOG_STYLE_LIST,"Choose a wheel:","Shadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nAhab\nVirtual\nAcces\n{FF0000}Back","Ok","Cancle");
case 3: AddVehicleComponent(vehid, 1086), PlayerPlaySound(playerid,1133,0.0,0.0,0.0),CarmodDialog(playerid);
case 4: AddVehicleComponent(vehid, 1087), PlayerPlaySound(playerid,1133,0.0,0.0,0.0),CarmodDialog(playerid);
case 5:
{
if(vehmd == 562 || vehmd == 565 || vehmd == 559 || vehmd == 561 || vehmd == 560 || vehmd == 558)
{
ShowPlayerDialog(playerid,1114,DIALOG_STYLE_LIST,"Choose one","Paintjob\nAlien\nX-Flow\n{FF0000}Back","Select","Cancel");
}
else if(vehmd == 576 || vehmd == 575 || vehmd == 535)
{
ShowPlayerDialog(playerid,1001,DIALOG_STYLE_LIST,"Choose one","Paintjob\nChrome\nSlamin\n{FF0000}Back","Select","Cancel");
}
else if(vehmd == 567 || vehmd == 536)
{
ShowPlayerDialog(playerid,1002,DIALOG_STYLE_LIST,"Choose one","Paintjob\nChrome\nSlamin\nHardtop Roof\nSofttop Roof\n{FF0000}Back","Select","Cancel");
}
else if(vehmd == 534)
{
ShowPlayerDialog(playerid,1003,DIALOG_STYLE_LIST,"Choose one","Paintjob\nChrome\nSlamin\nFlame Sideskirt \nArches Sideskirt Roof\n{FF0000}Back","Select","Cancel");
}
else if(vehmd == 496 || vehmd == 505 || vehmd == 516 || vehmd == 517 || vehmd == 518 || vehmd == 527 ||
vehmd == 529 || vehmd == 540 || vehmd == 546 || vehmd == 547 || vehmd == 549 || vehmd == 550 || vehmd == 551 ||
vehmd == 580 || vehmd == 585 || vehmd == 587 || vehmd == 589 || vehmd == 600 || vehmd == 603 || vehmd == 401 ||
vehmd == 410 || vehmd == 415 || vehmd == 418 || vehmd == 420 || vehmd == 436 || vehmd == 439 || vehmd == 458 ||
vehmd == 489 || vehmd == 491 || vehmd == 492)
{
RegularCarDialog(playerid);
}
else
{
SendClientMessage(playerid,COLOR_RED,"Your car cannot be tuned!");
}
}
}
}
if(dialogid == 1112 && response)
{
new color1, color2;
GetVehicleColor(vehid,color1,color2);
new Carray[] = {1,0,6,2,79,149,151,3,34};
ChangeVehicleColor(vehid,Carray[listitem],color2);
return ShowPlayerDialog(playerid,1116,DIALOG_STYLE_LIST,"Choose second color:","White\nBlack\nOrange\nLight Blue\nDark Blue\nPurple\nRed\nDark Red\nGrey","Ok","Cancle");
}
if(dialogid == 1116 && response)
{
new color1, color2;
GetVehicleColor(vehid,color1,color2);
new Carray[] = {1,0,6,2,79,149,151,3,34};
ChangeVehicleColor(vehid,Carray[listitem],Carray[listitem]);
return CarmodDialog(playerid);
}
if(dialogid == 1113 && response)
{
if(listitem == 16) return CarmodDialog(playerid);
new Warray[] = {1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
AddVehicleComponent(vehid,Warray[listitem]);
return CarmodDialog(playerid);
}
if(dialogid == 1114 && response)
{
switch(listitem)
{
case 0: ShowPlayerDialog(playerid,1115,DIALOG_STYLE_LIST,"Choose one:","Paintjob 1\nPaintjob 2\nPaintjob 3","Ok","Cancel");
case 1:
{
if(vehmd == 560)//Sultan
{
AddVehicleComponent(vehid, 1026);
AddVehicleComponent(vehid, 1027);
AddVehicleComponent(vehid, 1028);
AddVehicleComponent(vehid, 1032);
AddVehicleComponent(vehid, 1138);
AddVehicleComponent(vehid, 1141);
AddVehicleComponent(vehid, 1169);
}
if(vehmd == 562)//Elegy
{
AddVehicleComponent(vehid, 1036);
AddVehicleComponent(vehid, 1040);
AddVehicleComponent(vehid, 1034);
AddVehicleComponent(vehid, 1038);
AddVehicleComponent(vehid, 1147);
AddVehicleComponent(vehid, 1171);
AddVehicleComponent(vehid, 1149);
}
if(vehmd == 565)//Flash
{
AddVehicleComponent(vehid, 1047);
AddVehicleComponent(vehid, 1051);
AddVehicleComponent(vehid, 1046);
AddVehicleComponent(vehid, 1054);
AddVehicleComponent(vehid, 1049);
AddVehicleComponent(vehid, 1150);
AddVehicleComponent(vehid, 1153);
}
if(vehmd == 559)//Jester
{
AddVehicleComponent(vehid, 1069);
AddVehicleComponent(vehid, 1071);
AddVehicleComponent(vehid, 1065);
AddVehicleComponent(vehid, 1067);
AddVehicleComponent(vehid, 1162);
AddVehicleComponent(vehid, 1159);
AddVehicleComponent(vehid, 1160);
}
if(vehmd == 561)//Stratum
{
AddVehicleComponent(vehid, 1056);
AddVehicleComponent(vehid, 1062);
AddVehicleComponent(vehid, 1064);
AddVehicleComponent(vehid, 1055);
AddVehicleComponent(vehid, 1058);
AddVehicleComponent(vehid, 1154);
AddVehicleComponent(vehid, 1155);
}
if(vehmd == 558)//Uranus
{
AddVehicleComponent(vehid, 1090);
AddVehicleComponent(vehid, 1094);
AddVehicleComponent(vehid, 1092);
AddVehicleComponent(vehid, 1088);
AddVehicleComponent(vehid, 1164);
AddVehicleComponent(vehid, 1168);
AddVehicleComponent(vehid, 1166);
}
}
case 2:
{
if(vehmd == 560)//Sultan
{
AddVehicleComponent(vehid, 1031);
AddVehicleComponent(vehid, 1030);
AddVehicleComponent(vehid, 1029);
AddVehicleComponent(vehid, 1033);
AddVehicleComponent(vehid, 1139);
AddVehicleComponent(vehid, 1140);
AddVehicleComponent(vehid, 1170);
}
if(vehmd == 562)//Elegy
{
AddVehicleComponent(vehid, 1041);
AddVehicleComponent(vehid, 1039);
AddVehicleComponent(vehid, 1037);
AddVehicleComponent(vehid, 1035);
AddVehicleComponent(vehid, 1146);
AddVehicleComponent(vehid, 1148);
AddVehicleComponent(vehid, 1172);
}
if(vehmd == 565)//Flash
{
AddVehicleComponent(vehid, 1048);
AddVehicleComponent(vehid, 1045);
AddVehicleComponent(vehid, 1053);
AddVehicleComponent(vehid, 1050);
AddVehicleComponent(vehid, 1152);
AddVehicleComponent(vehid, 1151);
AddVehicleComponent(vehid, 1052);
}
if(vehmd == 559) //Jester
{
AddVehicleComponent(vehid, 1070);
AddVehicleComponent(vehid, 1072);
AddVehicleComponent(vehid, 1066);
AddVehicleComponent(vehid, 1068);
AddVehicleComponent(vehid, 1158);
AddVehicleComponent(vehid, 1161);
AddVehicleComponent(vehid, 1173);
}
if(vehmd == 561)//Stratum
{
AddVehicleComponent(vehid, 1057);
AddVehicleComponent(vehid, 1063);
AddVehicleComponent(vehid, 1059);
AddVehicleComponent(vehid, 1061);
AddVehicleComponent(vehid, 1060);
AddVehicleComponent(vehid, 1154);
AddVehicleComponent(vehid, 1157);
}
if(vehmd == 558) //Uranus
{
AddVehicleComponent(vehid, 1093);
AddVehicleComponent(vehid, 1095);
AddVehicleComponent(vehid, 1089);
AddVehicleComponent(vehid, 1091);
AddVehicleComponent(vehid, 1163);
AddVehicleComponent(vehid, 1167);
AddVehicleComponent(vehid, 1165);
}
}
case 3: CarmodDialog(playerid);
}
}
if(dialogid == 1001 && response)
{
switch(listitem)
{
case 0: ShowPlayerDialog(playerid,1115,DIALOG_STYLE_LIST,"Choose one:","Paintjob 1\nPaintjob 2\nPaintjob 3","Ok","Cancel");
case 1:
{
if(vehmd == 576)//Tornado
{
AddVehicleComponent(vehid, 1134);
AddVehicleComponent(vehid, 1136);
AddVehicleComponent(vehid, 1137);
AddVehicleComponent(vehid, 1191);
AddVehicleComponent(vehid, 1192);
}
if(vehmd == 575)//Broadway
{
AddVehicleComponent(vehid, 1042);
AddVehicleComponent(vehid, 1044);
AddVehicleComponent(vehid, 1099);
AddVehicleComponent(vehid, 1174);
AddVehicleComponent(vehid, 1176);
}
if(vehmd == 535)//Slamvan
{
AddVehicleComponent(vehid, 1109);
AddVehicleComponent(vehid, 1113);
AddVehicleComponent(vehid, 1115);
AddVehicleComponent(vehid, 1117);
AddVehicleComponent(vehid, 1118);
AddVehicleComponent(vehid, 1120);
}
}
case 2:
{
if(vehmd == 576)//Tornado
{
AddVehicleComponent(vehid, 1135);
AddVehicleComponent(vehid, 1190);
AddVehicleComponent(vehid, 1193);
}
if(vehmd == 575)//Broadway
{
AddVehicleComponent(vehid, 1177);
AddVehicleComponent(vehid, 1175);
AddVehicleComponent(vehid, 1143);
}
if(vehmd == 535)//Slamvan
{
AddVehicleComponent(vehid, 1110);
AddVehicleComponent(vehid, 1114);
AddVehicleComponent(vehid, 1116);
AddVehicleComponent(vehid, 1119);
AddVehicleComponent(vehid, 1121);
}
}
case 3: CarmodDialog(playerid);
}
}
if(dialogid  == 1002)
{
switch(listitem)
{
case 0: ShowPlayerDialog(playerid,1115,DIALOG_STYLE_LIST,"Choose one:","Paintjob 1\nPaintjob 2\nPaintjob 3","Ok","Cancel");
case 1:
{
if(vehmd == 567)//Savanna
{
AddVehicleComponent(vehid, 1129);
AddVehicleComponent(vehid, 1133);
AddVehicleComponent(vehid, 1102);
AddVehicleComponent(vehid, 1187);
AddVehicleComponent(vehid, 1189);
}
if(vehmd == 536)//Blade
{
AddVehicleComponent(vehid, 1104);
AddVehicleComponent(vehid, 1107);
AddVehicleComponent(vehid, 1108);
AddVehicleComponent(vehid, 1182);
AddVehicleComponent(vehid, 1184);
}
}
case 2:
{
if(vehmd == 567)//Savanna
{
AddVehicleComponent(vehid, 1188);
AddVehicleComponent(vehid, 1186);
AddVehicleComponent(vehid, 1132);
}
if(vehmd == 536)//Blade
{
AddVehicleComponent(vehid, 1105);
AddVehicleComponent(vehid, 1183);
AddVehicleComponent(vehid, 1181);
}
}
case 3:
{
if(vehmd == 567)//Savanna
{
AddVehicleComponent(vehid, 1130);
}
if(vehmd == 536)//Blade
{
AddVehicleComponent(vehid, 1128);
}
}
case 4:
{
if(vehmd == 567)//Savanna
{
AddVehicleComponent(vehid, 1131);
}
if(vehmd == 536)//Blade
{
AddVehicleComponent(vehid, 1103);
}
}
case 5: CarmodDialog(playerid);
}
}
if(dialogid  == 1003)//Remington
{
switch(listitem)
{
case 0:ShowPlayerDialog(playerid,1115,DIALOG_STYLE_LIST,"Choose one:","Paintjob 1\nPaintjob 2\nPaintjob 3","Ok","Cancel");
case 1:
{
AddVehicleComponent(vehid, 1100);
AddVehicleComponent(vehid, 1122);
AddVehicleComponent(vehid, 1123);
AddVehicleComponent(vehid, 1125);
AddVehicleComponent(vehid, 1126);
AddVehicleComponent(vehid, 1179);
AddVehicleComponent(vehid, 1180);
}
case 2:
{
AddVehicleComponent(vehid, 1185);
AddVehicleComponent(vehid, 1178);
AddVehicleComponent(vehid, 1127);
}
case 3: AddVehicleComponent(vehid, 1122),AddVehicleComponent(vehid, 1101);
case 4: AddVehicleComponent(vehid, 1106),AddVehicleComponent(vehid, 1124);
case 5: CarmodDialog(playerid);
}
}
if(dialogid == 1004 && response)//regular cars
{
switch(listitem)
{
case 0:
{
ShowPlayerDialog(playerid,1010,DIALOG_STYLE_LIST,"Spoiler","Pro\nWin\nDrag\nAlpha\nChamp\nRace\nWorx\nFury\n{FF0000}Back","Select","Cancel");
}
case 1:
{
if(vehmd == 585 || vehmd == 603 || vehmd == 439 || vehmd == 458 || vehmd == 418 || vehmd == 527 || vehmd == 580)
{
AddVehicleComponent(vehid, 1006);
return RegularCarDialog(playerid);
}
else if(vehmd == 439 || vehmd == 458 || vehmd == 491 || vehmd == 517 ||vehmd == 547)
{ShowPlayerDialog(playerid,1040,DIALOG_STYLE_LIST,"Vents","Oval\nSquare\n{FF0000}Back","Select","Cancel");}
else if(vehmd == 415)
{
AddVehicleComponent(vehid, 1007);
AddVehicleComponent(vehid, 1071);
return RegularCarDialog(playerid);
}
else ShowPlayerDialog(playerid,1020,DIALOG_STYLE_LIST,"Hood","Champ\nFury\nRace\nWorx\n{FF0000}Back","Select","Cancel");
}
case 2:
{
if(vehmd == 549 || vehmd == 585 || vehmd == 603)
{ShowPlayerDialog(playerid,1040,DIALOG_STYLE_LIST,"Vents","Oval\nSquare\n{FF0000}Back","Select","Cancel");}
else if(vehmd == 410 || vehmd == 436 || vehmd == 439 || vehmd == 458 || vehmd == 516 || vehmd == 491 || vehmd == 517 || vehmd == 418 || vehmd == 527 || vehmd == 580)
{
AddVehicleComponent(vehid, 1007);
AddVehicleComponent(vehid, 1071);
return RegularCarDialog(playerid);
}
else if(vehmd == 415 || vehmd == 547 || vehmd == 420 || vehmd == 587)
{CarmodDialog(playerid);}
else
{
AddVehicleComponent(vehid, 1006);
return RegularCarDialog(playerid);
}
}
case 3:
{
if(vehmd == 549 || vehmd == 585 || vehmd == 603 || vehmd == 551 || vehmd == 492 || vehmd == 529)
{
AddVehicleComponent(vehid, 1007);
AddVehicleComponent(vehid, 1071);
return RegularCarDialog(playerid);
}
else if(vehmd == 410 || vehmd == 436 || vehmd == 439 || vehmd == 458 || vehmd == 489 || vehmd == 505)
{ShowPlayerDialog(playerid,1060,DIALOG_STYLE_LIST,"Lights","Round Fog\nSquare Fog\n{FF0000}Back","Select","Cancel");}
else if(vehmd == 418 || vehmd == 527 || vehmd == 580 || vehmd == 491 || vehmd == 517 || vehmd == 516)
{CarmodDialog(playerid);}
else{ShowPlayerDialog(playerid,1040,DIALOG_STYLE_LIST,"Vents","Oval\nSquare\n{FF0000}Back","Select","Cancel");}
}
case 4:
{
if(vehmd == 549 || vehmd == 550 || vehmd == 585 || vehmd == 603)
{ShowPlayerDialog(playerid,1060,DIALOG_STYLE_LIST,"Lights","Round Fog\nSquare Fog\n{FF0000}Back","Select","Cancel");}
else if(vehmd == 489 || vehmd == 505 || vehmd == 551 || vehmd == 492 || vehmd == 529 || vehmd == 439 || vehmd == 458 || vehmd == 410 || vehmd == 436)
{CarmodDialog(playerid);}
else
{
AddVehicleComponent(vehid, 1007);
AddVehicleComponent(vehid, 1071);
return RegularCarDialog(playerid);
}
}
case 5:
{
if(vehmd == 585 || vehmd == 603 || vehmd == 550 || vehmd == 549)
{CarmodDialog(playerid);}
else{ShowPlayerDialog(playerid,1060,DIALOG_STYLE_LIST,"Lights","Round Fog\nSquare Fog\n{FF0000}Back","Select","Cancel");}
}
case 6: CarmodDialog(playerid);
}
}
if(dialogid == 1010 && response)
{
if(listitem == 8) return RegularCarDialog(playerid);
new Xarray[] = {1000,1001,1002,1003,1014,1015,1016,1023};
AddVehicleComponent(vehid, Xarray[listitem]);
return RegularCarDialog(playerid);
}
if(dialogid == 1020 && response)
{
if(listitem == 4) return RegularCarDialog(playerid);
new Xarray[] = {1004,1005,1011,1012};
AddVehicleComponent(vehid, Xarray[listitem]);
return RegularCarDialog(playerid);
}
if(dialogid == 1040 && response)
{
switch(listitem)
{
case 0:
{
AddVehicleComponent(vehid, 1142);
AddVehicleComponent(vehid, 1143);
return RegularCarDialog(playerid);
}
case 1:
{
AddVehicleComponent(vehid, 1144);
AddVehicleComponent(vehid, 1145);
return RegularCarDialog(playerid);
}
case 2: RegularCarDialog(playerid);
}
}
if(dialogid == 1060 && response)
{
if(listitem == 2) return RegularCarDialog(playerid);
new Xarray[] = {1013,1024};
AddVehicleComponent(vehid, Xarray[listitem]);
return RegularCarDialog(playerid);
}
if(dialogid == 1115 && response)
{
new Parray[] = {0,1,2};
ChangeVehiclePaintjob(vehid, Parray[listitem]);
return CarmodDialog(playerid);
}
//tune
new noerrorstring4[115];
if(dialogid<=-1)
{
if(!response)
{
}
if(response)
{
}
}
//ShowPlayerDialog(playerid,89,DIALOG_STYLE_LIST,"Очила - $1100","{FFFFFF}Тъмни\nСини\nЗелени\nОранжеви\nЖълти","Избери","Излезте");
///////////////////
//vehmenu - open
if(dialogid==DIALOG_VEHMENU)
{
new vehicleid=GetPlayerVehicleID(playerid);
new accountNickname[MAX_PLAYER_NAME];
GetPlayerName(playerid, accountNickname, 25);
if(response)
{
switch(listitem)
{
case 0: {
if(vehEngineStatusON[GetPlayerVehicleID(playerid)]==0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Трябва първо да запалите превозното средство, преди да го използвате.");
}
if(vehBOOTStatusON[GetPlayerVehicleID(playerid)]==0)
{
vehBOOTStatusON[GetPlayerVehicleID(playerid)]=1;
ToggleBoot(vehicleid, VEHICLE_PARAMS_ON);
}
else
{
vehBOOTStatusON[GetPlayerVehicleID(playerid)]=1;
ToggleBoot(vehicleid, VEHICLE_PARAMS_OFF);
}
}
case 1: {
if(vehEngineStatusON[GetPlayerVehicleID(playerid)]==0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Трябва първо да запалите превозното средство, преди да го използвате.");
}
if(vehLONStatusON[GetPlayerVehicleID(playerid)]==0)
{
vehLONStatusON[GetPlayerVehicleID(playerid)]=1;
ToggleLights(vehicleid, VEHICLE_PARAMS_ON);
}
else
{
vehLONStatusON[GetPlayerVehicleID(playerid)]=0;
ToggleLights(vehicleid, VEHICLE_PARAMS_OFF);
}
}
case 2: {
if(vehEngineStatusON[GetPlayerVehicleID(playerid)]==0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Трябва първо да запалите превозното средство, преди да го използвате.");
}
if(vehAlarmStatusON[GetPlayerVehicleID(playerid)]==0)
{
vehAlarmStatusON[GetPlayerVehicleID(playerid)]=1;
ToggleAlarm(vehicleid, VEHICLE_PARAMS_ON);
}
else
{
vehAlarmStatusON[GetPlayerVehicleID(playerid)]=0;
ToggleAlarm(vehicleid, VEHICLE_PARAMS_OFF);
}
}
case 3: {
if(vehEngineStatusON[GetPlayerVehicleID(playerid)]==0)
{
return SendClientMessage(playerid,COLOR_GRAD1,"Трябва първо да запалите превозното средство, преди да го използвате.");
}
if(vehBONTEStatusON[GetPlayerVehicleID(playerid)]==0)
{
vehBONTEStatusON[GetPlayerVehicleID(playerid)]=1;
ToggleBonnet(vehicleid, VEHICLE_PARAMS_ON);
}
else
{
vehBONTEStatusON[GetPlayerVehicleID(playerid)]=0;
ToggleBonnet(vehicleid, VEHICLE_PARAMS_OFF);
}
}
}
}
}
//vehmenu - close
if(dialogid==DIALOG_SELL_FISH)
{
if(response)
{
new closeddialog=3500;
new fishID=(listitem+1);
new fishSlotID = PlayerInfo[playerid][pFishSlot][fishID];
new fishWeight = PlayerInfo[playerid][pFishWeight][fishID];
new fishPrice = GetPlayerFishPrice(playerid, fishID);
new fishName[60]; format(fishName,60,GetFishName(fishSlotID));
GivePlayerCash(playerid,fishPrice);
PlayerInfo[playerid][pFishSlot][fishID]=0;
PlayerInfo[playerid][pFishWeight][fishID]=0;
new string556[556];
format(string556,556,"{FFFFFF}Вие продадохте %d Кг %s за {33AA33}$%d{FFFFFF}!\n",fishWeight,fishName,fishPrice);
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"Fishing Store",string556,"Излез","");
RearangeFishSlots(playerid);
}
}
if(dialogid==DIALOG_SELL_FISHCRATE)
{
if(response)
{
new totalFishPrice;
for(new i=1; i<11; i++)
{
totalFishPrice+=GetPlayerFishPrice(playerid, i);
PlayerInfo[playerid][pFishSlot][i]=0;
PlayerInfo[playerid][pFishWeight][i]=0;
}
GivePlayerCash(playerid,totalFishPrice);
new closeddialog=3500;
new string556[556];
format(string556,556,"{FFFFFF}Вие продадохте наличната си риба на цена {33AA33}$%d{FFFFFF}!\n",totalFishPrice);
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"Fishing Store",string556,"Излез","");
}
}
if(dialogid==DIALOG_DROPFISH)
{
if(response)
{
new closeddialog=3500;
new fishItem=fishToDrop[playerid];
PlayerInfo[playerid][pFishSlot][fishItem]=0;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"Fish:","Вие изхвърлихте рибата","Излез","");
RearangeFishSlots(playerid);
}
}
if(dialogid==DIALOG_MYFISH)
{
if(response)
{
new closeddialog=3500;
new fishID=(listitem+1);
fishToDrop[playerid]=(listitem+1);
if(PlayerInfo[playerid][pFishSlot][fishID]==0)
{
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"Fish:","Вие нямате риба в този слот","Излез","");
}
else if(PlayerInfo[playerid][pFishSlot][fishID]!=0)
{
ShowPlayerDialog(playerid,DIALOG_DROPFISH,DIALOG_STYLE_MSGBOX,"Fish:","Искате ли да изхвърлите тази риба?","Хвърли","Излез");
}
}
}
if(dialogid==89)
{
if(response)
{
if(PlayerInfo[playerid][pCash]<1000)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да имате поне $1000 за да си купите часовник!");
return 1;
}
switch(listitem)
{
//////////////////////////////////////////////
case 0:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==19013)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате сребърен часовник!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=19013;
takenclothes[playerid][freeslot]=1;
GivePlayerCash(playerid,-1000);
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте сребърен часовник за $1000.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,19040, 6);
attachedPlayerObject[objectid]=true;
EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
//////////////////////////////////////////////
case 1:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==19039)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате златен часовник!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=19039;
takenclothes[playerid][freeslot]=1;
GivePlayerCash(playerid,-1000);
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте златен часовник за $1000.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,19039,6);
attachedPlayerObject[objectid]=true;
EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
//////////////////////////////////////////////
case 2:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==19046)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате зелен часовник!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=19046;
GivePlayerCash(playerid,-1000);
takenclothes[playerid][freeslot]=1;
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте зелен часовник за $1000.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,19046,6);
attachedPlayerObject[objectid]=true;
EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
//////////////////////////////////////////////
case 3:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==19050)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате син часовник!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=19050;
takenclothes[playerid][freeslot]=1;
GivePlayerCash(playerid,-1000);
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте син часовник за $1000.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,19050,6);
attachedPlayerObject[objectid]=true;
EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
////////////////////////////////////
//////////////////////////////////////////////
case 4:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==19053)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате кафяв часовник!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=19053;
takenclothes[playerid][freeslot]=1;
GivePlayerCash(playerid,-1000);
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте кафяв часовник за $1000.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,19053,6);
attachedPlayerObject[objectid]=true;
EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
}
}
}
///////////////////////////
if(dialogid==90)
{
if(response)
{
if(PlayerInfo[playerid][pCash]<1100)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да имате поне $1100 за да си купите очила!");
return 1;
}
switch(listitem)
{
//////////////////////////////////////////////
case 0:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==19138)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате тъмни очила!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=19138;
takenclothes[playerid][freeslot]=1;
GivePlayerCash(playerid,-1100);
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте тъмни очила за $1100.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,19138, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663);
attachedPlayerObject[objectid]=true;
EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
//////////////////////////////////////////////
case 1:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==19140)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате сини очила!");
return 1;
}
}
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте сини очила за $1100.");
PlayerInfo[playerid][pClothes][freeslot]=19140;
GivePlayerCash(playerid,-1100);
takenclothes[playerid][freeslot]=1;
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,19140, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663);
attachedPlayerObject[objectid]=true;
EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
//////////////////////////////////////////////
case 2:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==19008)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате зелени очила!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=19008;
takenclothes[playerid][freeslot]=1;
GivePlayerCash(playerid,-1100);
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте зелени очила за $1000.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,19008, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663);
attachedPlayerObject[objectid]=true; EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
//////////////////////////////////////////////
case 3:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==19007)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате оранжеви очила!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=19007;
GivePlayerCash(playerid,-1100);
takenclothes[playerid][freeslot]=1;
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте оранжеви очила за $1100.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,19007, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663);
attachedPlayerObject[objectid]=true; EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
////////////////////////////////////
//////////////////////////////////////////////
case 4:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==19028)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате жълти очила!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=19028;
takenclothes[playerid][freeslot]=1;
GivePlayerCash(playerid,-1100);
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте жълти очила за $1100.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,19028, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663);
attachedPlayerObject[objectid]=true; EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
}
}
}
///////////////////////////
///////////////////////////
if(dialogid==91)
{
if(response)
{
if(PlayerInfo[playerid][pCash]<1300)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да имате поне $1300 за да си купите шапка!");
return 1;
}
switch(listitem)
{
//////////////////////////////////////////////
case 0:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==18933)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате бяла шапка!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=18933;
takenclothes[playerid][freeslot]=1;
GivePlayerCash(playerid,-1300);
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте бяла шапка за $1200.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,18933, 2, 0.126454, 0.028436, 0.001652, 81.096549, 180.051704, 3.806360, 1.116688, 1.053331, 1.143382);
attachedPlayerObject[objectid]=true; EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
GivePlayerCash(playerid,-1300);
}
////////////////////////////////////
//////////////////////////////////////////////
case 1:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==18636)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате полицейска шапка!");
return 1;
}
}
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте полицейска шапка за $1200.");
PlayerInfo[playerid][pClothes][freeslot]=18636;
GivePlayerCash(playerid,-1300);
takenclothes[playerid][freeslot]=1;
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,18636,2, 0.126454, 0.028436, 0.001652, 81.096549, 93.051704, 3.806360, 1.116688, 1.053331, 1.143382);
attachedPlayerObject[objectid]=true; EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
GivePlayerCash(playerid,-1300);
}
////////////////////////////////////
//////////////////////////////////////////////
case 2:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==18931)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате синя шапка!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=18931;
takenclothes[playerid][freeslot]=1;
GivePlayerCash(playerid,-1300);
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте синя шапка за $1200.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,18931, 2, 0.126454, 0.028436, 0.001652, 81.096549, 93.051704, 3.806360, 1.116688, 1.053331, 1.143382);
attachedPlayerObject[objectid]=true; EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
//////////////////////////////////////////////
////////////////////////////////////
////////////////////////////////////
//////////////////////////////////////////////
////////////////////////////////////
}
}
}
///////////////////////////
///////////////////////////
if(dialogid==92)
{
if(response)
{
if(PlayerInfo[playerid][pMission]<5)
{
SendClientMessage(playerid,COLOR_GRAD1,"Можеш да си купиш бандата, когато си в мисия 5!");
return 1;
}
if(PlayerInfo[playerid][pCash]<1400)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да имате поне $1400 за да си купите бандана!");
return 1;
}
switch(listitem)
{
//////////////////////////////////////////////
case 0:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==18891)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате черна бандана!");
return 1;
}
}
withbandana[playerid]=1;
PlayerInfo[playerid][pClothes][freeslot]=18891;
GivePlayerCash(playerid,-1400);
takenclothes[playerid][freeslot]=1;
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте черна бандана за $1400.");
if(PlayerInfo[playerid][pMission]==5)
{
enteredInMissionCP[playerid]=0;
PlayerInfo[playerid][pMission]+=1;
PlayerInfo[playerid][pMPMission]=0;
SendClientMessage(playerid,	0xFF3737FF,"[Мисия 6] Твоята мисия свърши.");
GameTextForPlayer(playerid, "~w~Mission~n~~b~completed", 2000, 1);
SendClientMessage(playerid, 0x80BFFFFF, "[Телефон] Имате обаждане от Алекс.");
PlayerInfo[playerid][pMissionMessage]=5;
missionchat[playerid][5][0]=1;
PlayerInfo[playerid][pShowMission]=7;
ShowPlayerPhone(playerid);
enteredInMissionCP[playerid]=0;
PhoneShow[playerid] = true;
PhoneLocked[playerid] = 1;
}
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,18891, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858);
attachedPlayerObject[objectid]=true; EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
//////////////////////////////////////////////
case 1:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==18897)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате синя маска!");
return 1;
}
}
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте синя маска за $1400.");
PlayerInfo[playerid][pClothes][freeslot]=18897;
GivePlayerCash(playerid,-1400);
takenclothes[playerid][freeslot]=1;
withbandana[playerid]=1;
if(PlayerInfo[playerid][pMission]==5)
{
enteredInMissionCP[playerid]=0;
PlayerInfo[playerid][pMission]+=1;
PlayerInfo[playerid][pMPMission]=0;
SendClientMessage(playerid,	0xFF3737FF,"[Мисия 6] Твоята мисия свърши.");
GameTextForPlayer(playerid, "~w~Mission~n~~b~completed", 2000, 1);
SendClientMessage(playerid, 0x80BFFFFF, "[Телефон] Имате обаждане от Алекс.");
PlayerInfo[playerid][pMissionMessage]=5;
missionchat[playerid][5][0]=1;
PlayerInfo[playerid][pShowMission]=7;
ShowPlayerPhone(playerid);
enteredInMissionCP[playerid]=0;
PhoneShow[playerid] = true;
PhoneLocked[playerid] = 1;
}
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,18897, 2,0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858);
attachedPlayerObject[objectid]=true; EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
//////////////////////////////////////////////
case 2:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==18898)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате зелена бандана!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=18898;
GivePlayerCash(playerid,-1400);
takenclothes[playerid][freeslot]=1;
withbandana[playerid]=1;
if(PlayerInfo[playerid][pMission]==5)
{
enteredInMissionCP[playerid]=0;
PlayerInfo[playerid][pMission]+=1;
PlayerInfo[playerid][pMPMission]=0;
SendClientMessage(playerid,	0xFF3737FF,"[Мисия 6] Твоята мисия свърши.");
GameTextForPlayer(playerid, "~w~Mission~n~~b~completed", 2000, 1);
SendClientMessage(playerid, 0x80BFFFFF, "[Телефон] Имате обаждане от Алекс.");
PlayerInfo[playerid][pMissionMessage]=5;
missionchat[playerid][5][0]=1;
PlayerInfo[playerid][pShowMission]=7;
ShowPlayerPhone(playerid);
enteredInMissionCP[playerid]=0;
PhoneShow[playerid] = true;
PhoneLocked[playerid] = 1;
}
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте зелена бандана за $1400.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,18898,2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858);
attachedPlayerObject[objectid]=true; EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
//////////////////////////////////////////////
////////////////////////////////////
////////////////////////////////////
//////////////////////////////////////////////
////////////////////////////////////
}
}
}
///////////////////////////
if(dialogid==93)
{
if(response)
{
if(PlayerInfo[playerid][pCash]<1500)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да имате поне $1500 за да си купите каска!");
return 1;
}
switch(listitem)
{
//////////////////////////////////////////////
case 0:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==18978)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате бяла каска!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=18978;
takenclothes[playerid][freeslot]=1;
GivePlayerCash(playerid,-1500);
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте бяла каска за $1500.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,18978,2, 0.126454, 0.028436, 0.001652, 81.096549, 180.051704, 3.806360, 1.116688, 1.053331, 1.143382);
attachedPlayerObject[objectid]=true; EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
//////////////////////////////////////////////
case 1:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==18979)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате розова каска!");
return 1;
}
}
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте розова каска за $1500.");
PlayerInfo[playerid][pClothes][freeslot]=18979;
GivePlayerCash(playerid,-1500);
takenclothes[playerid][freeslot]=1;
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,18979,2, 0.126454, 0.028436, 0.001652, 81.096549, 180.051704, 3.806360, 1.116688, 1.053331, 1.143382);
attachedPlayerObject[objectid]=true; EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
//////////////////////////////////////////////
case 2:
{
new freeslot=-1;
new freeslot2=-1;
for(new i=0; i<35; i++)
{
if(PlayerInfo[playerid][pClothes][i]==0)
{
freeslot=i;
}
if(PlayerInfo[playerid][pClothes][i]==18645)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие вече имате червена каска!");
return 1;
}
}
PlayerInfo[playerid][pClothes][freeslot]=18645;
takenclothes[playerid][freeslot]=1;
GivePlayerCash(playerid,-1500);
SendClientMessage(playerid,0x03c6fcFF,"Вие си купихте червена каска за $1500.");
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие сте си поръчали повече от 35 продукта, можете да махнете един от тях чрез /clothes!");
return 1;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
new objectid=SetPlayerAttachedObject(playerid, freeslot2,18645,2, 0.126454, 0.028436, 0.001652, 81.096549, 180.051704, 3.806360, 1.116688, 1.053331, 1.143382);
attachedPlayerObject[objectid]=true; EditAttachedObject(playerid, freeslot2);
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
////////////////////////////////////
//////////////////////////////////////////////
////////////////////////////////////
////////////////////////////////////
//////////////////////////////////////////////
////////////////////////////////////
}
}
}
///////////////////////////
if(dialogid==88)
{
if(response)
{
switch(listitem)
{
case 0:
{
//ShowPlayerDialog(playerid,88,DIALOG_STYLE_LIST,"Дрехи","{FFFFFF}Часовник\nОчила\nШапка\nБандана\nКаска","Избери","Излезте");
ShowPlayerDialog(playerid,89,DIALOG_STYLE_LIST,"Часовници - $1000","{FFFFFF}Сребърен\nЗлатен\nЗелен\nСин камуфлаж\nКафяв камуфлаж","Избери","Излезте");
}
case 1:
{
ShowPlayerDialog(playerid,90,DIALOG_STYLE_LIST,"Очила - $1100","{FFFFFF}Тъмни\nСини\nЗелени\nОранжеви\nЖълти","Избери","Излезте");
}
case 2:
{
ShowPlayerDialog(playerid,91,DIALOG_STYLE_LIST,"Шапки - $1300","{FFFFFF}Бяла\nПолицейска\nСиня","Избери","Излезте");
}
case 3:
{
ShowPlayerDialog(playerid,92,DIALOG_STYLE_LIST,"Бандана - $1400","{FFFFFF}Черна\nСиня\nЗелена","Избери","Излезте");
}
case 4:
{
ShowPlayerDialog(playerid,93,DIALOG_STYLE_LIST,"Каска - $1500","{FFFFFF}Бяла\nРозова\nЧервена","Избери","Излезте");
}
}
}
}
if(dialogid==97)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
if(PlayerInfo[playerid][pAdmin]<3)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да гледаш командите за Висш Администратор!");
return 1;
}
new string2230[512];
new string2230result[2730];
format(string2230,512,"{FFFFFF}Команда{008000},\t{FF0000}Действие\n");
strcat(string2230result, string2230);
format(string2230,512,"{15D8CC}Висш Администратор\t{ffffff}Команди\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/mark\t {008000}- {FF0000}запазва позиция на картата\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/gotomark\t {008000}- {FF0000}Teleport до запазено място\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/setint\t {008000}- {FF0000}променя Interior\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/setworld\t {008000}- {FF0000}променя Virtual World\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/warn\t {008000}- {FF0000}предупреждава играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/gotodesert\t {008000}- {FF0000}Teleport до пустинята\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/readta\t {008000}- {FF0000}четене на TEST ADMIN чата\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/ta\t {008000}- {FF0000}писане в TEST ADMIN чата\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/sethp\t {008000}- {FF0000}промяна на процентите на живота на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/setarmour\t {008000}- {FF0000}промяна на процентите на жилетката на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/givegun\t {008000}- {FF0000}дава оръжие на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/adminclearchat\t {008000}- {FF0000}изчиства чата\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/gotomc\t {008000}- {FF0000}Teleport до планината\n");
strcat(string2230result, string2230);
//format(string2230,512,"{FFFFFF}/ajail\t {008000}- {FF0000}Jail с nickname\n");
//strcat(string2230result, string2230);
//format(string2230,512,"{FFFFFF}/veh\t {008000}- {FF0000}спуска превозно средство\n");
//strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/rban\t {008000}- {FF0000}бан чрез nickname\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/gotols\t {008000}- {FF0000}Teleport до LS\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/gotolv\t {008000}- {FF0000}Teleport до LV\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/gotosf\t {008000}- {FF0000}Teleport до SF\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/amute\t {008000}- {FF0000}MUTE в ADMIN чата\n");
strcat(string2230result, string2230);
//format(string2230,512,"{FFFFFF}/destroycar\t {008000}- {FF0000}унищожава превозно средство\n");
//strcat(string2230result, string2230);
//format(string2230,512,"{FFFFFF}/destroycars\t {008000}- {FF0000}унищожава всички пуснати превозни средства\n");
//strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/mute2\t {008000}- {FF0000}вечен MUTE\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/gotobank\t {008000}- {FF0000}Teleport до банката\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/lastonline\t {008000}- {FF0000}проверява кога човек е влизал за последно\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/gotohveh\t {008000}- {FF0000}Teleport до превозно средство на къща\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/checkbank\t {008000}- {FF0000}проверява сумата в нечий банков профил\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/block\t {008000}- {FF0000}блокира профил на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/togcb\t {008000}- {FF0000}наблюдение над всички CB чатове\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/togcb\t {008000}- {FF0000}наблюдение над всички CB чатове\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/nban\t {008000}- {FF0000}бан по nickname\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,98,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}SENIOR {008000}ADMIN LEVEL {FF0000}КОМАНДИ:",string2230result,"Напред","");
}
}
if(dialogid==101)
{
if(response)
{
if(strlen(inputtext)<1 || strlen(inputtext)>35)
{
SendClientMessage(playerid,COLOR_GRAD1,"Дължината на вашия Skype трябва да бъде от 1 до 35 символа!");
return 1;
}
format(accountfiles[playerid], 28, "%s.ini", pname[playerid]);
dini_Set(accountfiles[playerid], "pSkype", inputtext);
format(PlayerInfo[playerid][pSkype],36,inputtext);
SendClientMessage(playerid,0x32B4ACFF,"Вие добавихте вашия Skype");
}
}
if(dialogid==100)
{
if(!response)
{
format(accountfiles[playerid], 28, "%s.ini", pname[playerid]);
dini_Set(accountfiles[playerid], "pSkype", "");
format(PlayerInfo[playerid][pSkype],36,"");
SendClientMessage(playerid,0x32B4ACFF,"Вие премахнахте вашия Skype");
}
else
{
if(strlen(inputtext)<1 || strlen(inputtext)>35)
{
SendClientMessage(playerid,COLOR_GRAD1,"Дължината на вашия Skype трябва да бъде от 1 до 35 символа!");
return 1;
}
format(accountfiles[playerid], 28, "%s.ini", pname[playerid]);
dini_Set(accountfiles[playerid], "pSkype", inputtext);
format(PlayerInfo[playerid][pSkype],36,inputtext);
SendClientMessage(playerid,0x32B4ACFF,"Вие променихте вашия Skype");
}
}
if(dialogid==99)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
if(PlayerInfo[playerid][pAdmin]>=5)
{
new string2230[512];
new string2230result[2730];
format(string2230,512,"{FFFFFF}Команда{008000},\t{FF0000}Действие\n");
strcat(string2230result, string2230);
format(string2230,512,"{D88515}Притежател\t{ffffff}Команди\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/makechristmas\t {008000}- {FF0000}добавя/маха коледните обекти и послание при влизане\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/freevip\t {008000}- {FF0000}дава/маха безплатен VIP на вс. играчи\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/giveganglevel\t {008000}- {FF0000}дава ниво на банда\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/givegangep\t {008000}- {FF0000}дава EP на банда\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/givegangcash\t {008000}- {FF0000}дава Cash(пари) на банда\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/createbiz\t {008000}- {FF0000}създава бизнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/createhouse\t {008000}- {FF0000}създава къща\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/bizid\t {008000}- {FF0000}проверка на Bizz ID\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/createcooperation\t {008000}- {FF0000}създава кооперация\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/makeadmin\t {008000}- {FF0000}дава администраторски права\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/makeevent\t {008000}- {FF0000}дава EVENT ADMIN права\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/makeobjectadmin\t {008000}- {FF0000}дава OBJECT ADMIN права\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/makeifc\t {008000}- {FF0000}добавя играч в Intense Fuel Company\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/getifc\t {008000}- {FF0000}гони играч от Intense Fuel Company\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/makemanage\t {008000}- {FF0000}дава MANAGE ADMIN права\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/getadmin\t {008000}- {FF0000}гони играч от администраторския екип\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/getleader\t {008000}- {FF0000}маха лидерство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/makeleader\t {008000}- {FF0000}дава банда/мафия на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/aunmute\t {008000}- {FF0000}отглушава играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/makegleader\t {008000}- {FF0000}прави играч главен лидер на банда/мафия\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/settimeall\t {008000}- {FF0000}променя часа в играта\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/givelevel\t {008000}- {FF0000}дава ниво на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/restartturfs\t {008000}- {FF0000}рестартира териториите\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/givelevel\t {008000}- {FF0000}дава ниво на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/giveepall\t {008000}- {FF0000}дава EP на всички онлайн играчи\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/givecashall\t {008000}- {FF0000}дава пари на всички онлайн играчи\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/givecash\t {008000}- {FF0000}дава пари на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/getcash\t {008000}- {FF0000}взима пари от играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/gmx\t {008000}- {FF0000}рестартира сървъра\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/saveserver\t {008000}- {FF0000}запазва информацията на всички онлайн играчи\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/setcash\t {008000}- {FF0000}променя парите на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/muteall\t {008000}- {FF0000}заглушава всички онлайн играчи\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/unmuteall\t {008000}- {FF0000}отзаглушава всички онлайн играчи\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/etest\t {008000}- {FF0000}достъп до пускане на атака на територия с 1 човек\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/dtest\t {008000}- {FF0000}премахва достъпа за пускане на атака на територия с 1 човек\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/createclan\t {008000}- {FF0000}създава клан\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/makeclanleader\t {008000}- {FF0000}прави човек лидер на клан\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/admincheck, /admincheck2\t {008000}- {FF0000}Scripter проверки за някои неща\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,3501,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}OWNER {008000}ADMIN LEVEL {FF0000}КОМАНДИ:",string2230result,"Затвори","");
}
else
{
TextDrawHideForPlayer(playerid, Intro[0]);
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да гледаш командите за притежателите!");
}
}
}
if(dialogid==98)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
if(PlayerInfo[playerid][pAdmin]<4)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да гледаш командите за Главен Администратор!");
return 1;
}
new string2230[512];
new string2230result[2230];
format(string2230,512,"{FFFFFF}Команда{008000},\t{FF0000}Действие\n");
strcat(string2230result, string2230);
format(string2230,512,"{D88515}Главен Администратор\t{ffffff}Команди\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/startovte\t {008000}- {FF0000}пуска вот\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/endvote\t {008000}- {FF0000}прекратява вот\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/arefuelall\t {008000}- {FF0000}Refuel на всички п.с.\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/checkfuelcars\t {008000}- {FF0000}проверка на последния arefuelall\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/tspec\t {008000}- {FF0000}забранява/позволява /spec\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/tgoto\t {008000}- {FF0000}забранява/позволява /goto\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/timemute\t {008000}- {FF0000}MUTE по преценка на админ\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/timejail\t {008000}- {FF0000}JAIL по преценка на админ\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/istogged\t {008000}- {FF0000}проверка дали играч е скрил някой чат\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/cbccheck\t {008000}- {FF0000}проверка за CB Chanel\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/fixveh\t {008000}- {FF0000}поправка на превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/gotoveh\t {008000}- {FF0000}Teleport до някое превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/weather\t {008000}- {FF0000}промяна на Weather\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/arefuel\t {008000}- {FF0000}презареждане на превозно средство\n");
strcat(string2230result, string2230);
// format(string2230,512,"{FFFFFF}/jump\t {008000}- {FF0000}висок скок\n");
// strcat(string2230result, string2230);
//format(string2230,512,"{FFFFFF}/speed\t {008000}- {FF0000}голяма скорост\n");
//strcat(string2230result, string2230);
//format(string2230,512,"{FFFFFF}/fly\t {008000}- {FF0000}летене\n");
//strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/isadmin\t {008000}- {FF0000}проверка дали някой е ADMIN\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/islevel\t {008000}- {FF0000}проверка на Level\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/isevent\t {008000}- {FF0000}проверка за EVENT права\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/ismanage\t {008000}- {FF0000}проверка за MANAGE права\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/isvip\t {008000}- {FF0000}проверка за VIP\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/isleader\t {008000}- {FF0000}проверка за лидерство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/allevent\t {008000}- {FF0000}проверка за онлайн играчи с EVENT права\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/aviptext\t {008000}- {FF0000}промяна на VIP Text над нечия глава\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/acuff\t {008000}- {FF0000}закопчава играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/auncuff\t {008000}- {FF0000}премахва белезници\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/acuffed\t {008000}- {FF0000}онлайн играчи с белезници\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/god\t {008000}- {FF0000}Godemode ON/OFF\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/afon\t {008000}- {FF0000}Anti Fall of Bike ON\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/respawncars\t {008000}- {FF0000}RESPAWN на всички превозни средства\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/crespawncars\t {008000}- {FF0000}прекратяване на брояча за RESPAWN\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/askrescars\t {008000}- {FF0000}Запитване за RESPAWN CARS\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/caskrescars\t {008000}- {FF0000}спиране на запитването за RESPAWN CARS\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/checkaskers\t {008000}- {FF0000}кога последно е имало запитване\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/checkwarns\t {008000}- {FF0000}проверка за WARNS\n");
strcat(string2230result, string2230);
///acuffed /god /afon /afoff /respawncars\n/crespawncars /checkrescars /askrescars /caskrescars /checkaskers /checkwarns /ncheckwarns\n\n");
ShowPlayerDialog(playerid,99,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}HEAD {008000}ADMIN LEVEL {FF0000}КОМАНДИ:",string2230result,"Напред","");
}
}
if(dialogid==96)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
if(PlayerInfo[playerid][pAdmin]<2)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да гледаш командите за Администратор!");
return 1;
}
new string2230[512];
new string2230result[2230];
format(string2230,512,"{FFFFFF}Команда{008000},\t{FF0000}Действие\n");
strcat(string2230result, string2230);
format(string2230,512,"{40A08F}Администратор\t{ffffff}Команди\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/ismuted\t {008000}- {FF0000}проверява дали даден играч е заглушен\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/a\t {008000}- {FF0000}ADMIN CHAT\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/ip\t {008000}- {FF0000}проверка на IP\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/jailed\t {008000}- {FF0000}проверява за онлайн играчи в затвора\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/aka\t {008000}- {FF0000}проверява за всички профили на даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/slap\t {008000}- {FF0000}дига нагоре играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/akill\t {008000}- {FF0000}убива играч чрез команда\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/aduty\t {008000}- {FF0000}за да влезеш на ADMIN смяна(admin on-duty)\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/adutyskin\t {008000}- {FF0000}промяна на skin за ADMIN ON-DUTY\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/togadmin\t {008000}- {FF0000}заглушава администраторския чат\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/check\t {008000}- {FF0000}проверява нечия статистика\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/jail\t {008000}- {FF0000}вкарва играч в затвора\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/unjail\t {008000}- {FF0000}премахва играч от затвора\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/isjailed\t {008000}- {FF0000}проверява дали конкретен играч е в затвора\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/veh\t {008000}- {FF0000}създава превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/destroycar\t {008000}- {FF0000}унищожава превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/destroycars\t {008000}- {FF0000}унищожава всички превозни средства\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,97,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}ADMINISTRATOR {008000}ADMIN LEVEL {FF0000}КОМАНДИ:",string2230result,"Напред","");
}
}
if(dialogid==95)
{
if(response)
{
//
for(new i=0; i<35;i++)
{
if(listitem==i)
{
if(casetoys[playerid][i]!=-1)
{
new freeslot2=-1;
if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
{
freeslot2=8;
}
else if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
{
freeslot2=9;
}
if(freeslot2==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да носите повече от 2 дрехи, можете да ги свалите чрез /clothes!");
return 1;
}
if(casetoys[playerid][i]==19013
|| casetoys[playerid][i]==19039
|| casetoys[playerid][i]==19046
|| casetoys[playerid][i]==19050
|| casetoys[playerid][i]==19053)
{
new objectid=SetPlayerAttachedObject(playerid, freeslot2,casetoys[playerid][i],6);
attachedPlayerObject[objectid]=true;
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
casetoys[playerid][i]=-1;
}
if(casetoys[playerid][i]==19138
|| casetoys[playerid][i]==19140
|| casetoys[playerid][i]==19008
|| casetoys[playerid][i]==19007
|| casetoys[playerid][i]==19028)
{
new objectid=SetPlayerAttachedObject(playerid, freeslot2,casetoys[playerid][i], 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663);
attachedPlayerObject[objectid]=true;
casetoys[playerid][i]=-1;
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
if(casetoys[playerid][i]==18933
|| casetoys[playerid][i]==18636
|| casetoys[playerid][i]==18931)
{
new objectid=SetPlayerAttachedObject(playerid, freeslot2,casetoys[playerid][i], 2, 0.126454, 0.028436, 0.001652, 81.096549, 180.051704, 3.806360, 1.116688, 1.053331, 1.143382);
attachedPlayerObject[objectid]=true;
casetoys[playerid][i]=-1;
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
if(casetoys[playerid][i]==18891
|| casetoys[playerid][i]==18897
|| casetoys[playerid][i]==18898)
{
new objectid=SetPlayerAttachedObject(playerid, freeslot2,casetoys[playerid][i],2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858);
attachedPlayerObject[objectid]=true;
casetoys[playerid][i]=-1;
withbandana[playerid]=1;
aclothes[playerid]++;
SendClientMessage(playerid,0x00c0ffFF,"Clothes: Наместете облеклото си, както пожелаете");
}
if(casetoys[playerid][i]==18978
|| casetoys[playerid][i]==18979
|| casetoys[playerid][i]==18645)
{
new objectid=SetPlayerAttachedObject(playerid, freeslot2,casetoys[playerid][i], 2, 0.126454, 0.028436, 0.001652, 81.096549, 180.051704, 3.806360, 1.116688, 1.053331, 1.143382);
attachedPlayerObject[objectid]=true;
casetoys[playerid][i]=-1;
}
EditAttachedObject(playerid, freeslot2);
////
}
}
}
//
}
}
if(dialogid==94)
{
if(response)
{
new string560[25];
new string5602[560];
format(string5602,560,"");
new toys=0;
switch(listitem)
{
case 0:
{
for(new i=0; i<35; i++)
{
if(takenclothes[playerid][i]==0)
{
if(PlayerInfo[playerid][pClothes][i]==19013)
{
format(string560,25,"Сребърен часовник\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==19039)
{
format(string560,25,"Златен часовник\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==19046 )
{
format(string560,25,"Зелен часовник\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==19050)
{
format(string560,25,"Син часовник\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==19053)
{
format(string560,25,"Кафяв часовник\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==19138)
{
format(string560,25,"Тъмни очила\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==19140)
{
format(string560,25,"Сини очила\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==19008)
{
format(string560,25,"Зелени очила\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==19007)
{
format(string560,25,"Оранжеви очила\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==19028)
{
format(string560,25,"Жълти очила\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==18933)
{
format(string560,25,"Бяла шапка\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==18636)
{
format(string560,25,"Полицейска шапка\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==18931)
{
format(string560,25,"Синя шапка\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==18891)
{
toys++;
format(string560,25,"Черна бандана\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==18897)
{
format(string560,25,"Синя маска\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==18898)
{
format(string560,25,"Зелена бандана\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==18978)
{
format(string560,25,"Бяла каска\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==18979)
{
format(string560,25,"Розова каска\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
else if(PlayerInfo[playerid][pClothes][i]==18645)
{
format(string560,25,"Червена каска\n");
strcat(string5602, string560);
casetoys[playerid][toys]=PlayerInfo[playerid][pClothes][i];
toys++;
}
}
}
//takenclothes[playerid][freeslot]=1;
// da se vurna
if(toys>0)
{
ShowPlayerDialog(playerid,95,DIALOG_STYLE_LIST,"Дрехи",string5602,"Избери","Излезте");
}
else
{
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_LIST,"Дрехи","Вие нямате дрехи","Излезте","");
}
}
case 1:
{
if(aclothes[playerid]>0)
{
RemovePlayerAttachedObject(playerid,9);
SendClientMessage(playerid,0x32a852FF,"Вие свалихте вашите дрехи!");
RemovePlayerAttachedObject(playerid,8);
aclothes[playerid]=0;
withbandana[playerid]=0;
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате сложени дрехи!");
return 1;
}
}
///////////////
}
}
}
if(dialogid==103)
{
if(response)
{
new string223023[512];
new string22302result3[2713];
format(string223023,512,"{ffffff}Нови команди:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-------------{80BFFF}за клановете{ff0000}-------------\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/claninvite - кани играч в клана\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/leaveclan - напускаш клан\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/clanuninvite - гони от клан\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/clan - клан чат\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/clanmembers - онлайн членове\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/setclanrank - променя ранг\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/acceptclan - приемане на покана\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/cancelclan - отказ на покана\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/clanlock - заключва/отключва превозното средство за клана\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-------------{80BFFF}други{ff0000}-------------\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/buyganglevel - покупка на Gang Level\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/buygangcash - покупка на Gang пари\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Нови елементи:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Counter Strike игра с карта - De Dust 2\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Клановете се създават от администратор\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Броят на ранговете в клан се определят от администратор\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}При 6 звезди играчите са издирвани от армията(Delta Force)\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Клановете имат лични превозни средства, купени от лидер от Car Shop\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Клановете имат бази\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}В помощ на новите играчи, първия Level се купува автоматично\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}В помощ на новите играчи, първия Gang Level се купува автоматично\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}В помощ на новите играчи, първия Weapon Skill се купува автоматично, когато играч има Level 3\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}В помощ на новите играчи, първия VIP Level се купува автоматично, когато играч има Level 5\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Когато човек получи 1 level автоматично получава 1 level vip\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}ATM работят с пари, които се обновяват на всеки Payday\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Добавени са нови атмосферни времена\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Добавени са магазини за коли към някои банди\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Когато играч напише грешна команда, ще му излиза на български текста\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Когато играч е в клан, зад името му ще пише клана\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Добавени са постижения чрез които се печелят EP и пари\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}VIP играчите могат да си поправят превозното средство чрез бутон(2)\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Лидерите могат да разменят 80 EP от бандата за $100, 000 в бандата\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Бандите под 10 level няма да могат да нападат територии, които са твърде далеко от техните\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,107,DIALOG_STYLE_MSGBOX,"{ffffff}Новини",string22302result3,"Напред","Затвори");
}
}
if(dialogid==102)
{
if(response)
{
switch(listitem)
{
//
case 0:
{
SetPlayerRaceCheckpoint(playerid,2 ,BizInfo[selectedBiz[playerid][1]][bX],BizInfo[selectedBiz[playerid][1]][bY],
BizInfo[selectedBiz[playerid][1]][bZ] ,BizInfo[selectedBiz[playerid][1]][bX],BizInfo[selectedBiz[playerid][1]][bY],
BizInfo[selectedBiz[playerid][1]][bZ], 3.0);
selectedBiz2[playerid]=selectedBiz[playerid][1];
}
case 1:
{
SetPlayerRaceCheckpoint(playerid,2 ,BizInfo[selectedBiz[playerid][2]][bX],BizInfo[selectedBiz[playerid][2]][bY],
BizInfo[selectedBiz[playerid][2]][bZ] ,BizInfo[selectedBiz[playerid][2]][bX],BizInfo[selectedBiz[playerid][2]][bY],
BizInfo[selectedBiz[playerid][2]][bZ], 3.0);
selectedBiz2[playerid]=selectedBiz[playerid][2];
}
case 2:
{
SetPlayerRaceCheckpoint(playerid,2 ,BizInfo[selectedBiz[playerid][3]][bX],BizInfo[selectedBiz[playerid][3]][bY],
BizInfo[selectedBiz[playerid][3]][bZ] ,BizInfo[selectedBiz[playerid][3]][bX],BizInfo[selectedBiz[playerid][3]][bY],
BizInfo[selectedBiz[playerid][3]][bZ], 3.0);
selectedBiz2[playerid]=selectedBiz[playerid][3];
}
case 3:
{
SetPlayerRaceCheckpoint(playerid,2 ,BizInfo[selectedBiz[playerid][4]][bX],BizInfo[selectedBiz[playerid][4]][bY],
BizInfo[selectedBiz[playerid][4]][bZ] ,BizInfo[selectedBiz[playerid][4]][bX],BizInfo[selectedBiz[playerid][4]][bY],
BizInfo[selectedBiz[playerid][4]][bZ], 3.0);
selectedBiz2[playerid]=selectedBiz[playerid][4];
}
case 4:
{
SetPlayerRaceCheckpoint(playerid,2 ,BizInfo[selectedBiz[playerid][5]][bX],BizInfo[selectedBiz[playerid][5]][bY],
BizInfo[selectedBiz[playerid][5]][bZ] ,BizInfo[selectedBiz[playerid][5]][bX],BizInfo[selectedBiz[playerid][5]][bY],
BizInfo[selectedBiz[playerid][5]][bZ], 3.0);
selectedBiz2[playerid]=selectedBiz[playerid][5];
}
case 5:
{
SetPlayerRaceCheckpoint(playerid,2 ,BizInfo[selectedBiz[playerid][6]][bX],BizInfo[selectedBiz[playerid][6]][bY],
BizInfo[selectedBiz[playerid][6]][bZ] ,BizInfo[selectedBiz[playerid][6]][bX],BizInfo[selectedBiz[playerid][6]][bY],
BizInfo[selectedBiz[playerid][6]][bZ], 3.0);
selectedBiz2[playerid]=selectedBiz[playerid][6];
}
case 6:
{
SetPlayerRaceCheckpoint(playerid,2 ,BizInfo[selectedBiz[playerid][7]][bX],BizInfo[selectedBiz[playerid][7]][bY],
BizInfo[selectedBiz[playerid][7]][bZ] ,BizInfo[selectedBiz[playerid][7]][bX],BizInfo[selectedBiz[playerid][7]][bY],
BizInfo[selectedBiz[playerid][7]][bZ], 3.0);
selectedBiz2[playerid]=selectedBiz[playerid][7];
}
case 7:
{
SetPlayerRaceCheckpoint(playerid,2 ,BizInfo[selectedBiz[playerid][8]][bX],BizInfo[selectedBiz[playerid][8]][bY],
BizInfo[selectedBiz[playerid][8]][bZ] ,BizInfo[selectedBiz[playerid][8]][bX],BizInfo[selectedBiz[playerid][8]][bY],
BizInfo[selectedBiz[playerid][8]][bZ], 3.0);
selectedBiz2[playerid]=selectedBiz[playerid][8];
}
case 8:
{
SetPlayerRaceCheckpoint(playerid,2 ,BizInfo[selectedBiz[playerid][9]][bX],BizInfo[selectedBiz[playerid][9]][bY],
BizInfo[selectedBiz[playerid][9]][bZ] ,BizInfo[selectedBiz[playerid][9]][bX],BizInfo[selectedBiz[playerid][9]][bY],
BizInfo[selectedBiz[playerid][9]][bZ], 3.0);
selectedBiz2[playerid]=selectedBiz[playerid][9];
}
case 9:
{
SetPlayerRaceCheckpoint(playerid,2 ,BizInfo[selectedBiz[playerid][10]][bX],BizInfo[selectedBiz[playerid][10]][bY],
BizInfo[selectedBiz[playerid][10]][bZ] ,BizInfo[selectedBiz[playerid][10]][bX],BizInfo[selectedBiz[playerid][10]][bY],
BizInfo[selectedBiz[playerid][10]][bZ], 3.0);
selectedBiz2[playerid]=selectedBiz[playerid][10];
}
}
SendClientMessage(playerid,COLOR_WHITE,"Biz GPS: Следвайте червения маркер за да отидете до избраното място!");
//
}
}
if(dialogid==87)
{
if(response)
{
switch(listitem)
{
case 0:
{
SetPlayerRaceCheckpoint(playerid,2 ,HouseInfo[selectedHouse[playerid][1]][hX],HouseInfo[selectedHouse[playerid][1]][hY],
HouseInfo[selectedHouse[playerid][1]][hZ] ,HouseInfo[selectedHouse[playerid][1]][hX],HouseInfo[selectedHouse[playerid][1]][hY],
HouseInfo[selectedHouse[playerid][1]][hZ], 3.0);
selectedHouse2[playerid]=selectedHouse[playerid][1];
}
case 1:
{
SetPlayerRaceCheckpoint(playerid,2 ,HouseInfo[selectedHouse[playerid][2]][hX],HouseInfo[selectedHouse[playerid][2]][hY],
HouseInfo[selectedHouse[playerid][2]][hZ] ,HouseInfo[selectedHouse[playerid][2]][hX],HouseInfo[selectedHouse[playerid][2]][hY],
HouseInfo[selectedHouse[playerid][2]][hZ], 3.0);
selectedHouse2[playerid]=selectedHouse[playerid][2];
}
case 2:
{
SetPlayerRaceCheckpoint(playerid,2 ,HouseInfo[selectedHouse[playerid][3]][hX],HouseInfo[selectedHouse[playerid][3]][hY],
HouseInfo[selectedHouse[playerid][3]][hZ] ,HouseInfo[selectedHouse[playerid][3]][hX],HouseInfo[selectedHouse[playerid][3]][hY],
HouseInfo[selectedHouse[playerid][3]][hZ], 3.0);
selectedHouse2[playerid]=selectedHouse[playerid][3];
}
case 3:
{
SetPlayerRaceCheckpoint(playerid,2 ,HouseInfo[selectedHouse[playerid][4]][hX],HouseInfo[selectedHouse[playerid][4]][hY],
HouseInfo[selectedHouse[playerid][4]][hZ],HouseInfo[selectedHouse[playerid][4]][hX],HouseInfo[selectedHouse[playerid][4]][hY],
HouseInfo[selectedHouse[playerid][4]][hZ], 3.0);
selectedHouse2[playerid]=selectedHouse[playerid][4];
}
case 4:
{
SetPlayerRaceCheckpoint(playerid,2 ,HouseInfo[selectedHouse[playerid][5]][hX],HouseInfo[selectedHouse[playerid][5]][hY],
HouseInfo[selectedHouse[playerid][5]][hZ] ,HouseInfo[selectedHouse[playerid][5]][hX],HouseInfo[selectedHouse[playerid][5]][hY],
HouseInfo[selectedHouse[playerid][5]][hZ], 3.0);
selectedHouse2[playerid]=selectedHouse[playerid][5];
}
case 5:
{
SetPlayerRaceCheckpoint(playerid,2 ,HouseInfo[selectedHouse[playerid][6]][hX],HouseInfo[selectedHouse[playerid][6]][hY],
HouseInfo[selectedHouse[playerid][6]][hZ] ,HouseInfo[selectedHouse[playerid][6]][hX],HouseInfo[selectedHouse[playerid][6]][hY],
HouseInfo[selectedHouse[playerid][6]][hZ], 3.0);
selectedHouse2[playerid]=selectedHouse[playerid][6];
}
case 6:
{
SetPlayerRaceCheckpoint(playerid,2 ,HouseInfo[selectedHouse[playerid][7]][hX],HouseInfo[selectedHouse[playerid][7]][hY],
HouseInfo[selectedHouse[playerid][7]][hZ] ,HouseInfo[selectedHouse[playerid][7]][hX],HouseInfo[selectedHouse[playerid][7]][hY],
HouseInfo[selectedHouse[playerid][7]][hZ], 3.0);
selectedHouse2[playerid]=selectedHouse[playerid][7];
}
case 7:
{
SetPlayerRaceCheckpoint(playerid,2 ,HouseInfo[selectedHouse[playerid][8]][hX],HouseInfo[selectedHouse[playerid][8]][hY],
HouseInfo[selectedHouse[playerid][8]][hZ] ,HouseInfo[selectedHouse[playerid][8]][hX],HouseInfo[selectedHouse[playerid][8]][hY],
HouseInfo[selectedHouse[playerid][8]][hZ], 3.0);
selectedHouse2[playerid]=selectedHouse[playerid][8];
}
case 8:
{
SetPlayerRaceCheckpoint(playerid,2 ,HouseInfo[selectedHouse[playerid][9]][hX],HouseInfo[selectedHouse[playerid][9]][hY],
HouseInfo[selectedHouse[playerid][9]][hZ] ,HouseInfo[selectedHouse[playerid][9]][hX],HouseInfo[selectedHouse[playerid][9]][hY],
HouseInfo[selectedHouse[playerid][9]][hZ], 3.0);
selectedHouse2[playerid]=selectedHouse[playerid][9];
}
case 9:
{
SetPlayerRaceCheckpoint(playerid,2 ,HouseInfo[selectedHouse[playerid][10]][hX],HouseInfo[selectedHouse[playerid][10]][hY],
HouseInfo[selectedHouse[playerid][10]][hZ] ,HouseInfo[selectedHouse[playerid][10]][hX],HouseInfo[selectedHouse[playerid][10]][hY],
HouseInfo[selectedHouse[playerid][10]][hZ], 3.0);
selectedHouse2[playerid]=selectedHouse[playerid][10];
}
}
selectedHouse2Suma[playerid]=HouseInfo[selectedHouse2[playerid]][hLevel]*5+2200;
SendClientMessage(playerid,0xB55900FF,"Pizza Job: Следвайте червения квадрат за да отидете до къщата!");
}
}
if(dialogid==86)
{
if(strval(inputtext)>0)
{
if(privatecars[GetPlayerVehicleID(playerid)]==1)
{
if(vehobjects[GetPlayerVehicleID(playerid)]>=strval(inputtext) || testmode[playerid]==1)
{
new objNumber=strval(inputtext);
objNumber++;
new vehicleid=GetPlayerVehicleID(playerid);
objectut[playerid]=privatecarobject[vehicleid][objNumber];
selectedvehobject[playerid]=objNumber;
new selectedID=selectedvehobject[playerid];
DestroyDynamicObject(objectut[playerid]);
privVehObjectForEditing[playerid] = CreateDynamicObject(vObject[vehicleid][selectedID],vObjectX[vehicleid][selectedID], vObjectY[vehicleid][selectedID],
vObjectofz[vehicleid][selectedID], vObjectfRotX[vehicleid][selectedID], vObjectfRotY[vehicleid][selectedID], vObjectfRotofaz[vehicleid][selectedID],GetPlayerVirtualWorld(playerid));
AttachDynamicObjectToVehicle(privVehObjectForEditing[playerid], vehicleid, vObjectX[vehicleid][selectedID], vObjectY[vehicleid][selectedID],
vObjectofz[vehicleid][selectedID], vObjectfRotX[vehicleid][selectedID], vObjectfRotY[vehicleid][selectedID], vObjectfRotofaz[vehicleid][selectedID]);
//EditAttachedDynamicObject(playerid,privVehObjectForEditing[playerid]);
/*
FROM BEFORE ACCEPT CREATE OBJECT
new Float: px, Float: py, Float:pz;
GetVehiclePos(vehicleid,px,py,pz);
privVehObjectBeforeAccept[playerid] = CreateDynamicObject(objectid,px, py, pz, 0.0, 0.0, 0.0,GetPlayerVirtualWorld(playerid));
vObject[vehicleid][vehobjectsloaded[vehicleid]] = objectid;
SendClientMessage(playerid,0x00ff00ff,"Вие добавихте обект към вашето лично превозно средство.");
EditDynamicObject(playerid, privVehObjectBeforeAccept[playerid]);
*/
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Грешно ID!");
}
}
}
else
{
}
}
if(dialogid==85)
{
if(response)
{
if(GetPlayerVehicleID(playerid)==-1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да сте във вашето лично превозно средство!");
}
new mycar;
switch(listitem)
{
case 0:
{
if(privatecars[GetPlayerVehicleID(playerid)]==1)
{
mycar=GetPlayerVehicleID(playerid);
if(vehobjects[GetPlayerVehicleID(playerid)]==-1)
{
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"Наместване","{ffffff}Вашето превозно средство няма обекти!","Затвори","");
return 1;
}
}
new formatstring[960];
new formatstring2[30];
format(formatstring,960,"{ffffff}Въведете ID на обекта\n{339933}");
for(new i=0; i<=vehobjects[mycar];i++)
{
if(vObject[mycar][i]==1076)
{
format(formatstring2,30,"ID: %d - Гума\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==1080)
{
format(formatstring2,30,"ID: %d - Гума\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==1025)
{
format(formatstring2,30,"ID: %d - Гума\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==1060)
{
format(formatstring2,30,"ID: %d - Спойлер\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==1049)
{
format(formatstring2,30,"ID: %d - Спойлер\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==1163)
{
format(formatstring2,30,"ID: %d - Спойлер\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==18646)
{
format(formatstring2,30,"ID: %d - Сирена\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==1141)
{
format(formatstring2,30,"ID: %d - Броня\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==1148)
{
format(formatstring2,30,"ID: %d - Броня\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==1032)
{
format(formatstring2,30,"ID: %d - Капак\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==1033)
{
format(formatstring2,30,"ID: %d - Капак\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==18648)
{
format(formatstring2,30,"ID: %d - Син неон\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==18647)
{
format(formatstring2,30,"ID: %d - Червен неон\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==18652)
{
format(formatstring2,30,"ID: %d - Бял неон\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==18651)
{
format(formatstring2,30,"ID: %d - Розов неон\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==1010)
{
format(formatstring2,30,"ID: %d - Нитро\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==1009)
{
format(formatstring2,30,"ID: %d - Нитро\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==362)
{
format(formatstring2,30,"ID: %d - Minigun\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==355)
{
format(formatstring2,30,"ID: %d - AK-47\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==18694)
{
format(formatstring2,30,"ID: %d - Огън\n",i+1);
strcat(formatstring,formatstring2);
}
if(vObject[mycar][i]==18692)
{
format(formatstring2,30,"ID: %d - Огън\n",i+1);
strcat(formatstring,formatstring2);
}
}
ShowPlayerDialog(playerid,86,DIALOG_STYLE_INPUT,"Наместване",formatstring,"Наместете","Затвори");
}
case 1:
{
ShowPlayerDialog(playerid,83,DIALOG_STYLE_LIST,"Части","Гума 1 - $8000\nГума 2 - $8000\nГума 3 - $8000\nСпойлер 1 - $8000\nСпойлер 2 - $8000\nСпойлер 3 - $8000\nСирена - $12000\nБроня 1 - $12000\nБроня 2 - $12000\nКапак 1 - $12000\nКапак 2 - $12000\nСин неон - $22000\nЧервен неон - $22000\nБял неон - $22000\nРозов неон - $22000\nНитро 1 - $22000\nНитро 2 - $32000\nMinigun - $32000\nAK-47 - $32000\nОгън 1 - $32000\nОгън 2 - $32000","Купете","Затвори");
}
}
}
}
if(dialogid==84)
{
if(response)
{
AddRealObjectNoRemove(playerid);
}
if(!response)
{
if(privatecars[GetPlayerVehicleID(playerid)]==1)
{
vehobjects[GetPlayerVehicleID(playerid)]--;
vehobjectsloaded[GetPlayerVehicleID(playerid)]--;
DestroyDynamicObject(privatecarobject[GetPlayerVehicleID(playerid)][vehobjectsloaded[GetPlayerVehicleID(playerid)]]);
}
SendClientMessage(playerid,COLOR_WHITE,"Вие се отказахте от обекта!");
DestroyDynamicObject(privVehObjectBeforeAccept[playerid]);
}
return 1;
}
if(dialogid==83)
{
if(response)
{
new Float:px, Float:py, Float:pz;
GetPlayerPos(playerid, px, py, pz);
switch(listitem)
{
case 0:
{
privateObjectPrice[playerid]=8000;
AddPrivateObject(playerid,1076);
}
case 1:
{
privateObjectPrice[playerid]=8000;
AddPrivateObject(playerid,1077);
}
case 2:
{
privateObjectPrice[playerid]=8000;
AddPrivateObject(playerid,1078);
}
case 3:
{
privateObjectPrice[playerid]=8000;
AddPrivateObject(playerid,1060);
}
case 4:
{
privateObjectPrice[playerid]=8000;
AddPrivateObject(playerid,1061);
}
case 5:
{
privateObjectPrice[playerid]=8000;
AddPrivateObject(playerid,1063);
}
case 6:
{
privateObjectPrice[playerid]=12000;
AddPrivateObject(playerid,18646);
}
case 7:
{
privateObjectPrice[playerid]=12000;
AddPrivateObject(playerid,1148);
}
case 8:
{
privateObjectPrice[playerid]=12000;
AddPrivateObject(playerid,1141);
}
case 9:
{
privateObjectPrice[playerid]=12000;
AddPrivateObject(playerid,1032);
}
case 10:
{
privateObjectPrice[playerid]=12000;
AddPrivateObject(playerid,1033);
}
case 11:
{
privateObjectPrice[playerid]=22000;
AddPrivateObject(playerid,18648);
}
case 12:
{
privateObjectPrice[playerid]=22000;
AddPrivateObject(playerid,18647);
}
case 13:
{
privateObjectPrice[playerid]=22000;
AddPrivateObject(playerid,18652);
}
case 14:
{
privateObjectPrice[playerid]=22000;
AddPrivateObject(playerid,18651);
}
case 15:
{
privateObjectPrice[playerid]=22000;
AddPrivateObject(playerid,1010);
}
case 16:
{
privateObjectPrice[playerid]=32000;
AddPrivateObject(playerid,1009);
}
case 17:
{
privateObjectPrice[playerid]=32000;
AddPrivateObject(playerid,362);
}
case 18:
{
privateObjectPrice[playerid]=32000;
AddPrivateObject(playerid,355);
}
case 19:
{
AddPrivateObject(playerid,32000);
}
case 20:
{
AddPrivateObject(playerid,32000);
}
}
if(PlayerInfo[playerid][pCash]<privateObjectPrice[playerid])
{
SendClientMessage(playerid,COLOR_RED,"Нямаш достатъчно пари за този обект!");
DestroyDynamicObject(privVehObjectBeforeAccept[playerid]);
if(driver[playerid] == 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в личното си превозно средство като шофьор!");
return 1;
}
ShowPlayerDialog(playerid,85,DIALOG_STYLE_LIST,"Части","{FFFFFF}Наместване\nНов обект","Избери","Излезте");
return 1;
}
else
{
GivePlayerCash(playerid,-privateObjectPrice[playerid]);
}
}
}
if(dialogid==116)
{
if(response)
{
driftvehC2[playerid]=strval(inputtext);
if(driftveh[playerid]>-1)
{
if(IsValidVehicle(driftveh[playerid]))
{
DestroyVehicle(driftveh[playerid]);
}
}
driftveh[playerid]=AddStaticVehicle(driftvehID[playerid],X[playerid],Y[playerid],Z[playerid],0,driftvehC1[playerid],driftvehC2[playerid]);
SendClientMessage(playerid,0x7BFD07FF,"SERVER: Вие пуснахте успешно кола!");
SetVehicleVirtualWorld(driftveh[playerid], 2);
PutPlayerInVehicle(playerid,driftveh[playerid],0);
vehfuel[driftveh[playerid]]=100;
}
}
if(dialogid==115)
{
if(response)
{
driftvehC1[playerid]=strval(inputtext);
ShowPlayerDialog(playerid,116,DIALOG_STYLE_INPUT,"{AFFD07}C{7BFD07}O{07FDBA}L{07EEFD}O{FD07EA}R","{FD07EA}COLOR ID 2:","Промени","Затвори");
}
}
if(dialogid==114)
{
if(response)
{
if(listitem==0)
{
driftvehID[playerid]=562;
}
else if(listitem==1)
{
driftvehID[playerid]=451;
}
else if(listitem==2)
{
driftvehID[playerid]=541;
}
else if(listitem==3)
{
driftvehID[playerid]=560;
}
else if(listitem==4)
{
driftvehID[playerid]=506;
}
else if(listitem==5)
{
driftvehID[playerid]=411;
}
else if(listitem==6)
{
driftvehID[playerid]=415;
}
else if(listitem==7)
{
driftvehID[playerid]=559;
}
else if(listitem==8)
{
driftvehID[playerid]=603;
}
else if(listitem==9)
{
driftvehID[playerid]=558;
}
else if(listitem==10)
{
driftvehID[playerid]=589;
}
ShowPlayerDialog(playerid,115,DIALOG_STYLE_INPUT,"{AFFD07}C{7BFD07}O{07FDBA}L{07EEFD}O{FD07EA}R","{00ff00}COLOR ID 1:","Промени","Затвори");
}
}
if(dialogid==113)
{
if(response)
{
if(listitem==0)
{
new string2230[512];
new string2230result[2100];
format(string2230,512,"{FF0000}                  Бонуси\n");
strcat(string2230result, string2230);
strcat(string2230result, "{00FF00}========================================");
strcat(string2230result, "{00FF00}========================================");
format(string2230,512,"{00FF00}\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF} \n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 1, Newbie\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Когато вземеш пари от мъртъв играч ще получиш $250, а когато умреш губиш $50\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 2, Silver\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- На всеки Payday получаваш 1EP и $1000\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- С копчето 2 ще си поправяш превозното средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 3, Gold\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- На всеки Payday получаваш 2EP и $2000\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 4, Platinum\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- На всеки Payday получаваш 3EP и $3000\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- При всеки SPAWN те пуска с 100 ARMOUR\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Ще имаш закачен 3D текст на главата - VIP\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Ще имаш лазер на оръжията - M4 и MP5\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 5, Master\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- На всеки Payday получаваш 4EP и $4000\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- При всеки SPAWN ще те пуска с 5 гранати\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 6, Super\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- На всеки Payday получаваш 5EP и $5000\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- При всеки SPAWN ще те пуска с още 5 гранати\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Когато си в кола и натиснеш Y превозното средство ще се FLIP-ва\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}-- Kaто убиеш играч ще получаваш $500\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}Цъкни на бутона Команди за да видиш всички VIP команди \n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,4,DIALOG_STYLE_MSGBOX,"{FF0000}VIP БОНУСИ",string2230result,"Команди","Затвори");
}
}
}
if(dialogid==112)
{
if(response)
{
new string2230[512];
new string2230result[2100];
format(string2230,512,"{FF0000}                  Бонуси\n");
strcat(string2230result, string2230);
strcat(string2230result, "{00FF00}========================================");
strcat(string2230result, "{00FF00}========================================");
format(string2230,512,"{00FF00}\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF} \n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 1, Newbie\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Когато вземеш пари от мъртъв играч ще получиш $250, а когато умреш губиш $50\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 2, Silver\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- На всеки Payday получаваш 1EP и $1000\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- С копчето 2 ще си поправяш превозното средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 3, Gold\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- На всеки Payday получаваш 2EP и $2000\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 4, Platinum\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- На всеки Payday получаваш 3EP и $3000\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- При всеки SPAWN те пуска с 100 ARMOUR\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Ще имаш закачен 3D текст на главата - VIP\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Ще имаш лазер на оръжията - M4 и MP5\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 5, Master\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- На всеки Payday получаваш 4EP и $4000\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- При всеки SPAWN ще те пуска с 5 гранати\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}>> {33CCFF}VIP Level 6, Super\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- На всеки Payday получаваш 5EP и $5000\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- При всеки SPAWN ще те пуска с още 5 гранати\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}--- Когато си в кола и натиснеш Y превозното средство ще се FLIP-ва\n");
strcat(string2230result, string2230);
format(string2230,512,"{33cc33}-- Kaто убиеш играч ще получаваш $500\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}Цъкни на бутона Команди за да видиш всички VIP команди \n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,4,DIALOG_STYLE_MSGBOX,"{FF0000}VIP БОНУСИ",string2230result,"Команди","Затвори");
}
else if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
}
if(dialogid==111)
{
if(response)
{
if(listitem==0)
{
new string223023[512];
new string22302result3[2213];
format(string223023,512,"{47d1d1}---------[ Правила, отнасящи се до Хаковете ]---------\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ccccff}Забранени са всички помощни средства от рода на:\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-Troll Hack,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-Fly,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-Wall Hack,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-Aimbot,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-Cheat Engine\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-- и всякакви други хакове --\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{3399ff}     [Наказания]     \n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}Хаковете, които нямат определено наказание тук подлежат на преценка на администратор,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}Ако сметнете, че администраторът Е ДАЛ твърде строго/леко наказание, съобщете на притежателите\n\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   Troll Hack: BAN\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   AimBot: BAN\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   Wall Hack: WARN\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   FLY: BAN\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   Cheat ENGINE: ЗАВИСИ ОТ ИЗПОЛЗВАНИЯ ХАК, СЪЗДАДЕН ТАМ\n");
strcat(string22302result3, string223023);
format(string223023,512,"{47d1d1}---------[ Всеки играч, прочел тези правила е длъжен да бъде съгласен с тях за играе тук ]---------\n");
strcat(string22302result3, string223023);
format(string223023,512,"{47d1d1}---------[ Всяко достатъчно голямо наказание се публикува във Форума, задължително ]---------\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"{FFFFFF}--INTENSE {33cc33}SERVER {FF0000}Правила--",string22302result3,"Затвори","");
}
else if(listitem==1)
{
new string223023[512];
new string22302result3[2213];
format(string223023,512,"{47d1d1}---------[ Правила, отнасящи се до Начина на игра ]---------\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ccccff}Забранени са смущенията в играта, като:\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-SPAM,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-ОБИДИ,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-ИЗМАМИ,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-РЕКЛАМИ НА СЪРВЪРИ,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-- и всякакъв друг начин нарушение на нормалната игра --\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{3399ff}     [Наказания]     \n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}Смущенията, които нямат определено наказание тук подлежат на преценка на администратор,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}Ако сметнете, че администраторът Е ДАЛ твърде строго/леко наказание, съобщете на притежателите\n\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   SPAM: MUTE\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   ОБИДИ: MUTE\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   РЕКЛАМИ НА СЪРВЪРИ: BAN\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   ИЗМАМИ: BAN\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   Администраторите трябва да обяснят на играча, че смущава играта, преди да предприемат действия, ако наказанието не е BAN\n");
strcat(string22302result3, string223023);
format(string223023,512,"{47d1d1}---------[ Всеки играч, прочел тези правила е длъжен да бъде съгласен с тях за играе тук ]---------\n");
strcat(string22302result3, string223023);
format(string223023,512,"{47d1d1}---------[ Всяко достатъчно голямо наказание се публикува във Форума, задължително ]---------\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"{FFFFFF}--INTENSE {33cc33}SERVER {FF0000}Правила--",string22302result3,"Затвори","");
}
else if(listitem==2)
{
new string223023[512];
new string22302result3[2213];
format(string223023,512,"{47d1d1}---------[ Правила, отнасящи се до Администраторите ]---------\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ccccff}Забранени са всякакви прекрачвания на правилата, като:\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-Игра с командите,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-Заплахи към играчите,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-Неспазване на инструкциите,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-Наказанията да не бъдат публикувани, или да са измислени от тях\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-Да не бъде предупреден играчът, ако наказанието е достатъчно леко\n");
strcat(string22302result3, string223023);
format(string223023,512,"{8080ff}-- и всякакъв друг начин нарушение на нормалната игра --\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{3399ff}     [Наказания]     \n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}Нарушенията, които нямат определено наказание тук подлежат на преценка на администратор,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}Ако сметнете, че администраторът НЕ Е ДОСТОЕН ЗА ПОСТА СИ, напишете публикация във ФОРУМА с достатъчно ясно обяснение\n\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   Игра с командите(Вреда с тях): AWARN\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   Заплахи: AWARN\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   Неспазване на инструкциите: AWARN\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   Наказание без пояснение на играч, ако то е леко: AWARN\n");
strcat(string22302result3, string223023);
format(string223023,512,"{1a8cff}   Администраторите тук се подбират по доверие на Притежателите, надяваме се те да си спазват правилата\n");
strcat(string22302result3, string223023);
format(string223023,512,"{47d1d1}---------[ Всеки играч, прочел тези правила е длъжен да бъде съгласен с тях за играе тук ]---------\n");
strcat(string22302result3, string223023);
format(string223023,512,"{47d1d1}---------[ Всяко достатъчно голямо наказание се публикува във Форума, задължително ]---------\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"{FFFFFF}--INTENSE {33cc33}SERVER {FF0000}Правила--",string22302result3,"Затвори","");
}
}
}
if(dialogid==110)
{
if(response)
{
if(lottoopen==1)
{
new formatformat[256];
if(listitem==0)
{
new rndnum=randomex(0,4);
if(rndnum<=1)
{
forplayer[0]+=1;
format(formatformat,256,"[Лична Колекция] %s избра една стъпка напред, тя е за играч N 1",pname[playerid]);
SendClientMessageToAll(0xE60000FF, formatformat);
format(formatformat,256,"Играч 1: %d, Играч 2: %d, Играч 3: %d стъпки",forplayer[0],forplayer[1],forplayer[2]);
SetDynamicObjectMaterialText(display[1] , 0 , formatformat , OBJECT_MATERIAL_SIZE_256x128, "Arial", 15, 0, 0xC81717FF, 0x0000FFFF,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
return 1;
}
if(rndnum>=3)
{
forplayer[2]+=1;
format(formatformat,256,"[Лична Колекция] %s избра една стъпка напред, тя е за играч N 3",pname[playerid]);
SendClientMessageToAll(0xE60000FF, formatformat);
format(formatformat,256,"Играч 1: %d, Играч 2: %d, Играч 3: %d стъпки",forplayer[0],forplayer[1],forplayer[2]);
SetDynamicObjectMaterialText(display[1] , 0 , formatformat , OBJECT_MATERIAL_SIZE_256x128, "Arial", 15, 0, 0xC81717FF, 0x0000FFFF,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
return 1;
}
if(rndnum==2)
{
forplayer[1]+=1;
format(formatformat,256,"[Лична Колекция] %s избра една стъпка напред, тя е за играч N 2",pname[playerid]);
SendClientMessageToAll(0xE60000FF, formatformat);
format(formatformat,256,"Играч 1: %d, Играч 2: %d, Играч 3: %d стъпки",forplayer[0],forplayer[1],forplayer[2]);
SetDynamicObjectMaterialText(display[1] , 0 , formatformat , OBJECT_MATERIAL_SIZE_256x128, "Arial", 15, 0, 0xC81717FF, 0x0000FFFF,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
return 1;
}
}
else if(listitem==1)
{
new rndnum=randomex(0,34);
if(rndnum<=12)
{
forplayer[0]+=2;
format(formatformat,256,"[Лична Колекция] %s избра две стъпки напред, те са за играч N 1",pname[playerid]);
SendClientMessageToAll(0xE60000FF, formatformat);
format(formatformat,256,"Играч 1: %d, Играч 2: %d, Играч 3: %d стъпки",forplayer[0],forplayer[1],forplayer[2]);
SetDynamicObjectMaterialText(display[1] , 0 , formatformat , OBJECT_MATERIAL_SIZE_256x128, "Arial", 15, 0, 0xC81717FF, 0x0000FFFF,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
return 1;
}
if(rndnum>=13 && rndnum<=19)
{
forplayer[2]+=2;
format(formatformat,256,"[Лична Колекция] %s избра две стъпки напред, те са за играч N 3",pname[playerid]);
SendClientMessageToAll(0xE60000FF, formatformat);
format(formatformat,256,"Играч 1: %d, Играч 2: %d, Играч 3: %d стъпки",forplayer[0],forplayer[1],forplayer[2]);
SetDynamicObjectMaterialText(display[1] , 0 , formatformat , OBJECT_MATERIAL_SIZE_256x128, "Arial", 15, 0, 0xC81717FF, 0x0000FFFF,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
return 1;
}
if(rndnum>=20)
{
forplayer[1]+=2;
format(formatformat,256,"[Лична Колекция] %s избра две стъпки напред, те са за играч N 2",pname[playerid]);
SendClientMessageToAll(0xE60000FF, formatformat);
format(formatformat,256,"Играч 1: %d, Играч 2: %d, Играч 3: %d стъпки",forplayer[0],forplayer[1],forplayer[2]);
SetDynamicObjectMaterialText(display[1] , 0 , formatformat , OBJECT_MATERIAL_SIZE_256x128, "Arial", 15, 0, 0xC81717FF, 0x0000FFFF,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
return 1;
}
}
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Играта приключи вече!");
}
}
}
if(dialogid==DIALOG_HELP_INFO)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
else if(response)
{
switch(listitem)
{
case 0:
{
new string223023[512];
new string22302result3[2213];
format(string223023,512,"{ffffff}Можете да печелите пари, чрез:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- превземане на Територии,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- чрез Работа, например: разносвач на пица, почиствач, пилот и не само\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- чрез търговия на Акции\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- чрез PAYDAY\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- чрез обири, на Банкомат/Банка и не само\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- чрез Наемни Убийства\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- чрез търкане на Билетчета от Лафка\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- чрез Оборот на бизнеса ви\n\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Разбира се, има и много други начини за печелене на пари тук\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_INFO_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 1:
{
new string223023[512];
new string22302result3[2213];
format(string223023,512,"{ffffff}Можете да печелите точки, чрез:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- превземане на Територии,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- чрез Работа, вие можете да печелите EP\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- чрез Покупка на Бизнес, вие можете да печелите EP, ако той Предлага Тази Възможност\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- чрез Мини-игри, можете да печелите EP, ако сте на първите места\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- чрез PAYDAY на всеки час, печелите EP и Пари, а ако сте в банда с допълнително EP, ще печелите повече\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- чрез правене на Мисии в играта, печелите EP\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- чрез правене на Event в играта, печелите EP(ако Event-ът е с награда)\n\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}За какво ви служи EP? - Чрез него можете да си купите следващ Level\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Когато съберете достатъчно EP, горе в дясно на екрана ви показва, дали е така, можете да си купите Reputation Level, чрез {fff000}/buylevel\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}А, ако желаете да купите Gang Level, то ще ви трябват Gang EP({fff000}/gangstats{ffffff} за да проверите колко имате) и да сте лидер\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_INFO_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 2:
{
new string223023[512];
new string22302result3[2213];
format(string223023,512,"{ffffff}Можете да харчите парите си за:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- Дрехи,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- Тунинг на личното ви превозно средство,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- VIP права,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- Поръчка за Наемно убийство,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- VIP права,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- Дрога,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- Бизнес,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- Къща,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- Нови бойни умения(Fight Skill),\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- Книжка за влак/самолет и др. ,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- VIP права,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- Смяна на табелата на колата ви,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- Радио,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- Куфарче за дрога,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- Храна и напитки,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- Оръжия от магазин\n\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}А как се печелят пари, можете да видите в списъка, като цъкнете 'Назад'\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_INFO_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 3:
{
new string223023[512];
new string22302result3[2213];
format(string223023,512,"{ffffff}Чрез Reputation Level:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- да печелите повече на Payday,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- да си купите по-голяма къща/бизнес,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- да имате възможност, при наличие на пари да си купите VIP,\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- да си купите шофьорска книжка, при наличие на достатъчно пари,\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Чрез Gang Level:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- ще имате възможност да атакувате на далечни места\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- ще имате възможност да си купите екстри от /ganginfo, ако имате достатъчно пари в касата на бандата\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Чрез Reputation EP/Gang EP:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- ще можете да купите Reputation Level чрез Reputation EP\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- ще можете да купите Gang Level чрез Gang EP, ако сте Лидер на Банда/Мафия\n\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}За да увеличите своя Reputation Level, използвайте {fff000}/buylevel\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}За да увеличите своя Gang Level, използвайте {fff000}/buyganglevel {ffffff}(Ако сте лидер на Банда/Мафия)\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_INFO_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 4:
{
new string223023[512];
new string22302result3[2213];
format(string223023,512,"{ffffff}Когато сте в банда можете:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- да Нападате Територии на другите банди или незавзети такива\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- да вдигате Rank и да се забавлявате с останалите играчи\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- да подобрявате вашата банда/мафия, чрез събиране на точки и да купувате неща от /ganginfo\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- да се съревновавате с другите банди/мафии, по брой на териториите, които сте превзели\n\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}А, ако желаете да влезете в банда/мафия, трябва да напишете /af, след като бъдете поканени да се присъедините от лидера й\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Ако все още не знаете командите за банда/мафия, използвайте {fff000}/fhelp {ffffff}и {fff000}/fcmds\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Можете да проверите хазната на бандата ви, чрез {fff000}/gangstats\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_INFO_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 5:
{
new string223023[512];
new string22302result3[2213];
format(string223023,512,"{ffffff}Когато сте в клан можете:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- да се състезавате с другите кланове на Drift/Stunt/DM...\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- да се изкачите в клана, като дигате Rank\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- да се пускате в базата на Клана\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- да имате Prefix със съответния клан в който сте\n\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Ако желаете да създадете клан, пишете на главен администратор, {fff000}/admindiscords {ffffff}за връзка\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Ако все още не знаете командите за клан, използвайте {fff000}/chelp {ffffff}или {fff000}/clanhelp\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Можете да проверите всички кланове, чрез {fff000}/clans\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_INFO_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 6:
{
new string223023[512];
new string22302result3[2213];
format(string223023,512,"{ffffff}Относно VIP правата и какво можете да правите с тях:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- да се възползвате от всички от командите във {fff000}/viphelp\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- да се възползвате от бонусите, според вашето VIP ниво\n\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Можете да станете VIP, чрез Event-и, или като събирате пари в играта\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Когато имате достатъчно пари, уведомете главен администратор за това\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_INFO_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 7:
{
new string223023[512];
new string22302result3[2213];
format(string223023,512,"{ffffff}Относно ADMIN правата и какво можете да правите с тях:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{33AA33}- можете да имате достъп до инструменти(команди) за откриване на хакери\n");
strcat(string22302result3, string223023);
format(string223023,512,"{FF0000}- задължително е, преди човек да пише на главен администратор с иск за права да прочете /rules\n\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Можете да станете ADMIN, след одобрение от притежател, {fff000}/admindiscords {ffffff}за връзка\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Когато имате достатъчно опит в сървъра и решите да бъдете част от екипа, ни пишете\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_INFO_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
}
}
}
if(dialogid==DIALOG_ORGANISATIONS)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
new string2230[512];
new string2230result[1500];
switch(listitem)
{
case 0:
{
format(string2230,512,"{1fceff}San Andreas Police Department (SAPD)\n");
strcat(string2230result, string2230);
format(string2230,512,"{1fceff}FBI\n");
strcat(string2230result, string2230);
format(string2230,512,"{1fceff}Delta Force\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"                ",string2230result,"Затвори","");
}
case 1:
{
format(string2230,512,"{e80023}VIP Gang\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Grove Street Families\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Rolling Heights Ballas\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Los Santos Vagos\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Varrio Los Aztecas\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Vinewood Cripz\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}San Fierro Triads\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Eastern Boys\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Sons of Anarchy\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Da Nang Boys\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Italian Mafia\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Bounty Hunters\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Soldier Boys\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Yakuza\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Syndicate Texas\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Blood Mafia\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}MS-13\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}Bulgarian Mafia\n");
strcat(string2230result, string2230);
format(string2230,512,"{e80023}343 Black Street\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"                ",string2230result,"Затвори","");
}
}
}
}
if(dialogid==DIALOG_HELP_TUTORIAL_BACK)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
new string2230[512]; new string2230result[2230];
format(string2230,512,"{FFFFFF}Как се теглят пари от {3ADF15}Банкомат/Банка {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как се купува {3ADF15}Reputation Level{FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да {3ADF15}Работя{FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да ловя {3ADF15}Риба {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да вляза в {3ADF15}Къща/Бизнес {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да си купя {3ADF15}Билетче от Лафка {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как се сменят {3ADF15}Радиостанциите {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да си купя {3ADF15}Лично превозно средство {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да направя обир {3ADF15}на Банкомат {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как се прави {3ADF15}Обир{FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да си купя {3ADF15}Къща/Бизнес {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да проверя {3ADF15}VIP командите {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да проверя {3ADF15}ADMIN командите {FFFFFF} ?\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL,DIALOG_STYLE_LIST,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string2230result,"Напред","Затвори");
}
}
if(dialogid==DIALOG_INFO_BACK)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
new string2230[512]; new string2230result[2230];
format(string2230,512,"{FFFFFF}Как се печелят {3ADF15}Пари {FFFFFF}?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как се печелят {3ADF15}Reputation Level и останалите точки {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Какво мога да купувам, чрез {3ADF15}парите си {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Какво мога да правя, чрез {3ADF15}Reputation Level и останалите точки {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Какво мога да правя в {3ADF15}банда {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Какво мога да правя в {3ADF15}клан {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да стана {3ADF15}VIP {FFFFFF} и какво да правя с него ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Относно {3ADF15}ADMIN нивата {FFFFFF} и още информация за правата\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,DIALOG_HELP_INFO,DIALOG_STYLE_LIST,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string2230result,"Напред","Затвори");
}
}
if(dialogid==DIALOG_HELP_TUTORIAL)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
else if(response)
{
new string223023[512];
new string22302result3[2213];
switch(listitem)
{
case 0:
{
format(string223023,512,"{00FF00}За да теглите пари от банкомат/банка, натиснете {FF0000}Y{00FF00}, докато сте близо\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 1:
{
format(string223023,512,"{00FF00}За да си купиш Reputation Level, напиши {FF0000}/buylevel {00FF00}, ако имате достатъчно EP\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 2:
{
format(string223023,512,"{00FF00}За да работиш, напиши {FF0000}Командата, която ти Излиза {00FF00} в превозното средство за работа\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 3:
{
format(string223023,512,"{00FF00}За да ловиш риба, използвай {FF0000}/fish {00FF00}, след като си купиш стръв и въдица от риболовния магазин\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 4:
{
format(string223023,512,"{00FF00}За да влезеш в къща/бизнес, напиши{FF0000} /enter {00FF00} до иконката\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 5:
{
format(string223023,512,"{00FF00}За да си купиш билетче от Лафка, натисни {FF0000}Y {00FF00} до обекта\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 6:
{
format(string223023,512,"{00FF00}За да смениш радиостанцията в колата си, натисни {FF0000}Num 8 или Num 2(стрелките в Num)\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 7:
{
format(string223023,512,"{00FF00}За да си купиш лично превозно средство, отиди го автомагазин и натисни {FF0000}Y {00FF00} до някой автомобил\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 8:
{
format(string223023,512,"{00FF00}За да обираш банкомат, ти трябва бомба, която можеш да си купиш от дийлърски магазин. Чрез {FF0000}/robbomb {00FF00} извърши грабежа\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 9:
{
format(string223023,512,"{00FF00}За обир проверете {FF0000}/robberyhelp\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 10:
{
format(string223023,512,"{00FF00}За да си купиш къща/бизнес, напиши {FF0000}/buyhouse {00FF00}или {FF0000}/buybiz\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 11:
{
format(string223023,512,"{00FF00}За да провериш VIP командите, напиши {FF0000}/viphelp\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
case 12:
{
format(string223023,512,"{00FF00}За да провериш ADMIN командите, напиши {FF0000}/adminhelp\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL_BACK,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string22302result3,"Назад","Затвори");
}
}
}
}
if(dialogid==DIALOG_HELP_CMDS_INFO)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
else if(response)
{
switch(listitem)
{
case 0:
{
new string2230[512]; new string2230result[2230];
format(string2230,512,"{FFFFFF}Команда{008000},\t{FF0000}Действие\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}----\t{FF0000} Основни команди {00FF00}----\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/stats\t {008000}- {FF0000}показва вашата статистика\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/pm\t {008000}- {FF0000} пращане на лично съобщение до играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/ignore\t {008000}- {FF0000} игнорира даден играч от твоите лични съобщения\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/unignore\t {008000}- {FF0000} маха игнорирането на играч от твоите лични съобщения\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/buylevel\t {008000}- {FF0000} за да вдигнете вашия левел\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/buyws\t {008000}- {FF0000} за да вдигнете вашия Weapon Skill левел\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/buyhouse\t {008000}- {FF0000} за да купите къща\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/buybiz\t {008000}- {FF0000} за да купите бизнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/enter\t {008000}- {FF0000} за да влезете в къща или бизнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/exit\t {008000}- {FF0000} за да излезете от къща или бизнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/changepass\t {008000}- {FF0000} сменяне на паролата\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/spawn\t {008000}- {FF0000} за да промениш твоя spawn\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/report\t {008000}- {FF0000} докладване на хакери\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/gps\t {008000}- {FF0000} за да избереш място, което искаш да посетиш\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/time\t {008000}- {FF0000} скрива/показва часовника на екрана\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/site\t {008000}- {FF0000} скрива/показва сайта на екрана\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/statistic\t {008000}- {FF0000} показва статистиката на екрана\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/id\t {008000}- {FF0000} показва ID-то на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/admins\t {008000}- {FF0000} показва онлайн админите\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/c\t {008000}- {FF0000} пуска брояч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/rules\t {008000}- {FF0000} показва правилата на сървъра\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/vipusers\t {008000}- {FF0000} показва онлайн VIP играчите\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/leaders\t {008000}- {FF0000} показва онлайн лидерите\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/bank\t {008000}- {FF0000} за да отворите менюто на банката\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,12,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}ЛИ{008000}СТ{FF0000} 1",string2230result,"Още","Затвори");
}
case 1:
{
new string2230[512]; new string2230result[2230];
format(string2230,512,"{FFFFFF}Как се печелят {3ADF15}Пари {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как се печелят {3ADF15}Reputation Level и останалите точки {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Какво мога да купувам, чрез {3ADF15}парите си {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Какво мога да правя, чрез {3ADF15}Reputation Level и останалите точки {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Какво мога да правя в {3ADF15}банда {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Какво мога да правя в {3ADF15}клан {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да стана {3ADF15}VIP {FFFFFF} и какво да правя с него ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Относно {3ADF15}ADMIN нивата {FFFFFF} и още информация за правата\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,DIALOG_HELP_INFO,DIALOG_STYLE_LIST,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string2230result,"Напред","Затвори");
}
case 2:
{
new string2230[512]; new string2230result[2230];
format(string2230,512,"{FFFFFF}Как се теглят пари от {3ADF15}Банкомат/Банка {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как се купува {3ADF15}Reputation Level{FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да {3ADF15}Работя{FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да ловя {3ADF15}Риба {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да вляза в {3ADF15}Къща/Бизнес {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да си купя {3ADF15}Билетче от Лафка {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как се сменят {3ADF15}Радиостанциите {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да си купя {3ADF15}Лично превозно средство {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да направя обир {3ADF15}на Банкомат {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как се прави {3ADF15}Обир(ROBBERY) {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да си купя {3ADF15}Къща/Бизнес {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да проверя {3ADF15}VIP командите {FFFFFF} ?\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Как да проверя {3ADF15}ADMIN командите {FFFFFF} ?\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,DIALOG_HELP_TUTORIAL,DIALOG_STYLE_LIST,"{FFFFFF}ПОМОЩ{008000}НО{FF0000} МЕНЮ",string2230result,"Напред","Затвори");
}
}
}
}
//Sdelka ili ne - Dialog - open
if(dialogid==117)
{
if(response)
{
new listitemPlus=listitem;
new listitemMinus=listitem;
listitemMinus-=1; listitemPlus+=1;
///////////////////////////////////////////////////
//new formatformat[256];
//format(formatformat,256,"%d, %d, %d",listitem,listitemPlus,listitemMinus);
//SendClientMessage(playerid,COLOR_RED,formatformat);
//////////////////////////////////////////////////
if(sdelkaBoxesOpen[listitem]==true)
{
SendClientMessage(playerid,COLOR_GRAD1,"Тази кутия вече е отворена!");
return 1;
}
sdelkaBoxesOpen[listitem]=true;
new formatOpen[256];
format(formatOpen,256,"{ff0000}Кутия %d\n{00ff00}Отворена, $%d",listitemPlus,SdelkaBoxesMoney[listitem]);
UpdateDynamic3DTextLabelText(sdelkaBoxText[listitem],0xFFFFFFFF,formatOpen);
//-----------------------------//-------------------------------------------------------------------
format(formatOpen,256,"[Сделка или не] %s отвори кутия номер %d, в която има $%d",pname[playerid],listitemPlus,SdelkaBoxesMoney[listitem]);
SendClientMessageToAll(COLOR_RED,formatOpen);
}
}
//Sdelka ili ne - Dialog close
if(dialogid==109)
{
if(response)
{
new rndnum=randomex(1,100);
new formatformat[256];
if(listitem == 0)
{
if(rndnum>numberlotto)
{
lotterysuma+=5000;
numberlotto=rndnum;
format(formatformat,256,"%d - $%d",rndnum,lotterysuma);
SetDynamicObjectMaterialText(display[0] , 0 , formatformat , OBJECT_MATERIAL_SIZE_256x128, "Arial", 28, 0, 0xC81717FF, 0x0000FFFF,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
SendClientMessageToAll(0xE60000FF, "[Колело на късмета] Участникът позна, числото беше по-голямо");
return 1;
}
else
{
numberlotto=rndnum;
format(formatformat,256,"%d - $%d",rndnum,lotterysuma);
SendClientMessageToAll(0xE60000FF, "[Колело на късмета] Участникът не позна");
SetDynamicObjectMaterialText(display[0] , 0 , formatformat , OBJECT_MATERIAL_SIZE_256x128, "Arial", 28, 0, 0xC81717FF, 0x0000FFFF,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
}
}
if(listitem == 1)
{
if(rndnum<numberlotto)
{
lotterysuma+=5000;
numberlotto=rndnum;
format(formatformat,256,"%d - $%d",rndnum,lotterysuma);
SendClientMessageToAll(0xE60000FF, "[Колело на късмета] Участникът позна, числото беше по-малко");
SetDynamicObjectMaterialText(display[0] , 0 , formatformat , OBJECT_MATERIAL_SIZE_256x128, "Arial", 28, 0, 0xC81717FF, 0x0000FFFF,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
return 1;
}
else
{
numberlotto=rndnum;
format(formatformat,256,"%d - $%d",rndnum,lotterysuma);
SendClientMessageToAll(0xE60000FF, "[Колело на късмета] Участникът не позна");
SetDynamicObjectMaterialText(display[0] , 0 , formatformat , OBJECT_MATERIAL_SIZE_256x128, "Arial", 28, 0, 0xC81717FF, 0x0000FFFF,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
}
}
}
}
if(dialogid==108)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
new string2230[590]; new string2230result[2230];
format(string2230,512,"{00FF00}>> Vip Level 4, Platinum\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/laser - пуска/спира твоят лазер на оръжията ak-47 и m4\n");
strcat(string2230result, string2230);
format(string2230,512,"{33AA33}/viplabel - закача/откача 3D текста 'VIP' от главата ти\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/parrot - закача/маха папагал от твоето рамо\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}>> Vip Level 5, Master\n");
strcat(string2230result, string2230);
format(string2230,512,"{33AA33}/clothes - за да си слагаш кърпи/очила/маски и т.н.\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/notimers - за да премахнете времето за изчакване до /fix, /tires, /extraarmour и /healme\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/sgchange - за да си смениш дали да получаваш чантички или гранати\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}>> Vip Level 6, Super\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/eject - за да изгониш някой от колата, която караш\n");
strcat(string2230result, string2230);
format(string2230,512,"{33AA33}/viptext - за да смениш 3D текста на главата ти, струва $5000\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/tires - за да поправите гумите на вашето превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/extraarmour - за да си сложите жилетка с повече защита\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,3501,DIALOG_STYLE_MSGBOX,"{FFFFFF}ЛИСТ 2",string2230result,"Затвори","");
}
}
if(dialogid==107)
{
if(response)
{
new string223023[512];
new string22302result3[2713];
format(string223023,512,"{ffffff}Нови команди:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-------------{80BFFF}за VIP{ff0000}-------------\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/mp3 - за пускане на музика от линк\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/stopmp3 - за спиране на музика\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}/clearchat - чисти чата на играча, написал командата\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ffffff}Нови елементи:\n\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Променен е изгледът на скоростта, бензина и щетите\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Cripz,Grove и SAPD са с пълни екстри\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Добавени са мистерии с НЛО и извънземни\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Добавена е възможност играчите да се кандидатират за полицията, чрез команда\n");
strcat(string22302result3, string223023);
format(string223023,512,"{ff0000}-{80BFFF}Добавена е игра, наподобяваща истинската Национална Лотария от телевизията\n");
strcat(string22302result3, string223023);
ShowPlayerDialog(playerid,3500,DIALOG_STYLE_MSGBOX,"{ffffff}Новини",string22302result3,"Затвори","");
}
}
if(dialogid==106)
{
if(response)
{
if(listitem == 0)
{
if(PlayerInfo[playerid][pCashCS]<1000) return PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -1000);
SetPlayerHealth(playerid, 100); //Health
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 1)
{
if(PlayerInfo[playerid][pCashCS]<1500) return PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -1500);
SetPlayerArmour(playerid, 100); //Armour
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 2)
{
if(PlayerInfo[playerid][pCashCS]<2000) return PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -2000);
GivePlayerWeapon(playerid, 22, 1000); //9mm
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 3)
{
if(PlayerInfo[playerid][pCashCS]<2500) return PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -2500);
GivePlayerWeapon(playerid, 23, 1000); //Silence 9mm
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 4)
{
if(PlayerInfo[playerid][pCashCS]<3000) return PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -3000);
GivePlayerWeapon(playerid, 24, 1000); //Desert Eagle
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 5)
{
if(PlayerInfo[playerid][pCashCS]<5000) return PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -5000);
GivePlayerWeapon(playerid, 25, 1000); //Shotgun
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 6)
{
if(PlayerInfo[playerid][pCashCS]<6000) return PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -6000);
GivePlayerWeapon(playerid, 26, 1000); //Sawn-off
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 7)
{
if(PlayerInfo[playerid][pCashCS]<6500) return PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -6500);
GivePlayerWeapon(playerid, 27, 1000); //Combat Shotgun
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 8)
{
if(PlayerInfo[playerid][pCashCS]<3000) return PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -3000);
GivePlayerWeapon(playerid, 28, 1000); //Micro SMG
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 9)
{
if(PlayerInfo[playerid][pCashCS]<4000) return PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -4000);
GivePlayerWeapon(playerid, 29, 1000); //MP5
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 10)
{
if(PlayerInfo[playerid][pCashCS]<5500) return PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -5500);
GivePlayerWeapon(playerid, 32, 1000); //Tec-9
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 11)
{
if(PlayerInfo[playerid][pCashCS]<4500) return PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -4500);
GivePlayerWeapon(playerid, 30, 1000); //AK-47
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 12)
{
if(PlayerInfo[playerid][pCashCS]<6000) return PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -6000);
GivePlayerWeapon(playerid, 31, 1000); //M4
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 13)
{
if(PlayerInfo[playerid][pCash]<6500) return PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -6500);
GivePlayerWeapon(playerid, 33, 1000); //Country Rifle
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
if(listitem == 14)
{
if(PlayerInfo[playerid][pCash]<7000) return PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
GivePlayerCashCS(playerid, -7000);
GivePlayerWeapon(playerid, 34, 1000); //Sniper Rifle
GameTextForPlayer(playerid, "~r~Item ~g~Purchase!", 500, 0);
}
}
}
if(dialogid==DIALOG_SELECT_ANIMATION)
{
/*
new string2230[512]; new string2230result[2230];
format(string2230,512,"{ffff00}Смей се\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Огледай се\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Кръстосай ръце\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Повърни\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Гнуси се\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Разговаряй\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Танцувай ID 1\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Танцувай ID 2\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffff00}Танцувай ID 3\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,DIALOG_CREATEMINIGAME_NAME,DIALOG_STYLE_LIST,"{{FFFFFF}}Движения {33aa33}на {ff0000}героя",string2230result,"{ffffff}Напред","Отказ");
ApplyAnimation PlayerInfo[i][pClearAnimation]>0
*/
if(response)
{
switch(listitem)
{
case 0:
{
PlayerInfo[playerid][pClearAnimation]=1;
}
case 1:
{
ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0); // Laugh
ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0); // Laugh
ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0); // Laugh
}
case 2:
{
ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
}
case 3:
{
ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1); // Arms crossed
ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1); // Arms crossed
ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1); // Arms crossed
}
case 4:
{
ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); // Vomit BAH!
ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); // Vomit BAH!
ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); // Vomit BAH!
}
case 5:
{
ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0);
}
case 6:
{
ApplyAnimation(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
}
case 7:
{
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
}
case 8:
{
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
}
case 9:
{
SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
}
}
}
}
if(dialogid==DIALOG_CREATEMINIGAME_NAME)
{
if(response)
{
if(testmode[playerid]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Скриптът в момента се подготвя! Очаквайте го скоро.");
if(PlayerInfo[playerid][pLevel]<40) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да сте минимум 40 Level.");
SendClientMessage(playerid,COLOR_WHITE,"Приятно създаване, {33aa33}ще се радваме да видим,{ff0000} какво ще измислиш :) {00ff00}by INTENSE TEAM");
SetPlayerPos(playerid,1096.8990,1731.1721,39.3988);
TogglePlayerControllable(playerid, 0);
SetPlayerCameraPos(playerid, 1096.8990,1731.1721,39.3988);
SetPlayerCameraLookAt(playerid, 1096.8990,1731.1721,39.3988);
new string2230[512]; new string2230result[2230];
format(string2230,512,"{FFFFFF}I-N-T-E-N-S-E      MINI-GAME    CREATOR\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{33AA33}Трябва да напишете име на мини-играта\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}Въведете го тук отдолу\n\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,DIALOG_CREATEMINIGAME_TYPE,DIALOG_STYLE_INPUT,"                ",string2230result,"{ffffff}Напред","Отказ");
}
}
if(dialogid==105)
{
if(response)
{
TogglePlayerControllable(playerid, 0);
SetCameraBehindPlayer(playerid);
if(counterplayers==6)
{
csgamestarted=1;
SendClientMessageToAll(0xDEE420FF,"Counter Strike: Събраха се 6 човека, играта започва след 2 минути, до тогава си купете оръжия чрез Y");
csroundtimer=2*120;
csstarted=1;
}
new formatstring[256];
switch(listitem)
{
case 0:
{
if(joinedcops>joinedterrorists+1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Няма достатъчно места в този отбор");
//
joinedterrorists+=1;
aliveterrorist+=1;
alivecounter[1]+=1;
format(formatstring,256,"Counter Strike: %s влезе в играта като Terrorist",pname[playerid]);
SendClientMessageToAll(0xC81717FF,formatstring);
SetPlayerColor(playerid,0xC81717FF);
policecs[playerid]=0;
new skinselect=random(4);
if(skinselect==0)
{
SetPlayerSkin(playerid,100);
}
else if(skinselect==1)
{
SetPlayerSkin(playerid,104);
}
else if(skinselect==2)
{
SetPlayerSkin(playerid,112);
}
else if(skinselect==3)
{
SetPlayerSkin(playerid,124);
}
else if(skinselect==4)
{
SetPlayerSkin(playerid,179);
}
if(terroristscs==0)
{
SetPlayerPos(playerid,157.6512,1590.7850,46.3187);
}
else if(terroristscs==1)
{
SetPlayerPos(playerid,148.9623,1591.2360,49.4795);
}
else if(terroristscs==2)
{
SetPlayerPos(playerid,145.6304,1587.2062,50.1578);
}
else if(terroristscs==3){
SetPlayerPos(playerid,152.7453,1587.7211,48.1034);
}
else if(terroristscs==4){
SetPlayerPos(playerid,137.1287,1587.6866,50.1578);
}
terroristscs+=1;
GivePlayerWeapon(playerid, 22, 50);
GivePlayerWeapon(playerid, 4, 1);
//
return 1;
}
joinedcops+=1;
alivecounter[0]+=1;
format(formatstring,256,"Counter Strike: %s влезе в играта като Counter Terrorist",pname[playerid]);
SendClientMessageToAll(COLOR_RLSPD,formatstring);
policecs[playerid]=1;
SetPlayerColor(playerid,COLOR_RLSPD);
new skinselect=random(4);
if(skinselect==0)
{
SetPlayerSkin(playerid,285);
}
else if(skinselect==1)
{
SetPlayerSkin(playerid,286);
}
else if(skinselect==2)
{
SetPlayerSkin(playerid,287);
}
else if(skinselect==3)
{
SetPlayerSkin(playerid,164);
}
else if(skinselect==4)
{
SetPlayerSkin(playerid,166);
}
if(policescs==0)
{
SetPlayerPos(playerid,202.7665,1788.9313,42.6270);
}
else if(policescs==1)
{
SetPlayerPos(playerid,196.8925,1787.9962,42.6203);
}
else if(policescs==2)
{
SetPlayerPos(playerid,191.0323,1787.9128,42.6203);
}
else if(policescs==3){
SetPlayerPos(playerid,186.3190,1786.9668,42.6203);
}
else if(policescs==4){
SetPlayerPos(playerid,178.6650,1785.9484,42.6203);
}
policescs+=1;
GivePlayerWeapon(playerid, 23, 50);
GivePlayerWeapon(playerid, 4, 1);
}
case 1:
{
if(joinedterrorists>joinedcops+1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Няма достатъчно места в този отбор");
joinedcops+=1;
alivecounter[0]+=1;
format(formatstring,256,"Counter Strike: %s влезе в играта като Counter Terrorist",pname[playerid]);
SendClientMessageToAll(COLOR_RLSPD,formatstring);
policecs[playerid]=1;
SetPlayerColor(playerid,COLOR_RLSPD);
new skinselect=random(4);
if(skinselect==0)
{
SetPlayerSkin(playerid,285);
}
else if(skinselect==1)
{
SetPlayerSkin(playerid,286);
}
else if(skinselect==2)
{
SetPlayerSkin(playerid,287);
}
else if(skinselect==3)
{
SetPlayerSkin(playerid,164);
}
else if(skinselect==4)
{
SetPlayerSkin(playerid,166);
}
if(policescs==0)
{
SetPlayerPos(playerid,202.7665,1788.9313,42.6270);
}
else if(policescs==1)
{
SetPlayerPos(playerid,196.8925,1787.9962,42.6203);
}
else if(policescs==2)
{
SetPlayerPos(playerid,191.0323,1787.9128,42.6203);
}
else if(policescs==3){
SetPlayerPos(playerid,186.3190,1786.9668,42.6203);
}
else if(policescs==4){
SetPlayerPos(playerid,178.6650,1785.9484,42.6203);
}
policescs+=1;
GivePlayerWeapon(playerid, 23, 50);
GivePlayerWeapon(playerid, 4, 1);
return 1;
}
joinedterrorists+=1;
alivecounter[1]+=1;
format(formatstring,256,"Counter Strike: %s влезе в играта като Terrorist",pname[playerid]);
SendClientMessageToAll(0xC81717FF,formatstring);
SetPlayerColor(playerid,0xC81717FF);
policecs[playerid]=0;
new skinselect=random(4);
if(skinselect==0)
{
SetPlayerSkin(playerid,100);
}
else if(skinselect==1)
{
SetPlayerSkin(playerid,104);
}
else if(skinselect==2)
{
SetPlayerSkin(playerid,112);
}
else if(skinselect==3)
{
SetPlayerSkin(playerid,124);
}
else if(skinselect==4)
{
SetPlayerSkin(playerid,179);
}
if(terroristscs==0)
{
SetPlayerPos(playerid,157.6512,1590.7850,46.3187);
}
else if(terroristscs==1)
{
SetPlayerPos(playerid,148.9623,1591.2360,49.4795);
}
else if(terroristscs==2)
{
SetPlayerPos(playerid,145.6304,1587.2062,50.1578);
}
else if(terroristscs==3){
SetPlayerPos(playerid,152.7453,1587.7211,48.1034);
}
else if(terroristscs==4){
SetPlayerPos(playerid,137.1287,1587.6866,50.1578);
}
terroristscs+=1;
GivePlayerWeapon(playerid, 22, 50);
GivePlayerWeapon(playerid, 4, 1);
}
}
}
}
if(dialogid==104)
{
if(!response)
{
SendClientMessage(playerid,COLOR_WHITE,"Превозното средство ще бъде за лична употреба!");
}
if(response)
{
switch(listitem)
{
case 0:
{
new string1115[115];
SendClientMessage(playerid,COLOR_WHITE,"Превозното средство ще бъде за клана!");
format(string1115,115,"[CLAN CHAT] %s поръча ново превозно средство за клана.",pname[playerid]);
for(new i=0; i<MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(PlayerInfo[i][pClan] == PlayerInfo[playerid][pClan])
{
SendClientMessage(i, COLOR_RTRIADS,string1115);
}
}
vClan[myprivateid[playerid]]=PlayerInfo[playerid][pClan];
}
case 1:
{
SendClientMessage(playerid,COLOR_WHITE,"Превозното средство ще бъде за лична употреба!");
}
}
}
}
if(dialogid==82)
{
if(response)
{
if(PlayerInfo[playerid][pClan]!=0)
{
if(PlayerInfo[playerid][pClanRank]==ClanInfo[PlayerInfo[playerid][pClan]][cRanks])
{
ShowPlayerDialog(playerid, 104, DIALOG_STYLE_LIST, "Избор", "За клана\nЗа лична употреба", "Избери", "Изход");
}
}
switch(listitem)
{
case 0:
{
SendClientMessage(playerid,COLOR_WHITE,"Вашето превозно средство ще бъде в черен цвят.");
privatecarlocked[myprivateid[playerid]]=1;
myprivateid[playerid]=AddStaticVehicleEx(privatecarID[myprivateid[playerid]],0.0,0.0,0.0,0.0,0,0, -1);
privatecarC1[myprivateid[playerid]]=0; //da doida tuk
privatecarC2[myprivateid[playerid]]=0;
}
case 1:
{
SendClientMessage(playerid,COLOR_WHITE,"Вашето превозно средство ще бъде в бял цвят.");
myprivateid[playerid]=AddStaticVehicleEx(privatecarID[myprivateid[playerid]],0.0,0.0,0.0,0.0,1,1, -1);
privatecarlocked[myprivateid[playerid]]=1;
privatecarC1[myprivateid[playerid]]=1;
privatecarC2[myprivateid[playerid]]=1;
}
case 2:
{
myprivateid[playerid]=AddStaticVehicleEx(privatecarID[myprivateid[playerid]],0.0,0.0,0.0,0.0,166,166, -1);
privatecarC1[myprivateid[playerid]]=166;
privatecarC2[myprivateid[playerid]]=166;
SendClientMessage(playerid,COLOR_WHITE,"Вашето превозно средство ще бъде в син цвят.");
privatecarlocked[myprivateid[playerid]]=1;
}
case 3:
{
myprivateid[playerid]=AddStaticVehicleEx(privatecarID[myprivateid[playerid]],0.0,0.0,0.0,0.0,194,194, -1);
privatecarC1[myprivateid[playerid]]=194;
privatecarC2[myprivateid[playerid]]=194;
SendClientMessage(playerid,COLOR_WHITE,"Вашето превозно средство ще бъде в жълт цвят.");
privatecarlocked[myprivateid[playerid]]=1;
}
case 4:
{
myprivateid[playerid]=AddStaticVehicleEx(privatecarID[myprivateid[playerid]],0.0,0.0,0.0,0.0,137,137, -1);
privatecarC1[myprivateid[playerid]]=137;
privatecarC2[myprivateid[playerid]]=137;
SendClientMessage(playerid,COLOR_WHITE,"Вашето превозно средство ще бъде в зелен цвят.");
privatecarlocked[myprivateid[playerid]]=1;
}
case 5:
{
myprivateid[playerid]=AddStaticVehicleEx(privatecarID[myprivateid[playerid]],0.0,0.0,0.0,0.0,3,3, -1);
privatecarC1[myprivateid[playerid]]=3;
privatecarC2[myprivateid[playerid]]=3;
SendClientMessage(playerid,COLOR_WHITE,"Вашето превозно средство ще бъде в червен цвят.");
privatecarlocked[myprivateid[playerid]]=1;
}
}
}
else
{
myprivateid[playerid]=AddStaticVehicleEx(privatecarID[myprivateid[playerid]],0.0,0.0,0.0,0.0,1,1, -1);
SendClientMessage(playerid,COLOR_WHITE,"Вашето превозно средство ще бъде в бял цвят.");
privatecarC1[myprivateid[playerid]]=1;
privatecarC1[myprivateid[playerid]]=1;
privatecarlocked[myprivateid[playerid]]=1;
}
PlayerInfo[playerid][pPrivateVeh][PlayerInfo[playerid][pPrivateVehs]]=maximumPrivateVehsID;
VehicleInfo[maximumPrivateVehsID][vVeh]=myprivateid[playerid];
privatecars[myprivateid[playerid]]=1;
privatecarlocked[myprivateid[playerid]]=1;
format(privatecarowner[myprivateid[playerid]],40,"%s",pname[playerid]);
privatecarID[myprivateid[playerid]]=GetVehicleModel(myprivateid[playerid]);
}
if(dialogid == 81)
{
if(response)
{
selectedfloor[playerid]=strval(inputtext);
if(selectedfloor[playerid]==myfloor[playerid])
{
SendClientMessage(playerid,COLOR_GRAD1,"В момента сте на този етаж");
return 1;
}
TextDrawShowForPlayer(playerid, Intro[1]);
PlayerInfo[playerid][pHideIntro]=14;
if(selectedfloor[playerid]-myfloor[playerid]>10)
{
PlayerInfo[playerid][pHideIntro]=27;
}
else if(myfloor[playerid]-selectedfloor[playerid]>10)
{
PlayerInfo[playerid][pHideIntro]=27;
}
PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
SendClientMessage(playerid,0x00FF00FF,"Изчакайте, докато се качите на етажа.");
TogglePlayerControllable(playerid, 0);
myfloor[playerid]=selectedfloor[playerid];
if(strval(inputtext)>1)
{
new worldaa=selectedfloor[playerid]-1;
SetPlayerVirtualWorld(playerid,ApartmentInfo[enteredap[playerid]][aVirtualWorld]+worldaa);
}
else
{
SetPlayerVirtualWorld(playerid,ApartmentInfo[enteredap[playerid]][aVirtualWorld]);
}
}
return 1;
}
if(dialogid==80)
{
new lottarychisla[1200];
if(response)
{
switch(listitem)
{
case 0:
{
if(PlayerInfo[playerid][pCash]<100)
{
return ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_MSGBOX, "Лотария", "Вие нямате достатъчно средства за да си купите билет.", "OK", "");
}
new randomch1=random(32);
new randomch2=random(32);
new randomch3=random(32);
new randomch4=random(32);
new randomch5=random(32);
new randomch6=random(32);
new randomch11=random(32);
new randomch22=random(32);
new randomch33=random(32);
new randomch44=random(32);
new randomch55=random(32);
new randomch66=random(32);
new randomnagrada1=random(5);
new randomnagrada2=random(3);
new randomnagrada3=random(15);
new randomnagrada4=random(30);
new randomnagrada5=random(420);
new randomnagrada6=random(140);
if(randomch1==randomch11 || randomch2==randomch11 || randomch3==randomch11
|| randomch4==randomch11 || randomch5==randomch11 || randomch6==randomch11)
{
GivePlayerCash(playerid,randomnagrada1);
}
if(randomch1==randomch22 || randomch2==randomch22 || randomch3==randomch22
|| randomch4==randomch22 || randomch5==randomch22 || randomch6==randomch22)
{
GivePlayerCash(playerid,randomnagrada2);
}
if(randomch1==randomch33 || randomch2==randomch33 || randomch3==randomch33
|| randomch4==randomch33 || randomch5==randomch33 || randomch6==randomch33)
{
GivePlayerCash(playerid,randomnagrada3);
}
if(randomch1==randomch44 || randomch2==randomch44 || randomch3==randomch44
|| randomch4==randomch44 || randomch5==randomch44 || randomch6==randomch44)
{
GivePlayerCash(playerid,randomnagrada4);
}
if(randomch1==randomch55 || randomch2==randomch55 || randomch3==randomch55
|| randomch4==randomch55 || randomch5==randomch55 || randomch6==randomch55)
{
GivePlayerCash(playerid,randomnagrada5);
}
if(randomch1==randomch66 || randomch2==randomch66 || randomch3==randomch66
|| randomch4==randomch66 || randomch5==randomch66 || randomch6==randomch66)
{
GivePlayerCash(playerid,randomnagrada6);
}
format(lottarychisla,1200,"{00ff00}                   Лотария на мига\n{FF0000}Ако имате някои числа от тези долу,\nто печелите награда.\n{b031a5}%d, %d, %d, %d, %d, %d\n{4667e0}Вашите числа са %d, %d, %d, %d, %d, %d\n\n\n{00ff00}Награди: %d - $%d,\n%d - $%d,\n%d - $%d,\n%d - $%d,\n%d - $%d,\n%d - $%d и участие в шоуто",randomch1,randomch2,randomch3,randomch4,randomch5,randomch6,
randomch11,randomch22,randomch33,randomch44,
randomch55,randomch66,randomch1,randomnagrada1,randomch2,randomnagrada2,randomch3,randomnagrada3,
randomch4,randomnagrada4,randomch5,randomnagrada5,randomch6,randomnagrada6);
GivePlayerCash(playerid,-100);
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_MSGBOX, "Лотария", lottarychisla, "OK", "");
}
case 1:
{
if(PlayerInfo[playerid][pCash]<100)
{
return ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_MSGBOX, "Лотария", "Вие нямате достатъчно средства за да си купите билет.", "OK", "");
}
if(lottonumber[playerid]!=0)
{
return ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_MSGBOX, "Лотария", "Вече участвате в лотарията", "OK", "");
}
lottonumber[playerid]=randomex(1,100);
lottonumber2[playerid]=randomex(1,100);
lottonumber3[playerid]=randomex(1,100);
lottonumber4[playerid]=randomex(1,100);
lottonumber5[playerid]=randomex(1,100);
lottonumber6[playerid]=randomex(1,100);
if(lottonumber[playerid]==0)
{
lottonumber[playerid]=randomex(1,100);
lottonumber2[playerid]=randomex(1,100);
lottonumber3[playerid]=randomex(1,100);
lottonumber4[playerid]=randomex(1,100);
lottonumber5[playerid]=randomex(1,100);
lottonumber6[playerid]=randomex(1,100);
}
GivePlayerCash(playerid,-100);
format(lottarychisla,1200,"{ffffff}Компютърът ви даде числата - %d, %d, %d, %d, %d, %d\nЛотарията ще се проведе в 18:55",lottonumber[playerid],lottonumber2[playerid],lottonumber3[playerid],lottonumber4[playerid],lottonumber5[playerid],lottonumber6[playerid]);
ShowPlayerDialog(playerid, 3500, DIALOG_STYLE_MSGBOX, "Лотария", lottarychisla, "OK", "");
}
}
}
}
if(dialogid==0)
{
if(!response)
{
PlayerInfo[playerid][pKick]=3;
}
if(!response)
{
}
if(response)
{
//		    if(strlen(inputtext))
//		    {
if(strlen(inputtext)>=4 && strlen(inputtext)<=20)
{
dini_Create(accountfiles[playerid]);
dini_Set(accountfiles[playerid], "pPassword", inputtext);
//<----------------------------------------------->
new ip[35]; new akafiles[115]; new akafiles2[700];
GetPlayerIp(playerid,ip,35);
format(akafiles, 115, "/Aka/%s.ini", ip);
if(!dini_Exists(akafiles))
{
dini_Create(akafiles);
dini_Set(akafiles,"Nicknames",pname[playerid]);
}
else
{
format(akafiles2,700,"%s  %s",dini_Get(akafiles,"Nicknames"),pname[playerid]);
dini_Set(akafiles,"Nicknames",akafiles2);
}
UpdateLevelRep(playerid);
PlayerInfo[playerid][pRegistred]=1;
registered[playerid]=1;
PlayerInfo[playerid][pWeaponS]=1;
PlayerInfo[playerid][pSpawnO]=2;
PlayerInfo[playerid][pTeam]=1;
PlayerInfo[playerid][pClothes][0]=18897;
PlayerInfo[playerid][pRank]=1;
PlayerInfo[playerid][pLevel]=1;
SetPlayerScore(playerid, 1);
TextDrawHideForPlayer(playerid, Intro[0]);
TextDrawShowForPlayer(playerid, statistic[playerid]);
PlayerInfo[playerid][pActiveCheck]=120; PlayerInfo[playerid][pActiveCheckInSec]=2;
format(mypassword[playerid],21,inputtext);
logged[playerid]=1;
//new accountfiles[115];
//format(accountfiles, 115, "%s.ini", pname[playerid]);
dini_IntSet(accountfiles[playerid], "pYear",year);
dini_IntSet(accountfiles[playerid], "pMonth",month);
dini_IntSet(accountfiles[playerid], "pDay",day);
dini_IntSet(accountfiles[playerid], "pHours",hours);
dini_IntSet(accountfiles[playerid], "pMinutes",minutes);
dini_IntSet(accountfiles[playerid], "pSeconds",seconds);
SetPlayerColor(playerid,0xFF3737FF);
SendClientMessage(playerid, -1,"");
InterpolateCameraPos(playerid,1489.3694, 821.6636, 96.8680,1502.7375, 1761.3074, 106.0943,13000,CAMERA_MOVE);
InterpolateCameraLookAt(playerid,1489.3837, 822.6674, 96.8779,1502.7518, 1762.3113, 106.1042,13000,CAMERA_MOVE);
SetPlayerPos(playerid,1691.8470,1450.5051,10.7653);
PlayerInfo[playerid][pPrezimqvaneSamolet]=24;
GameTextForPlayer(playerid, "~n~~w~WELCOME TO OUR SERVER~n~~p~LET~b~'S ~p~BEGIN~n~~n~~w~SITE: ~g~VERY SOON", 3400, 3);
GivePlayerCash(playerid, 600);
format(stringstatistic[playerid], 115, "~g~Reputation: ~w~%d   ~b~EP: ~r~%d~w~/~g~%d", PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pEP],PlayerInfo[playerid][pLevel]+6);
TextDrawSetString(statistic[playerid], stringstatistic[playerid]);
GivePlayerLevel(playerid,0);
}
else
{
SendClientMessage(playerid,0x00FF00FF,"SERVER: Паролата трябва да е от 4 до 20 символа !");
new stringnewnew2[256];
format(stringnewnew2,256,"{ebebeb}Добре дошли за пръв път, {33aa33}%s{ebebeb}, Вашият профил все още не е регистриран.\n{ff0000}Регистрирайте го, като въведете паролата си отдолу",pname[playerid]);
ShowPlayerDialog(playerid,0,DIALOG_STYLE_PASSWORD,"Register:",stringnewnew2,"Регистрирай","Излез");
}
}
}
if(dialogid==1)
{
if(!response)
{
PlayerInfo[playerid][pKick]=3;
}
if(response)
{
if(!strlen(inputtext))
{
new string256[256];
format(string256,256,"{ebebeb}Добре дошли {33aa33}%s{ebebeb}, Вашият профил е регистриран.\nМоля, въведете вашата парола отдолу",pname[playerid]);
ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD,"Login:",string256,"Влез","Излез");
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~TYPE PASSWORD", 2300, 3);
}
if(strlen(inputtext))
{
new password[25];
format(password, 25, "%s", dini_Get(accountfiles[playerid], "pPassword"));
if(strcmp(inputtext, password)==0)
{
LoadAccount(playerid);
SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
if(PlayerInfo[playerid][pLaser]>0)
{
if(PlayerInfo[playerid][pTeam]==1)
{
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==2)
{
SetPVarInt(playerid, "color", 19083);
}
if(PlayerInfo[playerid][pTeam]==13 || PlayerInfo[playerid][pTeam]==14 || PlayerInfo[playerid][pTeam]==6)
{
SetPVarInt(playerid, "color", 19080);
}
if(PlayerInfo[playerid][pTeam]==8)
{
SetPVarInt(playerid, "color", 18643);
}
if(PlayerInfo[playerid][pTeam]==15)
{
SetPVarInt(playerid, "color", 19084);
}
}
PlayerInfo[playerid][pRegistred]=1;
PlayerInfo[playerid][pActiveCheck]=120; PlayerInfo[playerid][pActiveCheckInSec]=2;
//
//
SendClientMessage(playerid, 0x3ADF15FF,"Вие влязохте успешно във вашия профил!");
UpdateLevelRep(playerid);
TextDrawHideForPlayer(playerid, Intro[0]);
GivePlayerLevel(playerid,0);
//TogglePlayerSpectating(playerid, false);
logged[playerid]=1;
if(PlayerInfo[playerid][pADuty]==1)
{
SetPlayerColor(playerid, 0x7BFFFFFF);
}
if(PlayerInfo[playerid][pTeam]==0)
{
SetPlayerColor(playerid, 0xFFFFFFFF);
}
if(PlayerInfo[playerid][pTeam]==1)
{
SetPlayerColor(playerid,0xFF3737FF);
}
if(PlayerInfo[playerid][pTeam]==2)
{
SetPlayerColor(playerid,0x33AA33FF);
}
if(PlayerInfo[playerid][pJail]>0)
{
SendClientMessage(playerid, 0xE60000FF,"SERVER: Ти все още си в админ затвора!");
}
if(PlayerInfo[playerid][pAFK]>0)
{
SendClientMessage(playerid, 0xD6F34AFF,"AFK: Ти все-още си в режим AFK!");
SetPlayerColor(playerid, 0xD6F34AFF);
}
//TogglePlayerSpectating(playerid, false);
TextDrawShowForPlayer(playerid, statistic[playerid]);
}
else
{
new string256[256]; new string115[115];
format(string256,256,"{ebebeb}Въведената парола за {33aa33}%s{ebebeb} e {fff000}ГРЕШНА.\n{ff0000}Моля, опитайте се да влезете пак",pname[playerid]);
ShowPlayerDialog(playerid,1,DIALOG_STYLE_PASSWORD,"Login:",string256,"Влез","Излез");
new wrongpasswordtext[50];
format(wrongpasswordtext,50,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~WRONG PASSWORD [%d/3]",wrongpassword[playerid]+1);
GameTextForPlayer(playerid, wrongpasswordtext, 2300, 3);
wrongpassword[playerid]+=1;
if(wrongpassword[playerid]==3)
{
format(string115,115,"SERVER: %s беше KICKED от сървъра [Причина: Грешна парола]",pname[playerid]);
SendClientMessageToAll(COLOR_GRAD1,string115);
PlayerInfo[playerid][pKick]=1;
}
}}}}
if(dialogid==2)
{
if(!response)
{
SendClientMessage(playerid,0xE60000FF,"За да играете тук трябва да бъдете съгласен с правилата му!");
PlayerInfo[playerid][pKick]=3;
}
if(!response)
{
}
if(response)
{
ShowPlayerDialog(playerid,8,DIALOG_STYLE_MSGBOX,"{58FA58}COVID-19","{2ECCFA}Поради инфекцията, ще се стараем да ви обслужваме по-бързо с цел да се забавлявате\nи да намалим опасността по този начин, поне малко, като ви предоставяме по-голямо съдържание за игра\n\n\n{00FF40}   --   Пазете се, животът ви е важен\n   --   от екипа на сървъра\n{58FA58}   --   Приятна игра","{FFFFFF}Затвори","");
}
}
if(dialogid==3501)
{
if(response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
else
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
}
if(dialogid==4)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
new string2230[590]; new string2230result[2230];
format(string2230,512,"{00FF00}>> Vip Level 1, Newbie\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/listguns - можете да погледнете оръжията на другите играчи\n");
strcat(string2230result, string2230);
format(string2230,512,"{33aa33}/flip - преобръща вашето превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/hyd - добавя хидравлика\n");
strcat(string2230result, string2230);
format(string2230,512,"{ffffff}/nos - добавя нитро\n");
strcat(string2230result, string2230);
format(string2230,512,"{33aa33}/mytimers - за да видите колко време ви остава до пица и т.н.\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/isafk - проверява от колко време е AFK даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/bizgps - излизат всички бизнеси на 1 км разстояние\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}>> Vip Level 2, Silver\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/fix - поправя вашето превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{33aa33}/cnos - променя вашия режим на пускане на нитрото\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/r - директно отговаряне на лично съобщение (PM)\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/pj - пребоядисва вашата кола\n");
strcat(string2230result, string2230);
format(string2230,512,"{33aa33}/jetpack - дава летяща раница\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/cc - променя цвета на вашето превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/advert - пускане на рекламация за бизнес, къща и т.н.\n");
strcat(string2230result, string2230);
format(string2230,512,"{33aa33}/kill - за да се самоубиете\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/clearchat - за да си изчистите чата\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}>> Vip Level 3, Gold\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/invisible - ставаш видим/невидим на картата\n");
strcat(string2230result, string2230);
format(string2230,512,"{33aa33}/para - дава парашут\n");
strcat(string2230result, string2230);
//format(string2230,512,"{FFFFFF}/lock - заключва вашето превозно средство\n");
//strcat(string2230result, string2230);
//format(string2230,512,"{FFFFFF}/unlock - отключва вашето превозно средство\n");
//strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/healme - за да си заредиш кръвта и жилетката\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/vrefuel - добавя 20 литра на вашето превозно средство\n");
strcat(string2230result, string2230);
format(string2230,512,"{33aa33}/ramphelp - информация за ползване на рампите\n");
strcat(string2230result, string2230);
format(string2230,512,"{FF0000}/vguns - дава оръжия, при цивилен - Sawnoff и M4, при банда - Knife и Sniper Rifle\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/mp3 - пуска музика от MP3 линк\n");
strcat(string2230result, string2230);
format(string2230,512,"{33aa33}/tune - за да тунинговате вашата кола където и да сте\n\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,108,DIALOG_STYLE_MSGBOX,"{FFFFFF}ЛИСТ 1",string2230result,"Напред","Затвори");
}
}
if(dialogid==12)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
/*
format(string2230,512,"{FFFFFF}Команда{008000},\t{FF0000}Действие\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/stats\t {008000}- {FF0000}показва вашата статистика\n");
strcat(string2230result, string2230);
*/
new string2230[512]; new string2230result[1500];
format(string2230,512,"{FFFFFF}Команда{008000},\t{FF0000}Действие\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/dice\t {008000}- {FF0000}за да метнете зарче\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/refuel\t {008000}- {FF0000}за да заредите вашето превозно средство с бензин\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/briefcase(/bcase)\t {008000}- {FF0000}всички опции за ползване на куфара\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/drop\t {008000}- {FF0000}за да изхвърлиш неща, които имаш в себе си\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/afk\t {008000}- {FF0000}за да преминете в режим AFK\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/back\t {008000}- {FF0000}за да се махнете от режим AFK\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/vote\t {008000}- {FF0000}за да гласувате, когато е пуснато гласуване за RESPAWN на превозните средства\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/poll\t {008000}- {FF0000}за да гласувате, когато е стартиран въпрос от админ\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/joinvip\t {008000}- {FF0000}за да влезеш в бандата VIP\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/togchat\t {008000}- {FF0000}забраняваш/махаш забраната за себе си да виждаш какво пишат другите в чата\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}----\t{FF0000} Команди за наемници {00FF00}----\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/hitman\t {008000}- {FF0000}за да заложиш цена на главата на даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/bounties\t {008000}- {FF0000}за да видиш онлайн играчите със заложени цени на главите им\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/transfer\t {008000}- {FF0000}внасяш пари в сумата на някой играч\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,13,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}ЛИ{008000}СТ{FF0000} 2",string2230result,"Още","Затвори");
}
}
if(dialogid==13)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
new string2230[512]; new string2230result[1500];
format(string2230,512,"{FFFFFF}Команда{008000},\t{FF0000}Действие\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}----\t{FF0000} Команди за къщи и бизнеси {00FF00}----\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}От /househelp\t {008000}- {FF0000}можете да видите всички команди за къща\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}От /bizhelp\t {008000}- {FF0000}можете да видите всички команди за притежателя на бизнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/drink\t {008000} {FF0000}за да поръчате нещо за пиене от бар\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/train\t {008000} {FF0000}за да научите боен стил от фитнес\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/buy\t {008000} {FF0000}за да купите нещо от бизнес/магазин\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/health\t {008000} {FF0000}за да купите кръв\n");
strcat(string2230result, string2230);
//format(string2230,512,"{FFFFFF}/bet\t {008000}- {FF0000}за да заложите на конно надбягване в бизнес\n");
//strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/dmv\t {008000}- {FF0000}за да си вземете шофьорска книжка\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/plate\t {008000}- {FF0000}за да си смените номера на колата\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}От /factionhelp(/fhelp)\t -{008000} {FF0000} можете да видите всички команди за банда/мафия\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}От /viphelp\t {008000}- {FF0000} можете да видите всички VIP команди\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}----\t{FF0000} Команди за администраторите {00FF00}----\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}От /ahelp(/ah)\t {008000}- {FF0000} можете да видите всички админ команди, ако сте админ!\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}От /mhelp(/mh)\t {008000}- {FF0000} можете да видите всички Manage Admin команди!\n");
strcat(string2230result, string2230);
ShowPlayerDialog(playerid,15,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}ЛИ{008000}СТ{FF0000} 3",string2230result,"Още","Затвори");
}
}
if(dialogid==15)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
new string2230[512]; new string2230result[1888];
format(string2230,512,"{FFFFFF}Команда{008000},\t{FF0000}Действие\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}----\t{FF0000} Команди за превозните средства {00FF00}----\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}Чрез N отваряте менюто за превозните средства!\n\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/refillfc\t {008000}- {FF0000}за да заредите вашата туба с бензин\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/fuelcan\t {008000}- {FF0000}за да заредите бензин от вашата туба\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/fc\t {008000}- {FF0000}за да проверите колко бензин имате във вашата туба\n\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/speedo\t {008000}- {FF0000}за да сложите или премахнете километража\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/kph\t {008000}- {FF0000}за да настроите скоростта да ви я показва в km/h\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/mph\t {008000}- {FF0000}за да настроите скоростта да ви я показва в m/s\n\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}----\t{FF0000} Команди за Обирите {00FF00}----\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/robberyhelp\t {008000}- {FF0000}всички команди за обир\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/rob\t {008000}- {FF0000}за да почнеш да крадеш\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/usedrug\t {008000}- {FF0000}за да изполваш дрога\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/drugs\t {008000}- {FF0000}за да видиш твоята дрога\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}----\t{FF0000} Други команди {00FF00}----\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/tune\t {008000}- {FF0000}за да отворите менюто за тунинг\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/dm, /dm2\t {008000}- {FF0000}за да се телепортирате на арената за битка - DM\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/joinevent\t {008000}- {FF0000}за да се присъедините към евент\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/leaveevent\t {008000}- {FF0000}за да излезете от евент\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/erefuel\t {008000}- {FF0000}за да добавите 100 литра на вашето превозно средство\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/nameon\t {008000}- {FF0000}за да ви се вижда никнейма над главата\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/nameoff\t {008000}- {FF0000}за да не ви се вижда никнейма над главата\n");strcat(string2230result, string2230);
ShowPlayerDialog(playerid,16,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}ЛИ{008000}СТ{FF0000} 4",string2230result,"Други","Затвори");
}
}
if(dialogid==16)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
new string2230[512]; new string2230result[1750];
format(string2230,512,"{FFFFFF}Команда{008000},\t{FF0000}Действие\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/radio\t {008000}- {FF0000}за да пуснете вашето радио\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/radioff\t {008000}- {FF0000}за да изкючите вашето радио\n\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/coalmine\t {008000}- {FF0000}за да започнеш работа като миньор\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/sweep\t {008000}- {FF0000}за да започнеш работа като чистач на улици\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/pizza\t {008000}- {FF0000}за да започнеш работа като доставчик на пици\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/bus\t {008000}- {FF0000}за да започнеш работа като автобусен шофьор\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/deliver\t {008000}- {FF0000}за да започнеш работа като доставчик\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/boat\t {008000}- {FF0000}за да започнеш работа като лодкаджия\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/pilot\t {008000}- {FF0000}за да започнеш работа като пилот\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/leavejob\t {008000}- {FF0000}за да напуснеш твоята работа\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/dmon\t {008000}- {FF0000}за да влезете в DM арената\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/dmoff\t {008000}- {FF0000}за да излезете от DM арената\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/cb\t {008000}- {FF0000}за да влезете в определен CB Chanel\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/cbp\t {008000}- {FF0000}за да видиш онлайн играчите, които са в твоя CB Chanel\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/cboff\t {008000}- {FF0000}за да излезеш от твоя CB Chanel\n\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/duel\t {008000}- {FF0000}за да изпратиш покана за дуел на някого\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/cduel\t {008000}- {FF0000}за да отмениш поканата за дуел, която си изпратил на някого\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/yes\t {008000}- {FF0000}за да приемеш покана за дуел\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/no\t {008000}- {FF0000}за да откажеш покана за дуел\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/fish\t {008000}- {FF0000}за да метнеш въдицата т.е. да ловуваш\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/sellfish\t {008000}- {FF0000}за да продадеш рибата, която имаш, когато си до магазина(бизнеса)\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/fishes\t {008000}- {FF0000}за да провериш какви риби си хванал и колко стръв имаш\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/putback\t {008000}- {FF0000}за да изхвърлиш дадена риба, която държиш\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/putallback\t {008000}- {FF0000}за да изхвърлиш всички риби, които имаш в себе си\n\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/buybomb\t {008000}- {FF0000}за да купиш бомба, когато си в бизнеса за купуване на бомби\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/placebomb\t {008000}- {FF0000}за да поставиш бомба на определено място\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/bomb\t {008000}- {FF0000}за да гръмнеш бомбата, която си поставил последно\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/givebomb\t {008000}- {FF0000}за да дадеш бомба на определен играч\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/detonator\t {008000}- {FF0000}за да активираш/деактивираш дадена бомба\n");strcat(string2230result, string2230);
ShowPlayerDialog(playerid,17,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}ЛИ{008000}СТ{FF0000} 5",string2230result,"Други","Затвори");
}
}
if(dialogid==17)
{
if(!response)
{
TextDrawHideForPlayer(playerid, Intro[0]);
}
if(response)
{
new string2230[512]; new string2230result[1850];
format(string2230,512,"{FFFFFF}Команда{008000},\t{FF0000}Действие\n");
strcat(string2230result, string2230);
format(string2230,512,"{00FF00}----\t{FF0000} НОВИ КОМАНДИ {00FF00}----\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/news\t {008000}- {FF0000}за всичка нова информация относно сървъра\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/bizgps\t {008000}- {FF0000}всички бизнеси наоколо(ЗА VIP)\n\n");strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/clanhelp\t {008000}- {FF0000}всички клан команди\n\n");strcat(string2230result, string2230);
format(string2230,512,"{00FF00}----\t{FF0000} ЗА ОЩЕ ИНФОРМАЦИЯ - /news {00FF00}----\n");
strcat(string2230result, string2230);
new closeddialog=3501;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}ЛИ{008000}СТ{FF0000} 6",string2230result,"Затвори","");
}
}
if(dialogid==19)
{
if(!response)
{
}
if(response) // If they clicked 'Select' or double-clicked a weapon
{
// Give them the weapon
switch(listitem)
{
//            new noerrorstring4[115];
case 0:
{
format(noerrorstring4,115,"{FFFFFF}Вашата обща сума е {40BF00}$%d\n", PlayerInfo[playerid][pAccount]);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"Обща сума:",noerrorstring4,"Затвори","");
}
case 1:
{
format(noerrorstring4,115,"{FFFFFF}Вие имате {40BF00}$%d\n{FFFFFF}Моля въведете отдолу колко долара искате да изтеглите от вашата сума:", PlayerInfo[playerid][pAccount]);
ShowPlayerDialog(playerid,6,DIALOG_STYLE_INPUT,"Изтегли пари:",noerrorstring4,"Изтегли","Назад");
}
case 2:
{
new string175[175];
format(string175,175,"{FFFFFF}Вие имате {40BF00}$%d{FFFFFF} в себе си.\nМоля въведете отдоло колко долара искате да внесете във вашата сума:", PlayerInfo[playerid][pCash]);
ShowPlayerDialog(playerid,20,DIALOG_STYLE_INPUT,"Плати нарушение:",string175,"Плати","Назад");
}
}
}
}
if(dialogid==20)
{
if(!response)
{
}
if(response) //Continue
{
if(PlayerInfo[playerid][pCash]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш толкова пари в себе си!");
new string[256];
GivePlayerCash(playerid,-strval(inputtext));
PlayerInfo[playerid][pAccount]+=strval(inputtext);
//ApplyAnimation(playerid, "PED", "ATM", 3.0,1,1,0,0,0);
format(string, sizeof(string), "Вие успешно внесохте {40BF00}$%d {FFFFFF}във вашата обща сума", strval(inputtext));
SendClientMessage(playerid, 0xFFFFFFFF, string);
}
else ShowPlayerDialog(playerid, 19, DIALOG_STYLE_LIST, "Банка", "Обща сума\nИзтегли пари\nВнеси пари", "Избери", "Затвори");
}
//
if(dialogid==39)
{
if(strval(inputtext)<1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да заредите 0 литра във вашето превозно средство.");
return 0;
}
if(vehfuel[GetPlayerVehicleID(playerid)]==100)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вашето превозно средство има 100 литра бензин.");
return 0;
}
if(strval(inputtext)>100-vehfuel[GetPlayerVehicleID(playerid)])
{
new string140[140];
format(string140,140,"Можете да заредите до %d литра във вашето превозно средство.",100-vehfuel[GetPlayerVehicleID(playerid)]);
SendClientMessage(playerid,COLOR_GRAD1,string140);
return 0;
}
refuelcan[playerid]=strval(inputtext);
PlayerInfo[playerid][pRefuelCan]=8*2;
TogglePlayerControllable(playerid, 0);
GameTextForPlayer(playerid, "~g~PLEASE WAIT", 8000, 3);
SendClientMessage(playerid,0xA4FFA4FF,"Моля, изчакайте, докато се зареди вашето превозно средство!");
}
if(dialogid==38)
{
new refuelstring[500];
if(strval(inputtext)<1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да заредите 0 литра във вашата туба за бензин.");
return 0;
}
if(PlayerInfo[playerid][pFuelcase]==100)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вашата туба за бензин е пълна.");
return 0;
}
if(strval(inputtext)>100-PlayerInfo[playerid][pFuelcase])
{
new string140[140];
format(string140,140,"Можете да заредите до %d литра във вашата туба за бензин.",100-PlayerInfo[playerid][pFuelcase]);
SendClientMessage(playerid,COLOR_GRAD1,string140);
return 0;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281) && benzinkifuel[0]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406) && benzinkifuel[1]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335) && benzinkifuel[2]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391) && benzinkifuel[3]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219) && benzinkifuel[4]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797) && benzinkifuel[5]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203) && benzinkifuel[6]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922) && benzinkifuel[7]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625) && benzinkifuel[8]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116) && benzinkifuel[9]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203) && benzinkifuel[10]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203) && benzinkifuel[11]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203) && benzinkifuel[12]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203) && benzinkifuel[13]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328) && benzinkifuel[14]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359) && benzinkifuel[15]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452) && benzinkifuel[16]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(strval(inputtext)<=100-PlayerInfo[playerid][pFuelcase])
{
//tuk
refuelcan[playerid]=strval(inputtext);
PlayerInfo[playerid][pRefuelCan2]=4*2;
TogglePlayerControllable(playerid, 0);
GivePlayerCash(playerid,-strval(inputtext));
GameTextForPlayer(playerid, "~g~PLEASE WAIT", 2000, 3);
SendClientMessage(playerid,0xA4FFA4FF,"Gas Station: Моля, изчакайте, докато заредим вашата туба!");
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281))
{
benzinkifuel[0]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406))
{
benzinkifuel[1]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335))
{
benzinkifuel[2]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391))
{
benzinkifuel[3]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219))
{
benzinkifuel[4]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797))
{
benzinkifuel[5]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203))
{
benzinkifuel[6]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922))
{
benzinkifuel[7]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625))
{
benzinkifuel[8]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116))
{
benzinkifuel[9]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203))
{
benzinkifuel[10]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203))
{
benzinkifuel[11]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203))
{
benzinkifuel[12]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203))
{
benzinkifuel[13]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328))
{
benzinkifuel[14]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359))
{
benzinkifuel[15]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452))
{
benzinkifuel[16]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281))
{
Delete3DTextLabel(benzinki[0]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[0]);
benzinki[0]=Create3DTextLabel(refuelstring,0xFFFFFFFF,1004.0327,-937.5370,42.3281,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406))
{
Delete3DTextLabel(benzinki[1]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[1]);
benzinki[1]=Create3DTextLabel(refuelstring,0xFFFFFFFF,1942.3719,-1772.8666,13.6406,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335))
{
Delete3DTextLabel(benzinki[2]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[2]);
benzinki[2]=Create3DTextLabel(refuelstring,0xFFFFFFFF,-1606.7223,-2713.3562,48.5335,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391))
{
Delete3DTextLabel(benzinki[3]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[3]);
benzinki[3]=Create3DTextLabel(refuelstring,0xFFFFFFFF,-2026.7813,156.5509,29.0391,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219))
{
Delete3DTextLabel(benzinki[4]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[4]);
benzinki[4]=Create3DTextLabel(refuelstring,0xFFFFFFFF,-1676.2601,413.5443,12.1797,65,0,0);//-1676.2601,413.5443,12.1797
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797))
{
Delete3DTextLabel(benzinki[5]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[5]);
benzinki[5]=Create3DTextLabel(refuelstring,0xFFFFFFFF,-1676.2601,413.5443,7.1797,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203))
{
Delete3DTextLabel(benzinki[6]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[6]);
benzinki[6]=Create3DTextLabel(refuelstring,0xFFFFFFFF,2201.8296,2475.1350,10.8203,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922))
{
Delete3DTextLabel(benzinki[7]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[7]);
benzinki[7]=Create3DTextLabel(refuelstring,0xFFFFFFFF,615.3391,1690.0454,6.9922,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625))
{
Delete3DTextLabel(benzinki[8]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[8]);
benzinki[8]=Create3DTextLabel(refuelstring,0xFFFFFFFF,-1328.2731,2677.5278,50.0625,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116))
{
Delete3DTextLabel(benzinki[9]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[9]);
benzinki[9]=Create3DTextLabel(refuelstring,0xFFFFFFFF,70.3842,1219.0177,18.8116,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203))
{
Delete3DTextLabel(benzinki[10]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[10]);
benzinki[10]=Create3DTextLabel(refuelstring,0xFFFFFFFF,2113.3835,919.5655,10.8203,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203))
{
Delete3DTextLabel(benzinki[11]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[11]);
benzinki[11]=Create3DTextLabel(refuelstring,0xFFFFFFFF,2641.0115,1106.6252,10.8203,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203))
{
Delete3DTextLabel(benzinki[12]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[12]);
benzinki[12]=Create3DTextLabel(refuelstring,0xFFFFFFFF,2146.7964,2747.8115,10.8203,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203))
{
Delete3DTextLabel(benzinki[13]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[13]);
benzinki[13]=Create3DTextLabel(refuelstring,0xFFFFFFFF,1595.7935,2199.5996,10.8203,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328))
{
Delete3DTextLabel(benzinki[14]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[14]);
benzinki[14]=Create3DTextLabel(refuelstring,0xFFFFFFFF,-1471.1836,1863.7598,32.6328,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359))
{
Delete3DTextLabel(benzinki[15]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[15]);
benzinki[15]=Create3DTextLabel(refuelstring,0xFFFFFFFF,655.7673,-565.0798,16.3359,40,0,0);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452))
{
Delete3DTextLabel(benzinki[16]);
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[16]);
benzinki[16]=Create3DTextLabel(refuelstring,0xFFFFFFFF,1381.8230,459.1453,20.3452,40,0,0);
}
}
}
if(dialogid==18)
{
new refuelstring[500];
if(strval(inputtext)<1)
{
SendClientMessage(playerid,COLOR_GRAD1,"Не можете да заредите 0 литра във вашето превозно средство.");
return 0;
}
if(vehfuel[GetPlayerVehicleID(playerid)]==100)
{
SendClientMessage(playerid,COLOR_GRAD1,"Вашето превозно средство има 100 литра бензин.");
return 0;
}
if(strval(inputtext)>100-vehfuel[GetPlayerVehicleID(playerid)])
{
new string140[140];
format(string140,140,"Можете да заредите до %d литра във вашето превозно средство.",100-vehfuel[GetPlayerVehicleID(playerid)]);
SendClientMessage(playerid,COLOR_GRAD1,string140);
return 0;
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281) && benzinkifuel[0]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406) && benzinkifuel[1]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335) && benzinkifuel[2]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391) && benzinkifuel[3]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219) && benzinkifuel[4]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797) && benzinkifuel[5]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203) && benzinkifuel[6]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922) && benzinkifuel[7]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625) && benzinkifuel[8]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116) && benzinkifuel[9]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203) && benzinkifuel[10]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203) && benzinkifuel[11]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203) && benzinkifuel[12]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203) && benzinkifuel[13]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328) && benzinkifuel[14]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359) && benzinkifuel[15]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452) && benzinkifuel[16]<strval(inputtext)) return SendClientMessage(playerid,COLOR_GRAD1,"В бензиностанцията няма толкова бензин.");
if(strval(inputtext)<=100-vehfuel[GetPlayerVehicleID(playerid)])
{
new string140[140];
format(string140,140,"Бензиностанция: Благодарим ви, че ни се доверихте. Наляхме ви {FFFF00}%d{FFFFFF} литра.",strval(inputtext));
SendClientMessage(playerid,0x3399ffFF,string140);
vehfuel[GetPlayerVehicleID(playerid)]+=strval(inputtext);
GivePlayerCash(playerid,-strval(inputtext));
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281))
{
benzinkifuel[0]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406))
{
benzinkifuel[1]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335))
{
benzinkifuel[2]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391))
{
benzinkifuel[3]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219))
{
benzinkifuel[4]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797))
{
benzinkifuel[5]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203))
{
benzinkifuel[6]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922))
{
benzinkifuel[7]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625))
{
benzinkifuel[8]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116))
{
benzinkifuel[9]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203))
{
benzinkifuel[10]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203))
{
benzinkifuel[11]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203))
{
benzinkifuel[12]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203))
{
benzinkifuel[13]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328))
{
benzinkifuel[14]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359))
{
benzinkifuel[15]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452))
{
benzinkifuel[16]-=strval(inputtext);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1004.0327,-937.5370,42.3281))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[0]);
Update3DTextLabelText(benzinki[0],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1942.3719,-1772.8666,13.6406))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[1]);
Update3DTextLabelText(benzinki[1],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1606.7223,-2713.3562,48.5335))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[2]);
Update3DTextLabelText(benzinki[2],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2026.7813,156.5509,29.0391))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[3]);
Update3DTextLabelText(benzinki[3],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -2243.8149,-2559.8899,31.9219))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[4]);
Update3DTextLabelText(benzinki[4],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1676.2601,413.5443,7.1797))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[5]);
Update3DTextLabelText(benzinki[5],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2201.8296,2475.1350,10.8203))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[6]);
Update3DTextLabelText(benzinki[6],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 615.3391,1690.0454,6.9922))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[7]);
Update3DTextLabelText(benzinki[7],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1328.2731,2677.5278,50.0625))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[8]);
Update3DTextLabelText(benzinki[8],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 70.3842,1219.0177,18.8116))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[9]);
Update3DTextLabelText(benzinki[9],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2113.3835,919.5655,10.8203))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[10]);
Update3DTextLabelText(benzinki[10],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2641.0115,1106.6252,10.8203))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[11]);
Update3DTextLabelText(benzinki[11],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 2146.7964,2747.8115,10.8203))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[12]);
Update3DTextLabelText(benzinki[12],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1595.7935,2199.5996,10.8203))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[13]);
Update3DTextLabelText(benzinki[13],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, -1471.1836,1863.7598,32.6328))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[14]);
Update3DTextLabelText(benzinki[14],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 655.7673,-565.0798,16.3359))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[15]);
Update3DTextLabelText(benzinki[15],0xFFFFFFFF,refuelstring);
}
if(IsPlayerInRangeOfPoint(playerid, 10, 1381.8230,459.1453,20.3452))
{
format(refuelstring,500,"{00ff00}[ %d/500 литра ]",benzinkifuel[16]);
Update3DTextLabelText(benzinki[16],0xFFFFFFFF,refuelstring);
}
}
}
if(dialogid == 11)
{
//if(respawncarsvote2==0)
//{
if(response)
{
PlayerInfo[playerid][pYes]=1;
voteyes+=1;
}
if(!response)
{
PlayerInfo[playerid][pNo]=1;
voteno+=1;
}
//}
{
if(response)
{
PlayerInfo[playerid][pYes]=1;
rescarsyes+=1;
if(respawncarsvote>0)
{
SendClientMessage(playerid,0xFFFFFFFF,"VOTE RESPAWN CARS: Ти гласува с ДА за да бъдат RESPAWN-нати превозните средства!");
}
}
if(!response)
{
PlayerInfo[playerid][pNo]=1;
rescarsno+=1;
if(respawncarsvote>0)
{
SendClientMessage(playerid,0xFFFFFFFF,"VOTE RESPAWN CARS: Ти гласува с НЕ за да бъдат НЕ RESPAWN-нати превозните средства!");
}
}
}
}
if(dialogid==43)
{
if(response)
{
withgps[playerid]=1;
DisablePlayerRaceCheckpoint(playerid);
DisablePlayerCheckpoint(playerid);
switch(listitem)
{
case 0:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до Pizza Job");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, PizzaJob, 4.0);
}
case 1:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: GPS: Следвай червения маркер, за да отидеш до Taxi Job");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, TaxiJob, 4.0);
}
case 2:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до Coalmine Job");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, CoalmineJob, 4.0);
}
case 3:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до Sweeper Job");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, SweeperJob, 4.0);
}
case 4:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до Bus Job");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, BusJob, 4.0);
}
case 5:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до Deliver Job");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, DeliverJob, 4.0);
}
case 6:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до Мястото за Риболов");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, Fishing, 4.0);
}
case 7:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до 24/7 Магазин");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, Shop, 4.0);
}
case 8:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до Специален тунинг гараж");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, CarShop, 4.0);
}
case 9:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до Магазина за коли");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, SpecialCar, 4.0);
}
case 10:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до Банката");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, Bank, 4.0);
}
case 11:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до Казиното");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, Casino, 4.0);
}
case 12:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до 'Национална лотария'");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, LotteryShow, 4.0);
}
case 13:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до 'Сделка или не'");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, SdelkaIliNe, 4.0);
}
case 14:
{
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Следвай червения маркер, за да отидеш до Автошколата");
SendClientMessage(playerid,	0x92E4F4FF,"GPS: Ако искаш да премахнеш твоята GPS локация, напиши /removegps");
SetPlayerCheckpoint(playerid, Knijki, 4.0);
}
}
}
}
if(dialogid==42)
{
if(!response)
{
ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "House Vehicles:","От Level 5 нагоре - {00BF00}$30,000\nОт Level 7 нагоре - {00BF00}$60,000\nОт Level 10 нагоре - {00BF00}$100,000\nОт Level 15 нагоре - {00BF00}$160, 000\nОт Level 17 нагоре - {00BF00}$200,000\nОт Level 20 нагоре - {00BF00}$250,000", "Избери", "Излез");
}
if(response)
{
switch(listitem)
{
case 0:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=481;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 1:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=462;
}
case 2:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=464;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 3:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=543;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 4:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=478;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 5:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=566;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 6:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=500;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 7:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=401;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 8:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=526;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 9:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=546;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 10:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=436;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 11:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=549;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 12:
{if(PlayerInfo[playerid][pCash]<30000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<5) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-30000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=418;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
}
}
}
//
if(dialogid==45)
{
if(!response)
{
ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "House Vehicles:","От Level 5 нагоре - {00BF00}$30,000\nОт Level 7 нагоре - {00BF00}$60,000\nОт Level 10 нагоре - {00BF00}$100,000\nОт Level 15 нагоре - {00BF00}$160, 000\nОт Level 17 нагоре - {00BF00}$200,000\nОт Level 20 нагоре - {00BF00}$250,000", "Избери", "Излез");
}
if(response)
{
switch(listitem)
{
case 0:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=471;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 1:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!");
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=600;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 2:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); //
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=422;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 3:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=413;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 4:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=576;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 5:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=400;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 6:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=445;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 7:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=455;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 8:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=518;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 9:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=527;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 10:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=585;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 11:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=419;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 12:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=466;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 13:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=410;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 14:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=516;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 15:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=547;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 16:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); /// HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=529;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 17:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=404;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 18:
{if(PlayerInfo[playerid][pCash]<60000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<7) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-60000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=479;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
}
}
}
//
//
if(dialogid==46)
{
if(!response)
{
ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "House Vehicles:","От Level 5 нагоре - {00BF00}$30,000\nОт Level 7 нагоре - {00BF00}$60,000\nОт Level 10 нагоре - {00BF00}$100,000\nОт Level 15 нагоре - {00BF00}$160, 000\nОт Level 17 нагоре - {00BF00}$200,000\nОт Level 20 нагоре - {00BF00}$250,000", "Избери", "Излез");
}
if(response)
{
switch(listitem)
{
case 0:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=510;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 1:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=463;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 2:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=439;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 3:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=482;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 4:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=554;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 5:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=536;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 6:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=412;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 7:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=424;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 8:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=489;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 9:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=504;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 10:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=480;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 11:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=492;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 12:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=471;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 13:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=517;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 14:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=551;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 15:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=467;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 16:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=405;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 17:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=550;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 18:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=540;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 19:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=491;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 20:
{if(PlayerInfo[playerid][pCash]<100000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<10) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-100000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=602;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
}
}
}
//
//
if(dialogid==47)
{
if(!response)
{
ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "House Vehicles:","От Level 5 нагоре - {00BF00}$30,000\nОт Level 7 нагоре - {00BF00}$60,000\nОт Level 10 нагоре - {00BF00}$100,000\nОт Level 15 нагоре - {00BF00}$160, 000\nОт Level 17 нагоре - {00BF00}$200,000\nОт Level 20 нагоре - {00BF00}$250,000", "Избери", "Излез");
}
if(response)
{
switch(listitem)
{
case 0:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=533;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 1:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=575;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 2:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=568;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 3:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=562;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 4:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=559;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 5:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=494;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 6:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=502;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 7:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=503;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 8:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=558;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 9:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=477;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 10:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=434;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 11:
{if(PlayerInfo[playerid][pCash]<160000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<15) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-160000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=571;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
}
}
}
//
//
if(dialogid==48)
{
if(!response)
{
ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "House Vehicles:","От Level 5 нагоре - {00BF00}$30,000\nОт Level 7 нагоре - {00BF00}$60,000\nОт Level 10 нагоре - {00BF00}$100,000\nОт Level 15 нагоре - {00BF00}$160, 000\nОт Level 17 нагоре - {00BF00}$200,000\nОт Level 20 нагоре - {00BF00}$250,000", "Избери", "Излез");
}
if(response)
{
switch(listitem)
{
case 0:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=521;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 1:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=555;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 2:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=535;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 3:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=495;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 4:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=560;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 5:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=429;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 6:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=402;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 7:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=603;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 8:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=506;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 9:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // //HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=415;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 10:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=409;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 11:
{if(PlayerInfo[playerid][pCash]<200000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<17) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-200000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=447;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
}
}
}
//
//
//
if(dialogid==52)
{
if(!response)
{
}
if(response)
{
switch(listitem)
{
case 0: GivePlayerWeapon(playerid, WEAPON_KNIFE, 1);
case 1: GivePlayerWeapon(playerid, WEAPON_BAT, 1);
case 2: GivePlayerWeapon(playerid, WEAPON_COLT45, 100);
case 3: GivePlayerWeapon(playerid, WEAPON_SILENCED, 100);
case 4: GivePlayerWeapon(playerid, WEAPON_DEAGLE, 100);
case 5: GivePlayerWeapon(playerid, WEAPON_SHOTGUN, 125);
case 6: GivePlayerWeapon(playerid, WEAPON_SAWEDOFF, 125);
case 7: GivePlayerWeapon(playerid, WEAPON_SHOTGSPA, 125);
case 8: GivePlayerWeapon(playerid, WEAPON_UZI, 1150);
case 9: GivePlayerWeapon(playerid, WEAPON_MP5, 500);
case 10: GivePlayerWeapon(playerid, WEAPON_TEC9, 500);
case 11: GivePlayerWeapon(playerid, WEAPON_AK47, 500);
case 12: GivePlayerWeapon(playerid, WEAPON_M4, 500);
case 13: GivePlayerWeapon(playerid, WEAPON_RIFLE, 300);
case 14: GivePlayerWeapon(playerid, WEAPON_SNIPER, 20);
case 15:
{
if(PlayerInfo[playerid][pSpecialForce]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да бъдеш Special Force за да си вземеш това оръжие!");
if(PlayerInfo[playerid][pDFDuty]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да бъдеш на смяна за да си вземеш това оръжие!");
GivePlayerWeapon(playerid, WEAPON_ROCKETLAUNCHER, 5);
}
case 16:
{
if(PlayerInfo[playerid][pSpecialForce]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да бъдеш Special Force за да си вземеш това оръжие!");
if(PlayerInfo[playerid][pDFDuty]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да бъдеш на смяна за да си вземеш това оръжие!");
GivePlayerWeapon(playerid, WEAPON_HEATSEEKER, 5);
}
case 17:
{
if(PlayerInfo[playerid][pSpecialForce]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да бъдеш Special Force за да си вземеш това оръжие!");
if(PlayerInfo[playerid][pDFDuty]==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да бъдеш на смяна за да си вземеш това оръжие!");
GivePlayerWeapon(playerid, WEAPON_SATCHEL, 5);
}
}
}
}

//
if(dialogid==50)
{
if(response)
{
switch(listitem)
{
case 0:
{
if(PlayerInfo[playerid][pActiveBomb][0]==0)
{
return PlayerInfo[playerid][pActiveBomb][0]=1;
}
if(PlayerInfo[playerid][pActiveBomb][0]==1)
{
return PlayerInfo[playerid][pActiveBomb][0]=0;
}
}
case 1:
{
if(PlayerInfo[playerid][pActiveBomb][1]==0)
{
return PlayerInfo[playerid][pActiveBomb][1]=1;
}
if(PlayerInfo[playerid][pActiveBomb][1]==1)
{
return PlayerInfo[playerid][pActiveBomb][1]=0;
}
}
case 2:
{
if(PlayerInfo[playerid][pActiveBomb][2]==0)
{
return PlayerInfo[playerid][pActiveBomb][2]=1;
}
if(PlayerInfo[playerid][pActiveBomb][2]==1)
{
return PlayerInfo[playerid][pActiveBomb][2]=0;
}
}
case 3:
{
if(PlayerInfo[playerid][pActiveBomb][3]==0)
{
return PlayerInfo[playerid][pActiveBomb][3]=1;
}
if(PlayerInfo[playerid][pActiveBomb][3]==1)
{
return PlayerInfo[playerid][pActiveBomb][3]=0;
}
}
case 4:
{
if(PlayerInfo[playerid][pActiveBomb][4]==0)
{
return PlayerInfo[playerid][pActiveBomb][4]=1;
}
if(PlayerInfo[playerid][pActiveBomb][4]==1)
{
return PlayerInfo[playerid][pActiveBomb][4]=0;
}
}
}
}
}
if(dialogid==49)
{
if(!response)
{
ShowPlayerDialog(playerid, 41, DIALOG_STYLE_LIST, "House Vehicles:","От Level 5 нагоре - {00BF00}$30,000\nОт Level 7 нагоре - {00BF00}$60,000\nОт Level 10 нагоре - {00BF00}$100,000\nОт Level 15 нагоре - {00BF00}$160, 000\nОт Level 17 нагоре - {00BF00}$200,000\nОт Level 20 нагоре - {00BF00}$250,000", "Избери", "Излез");
}
if(response)
{
switch(listitem)
{
case 0:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=522;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 1:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);
HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=567;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 2:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=556;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 3:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=557;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 4:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=541;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 5:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=411;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 6:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=451;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 7:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=480;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
case 8:
{if(PlayerInfo[playerid][pCash]<250000) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно пари за да си купиш това превозно средство!");
if(PlayerInfo[playerid][pLevel]<20) return SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш достатъчно голям левел за това превозно средство!");
GivePlayerCash(playerid,-250000);HouseInfo[PlayerInfo[playerid][pHouseO]][hcC]=1; HouseInfo[PlayerInfo[playerid][pHouseO]][hcC2]=1; SendClientMessage(playerid,0x00FF40FF,"Новото превозно средство към къщата ти ще бъде валидно след рестарт на сървъра!"); // HouseInfo[PlayerInfo[playerid][pHouseO]][hcY]=HouseInfo[PlayerInfo[playerid][pHouseO]][hY]; HouseInfo[PlayerInfo[playerid][pHouseO]][hcZ]=HouseInfo[PlayerInfo[playerid][pHouseO]][hZ];  HouseInfo[PlayerInfo[playerid][pHouseO]][hcX]+=5;
HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]=487;
new house[64]; format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
dini_IntSet(house, "hcV",HouseInfo[PlayerInfo[playerid][pHouseO]][hcV]);
dini_FloatSet(house, "hcY",HouseInfo[PlayerInfo[playerid][pHouseO]][hY]+5);
dini_FloatSet(house, "hcZ",HouseInfo[PlayerInfo[playerid][pHouseO]][hZ]);
}
}
}
}
//
if(dialogid==41)
{
if(response)
{
switch(listitem)
{
case 0:
{
ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Level 5:","BMX\nFaggio\nWayfarer\nSadler\nWalton\nTahoma\nMessa\nBravura\nFortune\nIntruder\nPrevion\nTampa\nMoonbeam", "Избери", "Назад");
}
case 1:
{
ShowPlayerDialog(playerid, 45, DIALOG_STYLE_LIST, "Level 7:","Quad\nPicador\nBobcat\nPony\nTornado\nLandstalker\nAdmiral\nBuccaneer\nCadrona\nEmperor\nEspertano\nGlendale\nManana\nNebula\nPrimo\nWillard\nPerenniel\nRegina", "Избери", "Назад");
}
case 2:
{
ShowPlayerDialog(playerid, 46, DIALOG_STYLE_LIST, "Level 10:","Mountain Bike\nFreeway\nStallion\nBurrito\nYosemite\nBlade\nVoodo\nBF Injection\nRancher\nBloodring Banger\nCover\nGreenwood\nHermes\nMajestic\nMerit\nOceanic\nSentinel\nSunrise\nVincent\nVirgo\nAlpha", "Избери", "Назад");
}
case 3:
{
ShowPlayerDialog(playerid, 47, DIALOG_STYLE_LIST, "Level 15:","PCJ-500\nFeltzer\nBroadway\nBandito\nElegy\nJester\nHotring Racer\nHotring Racer 2\nHotring Racer 3\nUranus\nZR-350\nHotknife\nKart", "Избери", "Назад");
}
case 4:
{
ShowPlayerDialog(playerid, 48, DIALOG_STYLE_LIST, "Level 17:","FCR-900\nWindsor\nSlamvan\nSandking\nSultan\nBanshee\nBuffalo\nPhoenix\nSuper GT\nCheetah\nStretch\nSparrow", "Избери", "Назад");
}
case 5:
{
ShowPlayerDialog(playerid, 49, DIALOG_STYLE_LIST, "Level 20:","NRG-500\nSavanna\nMonster\nMonster A\nMonster B\nBullet\nInfernus\nTursimo\nComet\nMaverick", "Избери", "Назад");
}
}
}
}
if(dialogid==40)
{
if(response)
{
switch(listitem)
{
case 0:
{
if(PlayerInfo[playerid][pHook]==1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш въдица за риболов!");
SendClientMessage(playerid,COLOR_FISH,"Fishing Store: Ти си купи въдица за риболов за $350!");
PlayerInfo[playerid][pHook]=1;
GivePlayerCash(playerid,-350);
}
case 1:
{
SendClientMessage(playerid,COLOR_FISH,"Fishing Store: Ти си купи стръв(50 червея) за $100!");
PlayerInfo[playerid][pChervei]+=50;
GivePlayerCash(playerid,-100);
}
}
}
}
if(dialogid==24)
{
if(response)
{
switch(listitem)
{
case 0:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието 9mm струва {00BF00}$2\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,25,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 1:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Silenced 9mm струва {00BF00}$3\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,26,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 2:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Desert Eagle струва {00BF00}$5\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,27,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 3:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Shotgun струва {00BF00}$8\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,28,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 4:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Sawnoff струва {00BF00}$12\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,29,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 5:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Combat Shotgun струва {00BF00}$14\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,30,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 6:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието MP5 струва {00BF00}$2\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,31,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 7:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Uzi струва {00BF00}$2\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,32,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 8:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Tec9 струва {00BF00}$3\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,33,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 9:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието AK-47 струва {00BF00}$5\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,34,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 10:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието M4 струва {00BF00}$6\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,35,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 11:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Country Rifle струва {00BF00}$67\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,36,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
case 12:
{
new string500[500];
format(string500,500,"{FFFFFF}Патронът на оръжието Sniper Rifle струва {00BF00}$400\n{FFFFFF}Колко патрона искаш да купиш?");
ShowPlayerDialog(playerid,37,DIALOG_STYLE_INPUT,"Патрони",string500,"Купи","Затвори");
}
}
}
}
if(dialogid==25)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*2);
GivePlayerWeapon(playerid,22,strval(inputtext)*2); BizInfo[enteredbiz[playerid]][bEarnings]+=2*strval(inputtext);
}
}
if(dialogid==26)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*3);
GivePlayerWeapon(playerid,22,strval(inputtext)*3); BizInfo[enteredbiz[playerid]][bEarnings]+=3*strval(inputtext);
}
}
if(dialogid==27)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*5);
GivePlayerWeapon(playerid,22,strval(inputtext)*5); BizInfo[enteredbiz[playerid]][bEarnings]+=5*strval(inputtext);
}
}
if(dialogid==28)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*8);
GivePlayerWeapon(playerid,22,strval(inputtext)*8); BizInfo[enteredbiz[playerid]][bEarnings]+=8*strval(inputtext);
}
}
if(dialogid==29)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*12);
GivePlayerWeapon(playerid,22,strval(inputtext)*12); BizInfo[enteredbiz[playerid]][bEarnings]+=12*strval(inputtext);
}
}
if(dialogid==30)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*14);
GivePlayerWeapon(playerid,22,strval(inputtext)*14); BizInfo[enteredbiz[playerid]][bEarnings]+=14*strval(inputtext);
}
}
if(dialogid==31)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*2);
GivePlayerWeapon(playerid,22,strval(inputtext)*2); BizInfo[enteredbiz[playerid]][bEarnings]+=2*strval(inputtext);
}
}
if(dialogid==32)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*2);
GivePlayerWeapon(playerid,22,strval(inputtext)*2); BizInfo[enteredbiz[playerid]][bEarnings]+=2*strval(inputtext);
}
}
if(dialogid==33)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*3);
GivePlayerWeapon(playerid,22,strval(inputtext)*3); BizInfo[enteredbiz[playerid]][bEarnings]+=3*strval(inputtext);
}
}
if(dialogid==34)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*5);
GivePlayerWeapon(playerid,22,strval(inputtext)*5); BizInfo[enteredbiz[playerid]][bEarnings]+=5*strval(inputtext);
}
}
if(dialogid==35)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*6);
GivePlayerWeapon(playerid,22,strval(inputtext)*6); BizInfo[enteredbiz[playerid]][bEarnings]+=6*strval(inputtext);
}
}
if(dialogid==36)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*67);
GivePlayerWeapon(playerid,22,strval(inputtext)*67); BizInfo[enteredbiz[playerid]][bEarnings]+=67*strval(inputtext);
}
}
if(dialogid==37)
{
if(response)
{
if(strval(inputtext)<1 || strval(inputtext)>10000)  return SendClientMessage(playerid, COLOR_GRAD1, "Можеш да вкараш от 1 до 10000 патроа!");
GivePlayerCash(playerid,-strval(inputtext)*400);
GivePlayerWeapon(playerid,22,strval(inputtext)*400); BizInfo[enteredbiz[playerid]][bEarnings]+=400*strval(inputtext);
}
}
if(dialogid==23)
{
if(response)
{
switch(listitem)
{
case 0:
{
if(PlayerInfo[playerid][pCash]<50) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $50!");
SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
GivePlayerCash(playerid,-50); BizInfo[enteredbiz[playerid]][bEarnings]+=50;
}
case 1:
{
if(PlayerInfo[playerid][pCash]<60) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $60!");
SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
GivePlayerCash(playerid,-60); BizInfo[enteredbiz[playerid]][bEarnings]+=60;
}
case 2:
{
if(PlayerInfo[playerid][pCash]<100) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш поне $100!");
SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
GivePlayerCash(playerid,-100); BizInfo[enteredbiz[playerid]][bEarnings]+=100;
}
}
}
}
if(dialogid == 10)
{
if(!response)
{
}
if(response)
{
switch(listitem)
{
case 0: GivePlayerWeapon(playerid, WEAPON_KNIFE, 1);
case 1: GivePlayerWeapon(playerid, WEAPON_BAT, 1);
case 2: GivePlayerWeapon(playerid, WEAPON_COLT45, 100);
case 3: GivePlayerWeapon(playerid, WEAPON_SILENCED, 100);
case 4: GivePlayerWeapon(playerid, WEAPON_DEAGLE, 100);
case 5: GivePlayerWeapon(playerid, WEAPON_SHOTGUN, 125);
case 6: GivePlayerWeapon(playerid, WEAPON_SAWEDOFF, 125);
case 7: GivePlayerWeapon(playerid, WEAPON_SHOTGSPA, 125);
case 8: GivePlayerWeapon(playerid, WEAPON_UZI, 1150);
case 9: GivePlayerWeapon(playerid, WEAPON_MP5, 500);
case 10: GivePlayerWeapon(playerid, WEAPON_TEC9, 500);
case 11: GivePlayerWeapon(playerid, WEAPON_AK47, 500);
case 12: GivePlayerWeapon(playerid, WEAPON_M4, 500);
case 13: GivePlayerWeapon(playerid, WEAPON_RIFLE, 300);
case 14: GivePlayerWeapon(playerid, WEAPON_SNIPER, 20);
}
}
}
if(dialogid==9)
{
if(!response)
{
}
if(response)
{
new string2230[512]; new string2230result[2200];
format(string2230,512,"{00FF00}---Команди за лидер на банда/мафия---\n\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/duelrank {008000}- {ff0000} Duel за ранг\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/invite {008000}- {ff0000} дава покана за банда/мафия до играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/cinvite {008000}- {ff0000} отменя покана на играч за банда/мафия\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/uninvite {008000}- {ff0000} гони играча от бандата/мафията\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/nuninvite {008000}- {ff0000} гони играча от бандата/мафията чрез въвеждане на никнейм\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/setrank {008000}- {ff0000} дава ранк на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/setrankname {008000}- {ff0000} променя името на даден ранк\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/lc {008000}- {ff0000} за да пишеш в лидерския чат\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/factionmute(/fmute) {008000}- {ff0000} слагате MUTE в FACTION CHAT-а на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/factiotimenmute(/ftmute) {008000}- {ff0000} слагате TIMEMUTE в FACTION CHAT-а на играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/fmuted {008000}- {ff0000} проверявате кой е MUTE в FACTION CHAT-а\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/factionmuteall(/fmuteall) {008000}- {ff0000} заглушавате всички играчи от твоята банда/мафия в FACTION CHAT-а\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/factionunmuteall(/funmuteall) {008000}- {ff0000} отглушавате всички играчи от твоята банда/мафия в FACTION CHAT-а\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/fwarn {008000}- {ff0000} слага FACTION предупреждение на даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/unfwarn {008000}- {ff0000} маха FACTION предупреждение на даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/checkfwarn {008000}- {ff0000} да провериш колко FACTION предупреждения има даден играч\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/ismember {008000}- {ff0000} за да провериш даден играч дали е от твоята банда/мафия\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/turfattack {008000}- {ff0000} за да атакуваш територия\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/turftime {008000}- {ff0000} за да провериш колко време остава до началото на нова атака\n");
strcat(string2230result, string2230);
format(string2230,512,"{FFFFFF}/attackers {008000}- {ff0000} показва играчите, които са участници в атаката на територия\n");
strcat(string2230result, string2230);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"{33CCFF}FACTION HELP",string2230result,"Затвори","");
}
}
if(dialogid==8)
{
format(PlayerInfo[playerid][pSkype],36,"ПРАЗНО");
new string256[256];
format(string256,256,"{FFFFFF}Добре дошли в нашия сървър, {40BF00}%s\n\n{FFFFFF}За да играеш тук, трябва да си направиш регистрация.\nНапиши паролата си отдолу",pname[playerid]);
ShowPlayerDialog(playerid,0,DIALOG_STYLE_PASSWORD,"Register:",string256,"Регистрирай се","Излез");
}
if(dialogid==5)
{
if(!response)
{
}
if(response) // If they clicked 'Select' or double-clicked a weapon
{
// Give them the weapon
switch(listitem)
{
//          new noerrorstring4[115];
case 0:
{
format(noerrorstring4,115,"{FFFFFF}Вашата обща сума е {40BF00}$%d\n", PlayerInfo[playerid][pAccount]);
new closeddialog=3500;
ShowPlayerDialog(playerid,closeddialog,DIALOG_STYLE_MSGBOX,"Обща сума:",noerrorstring4,"Затвори","");
}
case 1:
{
format(noerrorstring4,115,"{FFFFFF}Вие имате {40BF00}$%d\n{FFFFFF}Моля въведете отдолу колко долара искате да изтеглите от вашата сума:", PlayerInfo[playerid][pAccount]);
ShowPlayerDialog(playerid,6,DIALOG_STYLE_INPUT,"Изтегли пари:",noerrorstring4,"Изтегли","Назад");
}
case 2:
{
new string175[175];
format(string175,175,"{FFFFFF}Вие имате {FF0000}%d{FFFFFF} нарушения. За да платите едно това ще ви струва {40BF00}$1000\n{FFFFFF}Моля въведете отдолу колко броя нарушения искате да платите:", PlayerInfo[playerid][pWanted]);
ShowPlayerDialog(playerid,7,DIALOG_STYLE_INPUT,"Плати нарушение:",string175,"Плати","Назад");
}
}
}
}
if(dialogid==6)
{
if(!response)
{
}
if(response)
{
if(!IsNumeric(inputtext))
{
SendClientMessage(playerid,COLOR_GRAD1,"Въведи само цифри !");
return 1;
}
if(strval(inputtext) == 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Въведи число различно от 0 !");
return 1;
}
if(PlayerInfo[playerid][pAccount]<strval(inputtext))
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш толкова пари !");
return 1;
}
if(ATMCASH[PlayerNearATM[playerid]]!=-1)
{
if(ATMCASH[PlayerNearATM[playerid]]<strval(inputtext))
{
SendClientMessage(playerid,COLOR_GRAD1,"В момента нямаме такава сума в наличност, опитайте по-късно !");
return 1;
}
}
if(strval(inputtext)<1 || strval(inputtext)>999999999)
{
SendClientMessage(playerid,COLOR_GRAD1,"Въведи число шо-голямо от 0 и по-малко от 999999999!");
return 1;
}
if(ATMCASH[PlayerNearATM[playerid]]!=-1)
{
ATMCASH[PlayerNearATM[playerid]]-=strval(inputtext);
}
//new noerrorstring4[115];
GivePlayerCash(playerid,strval(inputtext));
PlayerInfo[playerid][pAccount]-=strval(inputtext);
//ApplyAnimation(playerid, "PED", "ATM", 3.0,1,1,0,0,0);
format(noerrorstring4, 115, "Вие успешно изтеглихте {40BF00}$%d {FFFFFF}от вашата обща сума.", strval(inputtext));
SendClientMessage(playerid, 0xFFFFFFFF, noerrorstring4);
}
else
{
ShowPlayerDialog(playerid, 5, DIALOG_STYLE_LIST, "Банкомат", "Обща сума\nИзтегли пари\nВнеси пари", "Избери", "Затвори");
}
}
if(dialogid==7)
{
if(!response)
{
}
if(response) //Continue
{
if(!IsNumeric(inputtext))
{
SendClientMessage(playerid,COLOR_GRAD1,"Въведи само цифри !");
return 1;
}
if(strval(inputtext) == 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Въведи число различно от 0 !");
return 1;
}
if(strval(inputtext)>PlayerInfo[playerid][pWanted])
{
SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш толкова звезди !");
return 1;
}
if(PlayerInfo[playerid][pCash]<strval(inputtext)*1000)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш толкова пари !");
return 1;
}
//new noerrorstring4[115];
GivePlayerCash(playerid,-strval(inputtext)*1000);
format(noerrorstring4, 115, "Вие успешно платихте {40BF00}%d {FFFFFF}нарушение/я ", strval(inputtext),PlayerInfo[playerid][pAccount]);
SendClientMessage(playerid, 0xFFFFFFFF, noerrorstring4);
PlayerInfo[playerid][pWanted]-=strval(inputtext);
SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
if(PlayerInfo[playerid][pWanted]==0)
{
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0xCC0000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
}
}
else
{
ShowPlayerDialog(playerid, 5, DIALOG_STYLE_LIST, "Банкомат", "Обща сума\nИзтегли пари\nПлати нарушение", "Избери", "Затвори");
}
}
return 1;
}
public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz) // calling fix, don't remove.
{
if(objectid==spikes21[playerid])
{
XSpike[selectedspike[playerid]]=x;
YSpike[selectedspike[playerid]]=y;
ZSpike[selectedspike[playerid]]=z;
}
new house[64]; new housestring[60];
if(objectid==editobject[playerid])
{
format(house, 64, "/Houses/%d.ini", PlayerInfo[playerid][pHouseO]);
format(housestring,60,"hObjectID[%d]",HouseInfo[PlayerInfo[playerid][pHouseO]][hObjects]);
dini_IntSet(house,housestring,objectid);
format(housestring,60,"hObjectX[%d]",HouseInfo[PlayerInfo[playerid][pHouseO]][hObjects]);
dini_FloatSet(house, housestring,x);
format(housestring,60,"hObjectY[%d]",HouseInfo[PlayerInfo[playerid][pHouseO]][hObjects]);
dini_FloatSet(house, housestring,y);
format(housestring,60,"hObjectZ[%d]",HouseInfo[PlayerInfo[playerid][pHouseO]][hObjects]);
dini_FloatSet(house, housestring,z);
format(housestring,60,"hObjectXR[%d]",HouseInfo[PlayerInfo[playerid][pHouseO]][hObjects]);
dini_FloatSet(house, housestring,rx);
format(housestring,60,"hObjectYR[%d]",HouseInfo[PlayerInfo[playerid][pHouseO]][hObjects]);
dini_FloatSet(house, housestring,ry);
format(housestring,60,"hObjectZR[%d]",HouseInfo[PlayerInfo[playerid][pHouseO]][hObjects]);
dini_FloatSet(house, housestring,ry);
DestroyObject(editobject[playerid]);
objecthouse[PlayerInfo[playerid][pHouseO]][HouseInfo[PlayerInfo[playerid][pHouseO]][hObjects]]=CreateDynamicObject(objectid,x,y,z,rx,ry,rz,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid),-1,150.000,150.000);
}
//////////////////////////////
if(privVehObjectBeforeAccept[playerid] && response != EDIT_RESPONSE_FINAL) // If this is a global object, sync the position for other players
{
if(!IsValidObject(objectid)) return 1;
SetObjectPos(objectid, x, y, z);
SetObjectRot(objectid, rx, ry, rz);
}
if(privVehObjectForEditing[playerid] && response != EDIT_RESPONSE_FINAL) // If this is a global object, sync the position for other players
{
if(!IsValidObject(objectid)) return 1;
SetObjectPos(objectid, x, y, z);
SetObjectRot(objectid, rx, ry, rz);
}
///////////////////////////////
if(response == EDIT_RESPONSE_FINAL || response == EDIT_RESPONSE_CANCEL)
{
if(objectid==privVehObjectForEditing[playerid])
{
new Float:ofx, Float:ofy, Float:ofz, Float:ofaz;
new Float:finalx, Float:finaly;
new Float:px, Float:py, Float:pz, Float:roz;
new vehicleid=GetPlayerVehicleID(playerid);
if(privatecars[vehicleid]!=-1)
{
if(driver[playerid] == 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в личното си превозно средство като шофьор!");
DestroyDynamicObject(privVehObjectBeforeAccept[playerid]);
return 1;
}
GetVehiclePos(vehicleid, px, py, pz);
GetVehicleZAngle(vehicleid, roz);
ofx = x-px;
ofy = y-py;
ofz = z-pz;
ofaz = rz-roz;
finalx = ofx*floatcos(roz, degrees)+ofy*floatsin(roz, degrees);
finaly = -ofx*floatsin(roz, degrees)+ofy*floatcos(roz, degrees);
VehicleSelectObjectInfo(vehicleid,finalx,finaly,ofz,rx,ry,ofaz);
CreateTheObjectVeh(playerid,vehicleid);
}
}
}
if(response == EDIT_RESPONSE_FINAL || response == EDIT_RESPONSE_CANCEL)
{
if(objectid==privVehObjectBeforeAccept[playerid])
{
new Float:ofx, Float:ofy, Float:ofz, Float:ofaz;
new Float:finalx, Float:finaly;
new Float:px, Float:py, Float:pz, Float:roz;
new vehicleid=GetPlayerVehicleID(playerid);
if(driver[playerid] == 0)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в личното си превозно средство като шофьор!");
DestroyDynamicObject(privVehObjectBeforeAccept[playerid]);
return 1;
}
if(privatecars[vehicleid]!=-1)
{
GetVehiclePos(vehicleid, px, py, pz);
GetVehicleZAngle(vehicleid, roz);
ofx = x-px;
ofy = y-py;
ofz = z-pz;
ofaz = rz-roz;
finalx = ofx*floatcos(roz, degrees)+ofy*floatsin(roz, degrees);
finaly = -ofx*floatsin(roz, degrees)+ofy*floatcos(roz, degrees);
VehicleLoadedObjectInfo(vehicleid,finalx,finaly,ofz,rx,ry,ofaz);
if(finalx>0.20 || finaly>0.20 || ofz>1.15)
{
SendClientMessage(playerid,COLOR_RED,"Обектът е наместен далеко от превозното средство!");
DestroyDynamicObject(privVehObjectBeforeAccept[playerid]);
return 1;
}
ShowPlayerDialog(playerid,84,DIALOG_STYLE_MSGBOX, "Обект", "{ffffff}Искате ли обектът да се запази?", "{ffffff}ДА", "НЕ");
}
////
}
}
else
{
DestroyDynamicObject(privVehObjectBeforeAccept[playerid]);
}
return 1;
}
CreateTheObjectVeh(playerid,vehicleid)
{
privatecarobject[vehicleid][selectedvehobject[playerid]] = CreateDynamicObject(vObject[vehicleid][selectedvehobject[playerid]],0.0,0.0,0.0, 0.0,0.0,0.0);
AttachObjectToVehicle(privatecarobject[vehicleid][selectedvehobject[playerid]], vehicleid, vObjectX[vehicleid][selectedvehobject[playerid]], vObjectY[vehicleid][selectedvehobject[playerid]],
vObjectofz[vehicleid][selectedvehobject[playerid]], vObjectfRotX[vehicleid][selectedvehobject[playerid]], vObjectfRotY[vehicleid][selectedvehobject[playerid]], vObjectfRotofaz[vehicleid][selectedvehobject[playerid]]);
DestroyDynamicObject(privVehObjectBeforeAccept[playerid]);
}
VehicleSelectObjectInfo(vehicleid,Float:finalx,Float:finaly,Float:ofz,Float:rx,Float:ry,Float:ofaz)
{
vObjectX[vehicleid][selectedvehobject[vehicleid]]=finalx;
vObjectY[vehicleid][selectedvehobject[vehicleid]]=finaly;
vObjectofz[vehicleid][selectedvehobject[vehicleid]]=ofz;
vObjectfRotX[vehicleid][selectedvehobject[vehicleid]]=rx;
vObjectfRotY[vehicleid][selectedvehobject[vehicleid]]=ry;
vObjectfRotofaz[vehicleid][selectedvehobject[vehicleid]]=ofaz;
}
VehicleLoadedObjectInfo(vehicleid,Float:finalx,Float:finaly,Float:ofz,Float:rx,Float:ry,Float:ofaz)
{
vObjectX[vehicleid][vehobjectsloaded[vehicleid]]=finalx;
vObjectY[vehicleid][vehobjectsloaded[vehicleid]]=finaly;
vObjectofz[vehicleid][vehobjectsloaded[vehicleid]]=ofz;
vObjectfRotX[vehicleid][vehobjectsloaded[vehicleid]]=rx;
vObjectfRotY[vehicleid][vehobjectsloaded[vehicleid]]=ry;
vObjectfRotofaz[vehicleid][vehobjectsloaded[vehicleid]]=ofaz;
}
//public OnPlayerEditAttachedObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
//{
//}
public OnPlayerEditAttachedObject( playerid, response, index, modelid, boneid,
Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,
Float:fRotX, Float:fRotY, Float:fRotZ,
Float:fScaleX, Float:fScaleY, Float:fScaleZ )
{
SetPlayerAttachedObject(playerid,index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
return 1;
}
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
new Float:oldX, Float:oldY, Float:oldZ, Float:oldRotX, Float:oldRotY, Float:oldRotZ;
GetObjectPos(objectid, oldX, oldY, oldZ);
GetObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
if(!playerobject) // If this is a global object, sync the position for other players
{
if(!IsValidObject(objectid)) return 1;
SetObjectPos(objectid, fX, fY, fZ);
SetObjectRot(objectid, fRotX, fRotY, fRotZ);
}
if(response == EDIT_RESPONSE_FINAL)
{
//if(attachedPlayerObject[objectid]==true)
//{
SetObjectPos(objectid, fX, fY, fZ);
SetObjectRot(objectid, fRotX, fRotY, fRotZ);
//}
}
if(response == EDIT_RESPONSE_FINAL)
{
//	if(objectid==objectut[playerid])
//	{
//		AttachObjectToVehicle(objectut[playerid], GetPlayerVehicleID(playerid), fX, fY, fZ, fRotX, fRotY, fRotZ);
//	}
}
if(response == EDIT_RESPONSE_CANCEL)
{
//The player cancelled, so put the object back to it's old position
if(!playerobject) //Object is not a playerobject
{
SetObjectPos(objectid, oldX, oldY, oldZ);
SetObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
}
else
{
SetPlayerObjectPos(playerid, objectid, oldX, oldY, oldZ);
SetPlayerObjectRot(playerid, objectid, oldRotX, oldRotY, oldRotZ);
}
}
return 1;
}
public CorDetector(Float:radi, playerid, targetid)
{
if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
{
new Float:posx, Float:posy, Float:posz;
new Float:oldposx, Float:oldposy, Float:oldposz;
new Float:tempposx, Float:tempposy, Float:tempposz;
GetPlayerPos(playerid, oldposx, oldposy, oldposz);
//radi = 2.0; //Trigger Radius
GetPlayerPos(targetid, posx, posy, posz);
tempposx = (oldposx -posx);
tempposy = (oldposy -posy);
tempposz = (oldposz -posz);
if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
{
return 1;
}
}
return 0;
}
stock SendLocalMessage(Float:rad,playerid,color, string[])
{
for(new i=0; i<MAX_PLAYERS; i++)
{
if(IsPlayerConnected(i))
{
if(GetPlayerVirtualWorld(playerid)==GetPlayerVirtualWorld(i))
{
if(CorDetector(rad, playerid, i))
{
SendClientMessage(i,color,string);
}
}
}
}
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
return 1;
}
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
///////////////////TEST DMON
if(PlayerInfo[playerid][pTestDMON]==1 && playerid!=issuerid)
{
new Float:armor;
GetPlayerArmour(playerid,armor);
if(armor==0)
{
new Float: health;
GetPlayerHealth(playerid,health);
if(health<=1)
{
SetPlayerHealth(playerid,2+amount);
}
SetPlayerHealth(playerid,health+amount);
}
else
{
SetPlayerArmour(playerid,armor+amount);
}
}
///////////////////TEST DMON
new freeplace;
if(induel[issuerid]==1)
{
if(dueltype[issuerid]==1)
{
if(rankformula2[issuerid][0]==-1)
{
freeplace=0;
}
else if(rankformula2[issuerid][1]==-1)
{
freeplace=1;
}
else if(rankformula2[issuerid][2]==-1)
{
freeplace=2;
}
else if(rankformula2[issuerid][2]!=-1)
{
freeplace=0;
}
//duelpoints[issuerid][freeplace]+=amount;
//rankformula[issuerid]+=amount;
new Float: health;
new Float: health2;
GetPlayerHealth(playerid,health);
GetPlayerHealth(playerid,health2);
new done=0;
new Float:armor;
new Float:armor2;
GetPlayerArmour(playerid,armor);
GetPlayerArmour(issuerid,armor2);
duelpoints[issuerid][freeplace]+=amount;
if(armor>=61)
{
rankformula2[issuerid][freeplace]=1;
rankformula[issuerid]=1;
}
if(armor>50 && armor<=60)
{
rankformula2[issuerid][freeplace]=2;
rankformula[issuerid]=2;
}
if(armor>=41 && armor<=50)
{
rankformula2[issuerid][freeplace]=2;
rankformula[issuerid]=2;
}
if(armor>=31 && armor<=40)
{
rankformula2[issuerid][freeplace]=3;
rankformula[issuerid]=3;
}
if(armor>=0 && armor<=30)
{
rankformula2[issuerid][freeplace]=3;
rankformula[issuerid]=3;
}
if(armor==0)
{
if(health>80 && health<=100)
{
rankformula2[issuerid][freeplace]=3;
rankformula[issuerid]=3;
}
if(health>60 && health<=80)
{
rankformula2[issuerid][freeplace]=3;
rankformula[issuerid]=3;
}
if(health>30 && health<=60)
{
rankformula2[issuerid][freeplace]=4;
rankformula[issuerid]=4;
}
if(health<=30)
{
rankformula2[issuerid][freeplace]=5;
rankformula[issuerid]=5;
}
if(health<=25)
{
rankformula2[issuerid][freeplace]=5;
rankformula[issuerid]=5;
}
if(health<=20)
{
rankformula2[issuerid][freeplace]=5;
rankformula[issuerid]=5;
}
if(health<=15)
{
rankformula2[issuerid][freeplace]=5;
rankformula[issuerid]=5;
}
if(health<=10)
{
rankformula2[issuerid][freeplace]=5;
rankformula[issuerid]=5;
}
if(health<=1)
{
rankformula2[issuerid][freeplace]=5;
rankformula[issuerid]=5;
if(duelpoints[playerid][freeplace]==-1)
{
duelpoints[playerid][freeplace]=1;
}
}
if(health2<50 && done==0)
{
if(rankformula[playerid]>4)
{
rankformula[issuerid]-=3;
done=1;
}
}
if(armor2<10 && done==0)
{
if(rankformula[playerid]>2)
{
rankformula[issuerid]-=1;
done=1;
}
}
if(health2>50 && health<70 && done==0)
{
if(rankformula[playerid]>3)
{
rankformula[issuerid]-=2;
done=1;
}
}
}
}
}
if(PlayerInfo[issuerid][pWantedSeconds]==0)
{
if(playerid!=issuerid)
{
if(dutypolice[issuerid]==0 && dutypolice[playerid]==1)
{
new stringmoneybox[256];
PlayerInfo[issuerid][pWantedSeconds]=120*3;
PlayerInfo[issuerid][pWanted]+=1;
if(PlayerInfo[issuerid][pWanted]>6) PlayerInfo[issuerid][pWanted]=6;
SetPlayerWantedLevel(issuerid,PlayerInfo[issuerid][pWanted]);
format(stringmoneybox,256,"[SUSPECT]{0040FF} Ти си заподозрян в престъпление: Нанесена щета по полицай, ниво на издирване: %d",PlayerInfo[issuerid][pWanted]);
SendClientMessage(issuerid,0xFF0000FF,stringmoneybox);
new stringsuspect[256];
if(PlayerInfo[issuerid][pWanted]==6)
{
PlayerInfo[issuerid][pWanted]+=1;
format(stringmoneybox,115,"{ff0000}[DELTA FORCE]{A4A400} Ти ще бъдеш издирван от Delta Force, понеже имаш 6 звезди",PlayerInfo[issuerid][pWanted]);
SendClientMessage(issuerid,0xFF0000FF,stringmoneybox);
format(stringsuspect,256,"[WARNING]{A4A400} %s е заподозрян с 6 звезди, който го убие ще спечели $3000 и 5 EP",pname[issuerid],PlayerInfo[issuerid][pWanted]);
for(new alldf=0; alldf<MAX_PLAYERS;alldf++ && IsPlayerConnected(alldf))
{
if(PlayerInfo[alldf][pTeam]==15)
{
SendClientMessage(alldf,0xFF0000FF,stringsuspect);
}
}
}
format(stringsuspect,256,"[SUSPECT]{0040FF} %s е заподозрян в престъпление: Нанесена щета по полицай, ниво на изидрване: %d",pname[issuerid],PlayerInfo[issuerid][pWanted]);
SendFactionMessage(13,0xFF0000FF,stringsuspect);
}
}
}
//
if(playerid!=issuerid)
{
if(electro[issuerid]==1 && PlayerInfo[issuerid][pTeam]==13)
{
if(weaponid==23)
{
if(GetPlayerWeapon(issuerid)==WEAPON_SILENCED)
{
electro[issuerid]=0;
ApplyAnimation(playerid,"CRACK", "crckdeth2", 4.1, 1, 1, 1, 1, 1, 1);
TogglePlayerControllable(playerid, 0);
ApplyAnimation(playerid,"CRACK", "crckdeth2", 4.1, 1, 1, 1, 1, 1, 1);
PlayerInfo[playerid][pClearAnimation]=60;
PlayerInfo[playerid][pFreezed2]=60;
PlayerInfo[playerid][pFreezed]=6;
SendClientMessage(playerid,0xB8860BFF,"Вие бяхте застрелян от полицай с електрошок и сте неутрализиран за 30 секунди!");
SendClientMessage(issuerid,0xB8860BFF,"Вие използвахте вашия електрошок!");
ApplyAnimation(playerid,"CRACK", "crckdeth2", 4.1, 1, 1, 1, 1, 1, 1);
}
}
}
}
new Float:armour2;
GetPlayerArmour(playerid,armour2);
if(extraarmour[playerid]>0)
{
if(armour2>0)
{
SetPlayerArmour(playerid,100);
}
extraarmour[playerid]-=15;
}
if(extraarmour[playerid]==0 && shield[playerid]>0)
{
if(shield[playerid]>0 && extraarmour[playerid]==0)
{
SetPlayerArmour(playerid,100);
}
shield[playerid]-=15;
}
if(IsPlayerAttachedObjectSlotUsed(playerid, 5) && extraarmour[playerid]<1)
{
RemovePlayerAttachedObject(playerid,5);
}
if(IsPlayerAttachedObjectSlotUsed(playerid, 6) && shield[playerid]<1)
{
RemovePlayerAttachedObject(playerid,6);
}
//if(OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
if(weaponid==34 && bodypart==9)
{
SetPlayerHealth(playerid,0);
GameTextForPlayer(playerid, "~y~~h~~h~HEADSHOT", 2300, 3);
GameTextForPlayer(issuerid, "~r~~h~HEADSHOT", 2300, 3);
}
return 0;
}
public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
if(IsPlayerConnected(playerid))
{
new Float:posx, Float:posy, Float:posz;
new Float:oldposx, Float:oldposy, Float:oldposz;
new Float:tempposx, Float:tempposy, Float:tempposz;
GetPlayerPos(playerid, oldposx, oldposy, oldposz);
//radi = 2.0; //Trigger Radius
for(new i = 0; i < MAX_PLAYERS; i++ && IsPlayerConnected(i))
{
if(IsPlayerConnected(i))
{
if(!BigEar[i])
{
GetPlayerPos(i, posx, posy, posz);
tempposx = (oldposx -posx);
tempposy = (oldposy -posy);
tempposz = (oldposz -posz);
//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
{
SendClientMessage(i, col1, string);
}
else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
{
SendClientMessage(i, col2, string);
}
else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
{
SendClientMessage(i, col3, string);
}
else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
{
SendClientMessage(i, col4, string);
}
else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
{
SendClientMessage(i, col5, string);
}
}
else
{
SendClientMessage(i, col1, string);
}
}
}
}//not connected
return 1;
}
Float:GetPlayerTheoreticAngle(playerid)
{
new Float:MindAngle = 0.0, Float:angle2 = 0.0;
if(IsPlayerConnected(playerid))
{
new Float:x, Float:y, Float:z;
GetPlayerPos(playerid, x, y, z);
new Float:dis = floatsqroot(floatpower(floatabs(floatsub(x, Drifting[playerid][pPos][0])), 2)+floatpower(floatabs(floatsub(y, Drifting[playerid][pPos][1])), 2));
if(IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), angle2);
else GetPlayerFacingAngle(playerid, angle2);
if(Drifting[playerid][pPos][0] >= x)
{
new Float:tmp = (x >= Drifting[playerid][pPos][0]) ? (x - Drifting[playerid][pPos][0]) : (Drifting[playerid][pPos][0] - x), Float:sin = asin(tmp / dis);
if(Drifting[playerid][pPos][1] >= y) MindAngle = floatadd(floatsub(floatadd(sin, 90), floatmul(sin, 2)), 90.0);
else MindAngle = floatsub(floatadd(sin, 180), 180.0);
}
else
{
if(Drifting[playerid][pPos][1] < y)
{
new Float:tmp2 = (y >= Drifting[playerid][pPos][1]) ? (y - Drifting[playerid][pPos][1]) : (Drifting[playerid][pPos][1] - y), Float:sin = acos(tmp2 / dis);
MindAngle = floatsub(floatadd(sin, 360), floatmul(sin, 2));
}
else
{
new Float:tmp = (x >= Drifting[playerid][pPos][0]) ? (x - Drifting[playerid][pPos][0]) : (Drifting[playerid][pPos][0] - x), Float:sin = asin(tmp / dis);
MindAngle = floatadd(sin, 180);
}
}
}
return (!MindAngle) ? (angle2) : (MindAngle);
}
public DriftExit(playerid)
{
TimerInfo[playerid][CancelTimer] = 0;
new Float:h, veh = GetPlayerVehicleID(playerid);
GetVehicleHealth(veh, h);
if(driver[playerid]==1)
{
if((70 <= Drifting[playerid][CurrentPoints] <= 10000) && h >= Drifting[playerid][CarHealth])
{
GivePlayerCash(playerid, (Drifting[playerid][CurrentPoints] * Drifting[playerid][DriftBonus]) * CASH_PERCENT);
}
}
TextDrawHideForPlayer(playerid, TDLabels[0]);
TextDrawHideForPlayer(playerid, TDLabels[1]);
TextDrawHideForPlayer(playerid, TDLabels[2]);
PlayerTextDrawHide(playerid, TDValueDrift[playerid]);
PlayerTextDrawHide(playerid, TDValueBonus[playerid]);
PlayerTextDrawHide(playerid, TDValueCash[playerid]);
Drifting[playerid][DriftBonus] = 1;
Drifting[playerid][FixMode] = true;
SetVehicleHealth(veh, Drifting[playerid][CarHealth]);
Drifting[playerid][CurrentPoints] = 0;
return 1;
}
public Drift(playerid)
{
if(indrift[playerid]==0) return 1;
if(IsPlayerInAnyVehicle(playerid) && GetVType(GetPlayerVehicleID(playerid)))
{
new Float:SpeedX, Float:Angle1, Float:Angle2, Float:BySpeed;
GetPlayerPos(playerid, X[playerid], Y[playerid], Z[playerid]);
SpeedX = floatsqroot(floatadd(floatadd(floatpower(floatabs(floatsub(X[playerid], Drifting[playerid][pPos][0])), 2), floatpower(floatabs(floatsub(Y[playerid], Drifting[playerid][pPos][1])), 2)), floatpower(floatabs(floatsub(Z[playerid], Drifting[playerid][pPos][2])), 2)));
if(IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), Angle1);
else GetPlayerFacingAngle(playerid, Angle1);
Angle2 = GetPlayerTheoreticAngle(playerid);
BySpeed = floatmul(SpeedX, 12);
if((DRIFT_MINKAT <= floatabs(floatsub(Angle1, Angle2)) <= DRIFT_MAXKAT) && BySpeed >= DRIFT_SPEED)
{
if(TimerInfo[playerid][CancelTimer]) KillTimer(TimerInfo[playerid][CancelTimer]);
Drifting[playerid][CurrentPoints] += floatround((floatabs(floatsub(Angle1, Angle2)) * BySpeed * 0.3) / 10);
TimerInfo[playerid][CancelTimer] = SetTimerEx("DriftExit", 3000, false, "d", playerid);
}
switch(Drifting[playerid][CurrentPoints])
{
case 0 .. 499: Drifting[playerid][DriftBonus] = 1;
case 500 .. 999: Drifting[playerid][DriftBonus] = 2;
case 1000 .. 1699: Drifting[playerid][DriftBonus] = 3;
case 1700 .. 2499: Drifting[playerid][DriftBonus] = 4;
default: Drifting[playerid][DriftBonus] = 5;
}
TextDrawShowForPlayer(playerid, TDLabels[0]);
TextDrawShowForPlayer(playerid, TDLabels[1]);
TextDrawShowForPlayer(playerid, TDLabels[2]);
PlayerTextDrawShow(playerid, TDValueDrift[playerid]);
PlayerTextDrawShow(playerid, TDValueBonus[playerid]);
PlayerTextDrawShow(playerid, TDValueCash[playerid]);
new vstr[15];
format(vstr, sizeof(vstr), "%d", Drifting[playerid][CurrentPoints]);
PlayerTextDrawSetString(playerid, TDValueDrift[playerid], vstr);
format(vstr, sizeof(vstr), "X%d", Drifting[playerid][DriftBonus]);
PlayerTextDrawSetString(playerid, TDValueBonus[playerid], vstr);
format(vstr, sizeof(vstr), "$%d", ((Drifting[playerid][CurrentPoints] * Drifting[playerid][DriftBonus]) * CASH_PERCENT));
PlayerTextDrawSetString(playerid, TDValueCash[playerid], vstr);
Drifting[playerid][pPos][0] = X[playerid];
Drifting[playerid][pPos][1] = Y[playerid];
Drifting[playerid][pPos][2] = Z[playerid];
}
return 1;
}
public AngleUpdate(playerid)
{
if(indrift[playerid]==0) return 1;
if(IsPlayerInAnyVehicle(playerid)) GetVehiclePos(GetPlayerVehicleID(playerid), Drifting[playerid][pPos][0], Drifting[playerid][pPos][1], Drifting[playerid][pPos][2]);
else GetPlayerPos(playerid, Drifting[playerid][pPos][0], Drifting[playerid][pPos][1], Drifting[playerid][pPos][2]);
return 1;
}
LoadTextDraws(playerid)
{
TDValueDrift[playerid] = CreatePlayerTextDraw(playerid, 500, 120, "0");
PlayerTextDrawColor(playerid, TDValueDrift[playerid], COLOR_Value);
PlayerTextDrawSetShadow(playerid, TDValueDrift[playerid], 0);
PlayerTextDrawSetOutline(playerid, TDValueDrift[playerid], 1);
PlayerTextDrawLetterSize(playerid, TDValueDrift[playerid], 0.5, 2);
PlayerTextDrawBackgroundColor(playerid, TDValueDrift[playerid], COLOR_ValueOut);
PlayerTextDrawFont(playerid, TDValueDrift[playerid], 3);
TDValueBonus[playerid] = CreatePlayerTextDraw(playerid, 500, 170, "X1");
PlayerTextDrawColor(playerid, TDValueBonus[playerid], COLOR_Value);
PlayerTextDrawSetShadow(playerid, TDValueBonus[playerid], 0);
PlayerTextDrawSetOutline(playerid, TDValueBonus[playerid], 1);
PlayerTextDrawLetterSize(playerid, TDValueBonus[playerid], 0.5, 2);
PlayerTextDrawBackgroundColor(playerid, TDValueBonus[playerid], COLOR_ValueOut);
PlayerTextDrawFont(playerid, TDValueBonus[playerid], 3);
TDValueCash[playerid] = CreatePlayerTextDraw(playerid, 500, 220, "$0");
PlayerTextDrawColor(playerid, TDValueCash[playerid], COLOR_Value);
PlayerTextDrawSetShadow(playerid, TDValueCash[playerid], 0);
PlayerTextDrawSetOutline(playerid, TDValueCash[playerid], 1);
PlayerTextDrawLetterSize(playerid, TDValueCash[playerid], 0.5, 2);
PlayerTextDrawBackgroundColor(playerid, TDValueCash[playerid], COLOR_ValueOut);
PlayerTextDrawFont(playerid, TDValueCash[playerid], 3);
return 1;
}
public CheckPlayerState(playerid)
{
if(Drifting[playerid][DriftMode])
{
if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
{
if(Drifting[playerid][CurrentPoints] > 70)
{
new Float:h;
GetVehicleHealth(GetPlayerVehicleID(playerid), h);
if(h < Drifting[playerid][CarHealth])
{
KillTimer(TimerInfo[playerid][DriftTimer]);
DriftExit(playerid);
GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~Boom", 800, 5);
Drifting[playerid][DriftMode] = false;
}
}
}
else
{
KillTimer(TimerInfo[playerid][DriftTimer]);
Drifting[playerid][DriftMode] = false;
Drifting[playerid][FixMode] = true;
}
}
else if(!Drifting[playerid][DriftMode])
{
new veh = GetPlayerVehicleID(playerid);
if((GetVType(veh)) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
{
Drifting[playerid][DriftMode] = true;
GetVehicleHealth(veh, Drifting[playerid][CarHealth]);
Drifting[playerid][FixMode] = false;
TimerInfo[playerid][DriftTimer] = SetTimerEx("Drift", 200, true, "i", playerid);
}
}
return 1;
}
GetVType(vid)
{
switch(GetVehicleModel(vid))
{
case    480, 533, 439, 555, //Convertibles
403, 408, 413, 414, 422, 440, 443, 455, 456, 459, 478, 482, 498, 499, 514, 515, 524, 531, 543, 552, 554, 578, 582, 605, 609, //Industrial Vehicles
412, 534 .. 536, 566, 567, 575, 576, //Lowriders
470, 489, 500, 505, 556, 557, 568, 573, 579, 595, //Offroad Vehicles
407, 416, 420, 427, 431 .. 433, 437, 438, 490, 523, 528, 544, 596 .. 599, 601, //Service Vehicles
401, 405, 410, 419, 421, 426, 436, 445, 466, 467, 474, 491, 492, 504, 507, 516 .. 518, 526, 527, 529, 540, 542, 546, 547, 549, 550, 551, 560, 562, 580, 585, 600, 604, //Saloon Vehicles
402, 411, 415, 429, 451, 475, 477, 494, 496, 502, 503, 506, 541, 558, 559, 565, 587, 589, 602, 603, //Sports Vehicles
404, 418, 458, 479, 561: return 1; //Wagons
}
return 0;
}
stock Christmas(bool: isChristmas)
{
if(isChristmas==true)
{
//[>>>>>>>>>OBJECTS PRAZNIK, BIG OPEN<<<<<<<<<<<<<<<<<]
//CreateDynamicObject(
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2438.300048, -1680.390380, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2437.981201, -1680.405029, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2437.621337, -1680.421997, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2437.302001, -1680.436767, 12.633585, 0.000000, 0.000000, 92.700012); currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2438.262939, -1679.600952, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2438.226806, -1678.842041, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2437.816406, -1678.861938, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2437.436279, -1678.879882, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2437.075927, -1678.896850, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2437.032714, -1677.977905, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2437.005859, -1677.428588, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2437.515380, -1677.404418, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2438.114990, -1677.376342, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2435.657958, -1677.492187, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2435.723632, -1678.880371, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2435.795166, -1680.388793, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2436.574707, -1680.351684, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2435.095703, -1680.421630, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2434.176757, -1680.464599, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2434.125244, -1679.375854, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2434.069580, -1678.197143, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2434.038085, -1677.537719, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2433.040527, -1679.316772, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2433.098876, -1680.535400, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2433.676025, -1680.478149, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2433.623535, -1679.349243, 12.633585, 0.000000, 0.000000, 92.700012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2433.920410, -1678.998413, 12.633585, 0.000000, 0.000000, 123.200012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2433.367675, -1678.153198, 12.633585, 0.000000, 0.000000, 123.200012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2433.043945, -1677.659912, 12.633585, 0.000000, 0.000000, 123.200012);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2434.053466, -1678.772216, 12.633585, 0.000000, 0.000000, 91.000022);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2431.781982, -1680.601440, 12.633585, 0.000000, 0.000000, 90.599998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2431.772460, -1679.691406, 12.633585, 0.000000, 0.000000, 90.599998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2431.762451, -1678.731445, 12.633585, 0.000000, 0.000000, 90.599998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2431.753173, -1677.851318, 12.633585, 0.000000, 0.000000, 90.599998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2431.750244, -1677.490966, 12.633585, 0.000000, 0.000000, 90.599998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2431.779296, -1680.220458, 12.623586, 0.000000, 0.000000, 90.599998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2431.769531, -1679.170532, 12.623586, 0.000000, 0.000000, 90.599998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2431.760009, -1678.290405, 12.623586, 0.000000, 0.000000, 90.599998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2430.389160, -1678.975952, 12.603590, 0.000000, 0.000000, 67.799995);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2430.547119, -1678.586791, 12.603590, 0.000000, 0.000000, 67.799995);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2430.744628, -1678.105712, 12.603590, 0.000000, 0.000000, 67.799995);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2430.892333, -1677.744628, 12.603590, 0.000000, 0.000000, 67.799995);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2431.048339, -1677.365234, 12.603590, 0.000000, 0.000000, 67.799995);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2430.204589, -1679.429565, 12.603590, 0.000000, 0.000000, 67.799995);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2430.044677, -1679.817993, 12.603590, 0.000000, 0.000000, 67.799995);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2429.942138, -1680.067749, 12.603590, 0.000000, 0.000000, 67.799995);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2431.347412, -1679.961425, 12.603590, 0.000000, 0.000000, 132.400009);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2431.105224, -1679.695312, 12.603590, 0.000000, 0.000000, 132.400009);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2430.869384, -1679.437011, 12.603590, 0.000000, 0.000000, 132.400009);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2430.640625, -1679.185546, 12.603590, 0.000000, 0.000000, 132.400009);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2430.269775, -1678.779052, 12.603590, 0.000000, 0.000000, 132.400009);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2429.992919, -1678.476562, 12.603590, 0.000000, 0.000000, 132.400009);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2429.662597, -1678.114624, 12.603590, 0.000000, 0.000000, 132.400009);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2429.541503, -1677.981445, 12.603590, 0.000000, 0.000000, 132.400009);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2429.338867, -1677.759643, 12.603590, 0.000000, 0.000000, 132.400009);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2429.197265, -1677.604614, 12.603590, 0.000000, 0.000000, 132.400009);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2428.897216, -1677.350952, 12.603590, 0.000000, 0.000000, 132.400009);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2428.687744, -1677.122070, 12.603590, 0.000000, 0.000000, 132.400009);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2428.458740, -1676.871093, 12.603590, 0.000000, 0.000000, 132.400009);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19076, 2419.336669, -1674.165405, 11.987959, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1676, 2427.688232, -1679.832885, 14.292601, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1676, 2427.688232, -1677.572875, 14.292601, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1676, 2427.688232, -1674.233032, 14.292601, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1676, 2438.467529, -1674.233032, 14.292601, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1676, 2438.467529, -1676.133056, 14.292601, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1676, 2438.467529, -1679.903320, 14.292601, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3277, 2451.903564, -1668.566162, 13.350812, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3279, 2458.663085, -1670.605468, 12.552798, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19905, 2458.602050, -1718.764648, 12.751687, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19905, 2458.602050, -1718.214599, 12.751687, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19905, 2458.602050, -1718.264648, 12.751687, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18848, 2492.105712, -1651.905639, 12.002903, 0.000000, 0.000000, 104.500000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18848, 2495.368408, -1651.061279, 12.072907, 0.000000, 0.000000, 104.500000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18848, 2499.270507, -1650.052124, 12.072907, 0.000000, 0.000000, 104.500000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18848, 2503.037109, -1649.077514, 12.072907, 0.000000, 0.000000, 104.500000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3396, 2147.224609, -1445.768310, 24.807666, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3396, 2145.228271, -1449.511718, 24.807666, 0.000000, 0.000000, -49.500007);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2985, 2145.728271, -1443.067749, 24.441205, 0.000000, 0.000000, 179.200042);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2985, 2145.712158, -1444.217529, 24.441205, 0.000000, 0.000000, 179.200042);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2985, 2142.841796, -1444.177612, 24.441205, 0.000000, 0.000000, 179.200042);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2985, 2142.863281, -1442.628051, 24.441205, 0.000000, 0.000000, 179.200042);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2985, 2142.923828, -1438.208251, 23.661209, 0.000000, 0.000000, 179.200042);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2928, 2172.220947, -1394.723632, 26.052309, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2928, 2169.611328, -1394.723632, 26.052309, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2928, 2169.611328, -1394.723632, 23.692312, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2928, 2172.270751, -1394.723632, 23.692312, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2928, 2167.440673, -1394.723632, 23.692312, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2928, 2167.440673, -1394.723632, 26.082305, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(638, 314.781341, -1196.129028, 75.941444, 0.000000, 0.000000, -48.499996);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(638, 329.737487, -1183.662353, 75.974166, 0.000000, 0.000000, -48.499996);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1238, 311.260559, -1198.032470, 75.637840, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1238, 320.242614, -1210.779541, 75.709892, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1238, 320.242614, -1209.618896, 75.709892, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1238, 320.992584, -1210.879760, 75.709892, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1238, 312.002563, -1198.919189, 75.709892, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1238, 312.002563, -1196.699340, 75.709892, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1290, 369.996368, -1166.921630, 77.084487, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1290, 364.954589, -1172.013061, 77.084487, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1290, 344.794586, -1172.013061, 77.084487, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1290, 339.568878, -1175.882690, 77.084487, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19122, 308.423095, -1195.088134, 80.387687, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19122, 311.587188, -1194.158081, 80.262695, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18658, 153.263412, -1953.011230, 46.303909, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18658, 153.263412, -1953.011230, 46.303909, 0.000000, 0.000000, -47.899997);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18658, 153.263412, -1953.011230, 46.303909, 0.000000, 0.000000, 153.600021);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18658, 153.263412, -1953.011230, 46.303909, 0.000000, 0.000000, 45.100036);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18658, 153.263412, -1953.011230, 46.303909, 0.000000, 0.000000, -136.399993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18658, 153.263412, -1953.011230, 46.303909, -62.700004, 0.000000, -136.399993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18658, 153.263412, -1953.011230, 46.303909, -62.700004, 0.000000, -157.699996);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18658, 153.263412, -1953.011230, 46.303909, -62.700004, 0.000000, -24.500020);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18658, 153.263412, -1953.011230, 46.303909, 52.099964, 0.000000, -24.500020);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18658, 153.263412, -1953.011230, 46.303909, 139.500000, 0.000000, -24.500020);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3175, 154.446502, -1897.530029, 2.391113, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3175, 155.065292, -1906.457031, 2.466645, 0.000000, 0.000000, -47.400005);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3605, 188.313323, -1852.794311, 7.768401, 0.000000, 0.000000, 59.899993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3605, 180.507827, -1811.485473, 7.768401, 0.000000, 0.000000, 100.700004);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3605, 147.843460, -1638.615600, 7.768401, 0.000000, 0.000000, 100.700004);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(8873, 151.340026, -1622.927246, 17.640523, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(8873, 135.070037, -1622.927246, 17.640523, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(8873, 136.156661, -1634.285034, 16.170526, 0.000000, 0.000000, 39.899997);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(9131, 137.245452, -1639.410522, 11.350738, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(9131, 136.156661, -1635.515136, 11.380525, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(9131, 136.156661, -1637.675415, 10.690525, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(4550, 436.615081, -1102.810058, 144.234146, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(744, 1186.218383, -1336.099609, 12.527290, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(744, 1186.859985, -1340.060058, 11.945378, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(744, 1186.859985, -1337.300170, 13.265378, 0.000000, 0.000000, -174.900039);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3092, 2289.602294, 2430.606689, 17.721067, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3092, 2290.031005, 2430.688964, 17.721067, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3092, 2290.502197, 2430.606689, 17.721067, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1361, 2273.398925, 2424.230712, 10.558643, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1361, 2274.119628, 2424.230712, 10.558643, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1361, 2274.999511, 2424.230712, 10.558643, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1361, 2304.809326, 2424.230712, 10.558643, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1361, 2303.916748, 2424.230712, 10.558643, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1361, 2303.033935, 2424.230712, 10.558643, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(353, 2288.962402, 2430.822753, 18.134010, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(353, 2288.962402, 2430.822753, 17.664011, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(353, 2291.362548, 2430.713378, 17.664011, 0.000000, 0.000000, 175.099945);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(353, 2291.362548, 2430.713378, 18.114004, 0.000000, 0.000000, 175.099945);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1271, 2165.689941, 2008.222045, 10.080549, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1271, 2165.689941, 2007.471923, 10.080549, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1271, 2165.689941, 2007.401977, 10.620546, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1271, 2165.689941, 2007.401977, 11.310549, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1271, 2165.624267, 2008.249145, 10.790549, 0.000000, 0.000000, -37.899997);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1271, 2164.590820, 2006.923706, 10.170549, 0.000000, 0.000000, -50.899993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1271, 2165.126220, 2007.359008, 10.170549, 0.000000, 0.000000, -50.899993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2040, 2163.790771, 2007.154785, 9.914448, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2040, 2163.790771, 2007.535156, 9.914448, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(2040, 2163.790771, 2007.895141, 9.914448, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1281, 2161.960937, 2004.422119, 10.670312, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1281, 2161.960937, 2001.652343, 10.670312, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1281, 2161.960937, 1998.752441, 10.670312, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1281, 2161.960937, 1996.332641, 10.670312, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1281, 2161.960937, 1993.822143, 10.670312, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1281, 2161.960937, 1972.002075, 10.670312, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1281, 2161.960937, 1974.941894, 10.670312, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1225, 2164.553466, 1999.698364, 10.259370, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3528, 2168.088134, 1972.364990, 18.124280, 0.000000, 0.000000, 78.399978);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3528, 2188.888427, 1971.842041, 18.124280, 0.000000, 0.000000, 78.399978);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3524, 2181.953125, 2011.918090, 12.869999, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3524, 2183.933593, 2011.947875, 12.880000, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3524, 2185.424560, 2011.947875, 12.880000, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19076, 2083.706298, 1267.915405, 9.597900, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19076, 2084.923339, 1314.073730, 9.228389, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19076, 2084.923339, 1358.883544, 9.628388, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19058, 2284.377929, 2427.364501, 10.436657, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19058, 2288.486572, 2427.364501, 10.436657, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19058, 2288.486572, 2429.284179, 10.436657, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19058, 2284.147460, 2429.284179, 10.436657, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19058, 2276.387207, 2428.193603, 10.436657, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19057, 2277.741210, 2428.268554, 10.455432, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19057, 2277.741210, 2426.418701, 10.455432, 0.000000, 0.000000, -38.299995);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19057, 2277.590576, 2427.825195, 11.705430, 0.000000, 0.000000, -38.299995);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19060, 2025.990844, 1550.909912, 11.602914, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19060, 2029.961669, 1550.650146, 11.602914, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19060, 2028.131958, 1540.129638, 11.602914, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19060, 2024.311645, 1540.179687, 11.602914, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2027.419433, 1544.195800, 9.821479, 0.000000, 0.000000, -11.900000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2027.489746, 1544.528686, 9.821479, 0.000000, 0.000000, -11.900000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2027.489746, 1544.528686, 9.821479, 0.000000, 0.000000, 26.999998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2027.580566, 1544.350463, 9.821479, 0.000000, 0.000000, 26.999998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2027.580566, 1544.350463, 9.881479, 0.000000, 0.000000, 26.999998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2027.387084, 1544.269165, 9.941479, 0.000000, 0.000000, -157.199996);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2026.963012, 1544.090820, 9.791481, 0.000000, 0.000000, -157.199996);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 2027.459350, 1544.483642, 9.911479, 0.000000, 0.000000, -157.199996);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1528.032958, 666.406066, 16.214044, 86.499961, 2.599999, -3.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1508.506713, 666.782653, 16.268125, 86.499961, 2.599999, -3.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1489.420410, 667.150756, 16.320991, 86.499961, 2.599999, -3.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1470.613647, 667.513488, 16.373085, 86.499961, 2.599999, -3.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1451.455688, 667.882568, 16.426147, 86.499961, 2.599999, -3.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1432.249023, 668.252990, 16.479345, 86.499961, 2.599999, -3.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1414.152099, 668.601867, 16.529468, 86.499961, 2.599999, -3.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1407.223510, 668.735717, 16.548656, 86.499961, 2.599999, -3.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1546.686767, 666.046142, 16.162359, 86.499961, 2.599999, -3.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1547.609619, 666.029846, 16.159826, 86.499961, 2.599999, -3.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1555.551147, 675.682189, 15.886868, 92.199951, 2.599999, 85.199958);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1556.310424, 695.437561, 15.921292, 92.199951, 2.599999, 85.199958);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1556.946044, 711.965393, 15.950094, 92.199951, 2.599999, 85.199958);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1557.553588, 727.773559, 15.977647, 92.199951, 2.599999, 85.199958);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1558.276733, 746.579589, 16.010423, 92.199951, 2.599999, 85.199958);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1559.033569, 766.279174, 16.044746, 92.199951, 2.599999, 85.199958);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1559.658813, 782.557067, 16.073116, 92.199951, 2.599999, 85.199958);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1560.030151, 792.209899, 16.089937, 92.199951, 2.599999, 85.199958);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1549.287841, 794.742004, 19.598699, 92.199951, 2.599999, 175.399978);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1529.719726, 795.426025, 19.632793, 92.199951, 2.599999, 175.399978);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1510.365478, 794.649597, 19.666519, 92.199951, 2.599999, 179.699905);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1491.120849, 793.877319, 19.700056, 92.199951, 2.599999, 179.699905);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1472.024536, 793.111206, 19.733329, 92.199951, 2.599999, 179.699905);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1455.268432, 792.438781, 19.762537, 92.199951, 2.599999, 179.699905);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1437.831909, 792.774108, 19.792901, 92.199951, 2.599999, 176.299942);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1421.175048, 793.094360, 19.821920, 92.199951, 2.599999, 176.299942);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1409.282836, 793.322509, 19.842622, 92.199951, 2.599999, 176.299942);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1402.560424, 786.090515, 20.088514, 92.199951, 2.599999, 87.499954);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1402.592773, 767.180480, 20.055582, 92.199951, 2.599999, 87.499954);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1402.630981, 747.340881, 20.021020, 92.199951, 2.599999, 87.499954);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1402.664062, 730.481994, 19.991664, 92.199951, 2.599999, 87.499954);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1402.697143, 711.437683, 19.958501, 92.199951, 2.599999, 87.499954);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1402.731811, 693.926147, 19.928014, 92.199951, 2.599999, 87.499954);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1402.758666, 678.386108, 19.900943, 92.199951, 2.599999, 87.499954);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18783, 1402.759399, 677.976135, 19.900228, 92.199951, 2.599999, 87.499954);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18813, 1438.008422, 730.346984, 61.639614, -179.499984, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18813, 1496.098632, 730.346984, 61.639614, -179.499984, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18813, 1525.761108, 730.346984, 61.639614, -179.499984, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18813, 1518.016723, 791.314575, 62.171695, -179.499984, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18813, 1444.486938, 784.314758, 62.110622, -179.499984, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18845, 1475.745971, 770.635498, 118.821334, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18845, 1475.745971, 776.798522, 205.774917, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18843, 1451.531738, 714.649902, 12.489797, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18843, 1512.351928, 714.649902, 12.489797, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18843, 1497.892456, 774.779846, 12.489797, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18843, 1442.182128, 804.331848, 12.489797, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18658, 1561.023925, 677.759765, 48.075767, -38.599994, 0.000000, 50.000015);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18658, 1539.400268, 651.990295, 48.075767, -38.599994, 0.000000, 50.000015);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18658, 1539.400268, 651.990295, 48.075767, -38.599994, 0.000000, -23.299974);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18657, 1390.551757, 772.821289, 74.755973, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18657, 1390.551757, 772.821289, 74.755973, 0.000000, 0.000000, -32.400001);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18657, 1390.551757, 772.821289, 74.695976, 0.000000, 0.000000, -17.800003);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19124, 1432.242309, 722.829406, 9.921910, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19124, 1448.532104, 722.829406, 9.921910, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19124, 1494.843261, 722.829406, 9.921910, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19124, 1544.589965, 722.829406, 9.921910, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19124, 1476.061767, 688.529296, 9.921910, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19124, 1439.681762, 712.886230, 9.921910, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19124, 1464.238159, 681.726318, 9.921910, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19124, 1528.108154, 674.804199, 9.921910, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19297, 1423.871337, 700.756896, 42.234069, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19297, 1459.041503, 700.756896, 42.234069, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19297, 1533.376953, 700.756896, 42.234069, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19297, 1475.174438, 771.886901, 42.234069, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19297, 1518.174682, 758.901489, 42.234069, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19297, 1501.972412, 788.248779, 42.234069, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19297, 1469.832641, 737.377258, 42.234069, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1318, 1445.171630, 663.353088, 10.052380, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1318, 1450.731567, 663.353088, 9.982379, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1318, 1447.421508, 663.353088, 9.982379, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1318, 1521.911987, 663.353088, 9.982379, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1318, 1531.980590, 663.353088, 9.982379, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(1318, 1527.331787, 663.353088, 9.982379, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 2014.138916, 1340.154296, 11.179289, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 2014.138916, 1345.984130, 11.179289, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19076, 1551.368652, -1665.032104, 12.351369, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19076, 1551.368652, -1667.482910, 12.351369, 0.000000, 0.000000, -54.400001);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19076, 1541.513061, -1653.717285, 12.351369, 0.000000, 0.000000, -54.400001);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 1546.828735, -1672.454833, 14.617878, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 1546.828735, -1678.774291, 14.617878, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 1468.292358, -1619.972045, 12.958747, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 1468.292358, -1619.831909, 13.018747, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 1468.292358, -1620.202026, 13.018747, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 1468.642700, -1620.202026, 13.018747, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 1468.642700, -1619.181396, 13.018747, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19632, 1470.712890, -1619.181396, 13.018747, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19076, 1464.642211, -1621.145019, 13.123213, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 1470.642089, -1620.325317, 13.682705, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 1470.642089, -1621.515502, 13.682705, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 1470.642089, -1621.515502, 14.722704, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 1470.642089, -1620.185424, 14.722704, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 1470.642089, -1620.185424, 15.942702, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 1470.642089, -1621.415771, 15.942702, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 1470.642089, -1621.415771, 17.142705, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 1470.642089, -1621.415771, 18.272701, 0.000000, 0.000000, -18.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 1470.715820, -1619.894653, 16.982694, 0.000000, 0.000000, -18.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 1467.110717, -1618.723022, 13.752691, 0.000000, 0.000000, -18.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19056, 1465.977905, -1617.482543, 13.752691, 0.000000, 0.000000, -47.600002);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19797, 1555.033691, -1677.547851, 19.207454, 0.000000, 0.000000, -88.699958);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19797, 1554.945800, -1673.669433, 19.207454, 0.000000, 0.000000, -88.699958);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19797, 1554.988403, -1675.558715, 20.387454, 0.000000, 0.000000, -88.699958);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19797, 1555.004516, -1676.248901, 20.387454, 0.000000, 0.000000, -88.699958);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19797, 1554.967773, -1674.629150, 20.387454, 0.000000, 0.000000, -88.699958);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19814, 1555.038940, -1678.003540, 18.986890, 0.000000, 0.000000, -83.199966);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19833, 1357.676513, -1744.837646, 12.549481, 0.000000, 0.000000, -117.500045);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19833, 1357.307250, -1745.547485, 12.549481, 0.000000, 0.000000, -104.800041);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19833, 1354.754760, -1744.873291, 12.549481, 0.000000, 0.000000, -104.800041);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19833, 1355.069213, -1743.684448, 12.549481, 0.000000, 0.000000, -104.800041);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19833, 1353.292724, -1742.744140, 12.549481, 0.000000, 0.000000, -117.900039);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19833, 1352.749755, -1743.769409, 12.549481, 0.000000, 0.000000, -117.900039);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 838.779724, -2050.762451, 11.827331, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 834.990417, -2050.810791, 11.827331, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 831.260803, -2050.856933, 11.827331, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 827.491027, -2050.902099, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 823.551391, -2050.949951, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 823.594726, -2054.499755, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 823.641113, -2058.300048, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 823.683837, -2061.799560, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 823.731933, -2065.738769, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 827.691528, -2065.689941, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 831.521240, -2065.642578, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 835.460998, -2065.593505, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 839.440917, -2065.544189, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 843.400695, -2065.495605, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 847.200439, -2065.448974, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 851.090148, -2065.400146, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 851.042297, -2061.480957, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 850.994323, -2057.551269, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 850.946105, -2053.600830, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 850.921936, -2051.620605, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 847.172119, -2051.665039, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 843.202575, -2051.714355, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19128, 841.349792, -2050.677978, 11.847327, 0.000000, 0.000000, 0.699999);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 848.206420, -2062.377929, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 848.206420, -2061.117431, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 848.206420, -2060.037109, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 848.206420, -2059.247314, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 848.206420, -2058.296875, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 848.206420, -2057.157226, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 848.206420, -2056.196533, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 848.206420, -2055.116699, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 846.276428, -2055.116699, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 846.276428, -2055.995849, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 846.276428, -2057.125000, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 846.276428, -2058.234375, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 846.276428, -2059.264404, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 846.276428, -2060.534423, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 846.276428, -2061.504150, 12.303417, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 846.276428, -2061.504150, 12.303417, 0.000000, 0.000000, 27.699998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 845.732421, -2060.467285, 12.303417, 0.000000, 0.000000, 27.699998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 845.314086, -2059.670654, 12.303417, 0.000000, 0.000000, 27.699998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 845.086547, -2059.236816, 12.303417, 0.000000, 0.000000, 27.699998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 844.477416, -2058.077392, 12.303417, 0.000000, 0.000000, 27.699998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 843.910339, -2056.997558, 12.303417, 0.000000, 0.000000, 27.699998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 843.910339, -2056.997558, 12.303417, 0.000000, 0.000000, -5.500000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 843.691894, -2055.940185, 12.303417, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 843.684753, -2055.360595, 12.303417, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 843.672058, -2057.781250, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 843.668090, -2058.531494, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 843.662658, -2059.561035, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 843.657043, -2060.620605, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 843.651489, -2061.700439, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 841.981628, -2061.690917, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 840.611633, -2061.683837, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 839.241699, -2061.677001, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 840.520751, -2059.954345, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 840.533142, -2057.614257, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 840.546569, -2055.043945, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 837.426635, -2055.026855, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 837.407470, -2058.708984, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 837.390869, -2061.889160, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 836.260864, -2061.882324, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 836.277404, -2058.721191, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 836.296752, -2054.960937, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 834.377197, -2054.950195, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 834.371093, -2056.109863, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 834.366577, -2056.959228, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 834.359558, -2058.298583, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 834.355041, -2059.169189, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 834.348388, -2060.438476, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 834.342651, -2061.538330, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 831.942871, -2061.525390, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 831.948730, -2060.405273, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 831.956176, -2058.975097, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 831.963134, -2057.655517, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 831.969909, -2056.345947, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 831.976074, -2055.175537, 12.213421, 0.000000, 0.000000, -0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 834.113586, -2056.310302, 12.213421, 0.000000, 0.000000, -20.600000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 833.437927, -2058.107666, 12.213421, 0.000000, 0.000000, -20.600000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 832.945129, -2059.417480, 12.213421, 0.000000, 0.000000, -20.600000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 833.286437, -2058.510009, 12.213421, 0.000000, 0.000000, -20.600000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 833.747253, -2057.283935, 12.213421, 0.000000, 0.000000, -20.600000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 832.565063, -2060.429443, 12.213421, 0.000000, 0.000000, -20.600000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 830.255554, -2061.680664, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 829.135559, -2061.690185, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 830.336486, -2060.608398, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 830.328918, -2059.748535, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 830.320007, -2058.727539, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 829.659912, -2058.733398, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 828.789916, -2058.741455, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 828.778503, -2057.440917, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 828.769592, -2056.421142, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 828.766357, -2056.041015, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 828.761047, -2055.430664, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 828.758789, -2055.170410, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 829.918823, -2055.160644, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 826.558593, -2055.189941, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 825.438598, -2055.199951, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 826.611999, -2059.011962, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 826.639709, -2062.162353, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 825.641357, -2062.341552, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 825.611938, -2058.950195, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 825.641052, -2062.280273, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 824.620849, -2062.289550, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 824.591796, -2058.959472, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19054, 824.558654, -2055.178710, 12.213421, 0.000000, 0.000000, 0.499993);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18648, 842.538208, -2054.951171, 11.936185, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18648, 842.538208, -2058.541259, 11.936185, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18648, 838.627990, -2058.541259, 11.936185, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18648, 831.068115, -2058.541259, 11.936185, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18648, 827.668029, -2058.541259, 11.936185, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18648, 827.668029, -2062.311767, 11.936185, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18648, 833.728210, -2062.311767, 11.936185, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18648, 847.558349, -2062.311767, 11.936185, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3385, 845.505371, -2062.218261, 11.899362, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3385, 838.305419, -2062.218261, 11.899362, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3385, 841.225402, -2062.218261, 11.899362, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(3385, 841.225402, -2052.806640, 11.899362, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18846, 777.079101, -2019.521728, 54.692710, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18846, 831.969238, -2026.022094, 92.242691, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18846, 806.274475, -2078.041748, 92.242691, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18846, 824.594482, -2065.377197, 72.692695, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18846, 824.594482, -2078.509521, 83.721336, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18846, 881.164489, -2073.190429, 83.721336, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18846, 848.459350, -1973.290893, 83.721336, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18846, 857.820068, -1823.810913, 83.721336, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18657, 778.480407, -2026.665405, 104.788085, -118.200019, 7.700001, 62.299968);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18657, 867.626647, -2020.911254, 67.042655, -63.500030, 60.599994, 62.299968);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18657, 885.036804, -2030.052124, 106.482414, -63.500030, 60.599994, 62.299968);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 847.995666, -2067.715576, 12.582277, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 848.515930, -2067.713378, 12.582306, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 848.975830, -2067.709716, 12.582329, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 849.485900, -2067.707031, 12.582358, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 849.945922, -2067.704589, 12.582383, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 850.406005, -2067.702148, 12.582407, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 850.876159, -2067.699707, 12.582435, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 851.336181, -2067.696777, 12.582460, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 851.806152, -2067.694091, 12.582484, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 852.246154, -2067.692382, 12.582509, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 852.736267, -2067.690429, 12.582537, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 847.506347, -2067.718017, 12.582250, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 847.056457, -2067.720214, 12.582227, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 846.626464, -2067.722412, 12.582203, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 846.206420, -2067.724121, 12.582181, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 845.776367, -2067.726562, 12.582157, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 845.316528, -2067.728515, 12.582133, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 844.846374, -2067.730712, 12.582107, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 844.376403, -2067.733154, 12.582081, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 843.976196, -2067.735107, 12.582058, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 843.646301, -2067.737304, 12.582041, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 843.186401, -2067.740234, 12.582015, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 842.726379, -2067.742675, 12.581989, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 842.266357, -2067.745117, 12.581964, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 835.976501, -2067.778320, 12.581620, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 835.556640, -2067.781250, 12.581596, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 835.156860, -2067.783203, 12.581574, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 834.726989, -2067.785400, 12.581551, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 834.266967, -2067.788574, 12.581526, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 833.787048, -2067.791015, 12.581501, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 833.387268, -2067.793457, 12.581481, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 833.007080, -2067.795410, 12.581460, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 832.557006, -2067.797607, 12.581435, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 826.937072, -2067.827392, 12.581126, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 826.366882, -2067.830078, 12.581093, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 826.617004, -2067.829101, 12.581108, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 825.907287, -2067.833251, 12.581070, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 820.066833, -2067.864746, 12.580747, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 820.896911, -2067.860351, 12.580794, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 822.257141, -2067.853271, 12.580871, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 824.447082, -2067.842041, 12.580991, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 825.247131, -2067.837646, 12.581036, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 825.537231, -2067.835937, 12.581052, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 824.797241, -2067.839843, 12.581012, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 823.947265, -2067.844726, 12.580965, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 823.477294, -2067.847167, 12.580939, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 822.987548, -2067.850097, 12.580914, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 822.657531, -2067.851806, 12.580895, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 821.767456, -2067.855712, 12.580848, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 821.227478, -2067.858398, 12.580819, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18637, 820.477539, -2067.862792, 12.580780, 90.600044, 0.300000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18671, 839.062622, -2067.023193, 10.619749, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18671, 829.923034, -2067.023193, 10.619749, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18691, 844.066284, -2032.892700, 11.309659, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18691, 828.976318, -2032.892700, 11.309659, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(8328, 824.939575, -2038.204467, 15.407818, 0.000000, 0.000000, 85.099998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18721, 1782.402465, -1292.948120, 106.365203, 0.000000, 0.000000, -76.000022);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18721, 1798.702270, -1283.008911, 106.365203, 0.000000, 0.000000, -76.000022);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18721, 1798.702270, -1283.008911, 72.095199, 0.000000, 0.000000, -76.000022);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18721, 1798.702270, -1283.008911, 46.285202, 0.000000, 0.000000, -76.000022);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18721, 1784.487548, -1286.553466, 46.285202, 0.000000, 0.000000, -76.000022);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18728, 1804.344116, -1290.248291, 124.907241, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18728, 1787.254150, -1292.438232, 124.907241, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18750, 1394.267700, -1299.825927, 54.778743, 89.400016, 0.000000, -88.199974);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18759, 1245.184570, -1683.611694, 34.156337, 0.000000, 0.000000, -92.099998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18759, 1245.184570, -1683.611694, 47.506328, 0.000000, 0.000000, -92.099998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18759, 1245.184570, -1683.611694, 65.156303, 0.000000, 0.000000, -92.099998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18759, 1245.184570, -1683.611694, 80.427093, 0.000000, 0.000000, -92.099998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18759, 1245.184570, -1683.611694, 93.367103, 0.000000, 0.000000, -92.099998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18759, 1245.184570, -1683.611694, 112.187110, 0.000000, 0.000000, -92.099998);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18750, 1412.902832, -799.643432, 108.946792, 91.199989, 3.999999, -4.200000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(14560, 1943.200073, -1796.759521, 16.296663, 0.000000, 0.000000, 86.399986);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(4002, 1715.790283, 805.227966, 45.614494, 0.000000, 0.000000, 0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(4002, 1691.001586, 805.098327, 45.614494, 0.000000, 0.000000, 0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(4002, 1670.451538, 804.990722, 45.614494, 0.000000, 0.000000, 0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(4002, 1646.510375, 804.865295, 45.614494, 0.000000, 0.000000, 0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(4002, 1646.510375, 804.865295, 23.644491, 0.000000, 0.000000, 0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(4002, 1699.099121, 805.140808, 24.489015, 0.000000, 0.000000, 0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(4002, 1673.092651, 805.005432, 24.489015, 0.000000, 0.000000, 0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(4002, 1715.682373, 805.228454, 24.489015, 0.000000, 0.000000, 0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(4002, 1715.231933, 875.977416, 24.489015, 0.000000, 0.000000, 0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(4002, 1683.322387, 875.810424, 24.489015, 0.000000, 0.000000, 0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(4002, 1653.762695, 875.655761, 24.489015, 0.000000, 0.000000, 0.300000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(9901, 1935.374267, 904.359680, 32.223426, 0.000000, 0.000000, 87.799995);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(8397, 1999.567138, 1126.979492, 31.772787, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(8397, 1985.249755, 1134.019897, 31.683427, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(9833, 2178.381591, 2298.364990, 12.849610, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(9833, 2159.500732, 2298.364990, 12.849610, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(9833, 2159.121582, 2263.015869, 12.849610, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(9833, 2145.083007, 2263.015869, 12.849610, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(9833, 2156.762451, 2216.896728, 12.849610, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(9833, 2137.304199, 2216.896728, 12.849610, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(9833, 2117.282958, 2213.466552, 12.849610, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(17031, 1840.914672, 809.730468, 6.207314, 0.000000, 17.799993, 83.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(17031, 1839.537231, 798.513061, 9.835915, 0.000000, 17.799993, 83.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(17031, 1839.230468, 796.012695, 1.990368, 0.000000, 17.799993, 83.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(17031, 1838.965698, 793.848693, 2.690410, 0.000000, 17.799993, 83.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(621, 1825.760986, 864.211791, 8.794782, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(621, 1838.741333, 864.211791, 8.794782, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(621, 1766.421630, 864.211791, 8.794782, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(621, 1768.557495, 804.281677, 8.794782, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19608, 2300.686523, 1294.807250, 68.600265, 0.000000, 0.000000, -91.199981);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19608, 2300.422607, 1282.210205, 68.600265, 0.000000, 0.000000, -91.199981);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19608, 2300.189208, 1271.012939, 68.600265, 0.000000, 0.000000, -91.199981);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19608, 2300.298095, 1276.212280, 68.600265, 0.000000, 0.000000, -91.199981);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19608, 2300.561035, 1288.749877, 68.600265, 0.000000, 0.000000, -91.199981);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19841, 2307.058105, 1282.762695, 73.811317, -95.399940, -2.399999, 92.399986);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19841, 2307.686035, 1275.359130, 73.770881, -95.399940, -2.399999, 92.399986);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19841, 2306.342773, 1291.392700, 73.707473, -95.399940, -2.399999, 92.399986);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19471, 2033.631835, 1522.321044, 9.819880, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2396.368164, 2442.539794, 71.374481, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2410.248291, 2442.540283, 71.374481, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2424.457763, 2442.540283, 71.374481, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2437.108642, 2442.540283, 71.374481, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2437.108642, 2500.080810, 71.374481, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2423.289062, 2500.116210, 71.374481, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2409.809082, 2500.116210, 71.374481, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2396.998291, 2500.116210, 71.374481, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2390.171142, 2492.874023, 71.374481, 0.000000, 0.000000, 91.600028);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2390.576171, 2478.389648, 71.374481, 0.000000, 0.000000, 87.000015);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2389.922851, 2465.926513, 71.374481, 0.000000, 0.000000, 87.000015);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2390.027587, 2453.915771, 71.374481, 0.000000, 0.000000, 90.500015);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2390.064208, 2449.785156, 71.374481, 0.000000, 0.000000, 90.500015);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2443.271972, 2450.248535, 71.374481, 0.000000, 0.000000, 90.500015);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2443.261962, 2462.958496, 71.374481, 0.000000, 0.000000, 90.500015);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2443.157714, 2474.887939, 71.374481, 0.000000, 0.000000, 90.500015);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2443.033935, 2489.107177, 71.374481, 0.000000, 0.000000, 90.500015);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19313, 2443.000244, 2492.945312, 71.374481, 0.000000, 0.000000, 90.500015);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18769, 2416.040771, 2468.981445, 68.230117, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18769, 2416.040771, 2488.832519, 68.230117, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18769, 2416.040771, 2453.542480, 68.230117, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18769, 2433.329589, 2453.542480, 68.230117, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18769, 2433.329589, 2468.831787, 68.230117, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18769, 2433.329589, 2488.301757, 68.230117, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18769, 2399.968261, 2488.301757, 68.230117, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18769, 2399.968261, 2473.112060, 68.230117, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18769, 2399.968261, 2453.439208, 68.230117, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18749, 2402.725585, 2447.132568, 81.857955, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18749, 2416.695556, 2447.132568, 81.857955, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18749, 2431.595703, 2447.132568, 81.857955, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18749, 2431.445312, 2504.123535, 81.857955, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18749, 2415.435058, 2504.326904, 81.857955, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(18749, 2400.745361, 2504.326904, 81.857955, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2415.926269, 2443.720214, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2423.396240, 2443.720214, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2432.186279, 2443.720214, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2437.556152, 2443.720214, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2427.736083, 2443.720214, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2409.746093, 2443.720214, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2403.935791, 2443.720214, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2393.435791, 2443.720214, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2393.435791, 2470.790527, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2393.435791, 2496.150878, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2438.365966, 2496.150878, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2416.802001, 2496.150878, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2416.802001, 2478.680175, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
christmasObjects[currentObjChris]=CreateDynamicObject(19127, 2440.442626, 2465.642089, 69.306159, 0.000000, 0.000000, 0.000000);currentObjChris++;
//[>>>>>>>>>OBJECTS PRAZNIK, BIG OPEN<<<<<<<<<<<<<<<<<]
}
else
{
for(new i=0; i<currentObjChris;i++)
{
if(IsValidDynamicObject(christmasObjects[i]))
{
DestroyDynamicObject(christmasObjects[i]);
}
}
currentObjChris=0;
}
}
MiniGameOrganisation(minigame)
{
if(minigame==MINIGAME_STREET_RACE)
{
if(joinedinrace==1)
{
SendClientMessageToAll(0x0092ffFF,"Street Race: За да започне състезанието, трябва да има {ffff00}2 човека {0092ff} на него, липсва само един за да започне брояча");
for(new i=0; i<MAX_RACE_POSITIONS; i++)
{
raceGameEmptyPos[i]=true;
}
}
else if(joinedinrace==2)
{
racetimer=2*60;
SendClientMessageToAll(0x0092ffFF,"Street Race: Състезанието ще започне след 2 минути, бъдете в готовност");
}
else if(joinedinrace==4)
{
racetimer=50;
SendClientMessageToAll(0x0092ffFF,"Street Race: Състезанието ще започне след 50 секунди, бъдете в готовност");
}
}
}
EndMiniGame(playerid, minigame, bool: Accident)
{
if(Accident==true)
{
}
}
LeavePlayerFromMiniGame(playerid, minigame, bool: isCommand)
{
if(minigame==MINIGAME_STREET_RACE)
{
if(isCommand==true)
{
SetPlayerHealth(playerid,0);
}
}
}
AddPlayerToMiniGame(playerid, minigame)
{
if(minigame==MINIGAME_STREET_RACE)
{
new privateVehID = GetPlayerVehicleID(playerid);
joinedrace[playerid]=1;
joinedinrace+=1;
PlayerInfo[playerid][pTimerLeaveMiniGame]=120*2;
LinkVehicleToInterior(privateVehID,0);
SetVehicleVirtualWorld(privateVehID,1);
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,1);
GameTextForPlayer(playerid, "~b~street race~n~~w~grove", 3100, 1);
TogglePlayerControllable(playerid, 0);
MiniGameOrganisation(MINIGAME_STREET_RACE);
new string200[200];
format(string200,200,"Street Race: %s влезе в състезание, присъединете се чрез {ffff00}/joinrace {ff0000}[%d/4]",pname[playerid],joinedinrace,joinedinrace);
SendClientMessageToAll(0x0092ffFF,string200);
SendClientMessage(playerid,0x0092ffFF,"Street Race: За да излезеш от тази мини-игра, използвай {ffff00}/leaverace");
if(raceGameEmptyPos[0]==true)
{
SetVehiclePos(privateVehID,2404.8286,-1730.0004,13.1282);
SetPlayerPos(playerid,2404.8286,-1730.0004,13.1282);
SetVehicleZAngle(privateVehID,89.6696);
PutPlayerInVehicle(playerid,privateVehID, 0);
raceGameEmptyPos[0]=false;
}
else if(raceGameEmptyPos[1]==true)
{
SetVehiclePos(privateVehID,2404.9626,-1735.0474,13.1099);
SetPlayerPos(playerid,2404.9626,-1735.0474,13.1099);
SetVehicleZAngle(privateVehID,89.6696);
PutPlayerInVehicle(playerid,privateVehID, 0);
raceGameEmptyPos[1]=false;
}
else if(raceGameEmptyPos[2]==true)
{
SetVehiclePos(privateVehID,2412.3237,-1730.6824,13.2041);
SetPlayerPos(playerid,2412.3237,-1730.6824,13.2041);
SetVehicleZAngle(privateVehID,89.6696);
PutPlayerInVehicle(playerid,privateVehID, 0);
raceGameEmptyPos[2]=false;
}
else if(raceGameEmptyPos[3]==true)
{
SetVehiclePos(privateVehID,2411.9626,-1735.1606,13.1312);
SetPlayerPos(playerid,2411.9626,-1735.1606,13.1312);
SetVehicleZAngle(privateVehID,89.6696);
PutPlayerInVehicle(playerid,privateVehID, 0);
raceGameEmptyPos[3]=false;
}
}
}
HisOwnVehicle(playerid, requirment)
{
new privateVehID=-1;
if(strcmp(privatecarowner[GetPlayerVehicleID(playerid)], pname[playerid], true)==0)
{
if(privatecars[GetPlayerVehicleID(playerid)]==1)
{
privateVehID=GetPlayerVehicleID(playerid);
}
}
if(privateVehID==-1)
{
if(requirment==OWNVEH_YES)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в личното си превозно средство като шофьор!");
return false;
}
if(requirment==OWNVEH_NO)
{
return privateVehID;
}
}
else
{
if(requirment==OWNVEH_YES)
{
return true;
}
if(requirment==OWNVEH_NO)
{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си извън твоето лично превозно средство!");
return false;
}
}
return false;
}
MiniGameLeaveException(playerid, minigame, bool: isCommand)
{
if(isCommand==true)
{
if(minigame==MINIGAME_STREET_RACE)
{
if(racestarted==1) { SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да напуснеш, докато състезанието е започнало!"); return false;}
if(racetimer==1) { SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да напуснеш, докато състезанието ще започне след малко!"); return false;}
if(PlayerInfo[playerid][pTimerLeaveMiniGame]>0)  { SendClientMessage(playerid,COLOR_GRAD1,"Можеш да напуснеш състезанието 120 секунди, след като си се присъединил!"); return false;}
}
}
return true;
}
MiniGameException(playerid, minigame, bool: isCommand)
{
if(PlayerInfo[playerid][pRobber]==1) { SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!"); return false;}
if(PlayerInfo[playerid][pRobberyATM]>0) { SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да използваш тази команда, докато си в обир!"); return false;}
if(dutypolice[playerid]==1) { SendClientMessage(playerid,COLOR_GRAD1,"Ти си полицай на смяна и не можеш да влезеш в играта сега!"); return false;}
if(PlayerInfo[playerid][pADuty]==1) { SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в играта в момента, защото си ADMIN На Смяна!"); return false;}
if(PlayerInfo[playerid][pWanted]>0) { SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в играта в момента, защото си Заподозрян от полицията!"); return false;}
if(induel[playerid]==1) { SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в играта в момента, защото си в Duel!"); return false;}
if(inevent[playerid]==1) { SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в играта в момента, защото си в EVENT!"); return false;}
if(indrift[playerid]==1) { SendClientMessage(playerid,COLOR_GRAD1,"В момента си в Drift и не можеш да участваш в мини-игри!"); return false;}
if(PlayerInfo[playerid][pJail] != 0) { SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да влезеш в играта в момента, защото си в затвора!"); return false;}
if(indmon[playerid]==1) { SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в играта в момента, защото си в DMON!"); return false;}
if(PlayerInfo[playerid][pInDM]==1) { SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в играта сега, защото си в Deathmatch!"); return false;}
if(sdelkaSelected[playerid]==1) { SendClientMessage(playerid,COLOR_GRAD1,"В момента си участник в Сделка или не!"); return false;}
if(joinedrpgGame[playerid]==1) { SendClientMessage(playerid,COLOR_GRAD1,"В момента си в мини-играта RPG Royale!"); return false;}
if(joinedrace[playerid]==1) { SendClientMessage(playerid,COLOR_GRAD1,"В момента си в мини-играта Street Race!"); return false;}
if(joinedincounter[playerid]==1) { SendClientMessage(playerid,COLOR_GRAD1,"В момента си в мини-играта Counter Strike!"); return false;}
if(minigame==MINIGAME_COUNTER_STRIKE)
{
if (IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да не си в превозно средство!");
if (joinedincounter[playerid]==1) return SendClientMessage(playerid,COLOR_GRAD1,"Вече си в играта!");
if(counterplayers==10) return SendClientMessage(playerid,COLOR_GRAD1,"Вече има 10 събрали се човека в играта!");
if(csstarted==1 && csroundtimer!=0)  return SendClientMessage(playerid,0xDEE420FF,"Counter Strike вече започна, трябва сега да изчакате да свърши рундът!");
}
if(minigame==MINIGAME_STREET_RACE)
{
new errorRace=0;
if(errorRace==1) { SendClientMessage(playerid,COLOR_GRAD1,"В момента Race е в Scripting!"); return false;}
if(PlayerInfo[playerid][pMission]==4)
{
if(isCommand==true)
{
SendClientMessage(playerid,COLOR_GRAD1,"Докато си на Мисия 5, не можеш да използваш тази команда!");
SendClientMessage(playerid,COLOR_GRAD1,"За да се състезаваш трябва да отидеш на Кръга за Мисия 5!");
return false;
}
}
if (!IsPlayerInAnyVehicle(playerid))
{
SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в твоето лично превозно средство, за да се състезаваш!");
return false;
}
}
return true;
}
TurnOnEngineVeh(playerid, vehicleid)
{
if(vehfuel[vehicleid] <= 0)
{
if(!vehicleid) return SendClientMessage(playerid, 0xccccffFF, "Не може да стартира двигателя, превозното средство няма бензин !");
return 1;
}
if(isJobVeh[vehicleid] == true)
{
SendClientMessage(playerid, 0xccccffFF, "Не можеш да стартираш двигателя на превозно средство за работа !");
return 1;
}
if(isAfterJobVeh[vehicleid] == true)
{
SendClientMessage(playerid, 0xccccffFF, "Не можеш да стартираш двигателя на превозно средство за след работа !");
return 1;
}
new haveprivate=0;
for(new alv=0;alv<=maximumPrivateVehsID;alv++)
{
if(strcmp(privatecarowner[vehicleid], pname[playerid], true)==0)
{
haveprivate=1;
}
if(haveprivate==0)
{
SendClientMessage(playerid, 0xccccffFF, "Не можеш да стартираш двигателя на това превозно средство, защото не го притежаваш !");
}
}
PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
ToggleEngine(vehicleid, VEHICLE_PARAMS_ON); vehEngineStatusON[vehicleid]=1;
return 1;
}
TurnOffEngineVeh(playerid, vehicleid)
{
if(isAfterJobVeh[vehicleid] == true)
{
SendClientMessage(playerid, 0xccccffFF, "Не можеш да спреш двигателя на превозно средство за след работа !");
return 1;
}
if(isJobVeh[vehicleid] == true)
{
SendClientMessage(playerid, 0xccccffFF, "Не можеш да спреш двигателя на превозно средство за работа !");
return 1;
}
new haveprivate=0;
for(new alv=0;alv<=maximumPrivateVehsID;alv++)
{
if(strcmp(privatecarowner[vehicleid], pname[playerid], true)==0)
{
haveprivate=1;
}
if(haveprivate==0)
{
SendClientMessage(playerid, 0xccccffFF, "Не можеш да спреш двигателя на това превозно средство, защото не го притежаваш !");
}
}
PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
ToggleEngine(vehicleid, VEHICLE_PARAMS_OFF); vehEngineStatusON[GetPlayerVehicleID(playerid)]=0;
return 1;
}
ReloadATMSBank()
{
ATMCASH[0]+= randomex(100000,700000);
ATMCASH[1]+= randomex(100000,700000);
ATMCASH[2]+= randomex(100000,700000);
ATMCASH[3]+= randomex(100000,700000);
ATMCASH[4]+= randomex(100000,700000);
ATMCASH[5]+= randomex(100000,700000);
ATMCASH[6]+= randomex(100000,700000);
ATMCASH[7]+= randomex(100000,700000);
ATMCASH[8]+= randomex(100000,700000);
ATMCASH[9]+= randomex(100000,700000);
ATMCASH[10]+= randomex(100000,700000);
ATMCASH[11]+= randomex(100000,700000);
ATMCASH[12]+= randomex(100000,700000);
ATMCASH[13]+= randomex(100000,700000);
ATMCASH[14]+= randomex(100000,700000);
ATMCASH[15]+= randomex(100000,700000);
ATMCASH[16]+= randomex(100000,700000);
ATMCASH[17]+= randomex(10000,70000); ATMCASH[18]+= randomex(10000,70000);
ATMCASH[19]+= randomex(10000,70000); ATMCASH[20]+= randomex(10000,70000); ATMCASH[21]+= randomex(10000,70000);
ATMCASH[22]+= randomex(10000,70000); ATMCASH[23]+= randomex(10000,70000); ATMCASH[24]+= randomex(10000,70000);
ATMCASH[25]+= randomex(10000,70000); ATMCASH[26]+= randomex(10000,70000);
ATMCASH[9997]+= randomex(100000,700000); ATMCASH[9998]+= randomex(100000,700000); ATMCASH[9999]+= randomex(100000,700000);
}
ChangeHoursInGame()
{
if(hours==0) SetWorldTime(0); if(hours==6) SetWorldTime(5); if(hours==12) SetWorldTime(12); if(hours==18) SetWorldTime(2);
if(hours==1) SetWorldTime(0); if(hours==7) SetWorldTime(6); if(hours==13) SetWorldTime(12); if(hours==19) SetWorldTime(2);
if(hours==2) SetWorldTime(0); if(hours==8) SetWorldTime(7); if(hours==14) SetWorldTime(12); if(hours==20) SetWorldTime(0);
if(hours==3) SetWorldTime(0); if(hours==9) SetWorldTime(12); if(hours==15) SetWorldTime(12); if(hours==21) SetWorldTime(0);
if(hours==4) SetWorldTime(5); if(hours==10) SetWorldTime(12); if(hours==16) SetWorldTime(12); if(hours==22) SetWorldTime(0);
if(hours==5) SetWorldTime(5); if(hours==11) SetWorldTime(12); if(hours==17) SetWorldTime(23); if(hours==23) SetWorldTime(0);
}
stock IsPlayerNearDynamicObject(playerid, objectid, Float:range)
{
new Float:pos[3];
GetDynamicObjectPos(objectid,pos[0],pos[1],pos[2]);
if(IsPlayerInRangeOfPoint(playerid,range,pos[0],pos[1],pos[2])) return true;
return false;
}
stock IsPlayerNearObject(playerid, objectid, Float:range)
{
new Float:pos[3];
GetObjectPos(objectid,pos[0],pos[1],pos[2]);
if(IsPlayerInRangeOfPoint(playerid,range,pos[0],pos[1],pos[2])) return true;
return false;
}
GivePayDayPlayer(i)
{
new paydayString1250[1250];
zaplatakinti[i]=0;
lastpaydaykinti[i]=0;
format(paydayString1250,1250,"SERVER: Часът вече е %d:00",hours);
SendClientMessage(i,0xFFFF00FF,paydayString1250);
if(hours==3 || hours==15)
{
SetRandomWeather();
}
if(PlayerInfo[i][pLastPayday]<25)
{
SendClientMessage(i,COLOR_LIGHTPURPLE, "SERVER: Не си играл достатъчно за да получиш PayDay");
}
else
{
SendClientMessage(i, COLOR_WHITE, "========= [ PAYDAY ] =========");
format(paydayString1250,1250, "         Current Balance: $%s", FormatNumber(PlayerInfo[i][pAccount]));
SendClientMessage(i, 0x33AA33FF, paydayString1250);
for(new i3=1; i3<maxhouses; i3++)
{
houseminato[i3]=0;
}
if(PlayerInfo[i][pLastPayday]>29)
{
}
if(PlayerInfo[i][pLastPayday]>29 && PlayerInfo[i][pLastPayday]<100)
{
if(PlayerInfo[i][pAFK]==0)
{
GivePlayerEP(i,1);
}
else
{
if(PlayerInfo[i][pAFK]<30)
{
GivePlayerEP(i,2);
}
}
}
if(PlayerInfo[i][pLastPayday]>1799)
{
if(PlayerInfo[i][pAFK]==0)
{
GivePlayerEP(i,2);
}
}
if(PlayerInfo[i][pAFK] >= 30)
{
GivePlayerEP(i,4);
}
PlayerInfo[i][pAccount]+=PlayerInfo[i][pLastPayday]*3;
lastpaydaykinti[i]=PlayerInfo[i][pLastPayday];
lastpaydaykinti[i]=lastpaydaykinti[i]*3;
if(PlayerInfo[i][pLevel]<31)
{
PlayerInfo[i][pAccount]+=PlayerInfo[i][pLevel]*52;
zaplatakinti[i]=PlayerInfo[i][pLevel]*52;
}
else
{
PlayerInfo[i][pAccount]+=1700;
zaplatakinti[i]=1700;
}
format(paydayString1250,1250, "Заплата: $%s", FormatNumber(zaplatakinti[i]));
SendClientMessage(i, COLOR_ORANGE, paydayString1250);
if(PlayerInfo[i][pWhenPlayed][hours]/60*3<6000)
{
format(paydayString1250,1250, "PlayTime Bonus: $%s",FormatNumber(PlayerInfo[i][pWhenPlayed][hours]/60*3));
SendClientMessage(i,COLOR_ORANGE, paydayString1250);
GivePlayerCash(i,PlayerInfo[i][pWhenPlayed][hours]/60*3);
}
else
{
format(paydayString1250,1250, "PlayTime Bonus: $6050");
SendClientMessage(i,COLOR_ORANGE, paydayString1250);
GivePlayerCash(i,6050);
}
if(PlayerInfo[i][pTeam]==13)
{
if(PlayerInfo[i][pRank]==1)
{
format(paydayString1250,1250, "Pay from SAPD: + 2 EP и 10000$");
SendClientMessage(i,COLOR_RLSPD, paydayString1250);
GivePlayerEP(i,2);
PlayerInfo[i][pAccount]+=10000;
}
if(PlayerInfo[i][pRank]==2)
{
format(paydayString1250,1250, "Pay from SAPD: + 4 EP и 20000$");
SendClientMessage(i,COLOR_RLSPD, paydayString1250);
GivePlayerEP(i,4);
PlayerInfo[i][pAccount]+=20000;
}
if(PlayerInfo[i][pRank]==3)
{
format(paydayString1250,1250, "Pay from SAPD: + 6 EP и 30000$");
SendClientMessage(i,COLOR_RLSPD, paydayString1250);
GivePlayerEP(i,6);
PlayerInfo[i][pAccount]+=30000;
}
if(PlayerInfo[i][pRank]==4)
{
format(paydayString1250,1250, "Pay from SAPD: + 8 EP и 40000$");
SendClientMessage(i,COLOR_RLSPD, paydayString1250);
GivePlayerEP(i,8);
PlayerInfo[i][pAccount]+=40000;
}
if(PlayerInfo[i][pRank]==5)
{
format(paydayString1250,1250, "Pay from SAPD: + 10 EP и 50000$");
SendClientMessage(i,COLOR_RLSPD, paydayString1250);
GivePlayerEP(i,10);
PlayerInfo[i][pAccount]+=50000;
}
if(PlayerInfo[i][pRank]==6)
{
format(paydayString1250,1250, "Pay from SAPD: + 15 EP и 65000$");
SendClientMessage(i,COLOR_RLSPD, paydayString1250);
GivePlayerEP(i,15);
PlayerInfo[i][pAccount]+=65000;
}
}
/////////////////////////////
if(PlayerInfo[i][pTeam]==2)
{
if(PlayerInfo[i][pRank]==1)
{
format(paydayString1250,1250, "Pay from Grove: + 2 EP и 10000$");
SendClientMessage(i,COLOR_RGROVE, paydayString1250);
GivePlayerEP(i,2);
PlayerInfo[i][pAccount]+=10000;
}
if(PlayerInfo[i][pRank]==2)
{
format(paydayString1250,1250, "Pay from Grove: + 4 EP и 20000$");
SendClientMessage(i,COLOR_RGROVE, paydayString1250);
GivePlayerEP(i,4);
PlayerInfo[i][pAccount]+=20000;
}
if(PlayerInfo[i][pRank]==3)
{
format(paydayString1250,1250, "Pay from Grove: + 6 EP и 30000$");
SendClientMessage(i,COLOR_RGROVE, paydayString1250);
GivePlayerEP(i,6);
PlayerInfo[i][pAccount]+=30000;
}
if(PlayerInfo[i][pRank]==4)
{
format(paydayString1250,1250, "Pay from Grove: + 8 EP и 40000$");
SendClientMessage(i,COLOR_RGROVE, paydayString1250);
GivePlayerEP(i,8);
PlayerInfo[i][pAccount]+=40000;
}
if(PlayerInfo[i][pRank]==5)
{
format(paydayString1250,1250, "Pay from Grove: + 10 EP и 50000$");
SendClientMessage(i,COLOR_RGROVE, paydayString1250);
GivePlayerEP(i,10);
PlayerInfo[i][pAccount]+=50000;
}
if(PlayerInfo[i][pRank]==6)
{
format(paydayString1250,1250, "Pay from Grove: + 15 EP и 65000$");
SendClientMessage(i,COLOR_RGROVE, paydayString1250);
GivePlayerEP(i,15);
PlayerInfo[i][pAccount]+=65000;
}
}
//////////////////////////////
if(PlayerInfo[i][pTeam]==6)
{
if(PlayerInfo[i][pRank]==1)
{
format(paydayString1250,1250, "Pay from Cripz: + 2 EP и 10000$");
SendClientMessage(i,COLOR_RCRIPZ, paydayString1250);
GivePlayerEP(i,2);
PlayerInfo[i][pAccount]+=10000;
}
if(PlayerInfo[i][pRank]==2)
{
format(paydayString1250,1250, "Pay from Cripz: + 4 EP и 20000$");
SendClientMessage(i,COLOR_RCRIPZ, paydayString1250);
GivePlayerEP(i,4);
PlayerInfo[i][pAccount]+=20000;
}
if(PlayerInfo[i][pRank]==3)
{
format(paydayString1250,1250, "Pay from Cripz: + 6 EP и 30000$");
SendClientMessage(i,COLOR_RCRIPZ, paydayString1250);
GivePlayerEP(i,6);
PlayerInfo[i][pAccount]+=30000;
}
if(PlayerInfo[i][pRank]==4)
{
format(paydayString1250,1250, "Pay from Cripz: + 8 EP и 40000$");
SendClientMessage(i,COLOR_RCRIPZ, paydayString1250);
GivePlayerEP(i,8);
PlayerInfo[i][pAccount]+=40000;
}
if(PlayerInfo[i][pRank]==5)
{
format(paydayString1250,1250, "Pay from Cripz: + 10 EP и 50000$");
SendClientMessage(i,COLOR_RCRIPZ, paydayString1250);
GivePlayerEP(i,10);
PlayerInfo[i][pAccount]+=50000;
}
if(PlayerInfo[i][pRank]==6)
{
format(paydayString1250,1250, "Pay from Cripz: + 15 EP и 65000$");
SendClientMessage(i,COLOR_RCRIPZ, paydayString1250);
GivePlayerEP(i,15);
PlayerInfo[i][pAccount]+=65000;
}
}
////////////////////////////////
if(PlayerInfo[i][pTeam]==15)
{
if(PlayerInfo[i][pRank]==1)
{
format(paydayString1250,1250, "Pay from Delta Force: + 2 EP и 10000$");
SendClientMessage(i,0xA4A400FF, paydayString1250);
GivePlayerEP(i,2);
PlayerInfo[i][pAccount]+=10000;
}
if(PlayerInfo[i][pRank]==2)
{
format(paydayString1250,1250, "Pay from Delta Force: + 4 EP и 20000$");
SendClientMessage(i,0xA4A400FF, paydayString1250);
GivePlayerEP(i,4);
PlayerInfo[i][pAccount]+=20000;
}
if(PlayerInfo[i][pRank]==3)
{
format(paydayString1250,1250, "Pay from Delta Force: + 6 EP и 30000$");
SendClientMessage(i,0xA4A400FF, paydayString1250);
GivePlayerEP(i,6);
PlayerInfo[i][pAccount]+=30000;
}
if(PlayerInfo[i][pRank]==4)
{
format(paydayString1250,1250, "Pay from Delta Force: + 8 EP и 40000$");
SendClientMessage(i,0xA4A400FF, paydayString1250);
GivePlayerEP(i,8);
PlayerInfo[i][pAccount]+=40000;
}
if(PlayerInfo[i][pRank]==5)
{
format(paydayString1250,1250, "Pay from Delta Force: + 10 EP и 50000$");
SendClientMessage(i,0xA4A400FF, paydayString1250);
GivePlayerEP(i,10);
PlayerInfo[i][pAccount]+=50000;
}
if(PlayerInfo[i][pRank]==6)
{
format(paydayString1250,1250, "Pay from Delta Force: + 15 EP и 65000$");
SendClientMessage(i,0xA4A400FF, paydayString1250);
GivePlayerEP(i,15);
PlayerInfo[i][pAccount]+=65000;
}
}
if(PlayerInfo[i][pTeam]==1)
{
if(PlayerInfo[i][pRank]==2)
{
format(paydayString1250,1250, "Pay from VIP Gang: + 2 EP и 2000$");
SendClientMessage(i,0xFF3737FF, paydayString1250);
GivePlayerEP(i,2);
PlayerInfo[i][pAccount]+=2000;
}
if(PlayerInfo[i][pRank]==3)
{
format(paydayString1250,1250, "Pay from VIP Gang: + 3 EP и 3000$");
SendClientMessage(i,0xFF3737FF, paydayString1250);
GivePlayerEP(i,3);
PlayerInfo[i][pAccount]+=3000;
}
if(PlayerInfo[i][pRank]==4)
{
format(paydayString1250,1250, "Pay from VIP Gang: + 4 EP и 4000$");
SendClientMessage(i,0xFF3737FF, paydayString1250);
GivePlayerEP(i,4);
PlayerInfo[i][pAccount]+=4000;
}
if(PlayerInfo[i][pRank]==5)
{
format(paydayString1250,1250, "Pay from VIP Gang: + 5 EP и 5000$");
SendClientMessage(i,0xFF3737FF, paydayString1250);
GivePlayerEP(i,5);
PlayerInfo[i][pAccount]+=5000;
}
if(PlayerInfo[i][pRank]==6)
{
format(paydayString1250,1250, "Pay from VIP Gang: + 6 EP и 6000$");
SendClientMessage(i,0xFF3737FF, paydayString1250);
GivePlayerEP(i,6);
PlayerInfo[i][pAccount]+=6000;
}
}
if(PlayerInfo[i][pBizO]>-1)
{
format(paydayString1250,1250, "Business: + %d$",BizInfo[PlayerInfo[i][pBizO]][bPayOut]);
SendClientMessage(i,0x80BFFFFF, paydayString1250);
PlayerInfo[i][pAccount]+=BizInfo[PlayerInfo[i][pBizO]][bPayOut];
}
if(PlayerInfo[i][pBizO]>-1 && BizInfo[PlayerInfo[i][pBizO]][bEP]>0)
{
format(paydayString1250,1250, "Business: + %d EP", BizInfo[PlayerInfo[i][pBizO]][bEP]);
SendClientMessage(i, 0x80BFFFFF, paydayString1250);
GivePlayerEP(i,BizInfo[PlayerInfo[i][pBizO]][bEP]);
}
if(PlayerInfo[i][pOffice]>0)
{
format(paydayString1250,1250, "Pay from Office: + 20 EP и 50000$");
SendClientMessage(i,0x00FF00FF, paydayString1250);
GivePlayerEP(i,20);
PlayerInfo[i][pAccount]+=50000;
}
if (PlayerInfo[i][pVip]==2)
{
format(paydayString1250,1250, "VIP Level 2: + 1 EP и 1000$");
SendClientMessage(i,0xE65B00FF, paydayString1250);
GivePlayerEP(i,1);
PlayerInfo[i][pAccount]+=1000;
}
if (PlayerInfo[i][pVip]==3)
{
format(paydayString1250,1250, "VIP Level 3: + 2 EP и 2000$");
SendClientMessage(i,0xE65B00FF, paydayString1250);
GivePlayerEP(i,2);
PlayerInfo[i][pAccount]+=2000;
}
if (PlayerInfo[i][pVip]==4)
{
format(paydayString1250,1250, "VIP Level 4: + 3 EP и 3000$");
SendClientMessage(i,0xE65B00FF, paydayString1250);
GivePlayerEP(i,3);
PlayerInfo[i][pAccount]+=3000;
}
if (PlayerInfo[i][pVip]==5)
{
format(paydayString1250,1250, "VIP Level 5: + 4 EP и 4000$");
SendClientMessage(i,0xE65B00FF, paydayString1250);
GivePlayerEP(i,4);
PlayerInfo[i][pAccount]+=4000;
}
if (PlayerInfo[i][pVip]==6 || freevip==1)
{
format(paydayString1250,1250, "VIP Level 6: + 5 EP и 5000$");
SendClientMessage(i,0xE65B00FF, paydayString1250);
GivePlayerEP(i,5);
PlayerInfo[i][pAccount]+=5000;
}
if(PlayerInfo[i][pEPS]>0)
{
format(paydayString1250,1250, "EP Skill: + %d EP", PlayerInfo[i][pEPS]);
SendClientMessage(i, 0x80D5FFFF, paydayString1250);
}
for(new i2=1; i2<maxcompanies;i2++)
{
if(PlayerInfo[i][pCompany][i2]>0)
{
allactions[i]+=CompanyInfo[PlayerInfo[i][pCompany][i2]][coPrice]*PlayerInfo[i][pCompany][i2]/3;
}
}
if(allactions[i]>0)
{
format(paydayString1250,1250, "Pay from Акции: + $%s", FormatNumber(allactions[i]));
SendClientMessage(i, COLOR_ORANGE, paydayString1250);
PlayerInfo[i][pAccount] += allactions[i];
}
GivePlayerEP(i,PlayerInfo[i][pEPS]);
format(paydayString1250,1250, "New Balance: $%s", FormatNumber(PlayerInfo[i][pAccount]));
SendClientMessage(i, 0x33AA33FF, paydayString1250);
SendClientMessage(i, COLOR_LIGHTPURPLE, " ");
format(paydayString1250,1250,"~w~PAYDAY~n~~y~bank amount:~n~~g~$%d",PlayerInfo[i][pAccount]);
GameTextForPlayer(i, paydayString1250, 3000, 1);
PlayerInfo[i][pLastPayday]=0;
if(PlayerInfo[i][pAFK]>1)
{
PlayerInfo[i][pAFK]=1;
}
}
}
MiniGameCreatorMode(playerid)
{
}
RemoveBuildingsForMall(playerid)
{
// Remove the original mall mesh
RemoveBuildingForPlayer(playerid, 6130, 1117.5859, -1490.0078, 32.7188, 10.0);
// This is the mall mesh LOD
RemoveBuildingForPlayer(playerid, 6255, 1117.5859, -1490.0078, 32.7188, 10.0);
// There are some trees on the outside of the mall which poke through one of the interiors
RemoveBuildingForPlayer(playerid, 762, 1175.3594, -1420.1875, 19.8828, 0.25);
RemoveBuildingForPlayer(playerid, 615, 1166.3516, -1417.6953, 13.9531, 0.25);
}
stock SetPlayerOFFAduty(playerid)
{
// Attach3DTextLabelToPlayer(PlayerLabel[playerid], playerid, 0.0, 0.0, 0.57);
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
format(VipText3D[playerid],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
adutyskinchanged[playerid]=0;
PlayerInfo[playerid][pADuty] = 0;
SendClientMessage(playerid, 0xE60000FF,"Ти сега си Off-Duty и можеш да играеш спокойно!");
SetPlayerHealth(playerid, 100);
if(fly[playerid]==1)
{
fly[playerid] = 0;
TogglePlayerControllable(playerid,true);
}
if(Jump[playerid] == 1)
{
Jump[playerid]=0;
}
if(Speed[playerid] == 1)
{
Speed[playerid]=0;
}
spawnselectedskin[playerid]=spawnselectedskin2[playerid];
SetPlayerArmour(playerid, 100);
format(VipText3D[playerid],26,"");
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
RestartPlayerColor(playerid);
if(PlayerInfo[playerid][pTeam]==0)
{
SetPlayerColor(playerid,0xFFFFFFFF);
if(IsPlayerInAnyVehicle(playerid) == 1)
{
SendClientMessage(playerid,0xFFFFFFFF, "- Твоят скин не се смени, защото не си пешеходец -");
}
else
{
SetPlayerSkin(playerid, spawnselectedskin[playerid]);}
}
if(IsPlayerInAnyVehicle(playerid) == 1)
{
return SendClientMessage(playerid,0xFFFFFFFF, "- Твоят скин не се смени, защото не си пешеходец -");
}
else
{
RestartPlayerSkin(playerid);
}
//new level=PlayerInfo[playerid][pTeam];
RestartPlayerColor(playerid);
SetPlayerHealth(playerid, 100);
SetPlayerArmour(playerid, 100);
return true;
}
stock SetRandomWeather()
{
SetWeather(1); serverWeather=1;
}
stock MovingScreen(playerid)
{
InterpolateCameraPos(playerid,2995.4114,-1630.6260,108.6881,-11.1817,-1708.6993,122.7864,40000,CAMERA_MOVE);
InterpolateCameraLookAt(playerid,2897.1233,-1633.1787,109.1490,-99.3358,-1710.9866,123.1997,40000,CAMERA_MOVE);
}
stock SetPlayerONAduty(playerid)
{
PlayerInfo[playerid][pADuty] = 1;
UpdateDynamic3DTextLabelText(PlayerLabel[playerid], 0x800000FF, " ");
format(VipText3D[playerid],26,"");
PlayerLabel[playerid] = CreateDynamic3DTextLabel(VipText3D[playerid], 0x800000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
PlayerLabel[playerid] = CreateDynamic3DTextLabel("ADMIN ON-DUTY", 0xE60000FF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 15.0);
SendClientMessage(playerid, 0x40BF00FF,"Ти сега си On-Duty и трябва да помагаш на играчите!");
SetPlayerColor(playerid, 0x7BFFFFFF);
if(IsPlayerInAnyVehicle(playerid) == 1)
{
SendClientMessage(playerid,0xFFFFFFFF, "- Твоят скин не се смени, защото не си пешеходец -");
}
else
{
SetPlayerSkin(playerid,PlayerInfo[playerid][pASkin]);
adutyskinchanged[playerid]=1;
}
return true;
}
stock GetFishName(fishSlotID)
{
new fishName[60];
switch(fishSlotID)
{

case 0:
{
format(fishName,60,"Empty");
}
case 1:
{
format(fishName,60,"Шаран");
}
case 2:
{
format(fishName,60,"Скумрия");
}
case 3:
{
format(fishName,60,"Цаца");
}
case 4:
{
format(fishName,60,"Скат");
}
case 5:
{
format(fishName,60,"Омар");
}


}
return fishName;
}

stock GetPlayerFishPrice(playerid, fishID)
{
new fishSellPrice;
new fishType = PlayerInfo[playerid][pFishSlot][fishID];
new fishWeight = PlayerInfo[playerid][pFishWeight][fishID];
switch(fishType)
{
case 1:
{
fishSellPrice=fishWeight*2;
}
case 2:
{
fishSellPrice=fishWeight*2;
}
case 3:
{
fishSellPrice=fishWeight*2;
fishSellPrice+=12;
}
case 4:
{
fishSellPrice=fishWeight*3;
}
case 5:
{
fishSellPrice=fishWeight*3;
fishSellPrice+=15;
}
}
return fishSellPrice;
}

stock GetPlayerFreeFishSlot(playerid)
{
for(new i=1; i<11; i++)
{
if(PlayerInfo[playerid][pFishSlot][i]==0) return i;
}
return -1;
}
stock RearangeFishSlots(playerid)
{
new newFishSlot = 1;
for(new i=1; i<11; i++)
{
if(PlayerInfo[playerid][pFishSlot][i]!=0)
{
new tmpFish= PlayerInfo[playerid][pFishSlot][i];
new tmpWeight= PlayerInfo[playerid][pFishWeight][i];
PlayerInfo[playerid][pFishSlot][i]=0;
PlayerInfo[playerid][pFishWeight][i]=0;
PlayerInfo[playerid][pFishSlot][newFishSlot]=tmpFish;
PlayerInfo[playerid][pFishWeight][newFishSlot]=tmpWeight;
newFishSlot+=1;
}
}
}
/*
· SA-MP Gamemode: Intense версия: 0.6
· Copyright © 2018-2021, Daniel Miroslavov Andreev
· Всички права са запазени.
*/
